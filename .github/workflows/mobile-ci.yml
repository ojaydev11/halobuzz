name: Mobile App CI/CD Pipeline

on:
  push:
    branches: [master, develop, staging]
    paths:
      - 'apps-halobuzz-mobile/**'
      - '.github/workflows/mobile-ci.yml'
  pull_request:
    branches: [master, develop]
    paths:
      - 'apps-halobuzz-mobile/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  PNPM_VERSION: '9.1.0'

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: apps-halobuzz-mobile/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ./apps-halobuzz-mobile
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        working-directory: ./apps-halobuzz-mobile
        run: pnpm run lint || echo "Lint errors found"

      - name: Run TypeScript type check
        working-directory: ./apps-halobuzz-mobile
        run: pnpm exec tsc --noEmit || echo "Type errors found"

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging')
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: apps-halobuzz-mobile/pnpm-lock.yaml

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        working-directory: ./apps-halobuzz-mobile
        run: pnpm install --frozen-lockfile

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build Android APK
        working-directory: ./apps-halobuzz-mobile
        run: |
          npx expo prebuild --platform android
          cd android
          ./gradlew assembleRelease

      - name: Upload Android APK
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: apps-halobuzz-mobile/android/app/build/outputs/apk/release/
          retention-days: 14

  build-ios:
    name: Build iOS IPA
    runs-on: macos-latest
    needs: [lint-and-typecheck]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: apps-halobuzz-mobile/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ./apps-halobuzz-mobile
        run: pnpm install --frozen-lockfile

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build iOS IPA
        working-directory: ./apps-halobuzz-mobile
        run: |
          npx expo prebuild --platform ios
          cd ios
          pod install
          xcodebuild -workspace HaloBuzz.xcworkspace -scheme HaloBuzz archive

      - name: Upload iOS IPA
        uses: actions/upload-artifact@v3
        with:
          name: ios-ipa
          path: apps-halobuzz-mobile/ios/build/
          retention-days: 14

  publish-expo:
    name: Publish to Expo
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging')
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: apps-halobuzz-mobile/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ./apps-halobuzz-mobile
        run: pnpm install --frozen-lockfile

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Publish to Expo
        working-directory: ./apps-halobuzz-mobile
        run: npx expo publish --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
