31f07a2a74c2db2350e8deae3878ec92
"use strict";

/* istanbul ignore next */
function cov_6etxc98eb() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\cultural.ts";
  var hash = "ed0cd1313d9a3eb7fded2c5828e0c45854c83ce3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\cultural.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 38
        },
        end: {
          line: 4,
          column: 96
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 51
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "7": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 95
        }
      },
      "8": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "9": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 37
        }
      },
      "10": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 44,
          column: 3
        }
      },
      "11": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "12": {
        start: {
          line: 19,
          column: 131
        },
        end: {
          line: 19,
          column: 139
        }
      },
      "13": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "14": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "15": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 77
        }
      },
      "16": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "17": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 82
        }
      },
      "18": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "20": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 102
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 77
        }
      },
      "22": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 69,
          column: 3
        }
      },
      "23": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "24": {
        start: {
          line: 51,
          column: 72
        },
        end: {
          line: 51,
          column: 80
        }
      },
      "25": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "26": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "27": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 77
        }
      },
      "28": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "29": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 78
        }
      },
      "30": {
        start: {
          line: 59,
          column: 32
        },
        end: {
          line: 59,
          column: 142
        }
      },
      "31": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "32": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 118
        }
      },
      "33": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 69
        }
      },
      "34": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 94,
          column: 3
        }
      },
      "35": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "36": {
        start: {
          line: 76,
          column: 39
        },
        end: {
          line: 76,
          column: 47
        }
      },
      "37": {
        start: {
          line: 77,
          column: 23
        },
        end: {
          line: 77,
          column: 39
        }
      },
      "38": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "39": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 77
        }
      },
      "40": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "41": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 79
        }
      },
      "42": {
        start: {
          line: 84,
          column: 32
        },
        end: {
          line: 84,
          column: 119
        }
      },
      "43": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "44": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 112
        }
      },
      "45": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 78
        }
      },
      "46": {
        start: {
          line: 99,
          column: 0
        },
        end: {
          line: 119,
          column: 3
        }
      },
      "47": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "48": {
        start: {
          line: 101,
          column: 51
        },
        end: {
          line: 101,
          column: 59
        }
      },
      "49": {
        start: {
          line: 102,
          column: 23
        },
        end: {
          line: 102,
          column: 39
        }
      },
      "50": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "51": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 77
        }
      },
      "52": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "53": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 78
        }
      },
      "54": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 94
        }
      },
      "55": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 113,
          column: 11
        }
      },
      "56": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 105
        }
      },
      "57": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 70
        }
      },
      "58": {
        start: {
          line: 124,
          column: 0
        },
        end: {
          line: 140,
          column: 3
        }
      },
      "59": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "60": {
        start: {
          line: 126,
          column: 23
        },
        end: {
          line: 126,
          column: 39
        }
      },
      "61": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "62": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 77
        }
      },
      "63": {
        start: {
          line: 130,
          column: 26
        },
        end: {
          line: 130,
          column: 76
        }
      },
      "64": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "65": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 103
        }
      },
      "66": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 76
        }
      },
      "67": {
        start: {
          line: 145,
          column: 0
        },
        end: {
          line: 165,
          column: 3
        }
      },
      "68": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "69": {
        start: {
          line: 147,
          column: 61
        },
        end: {
          line: 147,
          column: 70
        }
      },
      "70": {
        start: {
          line: 148,
          column: 23
        },
        end: {
          line: 148,
          column: 39
        }
      },
      "71": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "72": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 77
        }
      },
      "73": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "74": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 94
        }
      },
      "75": {
        start: {
          line: 155,
          column: 24
        },
        end: {
          line: 155,
          column: 106
        }
      },
      "76": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 159,
          column: 11
        }
      },
      "77": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 101
        }
      },
      "78": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 74
        }
      },
      "79": {
        start: {
          line: 166,
          column: 0
        },
        end: {
          line: 166,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 25
          }
        },
        loc: {
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 33
          }
        },
        loc: {
          start: {
            line: 49,
            column: 52
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 49
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 74,
            column: 32
          },
          end: {
            line: 74,
            column: 33
          }
        },
        loc: {
          start: {
            line: 74,
            column: 52
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 74
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 99,
            column: 33
          },
          end: {
            line: 99,
            column: 34
          }
        },
        loc: {
          start: {
            line: 99,
            column: 53
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 99
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 124,
            column: 25
          },
          end: {
            line: 124,
            column: 26
          }
        },
        loc: {
          start: {
            line: 124,
            column: 45
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 124
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 145,
            column: 23
          },
          end: {
            line: 145,
            column: 24
          }
        },
        loc: {
          start: {
            line: 145,
            column: 43
          },
          end: {
            line: 165,
            column: 1
          }
        },
        line: 145
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 22
          }
        }, {
          start: {
            line: 56,
            column: 26
          },
          end: {
            line: 56,
            column: 42
          }
        }, {
          start: {
            line: 56,
            column: 46
          },
          end: {
            line: 56,
            column: 61
          }
        }, {
          start: {
            line: 56,
            column: 65
          },
          end: {
            line: 56,
            column: 73
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "6": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 107
          },
          end: {
            line: 84,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 107
          },
          end: {
            line: 84,
            column: 112
          }
        }, {
          start: {
            line: 84,
            column: 116
          },
          end: {
            line: 84,
            column: 118
          }
        }],
        line: 84
      },
      "8": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "9": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "10": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 106,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 106,
            column: 22
          }
        }, {
          start: {
            line: 106,
            column: 26
          },
          end: {
            line: 106,
            column: 34
          }
        }, {
          start: {
            line: 106,
            column: 38
          },
          end: {
            line: 106,
            column: 49
          }
        }],
        line: 106
      },
      "11": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "12": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "13": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "14": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 152,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 152,
            column: 26
          }
        }, {
          start: {
            line: 152,
            column: 30
          },
          end: {
            line: 152,
            column: 44
          }
        }],
        line: 152
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ed0cd1313d9a3eb7fded2c5828e0c45854c83ce3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6etxc98eb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6etxc98eb();
cov_6etxc98eb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_6etxc98eb().s[1]++, require("express"));
const CulturalIntelligenceService_1 =
/* istanbul ignore next */
(cov_6etxc98eb().s[2]++, require("@/services/cultural/CulturalIntelligenceService"));
const auth_1 =
/* istanbul ignore next */
(cov_6etxc98eb().s[3]++, require("@/middleware/auth"));
const security_1 =
/* istanbul ignore next */
(cov_6etxc98eb().s[4]++, require("@/middleware/security"));
const logger_1 =
/* istanbul ignore next */
(cov_6etxc98eb().s[5]++, require("@/config/logger"));
const router =
/* istanbul ignore next */
(cov_6etxc98eb().s[6]++, (0, express_1.Router)());
const culturalService =
/* istanbul ignore next */
(cov_6etxc98eb().s[7]++, CulturalIntelligenceService_1.CulturalIntelligenceService.getInstance());
// Apply authentication and rate limiting to all routes
/* istanbul ignore next */
cov_6etxc98eb().s[8]++;
router.use(auth_1.authMiddleware);
/* istanbul ignore next */
cov_6etxc98eb().s[9]++;
router.use(security_1.socialLimiter);
/**
 * @route POST /api/v1/cultural/profile
 * @desc Create or update cultural profile
 */
/* istanbul ignore next */
cov_6etxc98eb().s[10]++;
router.post('/profile', async (req, res) => {
  /* istanbul ignore next */
  cov_6etxc98eb().f[0]++;
  cov_6etxc98eb().s[11]++;
  try {
    const {
      primaryCulture,
      secondaryCultures,
      languagePreferences,
      culturalValues,
      communicationStyle,
      contentPreferences
    } =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[12]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[13]++, req.user?.userId);
    /* istanbul ignore next */
    cov_6etxc98eb().s[14]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_6etxc98eb().b[0][0]++;
      cov_6etxc98eb().s[15]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6etxc98eb().b[0][1]++;
    }
    cov_6etxc98eb().s[16]++;
    if (!primaryCulture) {
      /* istanbul ignore next */
      cov_6etxc98eb().b[1][0]++;
      cov_6etxc98eb().s[17]++;
      return res.status(400).json({
        error: 'Primary culture is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6etxc98eb().b[1][1]++;
    }
    const profile =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[18]++, await culturalService.createCulturalProfile(userId, {
      primaryCulture,
      secondaryCultures,
      languagePreferences,
      culturalValues,
      communicationStyle,
      contentPreferences
    }));
    /* istanbul ignore next */
    cov_6etxc98eb().s[19]++;
    res.status(201).json({
      success: true,
      data: profile
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6etxc98eb().s[20]++;
    logger_1.logger.error('Error creating cultural profile', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_6etxc98eb().s[21]++;
    res.status(500).json({
      error: 'Failed to create cultural profile'
    });
  }
});
/**
 * @route POST /api/v1/cultural/content/analyze
 * @desc Analyze content for cultural adaptation
 */
/* istanbul ignore next */
cov_6etxc98eb().s[22]++;
router.post('/content/analyze', async (req, res) => {
  /* istanbul ignore next */
  cov_6etxc98eb().f[1]++;
  cov_6etxc98eb().s[23]++;
  try {
    const {
      contentId,
      originalCulture,
      targetCultures,
      content
    } =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[24]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[25]++, req.user?.userId);
    /* istanbul ignore next */
    cov_6etxc98eb().s[26]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_6etxc98eb().b[2][0]++;
      cov_6etxc98eb().s[27]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6etxc98eb().b[2][1]++;
    }
    cov_6etxc98eb().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_6etxc98eb().b[4][0]++, !contentId) ||
    /* istanbul ignore next */
    (cov_6etxc98eb().b[4][1]++, !originalCulture) ||
    /* istanbul ignore next */
    (cov_6etxc98eb().b[4][2]++, !targetCultures) ||
    /* istanbul ignore next */
    (cov_6etxc98eb().b[4][3]++, !content)) {
      /* istanbul ignore next */
      cov_6etxc98eb().b[3][0]++;
      cov_6etxc98eb().s[29]++;
      return res.status(400).json({
        error: 'Missing required fields'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6etxc98eb().b[3][1]++;
    }
    const culturalContent =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[30]++, await culturalService.analyzeContentForCulturalAdaptation(contentId, originalCulture, targetCultures, content));
    /* istanbul ignore next */
    cov_6etxc98eb().s[31]++;
    res.status(200).json({
      success: true,
      data: culturalContent
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6etxc98eb().s[32]++;
    logger_1.logger.error('Error analyzing content for cultural adaptation', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_6etxc98eb().s[33]++;
    res.status(500).json({
      error: 'Failed to analyze content'
    });
  }
});
/**
 * @route POST /api/v1/cultural/recommendations
 * @desc Generate cultural recommendations
 */
/* istanbul ignore next */
cov_6etxc98eb().s[34]++;
router.post('/recommendations', async (req, res) => {
  /* istanbul ignore next */
  cov_6etxc98eb().f[2]++;
  cov_6etxc98eb().s[35]++;
  try {
    const {
      contentType,
      limit
    } =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[36]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[37]++, req.user?.userId);
    /* istanbul ignore next */
    cov_6etxc98eb().s[38]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_6etxc98eb().b[5][0]++;
      cov_6etxc98eb().s[39]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6etxc98eb().b[5][1]++;
    }
    cov_6etxc98eb().s[40]++;
    if (!contentType) {
      /* istanbul ignore next */
      cov_6etxc98eb().b[6][0]++;
      cov_6etxc98eb().s[41]++;
      return res.status(400).json({
        error: 'Content type is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6etxc98eb().b[6][1]++;
    }
    const recommendations =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[42]++, await culturalService.generateCulturalRecommendations(userId, contentType,
    /* istanbul ignore next */
    (cov_6etxc98eb().b[7][0]++, limit) ||
    /* istanbul ignore next */
    (cov_6etxc98eb().b[7][1]++, 10)));
    /* istanbul ignore next */
    cov_6etxc98eb().s[43]++;
    res.status(200).json({
      success: true,
      data: recommendations
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6etxc98eb().s[44]++;
    logger_1.logger.error('Error generating cultural recommendations', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_6etxc98eb().s[45]++;
    res.status(500).json({
      error: 'Failed to generate recommendations'
    });
  }
});
/**
 * @route POST /api/v1/cultural/engagement/track
 * @desc Track cultural engagement
 */
/* istanbul ignore next */
cov_6etxc98eb().s[46]++;
router.post('/engagement/track', async (req, res) => {
  /* istanbul ignore next */
  cov_6etxc98eb().f[3]++;
  cov_6etxc98eb().s[47]++;
  try {
    const {
      contentId,
      culture,
      engagement
    } =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[48]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[49]++, req.user?.userId);
    /* istanbul ignore next */
    cov_6etxc98eb().s[50]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_6etxc98eb().b[8][0]++;
      cov_6etxc98eb().s[51]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6etxc98eb().b[8][1]++;
    }
    cov_6etxc98eb().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_6etxc98eb().b[10][0]++, !contentId) ||
    /* istanbul ignore next */
    (cov_6etxc98eb().b[10][1]++, !culture) ||
    /* istanbul ignore next */
    (cov_6etxc98eb().b[10][2]++, !engagement)) {
      /* istanbul ignore next */
      cov_6etxc98eb().b[9][0]++;
      cov_6etxc98eb().s[53]++;
      return res.status(400).json({
        error: 'Missing required fields'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6etxc98eb().b[9][1]++;
    }
    cov_6etxc98eb().s[54]++;
    await culturalService.trackCulturalEngagement(userId, contentId, culture, engagement);
    /* istanbul ignore next */
    cov_6etxc98eb().s[55]++;
    res.status(200).json({
      success: true,
      message: 'Cultural engagement tracked successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6etxc98eb().s[56]++;
    logger_1.logger.error('Error tracking cultural engagement', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_6etxc98eb().s[57]++;
    res.status(500).json({
      error: 'Failed to track engagement'
    });
  }
});
/**
 * @route GET /api/v1/cultural/analytics
 * @desc Get cultural analytics
 */
/* istanbul ignore next */
cov_6etxc98eb().s[58]++;
router.get('/analytics', async (req, res) => {
  /* istanbul ignore next */
  cov_6etxc98eb().f[4]++;
  cov_6etxc98eb().s[59]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[60]++, req.user?.userId);
    /* istanbul ignore next */
    cov_6etxc98eb().s[61]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_6etxc98eb().b[11][0]++;
      cov_6etxc98eb().s[62]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6etxc98eb().b[11][1]++;
    }
    const analytics =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[63]++, await culturalService.getCulturalAnalytics(userId));
    /* istanbul ignore next */
    cov_6etxc98eb().s[64]++;
    res.status(200).json({
      success: true,
      data: analytics
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6etxc98eb().s[65]++;
    logger_1.logger.error('Error getting cultural analytics', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_6etxc98eb().s[66]++;
    res.status(500).json({
      error: 'Failed to get cultural analytics'
    });
  }
});
/**
 * @route GET /api/v1/cultural/bridges
 * @desc Get cultural bridges
 */
/* istanbul ignore next */
cov_6etxc98eb().s[67]++;
router.get('/bridges', async (req, res) => {
  /* istanbul ignore next */
  cov_6etxc98eb().f[5]++;
  cov_6etxc98eb().s[68]++;
  try {
    const {
      sourceCulture,
      targetCulture,
      bridgeType
    } =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[69]++, req.query);
    const userId =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[70]++, req.user?.userId);
    /* istanbul ignore next */
    cov_6etxc98eb().s[71]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_6etxc98eb().b[12][0]++;
      cov_6etxc98eb().s[72]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6etxc98eb().b[12][1]++;
    }
    cov_6etxc98eb().s[73]++;
    if (
    /* istanbul ignore next */
    (cov_6etxc98eb().b[14][0]++, !sourceCulture) ||
    /* istanbul ignore next */
    (cov_6etxc98eb().b[14][1]++, !targetCulture)) {
      /* istanbul ignore next */
      cov_6etxc98eb().b[13][0]++;
      cov_6etxc98eb().s[74]++;
      return res.status(400).json({
        error: 'Source and target cultures are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6etxc98eb().b[13][1]++;
    }
    const bridges =
    /* istanbul ignore next */
    (cov_6etxc98eb().s[75]++, await culturalService.getCulturalBridges(sourceCulture, targetCulture, bridgeType));
    /* istanbul ignore next */
    cov_6etxc98eb().s[76]++;
    res.status(200).json({
      success: true,
      data: bridges
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6etxc98eb().s[77]++;
    logger_1.logger.error('Error getting cultural bridges', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_6etxc98eb().s[78]++;
    res.status(500).json({
      error: 'Failed to get cultural bridges'
    });
  }
});
/* istanbul ignore next */
cov_6etxc98eb().s[79]++;
exports.default = router;