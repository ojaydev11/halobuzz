cad4523f27a75a2c1546f271f0ea5915
"use strict";

/* istanbul ignore next */
function cov_2ez2dve8bk() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\models\\PlayerRanking.ts";
  var hash = "da7bcf71ff1f6cabcfec3a0cf5193a92e3a79caa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\models\\PlayerRanking.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 31
        }
      },
      "37": {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 37,
          column: 52
        }
      },
      "38": {
        start: {
          line: 38,
          column: 28
        },
        end: {
          line: 136,
          column: 2
        }
      },
      "39": {
        start: {
          line: 138,
          column: 0
        },
        end: {
          line: 138,
          column: 85
        }
      },
      "40": {
        start: {
          line: 139,
          column: 0
        },
        end: {
          line: 139,
          column: 74
        }
      },
      "41": {
        start: {
          line: 140,
          column: 0
        },
        end: {
          line: 140,
          column: 52
        }
      },
      "42": {
        start: {
          line: 141,
          column: 0
        },
        end: {
          line: 141,
          column: 77
        }
      },
      "43": {
        start: {
          line: 142,
          column: 0
        },
        end: {
          line: 142,
          column: 90
        }
      },
      "44": {
        start: {
          line: 144,
          column: 0
        },
        end: {
          line: 167,
          column: 3
        }
      },
      "45": {
        start: {
          line: 146,
          column: 23
        },
        end: {
          line: 146,
          column: 46
        }
      },
      "46": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 147,
          column: 71
        }
      },
      "47": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 149,
          column: 69
        }
      },
      "48": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 150,
          column: 43
        }
      },
      "49": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "50": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 32
        }
      },
      "51": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "52": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 106
        }
      },
      "53": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 77
        }
      },
      "54": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 165,
          column: 5
        }
      },
      "55": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 59
        }
      },
      "56": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 11
        }
      },
      "57": {
        start: {
          line: 169,
          column: 0
        },
        end: {
          line: 196,
          column: 2
        }
      },
      "58": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "59": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 20
        }
      },
      "60": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 85
        }
      },
      "61": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "62": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 57
        }
      },
      "63": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 22
        }
      },
      "64": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 86
        }
      },
      "65": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "66": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 68
        }
      },
      "67": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 185,
          column: 23
        }
      },
      "68": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 23
        }
      },
      "69": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 194,
          column: 7
        }
      },
      "70": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 195,
          column: 34
        }
      },
      "71": {
        start: {
          line: 198,
          column: 0
        },
        end: {
          line: 237,
          column: 2
        }
      },
      "72": {
        start: {
          line: 199,
          column: 30
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "73": {
        start: {
          line: 209,
          column: 18
        },
        end: {
          line: 209,
          column: 101
        }
      },
      "74": {
        start: {
          line: 210,
          column: 18
        },
        end: {
          line: 210,
          column: 27
        }
      },
      "75": {
        start: {
          line: 211,
          column: 22
        },
        end: {
          line: 211,
          column: 27
        }
      },
      "76": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "77": {
        start: {
          line: 213,
          column: 17
        },
        end: {
          line: 213,
          column: 33
        }
      },
      "78": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "79": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 31
        }
      },
      "80": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 18
        }
      },
      "81": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 235,
          column: 5
        }
      },
      "82": {
        start: {
          line: 221,
          column: 24
        },
        end: {
          line: 221,
          column: 33
        }
      },
      "83": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 28
        }
      },
      "84": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 80
        }
      },
      "85": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 29
        }
      },
      "86": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 30
        }
      },
      "87": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 232,
          column: 11
        }
      },
      "88": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 43
        }
      },
      "89": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 27
        }
      },
      "90": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 236,
          column: 23
        }
      },
      "91": {
        start: {
          line: 239,
          column: 0
        },
        end: {
          line: 247,
          column: 2
        }
      },
      "92": {
        start: {
          line: 240,
          column: 18
        },
        end: {
          line: 240,
          column: 40
        }
      },
      "93": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 242,
          column: 26
        }
      },
      "94": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 26
        }
      },
      "95": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 246,
          column: 47
        }
      },
      "96": {
        start: {
          line: 249,
          column: 0
        },
        end: {
          line: 259,
          column: 2
        }
      },
      "97": {
        start: {
          line: 250,
          column: 19
        },
        end: {
          line: 250,
          column: 69
        }
      },
      "98": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 252,
          column: 17
        }
      },
      "99": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 17
        }
      },
      "100": {
        start: {
          line: 253,
          column: 22
        },
        end: {
          line: 257,
          column: 6
        }
      },
      "101": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 258,
          column: 25
        }
      },
      "102": {
        start: {
          line: 260,
          column: 0
        },
        end: {
          line: 260,
          column: 87
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 144,
            column: 32
          },
          end: {
            line: 144,
            column: 33
          }
        },
        loc: {
          start: {
            line: 144,
            column: 48
          },
          end: {
            line: 167,
            column: 1
          }
        },
        line: 144
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 169,
            column: 47
          },
          end: {
            line: 169,
            column: 48
          }
        },
        loc: {
          start: {
            line: 169,
            column: 94
          },
          end: {
            line: 196,
            column: 1
          }
        },
        line: 169
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 198,
            column: 52
          },
          end: {
            line: 198,
            column: 53
          }
        },
        loc: {
          start: {
            line: 198,
            column: 64
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 198
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 239,
            column: 45
          },
          end: {
            line: 239,
            column: 46
          }
        },
        loc: {
          start: {
            line: 239,
            column: 94
          },
          end: {
            line: 247,
            column: 1
          }
        },
        line: 239
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 249,
            column: 44
          },
          end: {
            line: 249,
            column: 45
          }
        },
        loc: {
          start: {
            line: 249,
            column: 88
          },
          end: {
            line: 259,
            column: 1
          }
        },
        line: 249
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 147,
            column: 19
          },
          end: {
            line: 147,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 36
          },
          end: {
            line: 147,
            column: 66
          }
        }, {
          start: {
            line: 147,
            column: 69
          },
          end: {
            line: 147,
            column: 70
          }
        }],
        line: 147
      },
      "18": {
        loc: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "19": {
        loc: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        }, {
          start: {
            line: 159,
            column: 9
          },
          end: {
            line: 161,
            column: 5
          }
        }],
        line: 156
      },
      "20": {
        loc: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "21": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        }, {
          start: {
            line: 178,
            column: 9
          },
          end: {
            line: 184,
            column: 5
          }
        }],
        line: 171
      },
      "22": {
        loc: {
          start: {
            line: 173,
            column: 30
          },
          end: {
            line: 173,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 57
          },
          end: {
            line: 173,
            column: 80
          }
        }, {
          start: {
            line: 173,
            column: 83
          },
          end: {
            line: 173,
            column: 84
          }
        }],
        line: 173
      },
      "23": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "24": {
        loc: {
          start: {
            line: 180,
            column: 30
          },
          end: {
            line: 180,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 57
          },
          end: {
            line: 180,
            column: 80
          }
        }, {
          start: {
            line: 180,
            column: 83
          },
          end: {
            line: 180,
            column: 85
          }
        }],
        line: 180
      },
      "25": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "26": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "27": {
        loc: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "28": {
        loc: {
          start: {
            line: 223,
            column: 24
          },
          end: {
            line: 223,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 74
          },
          end: {
            line: 223,
            column: 75
          }
        }, {
          start: {
            line: 223,
            column: 78
          },
          end: {
            line: 223,
            column: 79
          }
        }],
        line: 223
      },
      "29": {
        loc: {
          start: {
            line: 239,
            column: 75
          },
          end: {
            line: 239,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 239,
            column: 83
          },
          end: {
            line: 239,
            column: 86
          }
        }],
        line: 239
      },
      "30": {
        loc: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 242,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 242,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "31": {
        loc: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 252,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 252,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0],
      "30": [0, 0],
      "31": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "da7bcf71ff1f6cabcfec3a0cf5193a92e3a79caa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ez2dve8bk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ez2dve8bk();
var __createBinding =
/* istanbul ignore next */
(cov_2ez2dve8bk().s[0]++,
/* istanbul ignore next */
(cov_2ez2dve8bk().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2ez2dve8bk().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2ez2dve8bk().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2ez2dve8bk().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2ez2dve8bk().f[0]++;
  cov_2ez2dve8bk().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[2][0]++;
    cov_2ez2dve8bk().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2ez2dve8bk().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2ez2dve8bk().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2ez2dve8bk().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2ez2dve8bk().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2ez2dve8bk().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2ez2dve8bk().b[5][1]++,
  /* istanbul ignore next */
  (cov_2ez2dve8bk().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2ez2dve8bk().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[3][0]++;
    cov_2ez2dve8bk().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2ez2dve8bk().f[1]++;
        cov_2ez2dve8bk().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ez2dve8bk().b[3][1]++;
  }
  cov_2ez2dve8bk().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2ez2dve8bk().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2ez2dve8bk().f[2]++;
  cov_2ez2dve8bk().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[7][0]++;
    cov_2ez2dve8bk().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2ez2dve8bk().b[7][1]++;
  }
  cov_2ez2dve8bk().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2ez2dve8bk().s[11]++,
/* istanbul ignore next */
(cov_2ez2dve8bk().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2ez2dve8bk().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2ez2dve8bk().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2ez2dve8bk().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2ez2dve8bk().f[3]++;
  cov_2ez2dve8bk().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2ez2dve8bk().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2ez2dve8bk().f[4]++;
  cov_2ez2dve8bk().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2ez2dve8bk().s[14]++,
/* istanbul ignore next */
(cov_2ez2dve8bk().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2ez2dve8bk().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2ez2dve8bk().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2ez2dve8bk().f[5]++;
  cov_2ez2dve8bk().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().f[6]++;
    cov_2ez2dve8bk().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2ez2dve8bk().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2ez2dve8bk().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2ez2dve8bk().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2ez2dve8bk().s[17]++, []);
      /* istanbul ignore next */
      cov_2ez2dve8bk().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2ez2dve8bk().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2ez2dve8bk().b[12][0]++;
          cov_2ez2dve8bk().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2ez2dve8bk().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2ez2dve8bk().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().f[8]++;
    cov_2ez2dve8bk().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2ez2dve8bk().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2ez2dve8bk().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2ez2dve8bk().b[13][0]++;
      cov_2ez2dve8bk().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2ez2dve8bk().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2ez2dve8bk().s[26]++, {});
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2ez2dve8bk().b[15][0]++;
      cov_2ez2dve8bk().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2ez2dve8bk().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2ez2dve8bk().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2ez2dve8bk().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2ez2dve8bk().b[16][0]++;
          cov_2ez2dve8bk().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2ez2dve8bk().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2ez2dve8bk().b[15][1]++;
    }
    cov_2ez2dve8bk().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_2ez2dve8bk().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ez2dve8bk().s[36]++;
exports.PlayerRanking = void 0;
const mongoose_1 =
/* istanbul ignore next */
(cov_2ez2dve8bk().s[37]++, __importStar(require("mongoose")));
const playerRankingSchema =
/* istanbul ignore next */
(cov_2ez2dve8bk().s[38]++, new mongoose_1.Schema({
  userId: {
    type: String,
    required: true,
    index: true
  },
  gameMode: {
    type: String,
    required: true,
    enum: ['halo-arena', 'halo-royale', 'halo-clash', 'halo-rally', 'halo-raids', 'halo-tactics']
  },
  rating: {
    mu: {
      type: Number,
      default: 25.0
    },
    sigma: {
      type: Number,
      default: 8.333
    },
    tau: {
      type: Number,
      default: 0.083
    },
    beta: {
      type: Number,
      default: 4.167
    }
  },
  mmr: {
    type: Number,
    default: 0,
    index: true
  },
  displayMmr: {
    type: Number,
    default: 0
  },
  peakMmr: {
    type: Number,
    default: 0
  },
  tier: {
    type: String,
    enum: ['Bronze', 'Silver', 'Gold', 'Platinum', 'Diamond', 'Master', 'Champion', 'Legend'],
    default: 'Bronze'
  },
  division: {
    type: Number,
    enum: [1, 2, 3, 4, 5],
    default: 5
  },
  leaguePoints: {
    type: Number,
    default: 0,
    min: 0,
    max: 100
  },
  seasonId: {
    type: String,
    required: true,
    index: true
  },
  wins: {
    type: Number,
    default: 0,
    min: 0
  },
  losses: {
    type: Number,
    default: 0,
    min: 0
  },
  winRate: {
    type: Number,
    default: 0,
    min: 0,
    max: 100
  },
  gamesPlayed: {
    type: Number,
    default: 0,
    min: 0
  },
  rankUpgames: {
    type: Number,
    default: 0,
    min: 0
  },
  promoProgress: {
    type: Number,
    default: 0,
    min: 0,
    max: 5
  },
  stats: {
    averageKills: {
      type: Number,
      default: 0
    },
    averageDeaths: {
      type: Number,
      default: 0
    },
    averageAssists: {
      type: Number,
      default: 0
    },
    kda: {
      type: Number,
      default: 0
    },
    averageDamage: {
      type: Number,
      default: 0
    },
    averageHealing: {
      type: Number,
      default: 0
    },
    averageObjectives: {
      type: Number,
      default: 0
    },
    mvpCount: {
      type: Number,
      default: 0
    },
    aceCount: {
      type: Number,
      default: 0
    }
  },
  streak: {
    current: {
      type: Number,
      default: 0
    },
    longestWin: {
      type: Number,
      default: 0
    },
    longestLose: {
      type: Number,
      default: 0
    }
  },
  rankHistory: [{
    tier: String,
    division: Number,
    achievedAt: Date,
    mmr: Number
  }],
  recentMatches: [{
    matchId: String,
    result: {
      type: String,
      enum: ['win', 'loss', 'draw']
    },
    mmrChange: Number,
    performanceScore: Number,
    timestamp: Date
  }],
  smurfDetection: {
    probability: {
      type: Number,
      default: 0,
      min: 0,
      max: 1
    },
    accountAge: {
      type: Number,
      default: 0
    },
    performanceAnomaly: {
      type: Number,
      default: 0
    },
    rapidClimb: {
      type: Boolean,
      default: false
    },
    flaggedBy: [String]
  },
  preferences: {
    primaryRole: {
      type: String,
      enum: ['assault', 'support', 'tank', 'sniper', 'specialist']
    },
    secondaryRole: {
      type: String,
      enum: ['assault', 'support', 'tank', 'sniper', 'specialist']
    },
    autoFill: {
      type: Boolean,
      default: true
    },
    preferredRegion: {
      type: String,
      default: 'us-east'
    }
  },
  penalties: {
    isRestricted: {
      type: Boolean,
      default: false
    },
    restrictionEnd: Date,
    reason: String,
    dodgeCount: {
      type: Number,
      default: 0
    },
    afkCount: {
      type: Number,
      default: 0
    },
    toxicityScore: {
      type: Number,
      default: 0,
      min: 0,
      max: 100
    }
  },
  lastMatchAt: Date,
  lastRankUpdateAt: Date
}, {
  timestamps: true
}));
// Compound indexes for efficient queries
/* istanbul ignore next */
cov_2ez2dve8bk().s[39]++;
playerRankingSchema.index({
  userId: 1,
  gameMode: 1,
  seasonId: 1
}, {
  unique: true
});
/* istanbul ignore next */
cov_2ez2dve8bk().s[40]++;
playerRankingSchema.index({
  gameMode: 1,
  tier: 1,
  division: 1,
  mmr: -1
}); // Leaderboards
/* istanbul ignore next */
cov_2ez2dve8bk().s[41]++;
playerRankingSchema.index({
  seasonId: 1,
  mmr: -1
}); // Season leaderboards
/* istanbul ignore next */
cov_2ez2dve8bk().s[42]++;
playerRankingSchema.index({
  gameMode: 1,
  'smurfDetection.probability': -1
}); // Smurf detection
/* istanbul ignore next */
cov_2ez2dve8bk().s[43]++;
playerRankingSchema.index({
  'penalties.isRestricted': 1,
  'penalties.restrictionEnd': 1
}); // Penalty management
// Pre-save middleware to calculate derived fields
/* istanbul ignore next */
cov_2ez2dve8bk().s[44]++;
playerRankingSchema.pre('save', function (next) {
  /* istanbul ignore next */
  cov_2ez2dve8bk().f[9]++;
  // Calculate win rate
  const totalGames =
  /* istanbul ignore next */
  (cov_2ez2dve8bk().s[45]++, this.wins + this.losses);
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[46]++;
  this.winRate = totalGames > 0 ?
  /* istanbul ignore next */
  (cov_2ez2dve8bk().b[17][0]++, this.wins / totalGames * 100) :
  /* istanbul ignore next */
  (cov_2ez2dve8bk().b[17][1]++, 0);
  // Calculate MMR from TrueSkill rating
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[47]++;
  this.mmr = Math.max(0, this.rating.mu - 3 * this.rating.sigma);
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[48]++;
  this.displayMmr = Math.round(this.mmr);
  // Update peak MMR
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[49]++;
  if (this.mmr > this.peakMmr) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[18][0]++;
    cov_2ez2dve8bk().s[50]++;
    this.peakMmr = this.mmr;
  } else
  /* istanbul ignore next */
  {
    cov_2ez2dve8bk().b[18][1]++;
  }
  // Calculate KDA
  cov_2ez2dve8bk().s[51]++;
  if (this.stats.averageDeaths > 0) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[19][0]++;
    cov_2ez2dve8bk().s[52]++;
    this.stats.kda = (this.stats.averageKills + this.stats.averageAssists) / this.stats.averageDeaths;
  } else {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[19][1]++;
    cov_2ez2dve8bk().s[53]++;
    this.stats.kda = this.stats.averageKills + this.stats.averageAssists;
  }
  // Keep only last 20 matches in history
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[54]++;
  if (this.recentMatches.length > 20) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[20][0]++;
    cov_2ez2dve8bk().s[55]++;
    this.recentMatches = this.recentMatches.slice(-20);
  } else
  /* istanbul ignore next */
  {
    cov_2ez2dve8bk().b[20][1]++;
  }
  cov_2ez2dve8bk().s[56]++;
  next();
});
// Method to update rank after match
/* istanbul ignore next */
cov_2ez2dve8bk().s[57]++;
playerRankingSchema.methods.updateAfterMatch = function (result, performanceScore, mmrChange) {
  /* istanbul ignore next */
  cov_2ez2dve8bk().f[10]++;
  cov_2ez2dve8bk().s[58]++;
  // Update wins/losses
  if (result === 'win') {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[21][0]++;
    cov_2ez2dve8bk().s[59]++;
    this.wins++;
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[60]++;
    this.streak.current = this.streak.current >= 0 ?
    /* istanbul ignore next */
    (cov_2ez2dve8bk().b[22][0]++, this.streak.current + 1) :
    /* istanbul ignore next */
    (cov_2ez2dve8bk().b[22][1]++, 1);
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[61]++;
    if (this.streak.current > this.streak.longestWin) {
      /* istanbul ignore next */
      cov_2ez2dve8bk().b[23][0]++;
      cov_2ez2dve8bk().s[62]++;
      this.streak.longestWin = this.streak.current;
    } else
    /* istanbul ignore next */
    {
      cov_2ez2dve8bk().b[23][1]++;
    }
  } else {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[21][1]++;
    cov_2ez2dve8bk().s[63]++;
    this.losses++;
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[64]++;
    this.streak.current = this.streak.current <= 0 ?
    /* istanbul ignore next */
    (cov_2ez2dve8bk().b[24][0]++, this.streak.current - 1) :
    /* istanbul ignore next */
    (cov_2ez2dve8bk().b[24][1]++, -1);
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[65]++;
    if (Math.abs(this.streak.current) > this.streak.longestLose) {
      /* istanbul ignore next */
      cov_2ez2dve8bk().b[25][0]++;
      cov_2ez2dve8bk().s[66]++;
      this.streak.longestLose = Math.abs(this.streak.current);
    } else
    /* istanbul ignore next */
    {
      cov_2ez2dve8bk().b[25][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[67]++;
  this.gamesPlayed++;
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[68]++;
  this.rankUpgames++;
  // Add to recent matches
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[69]++;
  this.recentMatches.push({
    matchId: `match_${Date.now()}`,
    result,
    mmrChange,
    performanceScore,
    timestamp: new Date()
  });
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[70]++;
  this.lastMatchAt = new Date();
};
// Method to promote/demote rank
/* istanbul ignore next */
cov_2ez2dve8bk().s[71]++;
playerRankingSchema.methods.updateTierAndDivision = function () {
  /* istanbul ignore next */
  cov_2ez2dve8bk().f[11]++;
  const tierMMRThresholds =
  /* istanbul ignore next */
  (cov_2ez2dve8bk().s[72]++, {
    'Bronze': 500,
    'Silver': 1000,
    'Gold': 1500,
    'Platinum': 2000,
    'Diamond': 2500,
    'Master': 3000,
    'Champion': 3500,
    'Legend': 4000
  });
  const tiers =
  /* istanbul ignore next */
  (cov_2ez2dve8bk().s[73]++, ['Bronze', 'Silver', 'Gold', 'Platinum', 'Diamond', 'Master', 'Champion', 'Legend']);
  let newTier =
  /* istanbul ignore next */
  (cov_2ez2dve8bk().s[74]++, this.tier);
  let rankChanged =
  /* istanbul ignore next */
  (cov_2ez2dve8bk().s[75]++, false);
  // Determine tier based on MMR
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[76]++;
  for (let i =
  /* istanbul ignore next */
  (cov_2ez2dve8bk().s[77]++, tiers.length - 1); i >= 0; i--) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[78]++;
    if (this.mmr >= tierMMRThresholds[tiers[i]]) {
      /* istanbul ignore next */
      cov_2ez2dve8bk().b[26][0]++;
      cov_2ez2dve8bk().s[79]++;
      newTier = tiers[i];
      /* istanbul ignore next */
      cov_2ez2dve8bk().s[80]++;
      break;
    } else
    /* istanbul ignore next */
    {
      cov_2ez2dve8bk().b[26][1]++;
    }
  }
  // Check if tier changed
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[81]++;
  if (newTier !== this.tier) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[27][0]++;
    const oldTier =
    /* istanbul ignore next */
    (cov_2ez2dve8bk().s[82]++, this.tier);
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[83]++;
    this.tier = newTier;
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[84]++;
    this.division = tiers.indexOf(newTier) > tiers.indexOf(oldTier) ?
    /* istanbul ignore next */
    (cov_2ez2dve8bk().b[28][0]++, 5) :
    /* istanbul ignore next */
    (cov_2ez2dve8bk().b[28][1]++, 1);
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[85]++;
    this.rankUpgames = 0;
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[86]++;
    this.leaguePoints = 0;
    // Add to rank history
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[87]++;
    this.rankHistory.push({
      tier: newTier,
      division: this.division,
      achievedAt: new Date(),
      mmr: this.mmr
    });
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[88]++;
    this.lastRankUpdateAt = new Date();
    /* istanbul ignore next */
    cov_2ez2dve8bk().s[89]++;
    rankChanged = true;
  } else
  /* istanbul ignore next */
  {
    cov_2ez2dve8bk().b[27][1]++;
  }
  cov_2ez2dve8bk().s[90]++;
  return rankChanged;
};
// Static method to get leaderboard
/* istanbul ignore next */
cov_2ez2dve8bk().s[91]++;
playerRankingSchema.statics.getLeaderboard = function (gameMode, seasonId, limit =
/* istanbul ignore next */
(cov_2ez2dve8bk().b[29][0]++, 100), tier) {
  /* istanbul ignore next */
  cov_2ez2dve8bk().f[12]++;
  const query =
  /* istanbul ignore next */
  (cov_2ez2dve8bk().s[92]++, {
    gameMode,
    seasonId
  });
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[93]++;
  if (tier) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[30][0]++;
    cov_2ez2dve8bk().s[94]++;
    query.tier = tier;
  } else
  /* istanbul ignore next */
  {
    cov_2ez2dve8bk().b[30][1]++;
  }
  cov_2ez2dve8bk().s[95]++;
  return this.find(query).sort({
    mmr: -1,
    wins: -1
  }).limit(limit).populate('userId', 'username avatar');
};
// Static method to get player rank
/* istanbul ignore next */
cov_2ez2dve8bk().s[96]++;
playerRankingSchema.statics.getPlayerRank = async function (userId, gameMode, seasonId) {
  /* istanbul ignore next */
  cov_2ez2dve8bk().f[13]++;
  const player =
  /* istanbul ignore next */
  (cov_2ez2dve8bk().s[97]++, await this.findOne({
    userId,
    gameMode,
    seasonId
  }));
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[98]++;
  if (!player) {
    /* istanbul ignore next */
    cov_2ez2dve8bk().b[31][0]++;
    cov_2ez2dve8bk().s[99]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_2ez2dve8bk().b[31][1]++;
  }
  const rankAbove =
  /* istanbul ignore next */
  (cov_2ez2dve8bk().s[100]++, await this.countDocuments({
    gameMode,
    seasonId,
    mmr: {
      $gt: player.mmr
    }
  }));
  /* istanbul ignore next */
  cov_2ez2dve8bk().s[101]++;
  return rankAbove + 1;
};
/* istanbul ignore next */
cov_2ez2dve8bk().s[102]++;
exports.PlayerRanking = mongoose_1.default.model('PlayerRanking', playerRankingSchema);