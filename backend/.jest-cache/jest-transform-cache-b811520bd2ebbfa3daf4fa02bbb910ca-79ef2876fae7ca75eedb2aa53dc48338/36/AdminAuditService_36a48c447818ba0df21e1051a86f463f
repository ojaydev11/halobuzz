16100ff87b56dee2e16c37ce24caaa5a
"use strict";

/* istanbul ignore next */
function cov_28fgrdq25k() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\AdminAuditService.ts";
  var hash = "35f0c94eb81588efd298c7744799c5d9a42b4bc1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\AdminAuditService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 63
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 42
        }
      },
      "4": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 42
        }
      },
      "5": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 13,
          column: 9
        }
      },
      "7": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 65
        }
      },
      "8": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "9": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "10": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 100
        }
      },
      "11": {
        start: {
          line: 22,
          column: 32
        },
        end: {
          line: 35,
          column: 13
        }
      },
      "12": {
        start: {
          line: 37,
          column: 29
        },
        end: {
          line: 37,
          column: 55
        }
      },
      "13": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 91
        }
      },
      "14": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 65
        }
      },
      "15": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "16": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "17": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "18": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 63
        }
      },
      "19": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 70,
          column: 98
        }
      },
      "20": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "21": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 52
        }
      },
      "22": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "23": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 25
        }
      },
      "24": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 58
        }
      },
      "25": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "26": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 37
        }
      },
      "27": {
        start: {
          line: 98,
          column: 29
        },
        end: {
          line: 98,
          column: 69
        }
      },
      "28": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 105,
          column: 15
        }
      },
      "29": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 50
        }
      },
      "30": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 115,
          column: 59
        }
      },
      "31": {
        start: {
          line: 115,
          column: 23
        },
        end: {
          line: 115,
          column: 58
        }
      },
      "32": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "33": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 46
        }
      },
      "34": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 30
        }
      },
      "35": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "36": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 22
        }
      },
      "37": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 71
        }
      },
      "38": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 22
        }
      },
      "39": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 140,
          column: 49
        }
      },
      "40": {
        start: {
          line: 140,
          column: 31
        },
        end: {
          line: 140,
          column: 47
        }
      },
      "41": {
        start: {
          line: 146,
          column: 31
        },
        end: {
          line: 146,
          column: 55
        }
      },
      "42": {
        start: {
          line: 147,
          column: 34
        },
        end: {
          line: 147,
          column: 99
        }
      },
      "43": {
        start: {
          line: 147,
          column: 74
        },
        end: {
          line: 147,
          column: 95
        }
      },
      "44": {
        start: {
          line: 148,
          column: 30
        },
        end: {
          line: 148,
          column: 34
        }
      },
      "45": {
        start: {
          line: 149,
          column: 25
        },
        end: {
          line: 149,
          column: 26
        }
      },
      "46": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "47": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "48": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 45
        }
      },
      "49": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 53
        }
      },
      "50": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 160,
          column: 10
        }
      },
      "51": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "52": {
        start: {
          line: 167,
          column: 28
        },
        end: {
          line: 167,
          column: 29
        }
      },
      "53": {
        start: {
          line: 168,
          column: 28
        },
        end: {
          line: 168,
          column: 30
        }
      },
      "54": {
        start: {
          line: 170,
          column: 34
        },
        end: {
          line: 170,
          column: 77
        }
      },
      "55": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "56": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 32
        }
      },
      "57": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 62
        }
      },
      "58": {
        start: {
          line: 176,
          column: 23
        },
        end: {
          line: 176,
          column: 75
        }
      },
      "59": {
        start: {
          line: 177,
          column: 30
        },
        end: {
          line: 177,
          column: 72
        }
      },
      "60": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "61": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 32
        }
      },
      "62": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 59
        }
      },
      "63": {
        start: {
          line: 183,
          column: 36
        },
        end: {
          line: 183,
          column: 85
        }
      },
      "64": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "65": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 32
        }
      },
      "66": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 59
        }
      },
      "67": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "68": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 32
        }
      },
      "69": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 56
        }
      },
      "70": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 197,
          column: 14
        }
      },
      "71": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 72
        }
      },
      "72": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 55
        }
      },
      "73": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "74": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 22
        }
      },
      "75": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 65
        }
      },
      "76": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 22
        }
      },
      "77": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "78": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 22
        }
      },
      "79": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 61
        }
      },
      "80": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 22
        }
      },
      "81": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "82": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 242,
          column: 14
        }
      },
      "83": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 71
        }
      },
      "84": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 24
        }
      },
      "85": {
        start: {
          line: 250,
          column: 0
        },
        end: {
          line: 250,
          column: 46
        }
      },
      "86": {
        start: {
          line: 251,
          column: 0
        },
        end: {
          line: 251,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 25
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 108
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 43
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 69
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 26
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 94
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 52
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 112
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 115,
            column: 18
          },
          end: {
            line: 115,
            column: 19
          }
        },
        loc: {
          start: {
            line: 115,
            column: 23
          },
          end: {
            line: 115,
            column: 58
          }
        },
        line: 115
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 78
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 124
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        },
        loc: {
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 138
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 140,
            column: 21
          }
        },
        loc: {
          start: {
            line: 140,
            column: 31
          },
          end: {
            line: 140,
            column: 47
          }
        },
        line: 140
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 22
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 145
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 147,
            column: 56
          },
          end: {
            line: 147,
            column: 57
          }
        },
        loc: {
          start: {
            line: 147,
            column: 74
          },
          end: {
            line: 147,
            column: 95
          }
        },
        line: 147
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 150,
            column: 31
          },
          end: {
            line: 150,
            column: 32
          }
        },
        loc: {
          start: {
            line: 150,
            column: 42
          },
          end: {
            line: 155,
            column: 9
          }
        },
        line: 150
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 56
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 165
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 48
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 207
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        loc: {
          start: {
            line: 220,
            column: 44
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 220
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 62
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 233
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 13,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 13,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 85
          },
          end: {
            line: 19,
            column: 99
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 95
          },
          end: {
            line: 19,
            column: 99
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 30,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 30,
            column: 26
          }
        }, {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 30,
            column: 59
          }
        }, {
          start: {
            line: 30,
            column: 63
          },
          end: {
            line: 30,
            column: 72
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 27
          },
          end: {
            line: 31,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 27
          },
          end: {
            line: 31,
            column: 48
          }
        }, {
          start: {
            line: 31,
            column: 52
          },
          end: {
            line: 31,
            column: 61
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: 51,
            column: 17
          },
          end: {
            line: 60,
            column: 13
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 93
          },
          end: {
            line: 43,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 106
          },
          end: {
            line: 43,
            column: 124
          }
        }, {
          start: {
            line: 43,
            column: 127
          },
          end: {
            line: 43,
            column: 129
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 100
          },
          end: {
            line: 52,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 113
          },
          end: {
            line: 52,
            column: 131
          }
        }, {
          start: {
            line: 52,
            column: 134
          },
          end: {
            line: 52,
            column: 136
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 77,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 77,
            column: 22
          }
        }, {
          start: {
            line: 77,
            column: 26
          },
          end: {
            line: 77,
            column: 55
          }
        }, {
          start: {
            line: 77,
            column: 59
          },
          end: {
            line: 77,
            column: 68
          }
        }],
        line: 77
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 23
          },
          end: {
            line: 78,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 23
          },
          end: {
            line: 78,
            column: 44
          }
        }, {
          start: {
            line: 78,
            column: 48
          },
          end: {
            line: 78,
            column: 57
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "10": {
        loc: {
          start: {
            line: 115,
            column: 23
          },
          end: {
            line: 115,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 23
          },
          end: {
            line: 115,
            column: 44
          }
        }, {
          start: {
            line: 115,
            column: 48
          },
          end: {
            line: 115,
            column: 58
          }
        }],
        line: 115
      },
      "11": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "12": {
        loc: {
          start: {
            line: 124,
            column: 54
          },
          end: {
            line: 124,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 124,
            column: 62
          },
          end: {
            line: 124,
            column: 64
          }
        }],
        line: 124
      },
      "13": {
        loc: {
          start: {
            line: 124,
            column: 66
          },
          end: {
            line: 124,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 124,
            column: 75
          },
          end: {
            line: 124,
            column: 76
          }
        }],
        line: 124
      },
      "14": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "15": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "16": {
        loc: {
          start: {
            line: 176,
            column: 23
          },
          end: {
            line: 176,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 23
          },
          end: {
            line: 176,
            column: 29
          }
        }, {
          start: {
            line: 176,
            column: 33
          },
          end: {
            line: 176,
            column: 62
          }
        }, {
          start: {
            line: 176,
            column: 66
          },
          end: {
            line: 176,
            column: 75
          }
        }],
        line: 176
      },
      "17": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "18": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "19": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "20": {
        loc: {
          start: {
            line: 189,
            column: 16
          },
          end: {
            line: 189,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 16
          },
          end: {
            line: 189,
            column: 53
          }
        }, {
          start: {
            line: 189,
            column: 57
          },
          end: {
            line: 189,
            column: 95
          }
        }],
        line: 189
      },
      "21": {
        loc: {
          start: {
            line: 195,
            column: 24
          },
          end: {
            line: 195,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 195,
            column: 45
          },
          end: {
            line: 195,
            column: 63
          }
        }, {
          start: {
            line: 195,
            column: 66
          },
          end: {
            line: 195,
            column: 75
          }
        }],
        line: 195
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "35f0c94eb81588efd298c7744799c5d9a42b4bc1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_28fgrdq25k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_28fgrdq25k();
cov_28fgrdq25k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_28fgrdq25k().s[1]++;
exports.adminAuditService = exports.AdminAuditService = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_28fgrdq25k().s[2]++, require("../config/logger"));
const logger =
/* istanbul ignore next */
(cov_28fgrdq25k().s[3]++, (0, logger_1.setupLogger)());
const redis_1 =
/* istanbul ignore next */
(cov_28fgrdq25k().s[4]++, require("../config/redis"));
class AdminAuditService {
  static instance;
  activeSessions =
  /* istanbul ignore next */
  (cov_28fgrdq25k().s[5]++, new Map());
  static getInstance() {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[0]++;
    cov_28fgrdq25k().s[6]++;
    if (!AdminAuditService.instance) {
      /* istanbul ignore next */
      cov_28fgrdq25k().b[0][0]++;
      cov_28fgrdq25k().s[7]++;
      AdminAuditService.instance = new AdminAuditService();
    } else
    /* istanbul ignore next */
    {
      cov_28fgrdq25k().b[0][1]++;
    }
    cov_28fgrdq25k().s[8]++;
    return AdminAuditService.instance;
  }
  /**
   * Log an admin action
   */
  async logAction(adminId, adminEmail, action, resource, resourceId, details, req, success =
  /* istanbul ignore next */
  (cov_28fgrdq25k().b[1][0]++, true), error) {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[1]++;
    cov_28fgrdq25k().s[9]++;
    try {
      const actionId =
      /* istanbul ignore next */
      (cov_28fgrdq25k().s[10]++, `admin_action_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
      const adminAction =
      /* istanbul ignore next */
      (cov_28fgrdq25k().s[11]++, {
        id: actionId,
        adminId,
        adminEmail,
        action,
        resource,
        resourceId,
        details,
        ip:
        /* istanbul ignore next */
        (cov_28fgrdq25k().b[2][0]++, req.ip) ||
        /* istanbul ignore next */
        (cov_28fgrdq25k().b[2][1]++, req.connection?.remoteAddress) ||
        /* istanbul ignore next */
        (cov_28fgrdq25k().b[2][2]++, 'unknown'),
        userAgent:
        /* istanbul ignore next */
        (cov_28fgrdq25k().b[3][0]++, req.get('User-Agent')) ||
        /* istanbul ignore next */
        (cov_28fgrdq25k().b[3][1]++, 'unknown'),
        timestamp: new Date(),
        success,
        error
      });
      // Store in Redis with 90-day retention
      const cacheKey =
      /* istanbul ignore next */
      (cov_28fgrdq25k().s[12]++, `admin_action:${actionId}`);
      /* istanbul ignore next */
      cov_28fgrdq25k().s[13]++;
      await (0, redis_1.setCache)(cacheKey, JSON.stringify(adminAction), 86400 * 90);
      // Update session activity
      /* istanbul ignore next */
      cov_28fgrdq25k().s[14]++;
      this.updateSessionActivity(adminId, adminEmail, req);
      // Log to application logs
      /* istanbul ignore next */
      cov_28fgrdq25k().s[15]++;
      if (success) {
        /* istanbul ignore next */
        cov_28fgrdq25k().b[4][0]++;
        cov_28fgrdq25k().s[16]++;
        logger.info(`Admin action: ${adminEmail} performed ${action} on ${resource}${resourceId ?
        /* istanbul ignore next */
        (cov_28fgrdq25k().b[5][0]++, ` (${resourceId})`) :
        /* istanbul ignore next */
        (cov_28fgrdq25k().b[5][1]++, '')}`, {
          adminId,
          action,
          resource,
          resourceId,
          ip: adminAction.ip
        });
      } else {
        /* istanbul ignore next */
        cov_28fgrdq25k().b[4][1]++;
        cov_28fgrdq25k().s[17]++;
        logger.warn(`Admin action failed: ${adminEmail} attempted ${action} on ${resource}${resourceId ?
        /* istanbul ignore next */
        (cov_28fgrdq25k().b[6][0]++, ` (${resourceId})`) :
        /* istanbul ignore next */
        (cov_28fgrdq25k().b[6][1]++, '')}`, {
          adminId,
          action,
          resource,
          resourceId,
          ip: adminAction.ip,
          error
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_28fgrdq25k().s[18]++;
      logger.error('Failed to log admin action:', error);
    }
  }
  /**
   * Start an admin session
   */
  startSession(adminId, adminEmail, req) {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[2]++;
    const sessionId =
    /* istanbul ignore next */
    (cov_28fgrdq25k().s[19]++, `admin_session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
    const session =
    /* istanbul ignore next */
    (cov_28fgrdq25k().s[20]++, {
      sessionId,
      adminId,
      adminEmail,
      startTime: new Date(),
      lastActivity: new Date(),
      ip:
      /* istanbul ignore next */
      (cov_28fgrdq25k().b[7][0]++, req.ip) ||
      /* istanbul ignore next */
      (cov_28fgrdq25k().b[7][1]++, req.connection?.remoteAddress) ||
      /* istanbul ignore next */
      (cov_28fgrdq25k().b[7][2]++, 'unknown'),
      userAgent:
      /* istanbul ignore next */
      (cov_28fgrdq25k().b[8][0]++, req.get('User-Agent')) ||
      /* istanbul ignore next */
      (cov_28fgrdq25k().b[8][1]++, 'unknown'),
      actions: 0,
      isActive: true
    });
    /* istanbul ignore next */
    cov_28fgrdq25k().s[21]++;
    this.activeSessions.set(sessionId, session);
    /* istanbul ignore next */
    cov_28fgrdq25k().s[22]++;
    logger.info(`Admin session started: ${adminEmail} from IP ${session.ip}`, {
      sessionId,
      adminId,
      adminEmail,
      ip: session.ip
    });
    /* istanbul ignore next */
    cov_28fgrdq25k().s[23]++;
    return sessionId;
  }
  /**
   * End an admin session
   */
  endSession(sessionId) {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[3]++;
    const session =
    /* istanbul ignore next */
    (cov_28fgrdq25k().s[24]++, this.activeSessions.get(sessionId));
    /* istanbul ignore next */
    cov_28fgrdq25k().s[25]++;
    if (session) {
      /* istanbul ignore next */
      cov_28fgrdq25k().b[9][0]++;
      cov_28fgrdq25k().s[26]++;
      session.isActive = false;
      const duration =
      /* istanbul ignore next */
      (cov_28fgrdq25k().s[27]++, Date.now() - session.startTime.getTime());
      /* istanbul ignore next */
      cov_28fgrdq25k().s[28]++;
      logger.info(`Admin session ended: ${session.adminEmail} (${Math.round(duration / 1000)}s, ${session.actions} actions)`, {
        sessionId,
        adminId: session.adminId,
        adminEmail: session.adminEmail,
        duration: Math.round(duration / 1000),
        actions: session.actions
      });
      /* istanbul ignore next */
      cov_28fgrdq25k().s[29]++;
      this.activeSessions.delete(sessionId);
    } else
    /* istanbul ignore next */
    {
      cov_28fgrdq25k().b[9][1]++;
    }
  }
  /**
   * Update session activity
   */
  updateSessionActivity(adminId, adminEmail, req) {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[4]++;
    // Find active session for this admin
    const session =
    /* istanbul ignore next */
    (cov_28fgrdq25k().s[30]++, Array.from(this.activeSessions.values()).find(s => {
      /* istanbul ignore next */
      cov_28fgrdq25k().f[5]++;
      cov_28fgrdq25k().s[31]++;
      return /* istanbul ignore next */(cov_28fgrdq25k().b[10][0]++, s.adminId === adminId) &&
      /* istanbul ignore next */
      (cov_28fgrdq25k().b[10][1]++, s.isActive);
    }));
    /* istanbul ignore next */
    cov_28fgrdq25k().s[32]++;
    if (session) {
      /* istanbul ignore next */
      cov_28fgrdq25k().b[11][0]++;
      cov_28fgrdq25k().s[33]++;
      session.lastActivity = new Date();
      /* istanbul ignore next */
      cov_28fgrdq25k().s[34]++;
      session.actions++;
    } else
    /* istanbul ignore next */
    {
      cov_28fgrdq25k().b[11][1]++;
    }
  }
  /**
   * Get admin action history
   */
  async getActionHistory(adminId, action, resource, limit =
  /* istanbul ignore next */
  (cov_28fgrdq25k().b[12][0]++, 50), offset =
  /* istanbul ignore next */
  (cov_28fgrdq25k().b[13][0]++, 0)) {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[6]++;
    cov_28fgrdq25k().s[35]++;
    try {
      /* istanbul ignore next */
      cov_28fgrdq25k().s[36]++;
      // In a real implementation, this would query a database
      // For now, return empty array
      return [];
    } catch (error) {
      /* istanbul ignore next */
      cov_28fgrdq25k().s[37]++;
      logger.error('Failed to get admin action history:', error);
      /* istanbul ignore next */
      cov_28fgrdq25k().s[38]++;
      return [];
    }
  }
  /**
   * Get active admin sessions
   */
  getActiveSessions() {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[7]++;
    cov_28fgrdq25k().s[39]++;
    return Array.from(this.activeSessions.values()).filter(session => {
      /* istanbul ignore next */
      cov_28fgrdq25k().f[8]++;
      cov_28fgrdq25k().s[40]++;
      return session.isActive;
    });
  }
  /**
   * Get admin session statistics
   */
  getSessionStats() {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[9]++;
    const activeSessions =
    /* istanbul ignore next */
    (cov_28fgrdq25k().s[41]++, this.getActiveSessions());
    const totalActionsToday =
    /* istanbul ignore next */
    (cov_28fgrdq25k().s[42]++, activeSessions.reduce((sum, session) => {
      /* istanbul ignore next */
      cov_28fgrdq25k().f[10]++;
      cov_28fgrdq25k().s[43]++;
      return sum + session.actions;
    }, 0));
    let mostActiveAdmin =
    /* istanbul ignore next */
    (cov_28fgrdq25k().s[44]++, null);
    let maxActions =
    /* istanbul ignore next */
    (cov_28fgrdq25k().s[45]++, 0);
    /* istanbul ignore next */
    cov_28fgrdq25k().s[46]++;
    activeSessions.forEach(session => {
      /* istanbul ignore next */
      cov_28fgrdq25k().f[11]++;
      cov_28fgrdq25k().s[47]++;
      if (session.actions > maxActions) {
        /* istanbul ignore next */
        cov_28fgrdq25k().b[14][0]++;
        cov_28fgrdq25k().s[48]++;
        maxActions = session.actions;
        /* istanbul ignore next */
        cov_28fgrdq25k().s[49]++;
        mostActiveAdmin = session.adminEmail;
      } else
      /* istanbul ignore next */
      {
        cov_28fgrdq25k().b[14][1]++;
      }
    });
    /* istanbul ignore next */
    cov_28fgrdq25k().s[50]++;
    return {
      totalActiveSessions: activeSessions.length,
      totalActionsToday,
      mostActiveAdmin
    };
  }
  /**
   * Check for suspicious admin activity
   */
  async checkSuspiciousActivity(adminId, action, req) {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[12]++;
    cov_28fgrdq25k().s[51]++;
    try {
      let riskScore =
      /* istanbul ignore next */
      (cov_28fgrdq25k().s[52]++, 0);
      const reasons =
      /* istanbul ignore next */
      (cov_28fgrdq25k().s[53]++, []);
      // Check for rapid actions (more than 10 actions in 1 minute)
      const recentActions =
      /* istanbul ignore next */
      (cov_28fgrdq25k().s[54]++, await this.getRecentActions(adminId, 60000)); // 1 minute
      /* istanbul ignore next */
      cov_28fgrdq25k().s[55]++;
      if (recentActions.length > 10) {
        /* istanbul ignore next */
        cov_28fgrdq25k().b[15][0]++;
        cov_28fgrdq25k().s[56]++;
        riskScore += 30;
        /* istanbul ignore next */
        cov_28fgrdq25k().s[57]++;
        reasons.push('Rapid action pattern detected');
      } else
      /* istanbul ignore next */
      {
        cov_28fgrdq25k().b[15][1]++;
      }
      // Check for actions from new IP
      const ip =
      /* istanbul ignore next */
      (cov_28fgrdq25k().s[58]++,
      /* istanbul ignore next */
      (cov_28fgrdq25k().b[16][0]++, req.ip) ||
      /* istanbul ignore next */
      (cov_28fgrdq25k().b[16][1]++, req.connection?.remoteAddress) ||
      /* istanbul ignore next */
      (cov_28fgrdq25k().b[16][2]++, 'unknown'));
      const recentIPs =
      /* istanbul ignore next */
      (cov_28fgrdq25k().s[59]++, await this.getRecentIPs(adminId, 86400000)); // 24 hours
      /* istanbul ignore next */
      cov_28fgrdq25k().s[60]++;
      if (!recentIPs.includes(ip)) {
        /* istanbul ignore next */
        cov_28fgrdq25k().b[17][0]++;
        cov_28fgrdq25k().s[61]++;
        riskScore += 20;
        /* istanbul ignore next */
        cov_28fgrdq25k().s[62]++;
        reasons.push('Action from new IP address');
      } else
      /* istanbul ignore next */
      {
        cov_28fgrdq25k().b[17][1]++;
      }
      // Check for high-risk actions
      const highRiskActions =
      /* istanbul ignore next */
      (cov_28fgrdq25k().s[63]++, ['delete', 'ban', 'suspend', 'emergency_disable']);
      /* istanbul ignore next */
      cov_28fgrdq25k().s[64]++;
      if (highRiskActions.includes(action.toLowerCase())) {
        /* istanbul ignore next */
        cov_28fgrdq25k().b[18][0]++;
        cov_28fgrdq25k().s[65]++;
        riskScore += 25;
        /* istanbul ignore next */
        cov_28fgrdq25k().s[66]++;
        reasons.push('High-risk action performed');
      } else
      /* istanbul ignore next */
      {
        cov_28fgrdq25k().b[18][1]++;
      }
      // Check for bulk operations
      cov_28fgrdq25k().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_28fgrdq25k().b[20][0]++, action.toLowerCase().includes('bulk')) ||
      /* istanbul ignore next */
      (cov_28fgrdq25k().b[20][1]++, action.toLowerCase().includes('batch'))) {
        /* istanbul ignore next */
        cov_28fgrdq25k().b[19][0]++;
        cov_28fgrdq25k().s[68]++;
        riskScore += 15;
        /* istanbul ignore next */
        cov_28fgrdq25k().s[69]++;
        reasons.push('Bulk operation detected');
      } else
      /* istanbul ignore next */
      {
        cov_28fgrdq25k().b[19][1]++;
      }
      cov_28fgrdq25k().s[70]++;
      return {
        suspicious: riskScore > 50,
        reason: reasons.length > 0 ?
        /* istanbul ignore next */
        (cov_28fgrdq25k().b[21][0]++, reasons.join(', ')) :
        /* istanbul ignore next */
        (cov_28fgrdq25k().b[21][1]++, undefined),
        riskScore
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_28fgrdq25k().s[71]++;
      logger.error('Failed to check suspicious activity:', error);
      /* istanbul ignore next */
      cov_28fgrdq25k().s[72]++;
      return {
        suspicious: false,
        riskScore: 0
      };
    }
  }
  /**
   * Get recent actions for an admin
   */
  async getRecentActions(adminId, timeWindow) {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[13]++;
    cov_28fgrdq25k().s[73]++;
    try {
      /* istanbul ignore next */
      cov_28fgrdq25k().s[74]++;
      // In a real implementation, this would query Redis or database
      return [];
    } catch (error) {
      /* istanbul ignore next */
      cov_28fgrdq25k().s[75]++;
      logger.error('Failed to get recent actions:', error);
      /* istanbul ignore next */
      cov_28fgrdq25k().s[76]++;
      return [];
    }
  }
  /**
   * Get recent IPs for an admin
   */
  async getRecentIPs(adminId, timeWindow) {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[14]++;
    cov_28fgrdq25k().s[77]++;
    try {
      /* istanbul ignore next */
      cov_28fgrdq25k().s[78]++;
      // In a real implementation, this would query Redis or database
      return [];
    } catch (error) {
      /* istanbul ignore next */
      cov_28fgrdq25k().s[79]++;
      logger.error('Failed to get recent IPs:', error);
      /* istanbul ignore next */
      cov_28fgrdq25k().s[80]++;
      return [];
    }
  }
  /**
   * Generate admin activity report
   */
  async generateActivityReport(startDate, endDate, adminId) {
    /* istanbul ignore next */
    cov_28fgrdq25k().f[15]++;
    cov_28fgrdq25k().s[81]++;
    try {
      /* istanbul ignore next */
      cov_28fgrdq25k().s[82]++;
      // In a real implementation, this would query the database
      return {
        totalActions: 0,
        uniqueAdmins: 0,
        topActions: [],
        topAdmins: [],
        riskEvents: 0
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_28fgrdq25k().s[83]++;
      logger.error('Failed to generate activity report:', error);
      /* istanbul ignore next */
      cov_28fgrdq25k().s[84]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_28fgrdq25k().s[85]++;
exports.AdminAuditService = AdminAuditService;
/* istanbul ignore next */
cov_28fgrdq25k().s[86]++;
exports.adminAuditService = AdminAuditService.getInstance();