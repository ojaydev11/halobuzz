c2bf6d52a77c5332cd75e1ef695344d9
"use strict";

/* istanbul ignore next */
function cov_14wtx1kygl() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\RankingService.ts";
  var hash = "5477dc076913bfd687bd800559939e4fac03a90b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\RankingService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 57
        }
      },
      "2": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 40
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 14
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "7": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 15,
          column: 75
        }
      },
      "8": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 18,
          column: 13
        }
      },
      "9": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 69
        }
      },
      "10": {
        start: {
          line: 20,
          column: 42
        },
        end: {
          line: 20,
          column: 96
        }
      },
      "11": {
        start: {
          line: 21,
          column: 41
        },
        end: {
          line: 21,
          column: 90
        }
      },
      "12": {
        start: {
          line: 22,
          column: 38
        },
        end: {
          line: 22,
          column: 108
        }
      },
      "13": {
        start: {
          line: 24,
          column: 37
        },
        end: {
          line: 26,
          column: 66
        }
      },
      "14": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "15": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 98
        }
      },
      "16": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 54
        }
      },
      "17": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 80
        }
      },
      "18": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 60
        }
      },
      "19": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "20": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 82
        }
      },
      "21": {
        start: {
          line: 45,
          column: 28
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "22": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "23": {
        start: {
          line: 47,
          column: 31
        },
        end: {
          line: 47,
          column: 87
        }
      },
      "24": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 50,
          column: 17
        }
      },
      "25": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 90
        }
      },
      "26": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 86
        }
      },
      "27": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "28": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 85
        }
      },
      "29": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 60
        }
      },
      "30": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "31": {
        start: {
          line: 62,
          column: 27
        },
        end: {
          line: 62,
          column: 45
        }
      },
      "32": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 64,
          column: 43
        }
      },
      "33": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 43
        }
      },
      "34": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 66,
          column: 41
        }
      },
      "35": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 41
        }
      },
      "36": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 70,
          column: 72
        }
      },
      "37": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 84,
          column: 14
        }
      },
      "38": {
        start: {
          line: 73,
          column: 45
        },
        end: {
          line: 83,
          column: 17
        }
      },
      "39": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 71
        }
      },
      "40": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 60
        }
      },
      "41": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "42": {
        start: {
          line: 94,
          column: 31
        },
        end: {
          line: 94,
          column: 68
        }
      },
      "43": {
        start: {
          line: 95,
          column: 28
        },
        end: {
          line: 101,
          column: 72
        }
      },
      "44": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 114,
          column: 14
        }
      },
      "45": {
        start: {
          line: 104,
          column: 45
        },
        end: {
          line: 113,
          column: 17
        }
      },
      "46": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 76
        }
      },
      "47": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 60
        }
      },
      "48": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "49": {
        start: {
          line: 123,
          column: 25
        },
        end: {
          line: 123,
          column: 59
        }
      },
      "50": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "51": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 67
        }
      },
      "52": {
        start: {
          line: 128,
          column: 34
        },
        end: {
          line: 128,
          column: 77
        }
      },
      "53": {
        start: {
          line: 129,
          column: 31
        },
        end: {
          line: 129,
          column: 53
        }
      },
      "54": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 130,
          column: 63
        }
      },
      "55": {
        start: {
          line: 131,
          column: 36
        },
        end: {
          line: 131,
          column: 77
        }
      },
      "56": {
        start: {
          line: 132,
          column: 38
        },
        end: {
          line: 135,
          column: 37
        }
      },
      "57": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 149,
          column: 14
        }
      },
      "58": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 78
        }
      },
      "59": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 60
        }
      },
      "60": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "61": {
        start: {
          line: 158,
          column: 26
        },
        end: {
          line: 161,
          column: 83
        }
      },
      "62": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 173,
          column: 14
        }
      },
      "63": {
        start: {
          line: 164,
          column: 41
        },
        end: {
          line: 172,
          column: 17
        }
      },
      "64": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 72
        }
      },
      "65": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 60
        }
      },
      "66": {
        start: {
          line: 182,
          column: 27
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "67": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 185,
          column: 46
        }
      },
      "68": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 46
        }
      },
      "69": {
        start: {
          line: 189,
          column: 25
        },
        end: {
          line: 191,
          column: 10
        }
      },
      "70": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 45
        }
      },
      "71": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 45
        }
      },
      "72": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 42
        }
      },
      "73": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 48
        }
      },
      "74": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 27
        }
      },
      "75": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 50
        }
      },
      "76": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "77": {
        start: {
          line: 213,
          column: 27
        },
        end: {
          line: 213,
          column: 75
        }
      },
      "78": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "79": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 69
        }
      },
      "80": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 56
        }
      },
      "81": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 75
        }
      },
      "82": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 37
        }
      },
      "83": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 77
        }
      },
      "84": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 60
        }
      },
      "85": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "86": {
        start: {
          line: 229,
          column: 65
        },
        end: {
          line: 235,
          column: 14
        }
      },
      "87": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 243,
          column: 14
        }
      },
      "88": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 73
        }
      },
      "89": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 60
        }
      },
      "90": {
        start: {
          line: 251,
          column: 0
        },
        end: {
          line: 251,
          column: 40
        }
      },
      "91": {
        start: {
          line: 252,
          column: 0
        },
        end: {
          line: 252,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 43
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 39
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 42
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 55
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 60
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 35
          }
        },
        loc: {
          start: {
            line: 73,
            column: 45
          },
          end: {
            line: 83,
            column: 17
          }
        },
        line: 73
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 41
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 91
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 104,
            column: 34
          },
          end: {
            line: 104,
            column: 35
          }
        },
        loc: {
          start: {
            line: 104,
            column: 45
          },
          end: {
            line: 113,
            column: 17
          }
        },
        line: 104
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 33
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 121
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        loc: {
          start: {
            line: 156,
            column: 37
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 156
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 164,
            column: 32
          },
          end: {
            line: 164,
            column: 33
          }
        },
        loc: {
          start: {
            line: 164,
            column: 41
          },
          end: {
            line: 172,
            column: 17
          }
        },
        line: 164
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 44
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 181
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 42
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 188
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 40
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 195
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 38
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 199
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 30
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 203
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 36
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 207
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 40
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 211
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        loc: {
          start: {
            line: 227,
            column: 28
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 227
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 70
          },
          end: {
            line: 22,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 70
          },
          end: {
            line: 22,
            column: 102
          }
        }, {
          start: {
            line: 22,
            column: 106
          },
          end: {
            line: 22,
            column: 107
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 45
          },
          end: {
            line: 31,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 45
          },
          end: {
            line: 31,
            column: 77
          }
        }, {
          start: {
            line: 31,
            column: 81
          },
          end: {
            line: 31,
            column: 82
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 60,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 60,
            column: 32
          },
          end: {
            line: 60,
            column: 34
          }
        }],
        line: 60
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 64,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 64,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 66,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 66,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 37
          },
          end: {
            line: 81,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 37
          },
          end: {
            line: 81,
            column: 68
          }
        }, {
          start: {
            line: 81,
            column: 72
          },
          end: {
            line: 81,
            column: 73
          }
        }],
        line: 81
      },
      "8": {
        loc: {
          start: {
            line: 91,
            column: 29
          },
          end: {
            line: 91,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 91,
            column: 37
          },
          end: {
            line: 91,
            column: 39
          }
        }],
        line: 91
      },
      "9": {
        loc: {
          start: {
            line: 111,
            column: 37
          },
          end: {
            line: 111,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 37
          },
          end: {
            line: 111,
            column: 68
          }
        }, {
          start: {
            line: 111,
            column: 72
          },
          end: {
            line: 111,
            column: 73
          }
        }],
        line: 111
      },
      "10": {
        loc: {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "11": {
        loc: {
          start: {
            line: 129,
            column: 31
          },
          end: {
            line: 129,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 31
          },
          end: {
            line: 129,
            column: 48
          }
        }, {
          start: {
            line: 129,
            column: 52
          },
          end: {
            line: 129,
            column: 53
          }
        }],
        line: 129
      },
      "12": {
        loc: {
          start: {
            line: 156,
            column: 25
          },
          end: {
            line: 156,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 156,
            column: 33
          },
          end: {
            line: 156,
            column: 35
          }
        }],
        line: 156
      },
      "13": {
        loc: {
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 170,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 170,
            column: 49
          }
        }, {
          start: {
            line: 170,
            column: 53
          },
          end: {
            line: 170,
            column: 54
          }
        }],
        line: 170
      },
      "14": {
        loc: {
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 185,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 185,
            column: 38
          }
        }, {
          start: {
            line: 185,
            column: 42
          },
          end: {
            line: 185,
            column: 46
          }
        }],
        line: 185
      },
      "15": {
        loc: {
          start: {
            line: 192,
            column: 20
          },
          end: {
            line: 192,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 20
          },
          end: {
            line: 192,
            column: 36
          }
        }, {
          start: {
            line: 192,
            column: 40
          },
          end: {
            line: 192,
            column: 45
          }
        }],
        line: 192
      },
      "16": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "17": {
        loc: {
          start: {
            line: 241,
            column: 44
          },
          end: {
            line: 241,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 44
          },
          end: {
            line: 241,
            column: 65
          }
        }, {
          start: {
            line: 241,
            column: 69
          },
          end: {
            line: 241,
            column: 70
          }
        }],
        line: 241
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5477dc076913bfd687bd800559939e4fac03a90b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14wtx1kygl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14wtx1kygl();
cov_14wtx1kygl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_14wtx1kygl().s[1]++;
exports.rankingService = exports.RankingService = void 0;
const LiveStream_1 =
/* istanbul ignore next */
(cov_14wtx1kygl().s[2]++, require("../models/LiveStream"));
const User_1 =
/* istanbul ignore next */
(cov_14wtx1kygl().s[3]++, require("../models/User"));
const logger_1 =
/* istanbul ignore next */
(cov_14wtx1kygl().s[4]++, require("../config/logger"));
class RankingService {
  weights =
  /* istanbul ignore next */
  (cov_14wtx1kygl().s[5]++, {
    viewerCount: 0.3,
    giftsCoins: 0.4,
    aiEngagementScore: 0.3
  });
  async calculateStreamRanking(streamId) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[0]++;
    cov_14wtx1kygl().s[6]++;
    try {
      const stream =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[7]++, await LiveStream_1.LiveStream.findById(streamId));
      /* istanbul ignore next */
      cov_14wtx1kygl().s[8]++;
      if (!stream) {
        /* istanbul ignore next */
        cov_14wtx1kygl().b[0][0]++;
        cov_14wtx1kygl().s[9]++;
        return {
          success: false,
          error: 'Stream not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_14wtx1kygl().b[0][1]++;
      }
      // Normalize metrics
      const normalizedViewerCount =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[10]++, await this.normalizeViewerCount(stream.currentViewers));
      const normalizedGiftsCoins =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[11]++, await this.normalizeGiftsCoins(stream.totalCoins));
      const normalizedAiScore =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[12]++, this.normalizeAiEngagementScore(
      /* istanbul ignore next */
      (cov_14wtx1kygl().b[1][0]++, stream.analytics?.engagementRate) ||
      /* istanbul ignore next */
      (cov_14wtx1kygl().b[1][1]++, 0)));
      // Calculate engagement score
      const engagementScore =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[13]++, normalizedViewerCount * this.weights.viewerCount + normalizedGiftsCoins * this.weights.giftsCoins + normalizedAiScore * this.weights.aiEngagementScore);
      // Update stream metrics
      /* istanbul ignore next */
      cov_14wtx1kygl().s[14]++;
      await LiveStream_1.LiveStream.findByIdAndUpdate(streamId, {
        'metrics.viewerCount': stream.currentViewers,
        'metrics.giftsCoins': stream.totalCoins,
        'metrics.aiEngagementScore':
        /* istanbul ignore next */
        (cov_14wtx1kygl().b[2][0]++, stream.analytics?.engagementRate) ||
        /* istanbul ignore next */
        (cov_14wtx1kygl().b[2][1]++, 0),
        'metrics.engagementScore': Math.round(engagementScore * 100) / 100
      });
      /* istanbul ignore next */
      cov_14wtx1kygl().s[15]++;
      logger_1.logger.info(`Stream ranking calculated for ${streamId}: ${engagementScore}`);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[16]++;
      return {
        success: true,
        engagementScore
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14wtx1kygl().s[17]++;
      logger_1.logger.error('Failed to calculate stream ranking:', error);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[18]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  async calculateAllStreamRankings() {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[1]++;
    cov_14wtx1kygl().s[19]++;
    try {
      const streams =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[20]++, await LiveStream_1.LiveStream.find({
        status: 'live'
      }));
      const results =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[21]++, []);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[22]++;
      for (const stream of streams) {
        const result =
        /* istanbul ignore next */
        (cov_14wtx1kygl().s[23]++, await this.calculateStreamRanking(stream._id.toString()));
        /* istanbul ignore next */
        cov_14wtx1kygl().s[24]++;
        if (result.success) {
          /* istanbul ignore next */
          cov_14wtx1kygl().b[3][0]++;
          cov_14wtx1kygl().s[25]++;
          results.push({
            streamId: stream._id,
            score: result.engagementScore
          });
        } else
        /* istanbul ignore next */
        {
          cov_14wtx1kygl().b[3][1]++;
        }
      }
      /* istanbul ignore next */
      cov_14wtx1kygl().s[26]++;
      logger_1.logger.info(`Calculated rankings for ${results.length} streams`);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[27]++;
      return {
        success: true,
        results
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14wtx1kygl().s[28]++;
      logger_1.logger.error('Failed to calculate all stream rankings:', error);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[29]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  async getTopStreams(limit =
  /* istanbul ignore next */
  (cov_14wtx1kygl().b[4][0]++, 20), category, country) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[2]++;
    cov_14wtx1kygl().s[30]++;
    try {
      const filter =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[31]++, {
        status: 'live'
      });
      /* istanbul ignore next */
      cov_14wtx1kygl().s[32]++;
      if (category) {
        /* istanbul ignore next */
        cov_14wtx1kygl().b[5][0]++;
        cov_14wtx1kygl().s[33]++;
        filter.category = category;
      } else
      /* istanbul ignore next */
      {
        cov_14wtx1kygl().b[5][1]++;
      }
      cov_14wtx1kygl().s[34]++;
      if (country) {
        /* istanbul ignore next */
        cov_14wtx1kygl().b[6][0]++;
        cov_14wtx1kygl().s[35]++;
        filter.country = country;
      } else
      /* istanbul ignore next */
      {
        cov_14wtx1kygl().b[6][1]++;
      }
      const streams =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[36]++, await LiveStream_1.LiveStream.find(filter).sort({
        'metrics.engagementScore': -1
      }).limit(limit).populate('hostId', 'username avatar followers ogLevel'));
      /* istanbul ignore next */
      cov_14wtx1kygl().s[37]++;
      return {
        success: true,
        data: streams.map(stream => {
          /* istanbul ignore next */
          cov_14wtx1kygl().f[3]++;
          cov_14wtx1kygl().s[38]++;
          return {
            id: stream._id,
            title: stream.title,
            host: stream.hostId,
            category: stream.category,
            country: stream.country,
            currentViewers: stream.currentViewers,
            totalCoins: stream.totalCoins,
            engagementScore:
            /* istanbul ignore next */
            (cov_14wtx1kygl().b[7][0]++, stream.metrics?.engagementScore) ||
            /* istanbul ignore next */
            (cov_14wtx1kygl().b[7][1]++, 0),
            thumbnail: stream.thumbnail
          };
        })
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14wtx1kygl().s[39]++;
      logger_1.logger.error('Failed to get top streams:', error);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[40]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  async getTrendingStreams(limit =
  /* istanbul ignore next */
  (cov_14wtx1kygl().b[8][0]++, 20)) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[4]++;
    cov_14wtx1kygl().s[41]++;
    try {
      // Get streams with high engagement in the last hour
      const oneHourAgo =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[42]++, new Date(Date.now() - 60 * 60 * 1000));
      const streams =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[43]++, await LiveStream_1.LiveStream.find({
        status: 'live',
        startedAt: {
          $gte: oneHourAgo
        }
      }).sort({
        'metrics.engagementScore': -1,
        currentViewers: -1
      }).limit(limit).populate('hostId', 'username avatar followers ogLevel'));
      /* istanbul ignore next */
      cov_14wtx1kygl().s[44]++;
      return {
        success: true,
        data: streams.map(stream => {
          /* istanbul ignore next */
          cov_14wtx1kygl().f[5]++;
          cov_14wtx1kygl().s[45]++;
          return {
            id: stream._id,
            title: stream.title,
            host: stream.hostId,
            category: stream.category,
            currentViewers: stream.currentViewers,
            totalCoins: stream.totalCoins,
            engagementScore:
            /* istanbul ignore next */
            (cov_14wtx1kygl().b[9][0]++, stream.metrics?.engagementScore) ||
            /* istanbul ignore next */
            (cov_14wtx1kygl().b[9][1]++, 0),
            thumbnail: stream.thumbnail
          };
        })
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14wtx1kygl().s[46]++;
      logger_1.logger.error('Failed to get trending streams:', error);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[47]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  async getUserRanking(userId) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[6]++;
    cov_14wtx1kygl().s[48]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[49]++, await User_1.User.findById(userId));
      /* istanbul ignore next */
      cov_14wtx1kygl().s[50]++;
      if (!user) {
        /* istanbul ignore next */
        cov_14wtx1kygl().b[10][0]++;
        cov_14wtx1kygl().s[51]++;
        return {
          success: false,
          error: 'User not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_14wtx1kygl().b[10][1]++;
      }
      // Calculate user ranking based on multiple factors
      const followerScore =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[52]++, this.normalizeFollowerCount(user.followers));
      const trustScore =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[53]++,
      /* istanbul ignore next */
      (cov_14wtx1kygl().b[11][0]++, user.trust?.score) ||
      /* istanbul ignore next */
      (cov_14wtx1kygl().b[11][1]++, 0));
      const ogScore =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[54]++, this.normalizeOgLevel(user.ogLevel));
      const totalViewsScore =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[55]++, this.normalizeTotalViews(user.totalViews));
      const userRankingScore =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[56]++, followerScore * 0.3 + trustScore / 100 * 0.3 + ogScore * 0.2 + totalViewsScore * 0.2);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[57]++;
      return {
        success: true,
        data: {
          userId: user._id,
          username: user.username,
          rankingScore: Math.round(userRankingScore * 100) / 100,
          factors: {
            followers: user.followers,
            trustScore,
            ogLevel: user.ogLevel,
            totalViews: user.totalViews
          }
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14wtx1kygl().s[58]++;
      logger_1.logger.error('Failed to calculate user ranking:', error);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[59]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  async getTopCreators(limit =
  /* istanbul ignore next */
  (cov_14wtx1kygl().b[12][0]++, 50)) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[7]++;
    cov_14wtx1kygl().s[60]++;
    try {
      const users =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[61]++, await User_1.User.find({
        isBanned: false,
        isVerified: true
      }).sort({
        followers: -1,
        'trust.score': -1,
        totalViews: -1
      }).limit(limit).select('username avatar followers totalViews trust.score ogLevel'));
      /* istanbul ignore next */
      cov_14wtx1kygl().s[62]++;
      return {
        success: true,
        data: users.map(user => {
          /* istanbul ignore next */
          cov_14wtx1kygl().f[8]++;
          cov_14wtx1kygl().s[63]++;
          return {
            id: user._id,
            username: user.username,
            avatar: user.avatar,
            followers: user.followers,
            totalViews: user.totalViews,
            trustScore:
            /* istanbul ignore next */
            (cov_14wtx1kygl().b[13][0]++, user.trust?.score) ||
            /* istanbul ignore next */
            (cov_14wtx1kygl().b[13][1]++, 0),
            ogLevel: user.ogLevel
          };
        })
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14wtx1kygl().s[64]++;
      logger_1.logger.error('Failed to get top creators:', error);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[65]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  // Normalization methods
  async normalizeViewerCount(viewerCount) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[9]++;
    const maxViewers =
    /* istanbul ignore next */
    (cov_14wtx1kygl().s[66]++, await LiveStream_1.LiveStream.aggregate([{
      $group: {
        _id: null,
        max: {
          $max: '$currentViewers'
        }
      }
    }]));
    const max =
    /* istanbul ignore next */
    (cov_14wtx1kygl().s[67]++,
    /* istanbul ignore next */
    (cov_14wtx1kygl().b[14][0]++, maxViewers[0]?.max) ||
    /* istanbul ignore next */
    (cov_14wtx1kygl().b[14][1]++, 1000));
    /* istanbul ignore next */
    cov_14wtx1kygl().s[68]++;
    return Math.min(1, viewerCount / max);
  }
  async normalizeGiftsCoins(giftsCoins) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[10]++;
    const maxCoins =
    /* istanbul ignore next */
    (cov_14wtx1kygl().s[69]++, await LiveStream_1.LiveStream.aggregate([{
      $group: {
        _id: null,
        max: {
          $max: '$totalCoins'
        }
      }
    }]));
    const max =
    /* istanbul ignore next */
    (cov_14wtx1kygl().s[70]++,
    /* istanbul ignore next */
    (cov_14wtx1kygl().b[15][0]++, maxCoins[0]?.max) ||
    /* istanbul ignore next */
    (cov_14wtx1kygl().b[15][1]++, 10000));
    /* istanbul ignore next */
    cov_14wtx1kygl().s[71]++;
    return Math.min(1, giftsCoins / max);
  }
  normalizeAiEngagementScore(aiScore) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[11]++;
    cov_14wtx1kygl().s[72]++;
    // AI engagement score is already 0-100, normalize to 0-1
    return Math.min(1, aiScore / 100);
  }
  normalizeFollowerCount(followers) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[12]++;
    cov_14wtx1kygl().s[73]++;
    // Normalize follower count (assuming max is 1M)
    return Math.min(1, followers / 1000000);
  }
  normalizeOgLevel(ogLevel) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[13]++;
    cov_14wtx1kygl().s[74]++;
    // OG level is 0-5, normalize to 0-1
    return ogLevel / 5;
  }
  normalizeTotalViews(totalViews) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[14]++;
    cov_14wtx1kygl().s[75]++;
    // Normalize total views (assuming max is 10M)
    return Math.min(1, totalViews / 10000000);
  }
  async updateStreamMetrics(streamId) {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[15]++;
    cov_14wtx1kygl().s[76]++;
    try {
      const stream =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[77]++, await LiveStream_1.LiveStream.findById(streamId));
      /* istanbul ignore next */
      cov_14wtx1kygl().s[78]++;
      if (!stream) {
        /* istanbul ignore next */
        cov_14wtx1kygl().b[16][0]++;
        cov_14wtx1kygl().s[79]++;
        return {
          success: false,
          error: 'Stream not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_14wtx1kygl().b[16][1]++;
      }
      // Update metrics
      cov_14wtx1kygl().s[80]++;
      await this.calculateStreamRanking(streamId);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[81]++;
      logger_1.logger.info(`Stream metrics updated for ${streamId}`);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[82]++;
      return {
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14wtx1kygl().s[83]++;
      logger_1.logger.error('Failed to update stream metrics:', error);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[84]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  async getRankingStats() {
    /* istanbul ignore next */
    cov_14wtx1kygl().f[16]++;
    cov_14wtx1kygl().s[85]++;
    try {
      const [totalStreams, activeStreams, avgEngagement] =
      /* istanbul ignore next */
      (cov_14wtx1kygl().s[86]++, await Promise.all([LiveStream_1.LiveStream.countDocuments(), LiveStream_1.LiveStream.countDocuments({
        status: 'live'
      }), LiveStream_1.LiveStream.aggregate([{
        $group: {
          _id: null,
          avg: {
            $avg: '$metrics.engagementScore'
          }
        }
      }])]));
      /* istanbul ignore next */
      cov_14wtx1kygl().s[87]++;
      return {
        success: true,
        data: {
          totalStreams,
          activeStreams,
          averageEngagementScore:
          /* istanbul ignore next */
          (cov_14wtx1kygl().b[17][0]++, avgEngagement[0]?.avg) ||
          /* istanbul ignore next */
          (cov_14wtx1kygl().b[17][1]++, 0)
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14wtx1kygl().s[88]++;
      logger_1.logger.error('Failed to get ranking stats:', error);
      /* istanbul ignore next */
      cov_14wtx1kygl().s[89]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
}
/* istanbul ignore next */
cov_14wtx1kygl().s[90]++;
exports.RankingService = RankingService;
/* istanbul ignore next */
cov_14wtx1kygl().s[91]++;
exports.rankingService = new RankingService();