4b2bb4d583f6dacba7d119ee554034c0
"use strict";

/* istanbul ignore next */
function cov_29ptba1t9o() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\kyc.ts";
  var hash = "a5cd0b0fb6ff4e89aa12833328c994ff05045a5f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\kyc.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 18
        },
        end: {
          line: 39,
          column: 53
        }
      },
      "39": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 40,
          column: 56
        }
      },
      "40": {
        start: {
          line: 41,
          column: 24
        },
        end: {
          line: 41,
          column: 60
        }
      },
      "41": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 42,
          column: 44
        }
      },
      "42": {
        start: {
          line: 43,
          column: 15
        },
        end: {
          line: 43,
          column: 42
        }
      },
      "43": {
        start: {
          line: 44,
          column: 15
        },
        end: {
          line: 44,
          column: 44
        }
      },
      "44": {
        start: {
          line: 45,
          column: 15
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "45": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 89,
          column: 3
        }
      },
      "46": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "47": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 69
        }
      },
      "48": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "49": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 58,
          column: 15
        }
      },
      "50": {
        start: {
          line: 60,
          column: 23
        },
        end: {
          line: 60,
          column: 39
        }
      },
      "51": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "52": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 65,
          column: 15
        }
      },
      "53": {
        start: {
          line: 67,
          column: 35
        },
        end: {
          line: 67,
          column: 43
        }
      },
      "54": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 105
        }
      },
      "55": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "56": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 73,
          column: 15
        }
      },
      "57": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 79,
          column: 15
        }
      },
      "58": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 54
        }
      },
      "59": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "60": {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 126,
          column: 3
        }
      },
      "61": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "62": {
        start: {
          line: 93,
          column: 23
        },
        end: {
          line: 93,
          column: 39
        }
      },
      "63": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "64": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 98,
          column: 15
        }
      },
      "65": {
        start: {
          line: 100,
          column: 26
        },
        end: {
          line: 100,
          column: 79
        }
      },
      "66": {
        start: {
          line: 101,
          column: 26
        },
        end: {
          line: 101,
          column: 79
        }
      },
      "67": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 117,
          column: 11
        }
      },
      "68": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 56
        }
      },
      "69": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "70": {
        start: {
          line: 128,
          column: 0
        },
        end: {
          line: 160,
          column: 3
        }
      },
      "71": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "72": {
        start: {
          line: 130,
          column: 23
        },
        end: {
          line: 130,
          column: 39
        }
      },
      "73": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "74": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "75": {
        start: {
          line: 137,
          column: 68
        },
        end: {
          line: 142,
          column: 10
        }
      },
      "76": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 151,
          column: 11
        }
      },
      "77": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 52
        }
      },
      "78": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "79": {
        start: {
          line: 162,
          column: 0
        },
        end: {
          line: 223,
          column: 3
        }
      },
      "80": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "81": {
        start: {
          line: 166,
          column: 23
        },
        end: {
          line: 166,
          column: 69
        }
      },
      "82": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "83": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 171,
          column: 15
        }
      },
      "84": {
        start: {
          line: 173,
          column: 23
        },
        end: {
          line: 173,
          column: 39
        }
      },
      "85": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "86": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "87": {
        start: {
          line: 180,
          column: 32
        },
        end: {
          line: 180,
          column: 40
        }
      },
      "88": {
        start: {
          line: 181,
          column: 26
        },
        end: {
          line: 181,
          column: 47
        }
      },
      "89": {
        start: {
          line: 183,
          column: 22
        },
        end: {
          line: 183,
          column: 32
        }
      },
      "90": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 184,
          column: 65
        }
      },
      "91": {
        start: {
          line: 185,
          column: 26
        },
        end: {
          line: 185,
          column: 65
        }
      },
      "92": {
        start: {
          line: 186,
          column: 26
        },
        end: {
          line: 186,
          column: 117
        }
      },
      "93": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "94": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 191,
          column: 15
        }
      },
      "95": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "96": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 197,
          column: 15
        }
      },
      "97": {
        start: {
          line: 200,
          column: 25
        },
        end: {
          line: 200,
          column: 100
        }
      },
      "98": {
        start: {
          line: 200,
          column: 60
        },
        end: {
          line: 200,
          column: 99
        }
      },
      "99": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 73
        }
      },
      "100": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 206,
          column: 11
        }
      },
      "101": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "102": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 60
        }
      },
      "103": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 221,
          column: 11
        }
      },
      "104": {
        start: {
          line: 224,
          column: 0
        },
        end: {
          line: 224,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 51,
            column: 3
          },
          end: {
            line: 51,
            column: 4
          }
        },
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 51
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 91,
            column: 22
          },
          end: {
            line: 91,
            column: 23
          }
        },
        loc: {
          start: {
            line: 91,
            column: 42
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 91
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 128,
            column: 22
          },
          end: {
            line: 128,
            column: 23
          }
        },
        loc: {
          start: {
            line: 128,
            column: 42
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 128
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 164,
            column: 3
          },
          end: {
            line: 164,
            column: 4
          }
        },
        loc: {
          start: {
            line: 164,
            column: 23
          },
          end: {
            line: 223,
            column: 1
          }
        },
        line: 164
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 200,
            column: 54
          },
          end: {
            line: 200,
            column: 55
          }
        },
        loc: {
          start: {
            line: 200,
            column: 60
          },
          end: {
            line: 200,
            column: 99
          }
        },
        line: 200
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "21": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "22": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: 75,
            column: 13
          },
          end: {
            line: 80,
            column: 9
          }
        }],
        line: 69
      },
      "23": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "24": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "25": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "26": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "27": {
        loc: {
          start: {
            line: 186,
            column: 26
          },
          end: {
            line: 186,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 104
          },
          end: {
            line: 186,
            column: 111
          }
        }, {
          start: {
            line: 186,
            column: 114
          },
          end: {
            line: 186,
            column: 117
          }
        }],
        line: 186
      },
      "28": {
        loc: {
          start: {
            line: 186,
            column: 26
          },
          end: {
            line: 186,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 26
          },
          end: {
            line: 186,
            column: 39
          }
        }, {
          start: {
            line: 186,
            column: 44
          },
          end: {
            line: 186,
            column: 59
          }
        }, {
          start: {
            line: 186,
            column: 63
          },
          end: {
            line: 186,
            column: 100
          }
        }],
        line: 186
      },
      "29": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "30": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a5cd0b0fb6ff4e89aa12833328c994ff05045a5f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29ptba1t9o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29ptba1t9o();
var __createBinding =
/* istanbul ignore next */
(cov_29ptba1t9o().s[0]++,
/* istanbul ignore next */
(cov_29ptba1t9o().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_29ptba1t9o().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_29ptba1t9o().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_29ptba1t9o().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_29ptba1t9o().f[0]++;
  cov_29ptba1t9o().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_29ptba1t9o().b[2][0]++;
    cov_29ptba1t9o().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_29ptba1t9o().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_29ptba1t9o().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_29ptba1t9o().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_29ptba1t9o().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_29ptba1t9o().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_29ptba1t9o().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_29ptba1t9o().b[5][1]++,
  /* istanbul ignore next */
  (cov_29ptba1t9o().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_29ptba1t9o().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_29ptba1t9o().b[3][0]++;
    cov_29ptba1t9o().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_29ptba1t9o().f[1]++;
        cov_29ptba1t9o().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_29ptba1t9o().b[3][1]++;
  }
  cov_29ptba1t9o().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_29ptba1t9o().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_29ptba1t9o().f[2]++;
  cov_29ptba1t9o().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_29ptba1t9o().b[7][0]++;
    cov_29ptba1t9o().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_29ptba1t9o().b[7][1]++;
  }
  cov_29ptba1t9o().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_29ptba1t9o().s[11]++,
/* istanbul ignore next */
(cov_29ptba1t9o().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_29ptba1t9o().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_29ptba1t9o().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_29ptba1t9o().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_29ptba1t9o().f[3]++;
  cov_29ptba1t9o().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_29ptba1t9o().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_29ptba1t9o().f[4]++;
  cov_29ptba1t9o().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_29ptba1t9o().s[14]++,
/* istanbul ignore next */
(cov_29ptba1t9o().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_29ptba1t9o().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_29ptba1t9o().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_29ptba1t9o().f[5]++;
  cov_29ptba1t9o().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_29ptba1t9o().f[6]++;
    cov_29ptba1t9o().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_29ptba1t9o().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_29ptba1t9o().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_29ptba1t9o().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_29ptba1t9o().s[17]++, []);
      /* istanbul ignore next */
      cov_29ptba1t9o().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_29ptba1t9o().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_29ptba1t9o().b[12][0]++;
          cov_29ptba1t9o().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_29ptba1t9o().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_29ptba1t9o().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_29ptba1t9o().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_29ptba1t9o().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_29ptba1t9o().f[8]++;
    cov_29ptba1t9o().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_29ptba1t9o().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_29ptba1t9o().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[13][0]++;
      cov_29ptba1t9o().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_29ptba1t9o().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[26]++, {});
    /* istanbul ignore next */
    cov_29ptba1t9o().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[15][0]++;
      cov_29ptba1t9o().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_29ptba1t9o().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_29ptba1t9o().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_29ptba1t9o().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_29ptba1t9o().b[16][0]++;
          cov_29ptba1t9o().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_29ptba1t9o().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_29ptba1t9o().b[15][1]++;
    }
    cov_29ptba1t9o().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_29ptba1t9o().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_29ptba1t9o().s[35]++,
/* istanbul ignore next */
(cov_29ptba1t9o().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_29ptba1t9o().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_29ptba1t9o().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_29ptba1t9o().f[9]++;
  cov_29ptba1t9o().s[36]++;
  return /* istanbul ignore next */(cov_29ptba1t9o().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_29ptba1t9o().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_29ptba1t9o().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_29ptba1t9o().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_29ptba1t9o().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_29ptba1t9o().s[38]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_29ptba1t9o().s[39]++, require("express-validator"));
const AgeKycService_1 =
/* istanbul ignore next */
(cov_29ptba1t9o().s[40]++, require("../services/AgeKycService"));
const logger_1 =
/* istanbul ignore next */
(cov_29ptba1t9o().s[41]++, require("../config/logger"));
const logger =
/* istanbul ignore next */
(cov_29ptba1t9o().s[42]++, (0, logger_1.setupLogger)());
const auth_1 =
/* istanbul ignore next */
(cov_29ptba1t9o().s[43]++, require("../middleware/auth"));
const router =
/* istanbul ignore next */
(cov_29ptba1t9o().s[44]++, express_1.default.Router());
// Submit KYC documents
/* istanbul ignore next */
cov_29ptba1t9o().s[45]++;
router.post('/submit', [auth_1.requireAgeVerification, (0, express_validator_1.body)('idCard').isString().notEmpty().withMessage('ID card image is required'), (0, express_validator_1.body)('selfie').isString().notEmpty().withMessage('Selfie image is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_29ptba1t9o().f[10]++;
  cov_29ptba1t9o().s[46]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[47]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_29ptba1t9o().s[48]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[20][0]++;
      cov_29ptba1t9o().s[49]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ptba1t9o().b[20][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[50]++, req.user?.userId);
    /* istanbul ignore next */
    cov_29ptba1t9o().s[51]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[21][0]++;
      cov_29ptba1t9o().s[52]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ptba1t9o().b[21][1]++;
    }
    const {
      idCard,
      selfie
    } =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[53]++, req.body);
    const result =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[54]++, await AgeKycService_1.ageKycService.submitKycDocuments(userId, {
      idCard,
      selfie
    }));
    /* istanbul ignore next */
    cov_29ptba1t9o().s[55]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[22][0]++;
      cov_29ptba1t9o().s[56]++;
      res.status(201).json({
        success: true,
        message: result.message
      });
    } else {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[22][1]++;
      cov_29ptba1t9o().s[57]++;
      res.status(400).json({
        success: false,
        error: result.message
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_29ptba1t9o().s[58]++;
    logger.error('KYC submission failed:', error);
    /* istanbul ignore next */
    cov_29ptba1t9o().s[59]++;
    res.status(500).json({
      success: false,
      error: 'Failed to submit KYC documents'
    });
  }
});
// Get KYC status
/* istanbul ignore next */
cov_29ptba1t9o().s[60]++;
router.get('/status', async (req, res) => {
  /* istanbul ignore next */
  cov_29ptba1t9o().f[11]++;
  cov_29ptba1t9o().s[61]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[62]++, req.user?.userId);
    /* istanbul ignore next */
    cov_29ptba1t9o().s[63]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[23][0]++;
      cov_29ptba1t9o().s[64]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ptba1t9o().b[23][1]++;
    }
    const kycResult =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[65]++, await AgeKycService_1.ageKycService.verifyKyc(userId));
    const ageResult =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[66]++, await AgeKycService_1.ageKycService.verifyAge(userId));
    /* istanbul ignore next */
    cov_29ptba1t9o().s[67]++;
    res.json({
      success: true,
      data: {
        kyc: {
          status: kycResult.status,
          isVerified: kycResult.isVerified,
          reason: kycResult.reason
        },
        age: {
          age: ageResult.age,
          isAdult: ageResult.isAdult,
          isVerified: ageResult.isVerified,
          reason: ageResult.reason
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_29ptba1t9o().s[68]++;
    logger.error('KYC status check failed:', error);
    /* istanbul ignore next */
    cov_29ptba1t9o().s[69]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get KYC status'
    });
  }
});
// Check access permissions
/* istanbul ignore next */
cov_29ptba1t9o().s[70]++;
router.get('/access', async (req, res) => {
  /* istanbul ignore next */
  cov_29ptba1t9o().f[12]++;
  cov_29ptba1t9o().s[71]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[72]++, req.user?.userId);
    /* istanbul ignore next */
    cov_29ptba1t9o().s[73]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[24][0]++;
      cov_29ptba1t9o().s[74]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ptba1t9o().b[24][1]++;
    }
    const [liveStreaming, payments, games, restrictedContent] =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[75]++, await Promise.all([AgeKycService_1.ageKycService.canAccessLiveStreaming(userId), AgeKycService_1.ageKycService.canMakePayments(userId), AgeKycService_1.ageKycService.canPlayGames(userId), AgeKycService_1.ageKycService.canAccessRestrictedContent(userId)]));
    /* istanbul ignore next */
    cov_29ptba1t9o().s[76]++;
    res.json({
      success: true,
      data: {
        liveStreaming,
        payments,
        games,
        restrictedContent
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_29ptba1t9o().s[77]++;
    logger.error('Access check failed:', error);
    /* istanbul ignore next */
    cov_29ptba1t9o().s[78]++;
    res.status(500).json({
      success: false,
      error: 'Failed to check access permissions'
    });
  }
});
// Update date of birth (for age verification)
/* istanbul ignore next */
cov_29ptba1t9o().s[79]++;
router.put('/date-of-birth', [(0, express_validator_1.body)('dateOfBirth').isISO8601().withMessage('Valid date of birth is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_29ptba1t9o().f[13]++;
  cov_29ptba1t9o().s[80]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[81]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_29ptba1t9o().s[82]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[25][0]++;
      cov_29ptba1t9o().s[83]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ptba1t9o().b[25][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[84]++, req.user?.userId);
    /* istanbul ignore next */
    cov_29ptba1t9o().s[85]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[26][0]++;
      cov_29ptba1t9o().s[86]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ptba1t9o().b[26][1]++;
    }
    const {
      dateOfBirth
    } =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[87]++, req.body);
    const birthDate =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[88]++, new Date(dateOfBirth));
    // Validate age
    const today =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[89]++, new Date());
    const age =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[90]++, today.getFullYear() - birthDate.getFullYear());
    const monthDiff =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[91]++, today.getMonth() - birthDate.getMonth());
    const actualAge =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[92]++,
    /* istanbul ignore next */
    (cov_29ptba1t9o().b[28][0]++, monthDiff < 0) ||
    /* istanbul ignore next */
    (cov_29ptba1t9o().b[28][1]++, monthDiff === 0) &&
    /* istanbul ignore next */
    (cov_29ptba1t9o().b[28][2]++, today.getDate() < birthDate.getDate()) ?
    /* istanbul ignore next */
    (cov_29ptba1t9o().b[27][0]++, age - 1) :
    /* istanbul ignore next */
    (cov_29ptba1t9o().b[27][1]++, age));
    /* istanbul ignore next */
    cov_29ptba1t9o().s[93]++;
    if (actualAge < 13) {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[29][0]++;
      cov_29ptba1t9o().s[94]++;
      return res.status(400).json({
        success: false,
        error: 'You must be at least 13 years old to use this service'
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ptba1t9o().b[29][1]++;
    }
    cov_29ptba1t9o().s[95]++;
    if (actualAge > 120) {
      /* istanbul ignore next */
      cov_29ptba1t9o().b[30][0]++;
      cov_29ptba1t9o().s[96]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid date of birth'
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ptba1t9o().b[30][1]++;
    }
    // Update user's date of birth
    const {
      User
    } =
    /* istanbul ignore next */
    (cov_29ptba1t9o().s[97]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_29ptba1t9o().f[14]++;
      cov_29ptba1t9o().s[98]++;
      return __importStar(require('../models/User'));
    }));
    /* istanbul ignore next */
    cov_29ptba1t9o().s[99]++;
    await User.findByIdAndUpdate(userId, {
      dateOfBirth: birthDate
    });
    /* istanbul ignore next */
    cov_29ptba1t9o().s[100]++;
    logger.info('Date of birth updated', {
      userId,
      age: actualAge,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_29ptba1t9o().s[101]++;
    res.json({
      success: true,
      message: 'Date of birth updated successfully',
      data: {
        age: actualAge,
        isAdult: actualAge >= 18
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_29ptba1t9o().s[102]++;
    logger.error('Date of birth update failed:', error);
    /* istanbul ignore next */
    cov_29ptba1t9o().s[103]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update date of birth'
    });
  }
});
/* istanbul ignore next */
cov_29ptba1t9o().s[104]++;
exports.default = router;