b0c5ec23cc65c59426577ccaf58d718e
"use strict";

/* istanbul ignore next */
function cov_2pqjh01gw3() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\PaymentVelocityService.ts";
  var hash = "a832df6f2d7e55d4fefefc6b413f70146793cb01";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\PaymentVelocityService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 40
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 40
        }
      },
      "3": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 54
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "5": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 42
        }
      },
      "6": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "9": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 59
        }
      },
      "10": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 70
        }
      },
      "11": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 55
        }
      },
      "12": {
        start: {
          line: 23,
          column: 35
        },
        end: {
          line: 23,
          column: 78
        }
      },
      "13": {
        start: {
          line: 23,
          column: 56
        },
        end: {
          line: 23,
          column: 77
        }
      },
      "14": {
        start: {
          line: 24,
          column: 33
        },
        end: {
          line: 24,
          column: 85
        }
      },
      "15": {
        start: {
          line: 24,
          column: 67
        },
        end: {
          line: 24,
          column: 81
        }
      },
      "16": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 33,
          column: 13
        }
      },
      "17": {
        start: {
          line: 26,
          column: 38
        },
        end: {
          line: 26,
          column: 87
        }
      },
      "18": {
        start: {
          line: 26,
          column: 74
        },
        end: {
          line: 26,
          column: 85
        }
      },
      "19": {
        start: {
          line: 27,
          column: 35
        },
        end: {
          line: 27,
          column: 98
        }
      },
      "20": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 32,
          column: 18
        }
      },
      "21": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "22": {
        start: {
          line: 35,
          column: 35
        },
        end: {
          line: 35,
          column: 92
        }
      },
      "23": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 40,
          column: 18
        }
      },
      "24": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 43,
          column: 59
        }
      },
      "25": {
        start: {
          line: 44,
          column: 34
        },
        end: {
          line: 44,
          column: 76
        }
      },
      "26": {
        start: {
          line: 44,
          column: 55
        },
        end: {
          line: 44,
          column: 75
        }
      },
      "27": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 45,
          column: 83
        }
      },
      "28": {
        start: {
          line: 45,
          column: 65
        },
        end: {
          line: 45,
          column: 79
        }
      },
      "29": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "30": {
        start: {
          line: 47,
          column: 38
        },
        end: {
          line: 47,
          column: 86
        }
      },
      "31": {
        start: {
          line: 47,
          column: 73
        },
        end: {
          line: 47,
          column: 84
        }
      },
      "32": {
        start: {
          line: 48,
          column: 35
        },
        end: {
          line: 48,
          column: 103
        }
      },
      "33": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 53,
          column: 18
        }
      },
      "34": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "35": {
        start: {
          line: 56,
          column: 35
        },
        end: {
          line: 56,
          column: 96
        }
      },
      "36": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "37": {
        start: {
          line: 64,
          column: 32
        },
        end: {
          line: 64,
          column: 61
        }
      },
      "38": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "39": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 66,
          column: 126
        }
      },
      "40": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "41": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 37
        }
      },
      "42": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 75
        }
      },
      "43": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 37
        }
      },
      "44": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "45": {
        start: {
          line: 83,
          column: 28
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "46": {
        start: {
          line: 89,
          column: 29
        },
        end: {
          line: 89,
          column: 70
        }
      },
      "47": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 35
        }
      },
      "48": {
        start: {
          line: 92,
          column: 27
        },
        end: {
          line: 92,
          column: 59
        }
      },
      "49": {
        start: {
          line: 93,
          column: 37
        },
        end: {
          line: 93,
          column: 79
        }
      },
      "50": {
        start: {
          line: 93,
          column: 58
        },
        end: {
          line: 93,
          column: 78
        }
      },
      "51": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 104
        }
      },
      "52": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "53": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 98
        }
      },
      "54": {
        start: {
          line: 100,
          column: 35
        },
        end: {
          line: 100,
          column: 120
        }
      },
      "55": {
        start: {
          line: 100,
          column: 64
        },
        end: {
          line: 100,
          column: 119
        }
      },
      "56": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 103,
          column: 13
        }
      },
      "57": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 98
        }
      },
      "58": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 78
        }
      },
      "59": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "60": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 112,
          column: 89
        }
      },
      "61": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "62": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 43
        }
      },
      "63": {
        start: {
          line: 117,
          column: 36
        },
        end: {
          line: 117,
          column: 83
        }
      },
      "64": {
        start: {
          line: 118,
          column: 33
        },
        end: {
          line: 118,
          column: 75
        }
      },
      "65": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 125,
          column: 14
        }
      },
      "66": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 71
        }
      },
      "67": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 39
        }
      },
      "68": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "69": {
        start: {
          line: 134,
          column: 29
        },
        end: {
          line: 134,
          column: 86
        }
      },
      "70": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 34
        }
      },
      "71": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 81
        }
      },
      "72": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 22
        }
      },
      "73": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "74": {
        start: {
          line: 144,
          column: 27
        },
        end: {
          line: 144,
          column: 69
        }
      },
      "75": {
        start: {
          line: 145,
          column: 33
        },
        end: {
          line: 150,
          column: 14
        }
      },
      "76": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 79
        }
      },
      "77": {
        start: {
          line: 151,
          column: 52
        },
        end: {
          line: 151,
          column: 74
        }
      },
      "78": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 74
        }
      },
      "79": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 21
        }
      },
      "80": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "81": {
        start: {
          line: 160,
          column: 34
        },
        end: {
          line: 160,
          column: 69
        }
      },
      "82": {
        start: {
          line: 161,
          column: 27
        },
        end: {
          line: 161,
          column: 59
        }
      },
      "83": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 68
        }
      },
      "84": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 82
        }
      },
      "85": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 24
        }
      },
      "86": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "87": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "88": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 79
        }
      },
      "89": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "90": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 29
        }
      },
      "91": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 29
        }
      },
      "92": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 29
        }
      },
      "93": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "94": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 89
        }
      },
      "95": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 89
        }
      },
      "96": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 71
        }
      },
      "97": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 24
        }
      },
      "98": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "99": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 90
        }
      },
      "100": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 78
        }
      },
      "101": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 75
        }
      },
      "102": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 24
        }
      },
      "103": {
        start: {
          line: 221,
          column: 0
        },
        end: {
          line: 221,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 61
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 51
          },
          end: {
            line: 23,
            column: 52
          }
        },
        loc: {
          start: {
            line: 23,
            column: 56
          },
          end: {
            line: 23,
            column: 77
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 55
          },
          end: {
            line: 24,
            column: 56
          }
        },
        loc: {
          start: {
            line: 24,
            column: 67
          },
          end: {
            line: 24,
            column: 81
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 69
          },
          end: {
            line: 26,
            column: 70
          }
        },
        loc: {
          start: {
            line: 26,
            column: 74
          },
          end: {
            line: 26,
            column: 85
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 50
          },
          end: {
            line: 44,
            column: 51
          }
        },
        loc: {
          start: {
            line: 44,
            column: 55
          },
          end: {
            line: 44,
            column: 75
          }
        },
        line: 44
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 53
          },
          end: {
            line: 45,
            column: 54
          }
        },
        loc: {
          start: {
            line: 45,
            column: 65
          },
          end: {
            line: 45,
            column: 79
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 47,
            column: 68
          },
          end: {
            line: 47,
            column: 69
          }
        },
        loc: {
          start: {
            line: 47,
            column: 73
          },
          end: {
            line: 47,
            column: 84
          }
        },
        line: 47
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 71
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 81
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 93,
            column: 53
          },
          end: {
            line: 93,
            column: 54
          }
        },
        loc: {
          start: {
            line: 93,
            column: 58
          },
          end: {
            line: 93,
            column: 78
          }
        },
        line: 93
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 100,
            column: 59
          },
          end: {
            line: 100,
            column: 60
          }
        },
        loc: {
          start: {
            line: 100,
            column: 64
          },
          end: {
            line: 100,
            column: 119
          }
        },
        line: 100
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 32
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 109
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 41
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 132
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 35
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 142
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 151,
            column: 39
          },
          end: {
            line: 151,
            column: 40
          }
        },
        loc: {
          start: {
            line: 151,
            column: 52
          },
          end: {
            line: 151,
            column: 74
          }
        },
        line: 151
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 52
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 158
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 71
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 169
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 31
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 188
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 40
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 200
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        loc: {
          start: {
            line: 210,
            column: 36
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 210
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 27
          }
        }, {
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 65,
            column: 102
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 64
          },
          end: {
            line: 100,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 64
          },
          end: {
            line: 100,
            column: 74
          }
        }, {
          start: {
            line: 100,
            column: 78
          },
          end: {
            line: 100,
            column: 119
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 103,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 103,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "9": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "10": {
        loc: {
          start: {
            line: 117,
            column: 53
          },
          end: {
            line: 117,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 53
          },
          end: {
            line: 117,
            column: 70
          }
        }, {
          start: {
            line: 117,
            column: 74
          },
          end: {
            line: 117,
            column: 75
          }
        }],
        line: 117
      },
      "11": {
        loc: {
          start: {
            line: 118,
            column: 50
          },
          end: {
            line: 118,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 50
          },
          end: {
            line: 118,
            column: 62
          }
        }, {
          start: {
            line: 118,
            column: 66
          },
          end: {
            line: 118,
            column: 67
          }
        }],
        line: 118
      },
      "12": {
        loc: {
          start: {
            line: 135,
            column: 19
          },
          end: {
            line: 135,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 19
          },
          end: {
            line: 135,
            column: 27
          }
        }, {
          start: {
            line: 135,
            column: 31
          },
          end: {
            line: 135,
            column: 33
          }
        }],
        line: 135
      },
      "13": {
        loc: {
          start: {
            line: 151,
            column: 59
          },
          end: {
            line: 151,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 59
          },
          end: {
            line: 151,
            column: 68
          }
        }, {
          start: {
            line: 151,
            column: 72
          },
          end: {
            line: 151,
            column: 73
          }
        }],
        line: 151
      },
      "14": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 25
          }
        }, {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 192,
            column: 29
          }
        }, {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 194,
            column: 29
          }
        }, {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 196,
            column: 29
          }
        }],
        line: 189
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a832df6f2d7e55d4fefefc6b413f70146793cb01"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2pqjh01gw3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2pqjh01gw3();
cov_2pqjh01gw3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2pqjh01gw3().s[1]++;
exports.paymentVelocityService = void 0;
const User_1 =
/* istanbul ignore next */
(cov_2pqjh01gw3().s[2]++, require("../models/User"));
const Transaction_1 =
/* istanbul ignore next */
(cov_2pqjh01gw3().s[3]++, require("../models/Transaction"));
const logger_1 =
/* istanbul ignore next */
(cov_2pqjh01gw3().s[4]++, require("../config/logger"));
const redis_1 =
/* istanbul ignore next */
(cov_2pqjh01gw3().s[5]++, require("../config/redis"));
class PaymentVelocityService {
  DEFAULT_LIMITS =
  /* istanbul ignore next */
  (cov_2pqjh01gw3().s[6]++, {
    maxPaymentsPerHour: 5,
    maxPaymentsPerDay: 20,
    maxAmountPerHour: 1000,
    // in base currency (USD/NPR)
    maxAmountPerDay: 5000,
    cooldownMinutes: 5
  });
  CACHE_TTL =
  /* istanbul ignore next */
  (cov_2pqjh01gw3().s[7]++, 24 * 60 * 60); // 24 hours
  async checkVelocityLimits(userId, amount, paymentMethod) {
    /* istanbul ignore next */
    cov_2pqjh01gw3().f[0]++;
    cov_2pqjh01gw3().s[8]++;
    try {
      const limits =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[9]++, await this.getUserLimits(userId));
      const attempts =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[10]++, await this.getUserPaymentAttempts(userId));
      // Check hourly limits
      const hourAgo =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[11]++, Date.now() - 60 * 60 * 1000);
      const recentAttempts =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[12]++, attempts.filter(a => {
        /* istanbul ignore next */
        cov_2pqjh01gw3().f[1]++;
        cov_2pqjh01gw3().s[13]++;
        return a.timestamp > hourAgo;
      }));
      const recentAmount =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[14]++, recentAttempts.reduce((sum, a) => {
        /* istanbul ignore next */
        cov_2pqjh01gw3().f[2]++;
        cov_2pqjh01gw3().s[15]++;
        return sum + a.amount;
      }, 0));
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[16]++;
      if (recentAttempts.length >= limits.maxPaymentsPerHour) {
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[0][0]++;
        const oldestAttempt =
        /* istanbul ignore next */
        (cov_2pqjh01gw3().s[17]++, Math.min(...recentAttempts.map(a => {
          /* istanbul ignore next */
          cov_2pqjh01gw3().f[3]++;
          cov_2pqjh01gw3().s[18]++;
          return a.timestamp;
        })));
        const retryAfter =
        /* istanbul ignore next */
        (cov_2pqjh01gw3().s[19]++, Math.ceil((oldestAttempt + 60 * 60 * 1000 - Date.now()) / 1000));
        /* istanbul ignore next */
        cov_2pqjh01gw3().s[20]++;
        return {
          allowed: false,
          reason: `Hourly payment limit exceeded (${limits.maxPaymentsPerHour} payments/hour)`,
          retryAfter
        };
      } else
      /* istanbul ignore next */
      {
        cov_2pqjh01gw3().b[0][1]++;
      }
      cov_2pqjh01gw3().s[21]++;
      if (recentAmount + amount > limits.maxAmountPerHour) {
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[1][0]++;
        const retryAfter =
        /* istanbul ignore next */
        (cov_2pqjh01gw3().s[22]++, Math.ceil((hourAgo + 60 * 60 * 1000 - Date.now()) / 1000));
        /* istanbul ignore next */
        cov_2pqjh01gw3().s[23]++;
        return {
          allowed: false,
          reason: `Hourly amount limit exceeded (${limits.maxAmountPerHour} ${this.getCurrency(paymentMethod)}/hour)`,
          retryAfter
        };
      } else
      /* istanbul ignore next */
      {
        cov_2pqjh01gw3().b[1][1]++;
      }
      // Check daily limits
      const dayAgo =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[24]++, Date.now() - 24 * 60 * 60 * 1000);
      const dailyAttempts =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[25]++, attempts.filter(a => {
        /* istanbul ignore next */
        cov_2pqjh01gw3().f[4]++;
        cov_2pqjh01gw3().s[26]++;
        return a.timestamp > dayAgo;
      }));
      const dailyAmount =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[27]++, dailyAttempts.reduce((sum, a) => {
        /* istanbul ignore next */
        cov_2pqjh01gw3().f[5]++;
        cov_2pqjh01gw3().s[28]++;
        return sum + a.amount;
      }, 0));
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[29]++;
      if (dailyAttempts.length >= limits.maxPaymentsPerDay) {
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[2][0]++;
        const oldestAttempt =
        /* istanbul ignore next */
        (cov_2pqjh01gw3().s[30]++, Math.min(...dailyAttempts.map(a => {
          /* istanbul ignore next */
          cov_2pqjh01gw3().f[6]++;
          cov_2pqjh01gw3().s[31]++;
          return a.timestamp;
        })));
        const retryAfter =
        /* istanbul ignore next */
        (cov_2pqjh01gw3().s[32]++, Math.ceil((oldestAttempt + 24 * 60 * 60 * 1000 - Date.now()) / 1000));
        /* istanbul ignore next */
        cov_2pqjh01gw3().s[33]++;
        return {
          allowed: false,
          reason: `Daily payment limit exceeded (${limits.maxPaymentsPerDay} payments/day)`,
          retryAfter
        };
      } else
      /* istanbul ignore next */
      {
        cov_2pqjh01gw3().b[2][1]++;
      }
      cov_2pqjh01gw3().s[34]++;
      if (dailyAmount + amount > limits.maxAmountPerDay) {
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[3][0]++;
        const retryAfter =
        /* istanbul ignore next */
        (cov_2pqjh01gw3().s[35]++, Math.ceil((dayAgo + 24 * 60 * 60 * 1000 - Date.now()) / 1000));
        /* istanbul ignore next */
        cov_2pqjh01gw3().s[36]++;
        return {
          allowed: false,
          reason: `Daily amount limit exceeded (${limits.maxAmountPerDay} ${this.getCurrency(paymentMethod)}/day)`,
          retryAfter
        };
      } else
      /* istanbul ignore next */
      {
        cov_2pqjh01gw3().b[3][1]++;
      }
      // Check cooldown
      const lastAttempt =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[37]++, attempts[attempts.length - 1]);
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[38]++;
      if (
      /* istanbul ignore next */
      (cov_2pqjh01gw3().b[5][0]++, lastAttempt) &&
      /* istanbul ignore next */
      (cov_2pqjh01gw3().b[5][1]++, lastAttempt.timestamp > Date.now() - limits.cooldownMinutes * 60 * 1000)) {
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[4][0]++;
        const retryAfter =
        /* istanbul ignore next */
        (cov_2pqjh01gw3().s[39]++, Math.ceil((lastAttempt.timestamp + limits.cooldownMinutes * 60 * 1000 - Date.now()) / 1000));
        /* istanbul ignore next */
        cov_2pqjh01gw3().s[40]++;
        return {
          allowed: false,
          reason: `Payment cooldown active (${limits.cooldownMinutes} minutes between payments)`,
          retryAfter
        };
      } else
      /* istanbul ignore next */
      {
        cov_2pqjh01gw3().b[4][1]++;
      }
      cov_2pqjh01gw3().s[41]++;
      return {
        allowed: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[42]++;
      logger_1.logger.error('Payment velocity check failed:', error);
      // Fail open for availability, but log the error
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[43]++;
      return {
        allowed: true
      };
    }
  }
  async recordPaymentAttempt(userId, amount, paymentMethod, success) {
    /* istanbul ignore next */
    cov_2pqjh01gw3().f[7]++;
    cov_2pqjh01gw3().s[44]++;
    try {
      const attempt =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[45]++, {
        timestamp: Date.now(),
        amount,
        method: paymentMethod,
        success
      });
      const attempts =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[46]++, await this.getUserPaymentAttempts(userId));
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[47]++;
      attempts.push(attempt);
      // Keep only last 24 hours of attempts
      const dayAgo =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[48]++, Date.now() - 24 * 60 * 60 * 1000);
      const filteredAttempts =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[49]++, attempts.filter(a => {
        /* istanbul ignore next */
        cov_2pqjh01gw3().f[8]++;
        cov_2pqjh01gw3().s[50]++;
        return a.timestamp > dayAgo;
      }));
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[51]++;
      await (0, redis_1.setCache)(`payment_attempts:${userId}`, filteredAttempts, this.CACHE_TTL);
      // Log suspicious activity
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[52]++;
      if (!success) {
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[6][0]++;
        cov_2pqjh01gw3().s[53]++;
        await this.logSuspiciousActivity(userId, amount, paymentMethod, 'payment_failed');
      } else
      /* istanbul ignore next */
      {
        cov_2pqjh01gw3().b[6][1]++;
      }
      // Check for rapid failures (potential fraud)
      const recentFailures =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[54]++, filteredAttempts.filter(a => {
        /* istanbul ignore next */
        cov_2pqjh01gw3().f[9]++;
        cov_2pqjh01gw3().s[55]++;
        return /* istanbul ignore next */(cov_2pqjh01gw3().b[7][0]++, !a.success) &&
        /* istanbul ignore next */
        (cov_2pqjh01gw3().b[7][1]++, a.timestamp > Date.now() - 60 * 60 * 1000);
      }));
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[56]++;
      if (recentFailures.length >= 3) {
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[8][0]++;
        cov_2pqjh01gw3().s[57]++;
        await this.logSuspiciousActivity(userId, amount, paymentMethod, 'rapid_failures');
      } else
      /* istanbul ignore next */
      {
        cov_2pqjh01gw3().b[8][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[58]++;
      logger_1.logger.error('Failed to record payment attempt:', error);
    }
  }
  async getUserLimits(userId) {
    /* istanbul ignore next */
    cov_2pqjh01gw3().f[10]++;
    cov_2pqjh01gw3().s[59]++;
    try {
      // Check if user has custom limits (VIP, high-trust users)
      const user =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[60]++, await User_1.User.findById(userId).select('trust.score ogLevel'));
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[61]++;
      if (!user) {
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[9][0]++;
        cov_2pqjh01gw3().s[62]++;
        return this.DEFAULT_LIMITS;
      } else
      /* istanbul ignore next */
      {
        cov_2pqjh01gw3().b[9][1]++;
      }
      // Adjust limits based on trust score and OG level
      const trustMultiplier =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[63]++, Math.min(2, 1 + (
      /* istanbul ignore next */
      (cov_2pqjh01gw3().b[10][0]++, user.trust?.score) ||
      /* istanbul ignore next */
      (cov_2pqjh01gw3().b[10][1]++, 0)) / 100));
      const ogMultiplier =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[64]++, Math.min(3, 1 + (
      /* istanbul ignore next */
      (cov_2pqjh01gw3().b[11][0]++, user.ogLevel) ||
      /* istanbul ignore next */
      (cov_2pqjh01gw3().b[11][1]++, 0)) * 0.5));
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[65]++;
      return {
        maxPaymentsPerHour: Math.floor(this.DEFAULT_LIMITS.maxPaymentsPerHour * trustMultiplier),
        maxPaymentsPerDay: Math.floor(this.DEFAULT_LIMITS.maxPaymentsPerDay * trustMultiplier),
        maxAmountPerHour: Math.floor(this.DEFAULT_LIMITS.maxAmountPerHour * ogMultiplier),
        maxAmountPerDay: Math.floor(this.DEFAULT_LIMITS.maxAmountPerDay * ogMultiplier),
        cooldownMinutes: Math.max(1, Math.floor(this.DEFAULT_LIMITS.cooldownMinutes / trustMultiplier))
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[66]++;
      logger_1.logger.error('Failed to get user limits:', error);
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[67]++;
      return this.DEFAULT_LIMITS;
    }
  }
  async getUserPaymentAttempts(userId) {
    /* istanbul ignore next */
    cov_2pqjh01gw3().f[11]++;
    cov_2pqjh01gw3().s[68]++;
    try {
      const attempts =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[69]++, await (0, redis_1.getCache)(`payment_attempts:${userId}`));
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[70]++;
      return /* istanbul ignore next */(cov_2pqjh01gw3().b[12][0]++, attempts) ||
      /* istanbul ignore next */
      (cov_2pqjh01gw3().b[12][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[71]++;
      logger_1.logger.error('Failed to get user payment attempts:', error);
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[72]++;
      return [];
    }
  }
  async getDailySpending(userId) {
    /* istanbul ignore next */
    cov_2pqjh01gw3().f[12]++;
    cov_2pqjh01gw3().s[73]++;
    try {
      const dayAgo =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[74]++, new Date(Date.now() - 24 * 60 * 60 * 1000));
      const transactions =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[75]++, await Transaction_1.Transaction.find({
        userId,
        type: 'recharge',
        status: 'completed',
        createdAt: {
          $gte: dayAgo
        }
      }));
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[76]++;
      return transactions.reduce((sum, tx) => {
        /* istanbul ignore next */
        cov_2pqjh01gw3().f[13]++;
        cov_2pqjh01gw3().s[77]++;
        return sum + (
        /* istanbul ignore next */
        (cov_2pqjh01gw3().b[13][0]++, tx.amount) ||
        /* istanbul ignore next */
        (cov_2pqjh01gw3().b[13][1]++, 0));
      }, 0);
    } catch (error) {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[78]++;
      logger_1.logger.error('Failed to get daily spending:', error);
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[79]++;
      return 0;
    }
  }
  async enforceDailySpendingLimit(userId, amount) {
    /* istanbul ignore next */
    cov_2pqjh01gw3().f[14]++;
    cov_2pqjh01gw3().s[80]++;
    try {
      const dailySpending =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[81]++, await this.getDailySpending(userId));
      const limits =
      /* istanbul ignore next */
      (cov_2pqjh01gw3().s[82]++, await this.getUserLimits(userId));
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[83]++;
      return dailySpending + amount <= limits.maxAmountPerDay;
    } catch (error) {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[84]++;
      logger_1.logger.error('Failed to check daily spending limit:', error);
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[85]++;
      return true; // Fail open
    }
  }
  async logSuspiciousActivity(userId, amount, paymentMethod, reason) {
    /* istanbul ignore next */
    cov_2pqjh01gw3().f[15]++;
    cov_2pqjh01gw3().s[86]++;
    try {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[87]++;
      logger_1.logger.warn('Suspicious payment activity detected', {
        userId,
        amount,
        paymentMethod,
        reason,
        timestamp: new Date().toISOString(),
        ip: 'unknown' // Would be passed from request context
      });
      // In a real implementation, this would:
      // 1. Store in a fraud detection database
      // 2. Send alerts to security team
      // 3. Potentially flag the user for manual review
    } catch (error) {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[88]++;
      logger_1.logger.error('Failed to log suspicious activity:', error);
    }
  }
  getCurrency(paymentMethod) {
    /* istanbul ignore next */
    cov_2pqjh01gw3().f[16]++;
    cov_2pqjh01gw3().s[89]++;
    switch (paymentMethod) {
      case 'esewa':
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[14][0]++;
      case 'khalti':
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[14][1]++;
        cov_2pqjh01gw3().s[90]++;
        return 'NPR';
      case 'stripe':
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[14][2]++;
        cov_2pqjh01gw3().s[91]++;
        return 'USD';
      default:
        /* istanbul ignore next */
        cov_2pqjh01gw3().b[14][3]++;
        cov_2pqjh01gw3().s[92]++;
        return 'USD';
    }
  }
  // Admin methods for managing limits
  async setUserLimits(userId, limits) {
    /* istanbul ignore next */
    cov_2pqjh01gw3().f[17]++;
    cov_2pqjh01gw3().s[93]++;
    try {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[94]++;
      await (0, redis_1.setCache)(`user_limits:${userId}`, limits, this.CACHE_TTL);
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[95]++;
      logger_1.logger.info(`Custom payment limits set for user ${userId}`, limits);
    } catch (error) {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[96]++;
      logger_1.logger.error('Failed to set user limits:', error);
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[97]++;
      throw error;
    }
  }
  async resetUserAttempts(userId) {
    /* istanbul ignore next */
    cov_2pqjh01gw3().f[18]++;
    cov_2pqjh01gw3().s[98]++;
    try {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[99]++;
      await (0, redis_1.setCache)(`payment_attempts:${userId}`, [], this.CACHE_TTL);
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[100]++;
      logger_1.logger.info(`Payment attempts reset for user ${userId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[101]++;
      logger_1.logger.error('Failed to reset user attempts:', error);
      /* istanbul ignore next */
      cov_2pqjh01gw3().s[102]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_2pqjh01gw3().s[103]++;
exports.paymentVelocityService = new PaymentVelocityService();