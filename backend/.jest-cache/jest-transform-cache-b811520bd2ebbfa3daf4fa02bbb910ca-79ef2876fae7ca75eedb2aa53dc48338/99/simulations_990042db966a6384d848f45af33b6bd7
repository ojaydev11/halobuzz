906d2f5994358a85dba373a4e89ddb4c
"use strict";

/* istanbul ignore next */
function cov_1qxmivpssv() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\analytics\\services\\simulations.ts";
  var hash = "95087519ef0425a5f9f9bb2e64f5139a1ae81bf4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\analytics\\services\\simulations.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 47
        }
      },
      "3": {
        start: {
          line: 5,
          column: 28
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "4": {
        start: {
          line: 6,
          column: 30
        },
        end: {
          line: 6,
          column: 70
        }
      },
      "5": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "6": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 121
        }
      },
      "7": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "8": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 33,
          column: 13
        }
      },
      "9": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 88
        }
      },
      "10": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 26
        }
      },
      "11": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 87
        }
      },
      "12": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 26
        }
      },
      "13": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 79
        }
      },
      "14": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 26
        }
      },
      "15": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 84
        }
      },
      "16": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 30,
          column: 26
        }
      },
      "17": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 77
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "19": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 26
        }
      },
      "20": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 63
        }
      },
      "21": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 24
        }
      },
      "22": {
        start: {
          line: 47,
          column: 31
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "23": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "24": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 53
        }
      },
      "25": {
        start: {
          line: 53,
          column: 29
        },
        end: {
          line: 64,
          column: 10
        }
      },
      "26": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 70,
          column: 10
        }
      },
      "27": {
        start: {
          line: 76,
          column: 27
        },
        end: {
          line: 76,
          column: 60
        }
      },
      "28": {
        start: {
          line: 77,
          column: 29
        },
        end: {
          line: 77,
          column: 64
        }
      },
      "29": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 78,
          column: 47
        }
      },
      "30": {
        start: {
          line: 80,
          column: 34
        },
        end: {
          line: 80,
          column: 93
        }
      },
      "31": {
        start: {
          line: 81,
          column: 33
        },
        end: {
          line: 81,
          column: 77
        }
      },
      "32": {
        start: {
          line: 82,
          column: 33
        },
        end: {
          line: 87,
          column: 23
        }
      },
      "33": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 120,
          column: 10
        }
      },
      "34": {
        start: {
          line: 126,
          column: 28
        },
        end: {
          line: 126,
          column: 63
        }
      },
      "35": {
        start: {
          line: 127,
          column: 27
        },
        end: {
          line: 127,
          column: 60
        }
      },
      "36": {
        start: {
          line: 128,
          column: 28
        },
        end: {
          line: 128,
          column: 47
        }
      },
      "37": {
        start: {
          line: 130,
          column: 29
        },
        end: {
          line: 130,
          column: 63
        }
      },
      "38": {
        start: {
          line: 131,
          column: 30
        },
        end: {
          line: 131,
          column: 124
        }
      },
      "39": {
        start: {
          line: 132,
          column: 32
        },
        end: {
          line: 132,
          column: 74
        }
      },
      "40": {
        start: {
          line: 133,
          column: 33
        },
        end: {
          line: 138,
          column: 23
        }
      },
      "41": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 171,
          column: 10
        }
      },
      "42": {
        start: {
          line: 177,
          column: 29
        },
        end: {
          line: 177,
          column: 64
        }
      },
      "43": {
        start: {
          line: 178,
          column: 27
        },
        end: {
          line: 178,
          column: 64
        }
      },
      "44": {
        start: {
          line: 179,
          column: 31
        },
        end: {
          line: 179,
          column: 69
        }
      },
      "45": {
        start: {
          line: 180,
          column: 28
        },
        end: {
          line: 180,
          column: 47
        }
      },
      "46": {
        start: {
          line: 182,
          column: 32
        },
        end: {
          line: 182,
          column: 96
        }
      },
      "47": {
        start: {
          line: 183,
          column: 33
        },
        end: {
          line: 183,
          column: 79
        }
      },
      "48": {
        start: {
          line: 184,
          column: 33
        },
        end: {
          line: 189,
          column: 23
        }
      },
      "49": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 222,
          column: 10
        }
      },
      "50": {
        start: {
          line: 228,
          column: 26
        },
        end: {
          line: 228,
          column: 58
        }
      },
      "51": {
        start: {
          line: 229,
          column: 29
        },
        end: {
          line: 229,
          column: 64
        }
      },
      "52": {
        start: {
          line: 230,
          column: 33
        },
        end: {
          line: 230,
          column: 70
        }
      },
      "53": {
        start: {
          line: 231,
          column: 28
        },
        end: {
          line: 231,
          column: 47
        }
      },
      "54": {
        start: {
          line: 233,
          column: 34
        },
        end: {
          line: 233,
          column: 89
        }
      },
      "55": {
        start: {
          line: 234,
          column: 33
        },
        end: {
          line: 234,
          column: 76
        }
      },
      "56": {
        start: {
          line: 235,
          column: 33
        },
        end: {
          line: 240,
          column: 23
        }
      },
      "57": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 273,
          column: 10
        }
      },
      "58": {
        start: {
          line: 279,
          column: 28
        },
        end: {
          line: 279,
          column: 30
        }
      },
      "59": {
        start: {
          line: 280,
          column: 26
        },
        end: {
          line: 280,
          column: 36
        }
      },
      "60": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "61": {
        start: {
          line: 281,
          column: 21
        },
        end: {
          line: 281,
          column: 22
        }
      },
      "62": {
        start: {
          line: 282,
          column: 25
        },
        end: {
          line: 282,
          column: 80
        }
      },
      "63": {
        start: {
          line: 284,
          column: 34
        },
        end: {
          line: 284,
          column: 83
        }
      },
      "64": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 291,
          column: 15
        }
      },
      "65": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 27
        }
      },
      "66": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "67": {
        start: {
          line: 300,
          column: 31
        },
        end: {
          line: 312,
          column: 14
        }
      },
      "68": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 36
        }
      },
      "69": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 96
        }
      },
      "70": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 71
        }
      },
      "71": {
        start: {
          line: 322,
          column: 0
        },
        end: {
          line: 322,
          column: 44
        }
      },
      "72": {
        start: {
          line: 323,
          column: 0
        },
        end: {
          line: 323,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 33
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 35
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 46
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 58
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 75
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 57
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 125
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 49
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 176
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        loc: {
          start: {
            line: 227,
            column: 54
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 227
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        loc: {
          start: {
            line: 278,
            column: 65
          },
          end: {
            line: 294,
            column: 5
          }
        },
        line: 278
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        loc: {
          start: {
            line: 298,
            column: 33
          },
          end: {
            line: 320,
            column: 5
          }
        },
        line: 298
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 26
          }
        }, {
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 24,
            column: 26
          }
        }, {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 27,
            column: 26
          }
        }, {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 30,
            column: 26
          }
        }, {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 32,
            column: 77
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 28
          }
        }, {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 57
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 15
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 15
          },
          end: {
            line: 65,
            column: 30
          }
        }, {
          start: {
            line: 65,
            column: 34
          },
          end: {
            line: 70,
            column: 9
          }
        }],
        line: 65
      },
      "4": {
        loc: {
          start: {
            line: 76,
            column: 27
          },
          end: {
            line: 76,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 27
          },
          end: {
            line: 76,
            column: 53
          }
        }, {
          start: {
            line: 76,
            column: 57
          },
          end: {
            line: 76,
            column: 60
          }
        }],
        line: 76
      },
      "5": {
        loc: {
          start: {
            line: 77,
            column: 29
          },
          end: {
            line: 77,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 29
          },
          end: {
            line: 77,
            column: 57
          }
        }, {
          start: {
            line: 77,
            column: 61
          },
          end: {
            line: 77,
            column: 64
          }
        }],
        line: 77
      },
      "6": {
        loc: {
          start: {
            line: 91,
            column: 21
          },
          end: {
            line: 91,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 21
          },
          end: {
            line: 91,
            column: 36
          }
        }, {
          start: {
            line: 91,
            column: 40
          },
          end: {
            line: 91,
            column: 42
          }
        }],
        line: 91
      },
      "7": {
        loc: {
          start: {
            line: 126,
            column: 28
          },
          end: {
            line: 126,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 28
          },
          end: {
            line: 126,
            column: 55
          }
        }, {
          start: {
            line: 126,
            column: 59
          },
          end: {
            line: 126,
            column: 63
          }
        }],
        line: 126
      },
      "8": {
        loc: {
          start: {
            line: 127,
            column: 27
          },
          end: {
            line: 127,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 27
          },
          end: {
            line: 127,
            column: 53
          }
        }, {
          start: {
            line: 127,
            column: 57
          },
          end: {
            line: 127,
            column: 60
          }
        }],
        line: 127
      },
      "9": {
        loc: {
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 142,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 142,
            column: 36
          }
        }, {
          start: {
            line: 142,
            column: 40
          },
          end: {
            line: 142,
            column: 42
          }
        }],
        line: 142
      },
      "10": {
        loc: {
          start: {
            line: 177,
            column: 29
          },
          end: {
            line: 177,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 29
          },
          end: {
            line: 177,
            column: 57
          }
        }, {
          start: {
            line: 177,
            column: 61
          },
          end: {
            line: 177,
            column: 64
          }
        }],
        line: 177
      },
      "11": {
        loc: {
          start: {
            line: 178,
            column: 27
          },
          end: {
            line: 178,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 27
          },
          end: {
            line: 178,
            column: 53
          }
        }, {
          start: {
            line: 178,
            column: 57
          },
          end: {
            line: 178,
            column: 64
          }
        }],
        line: 178
      },
      "12": {
        loc: {
          start: {
            line: 179,
            column: 31
          },
          end: {
            line: 179,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 31
          },
          end: {
            line: 179,
            column: 61
          }
        }, {
          start: {
            line: 179,
            column: 65
          },
          end: {
            line: 179,
            column: 69
          }
        }],
        line: 179
      },
      "13": {
        loc: {
          start: {
            line: 193,
            column: 21
          },
          end: {
            line: 193,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 21
          },
          end: {
            line: 193,
            column: 36
          }
        }, {
          start: {
            line: 193,
            column: 40
          },
          end: {
            line: 193,
            column: 42
          }
        }],
        line: 193
      },
      "14": {
        loc: {
          start: {
            line: 228,
            column: 26
          },
          end: {
            line: 228,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 26
          },
          end: {
            line: 228,
            column: 51
          }
        }, {
          start: {
            line: 228,
            column: 55
          },
          end: {
            line: 228,
            column: 58
          }
        }],
        line: 228
      },
      "15": {
        loc: {
          start: {
            line: 229,
            column: 29
          },
          end: {
            line: 229,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 29
          },
          end: {
            line: 229,
            column: 57
          }
        }, {
          start: {
            line: 229,
            column: 61
          },
          end: {
            line: 229,
            column: 64
          }
        }],
        line: 229
      },
      "16": {
        loc: {
          start: {
            line: 230,
            column: 33
          },
          end: {
            line: 230,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 33
          },
          end: {
            line: 230,
            column: 65
          }
        }, {
          start: {
            line: 230,
            column: 69
          },
          end: {
            line: 230,
            column: 70
          }
        }],
        line: 230
      },
      "17": {
        loc: {
          start: {
            line: 244,
            column: 21
          },
          end: {
            line: 244,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 21
          },
          end: {
            line: 244,
            column: 36
          }
        }, {
          start: {
            line: 244,
            column: 40
          },
          end: {
            line: 244,
            column: 42
          }
        }],
        line: 244
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "95087519ef0425a5f9f9bb2e64f5139a1ae81bf4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qxmivpssv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qxmivpssv();
cov_1qxmivpssv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1qxmivpssv().s[1]++;
exports.SimulationEngine = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_1qxmivpssv().s[2]++, require("../../config/logger"));
const AnalyticsDailyKPI_1 =
/* istanbul ignore next */
(cov_1qxmivpssv().s[3]++, require("../models/AnalyticsDailyKPI"));
const AnalyticsSimulation_1 =
/* istanbul ignore next */
(cov_1qxmivpssv().s[4]++, require("../models/AnalyticsSimulation"));
class SimulationEngine {
  /**
   * Run a business simulation scenario
   */
  async runSimulation(request) {
    /* istanbul ignore next */
    cov_1qxmivpssv().f[0]++;
    cov_1qxmivpssv().s[5]++;
    try {
      /* istanbul ignore next */
      cov_1qxmivpssv().s[6]++;
      logger_1.logger.info('Running simulation', {
        scenario: request.scenario,
        horizonDays: request.horizonDays
      });
      // Get baseline data
      const baseline =
      /* istanbul ignore next */
      (cov_1qxmivpssv().s[7]++, await this.getBaselineData(request.segment));
      // Run scenario-specific simulation
      let result;
      /* istanbul ignore next */
      cov_1qxmivpssv().s[8]++;
      switch (request.scenario) {
        case 'double_gift_multiplier':
          /* istanbul ignore next */
          cov_1qxmivpssv().b[0][0]++;
          cov_1qxmivpssv().s[9]++;
          result = await this.simulateDoubleGiftMultiplier(request, baseline);
          /* istanbul ignore next */
          cov_1qxmivpssv().s[10]++;
          break;
        case 'price_change_coin_pack':
          /* istanbul ignore next */
          cov_1qxmivpssv().b[0][1]++;
          cov_1qxmivpssv().s[11]++;
          result = await this.simulatePriceChangeCoinPack(request, baseline);
          /* istanbul ignore next */
          cov_1qxmivpssv().s[12]++;
          break;
        case 'og_tier_promo':
          /* istanbul ignore next */
          cov_1qxmivpssv().b[0][2]++;
          cov_1qxmivpssv().s[13]++;
          result = await this.simulateOGTierPromo(request, baseline);
          /* istanbul ignore next */
          cov_1qxmivpssv().s[14]++;
          break;
        case 'festival_skin_push':
          /* istanbul ignore next */
          cov_1qxmivpssv().b[0][3]++;
          cov_1qxmivpssv().s[15]++;
          result = await this.simulateFestivalSkinPush(request, baseline);
          /* istanbul ignore next */
          cov_1qxmivpssv().s[16]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1qxmivpssv().b[0][4]++;
          cov_1qxmivpssv().s[17]++;
          throw new Error(`Unknown scenario: ${request.scenario}`);
      }
      // Save simulation result
      /* istanbul ignore next */
      cov_1qxmivpssv().s[18]++;
      await this.saveSimulation(result);
      /* istanbul ignore next */
      cov_1qxmivpssv().s[19]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_1qxmivpssv().s[20]++;
      logger_1.logger.error('Simulation failed:', error);
      /* istanbul ignore next */
      cov_1qxmivpssv().s[21]++;
      throw error;
    }
  }
  /**
   * Get baseline data for simulation
   */
  async getBaselineData(segment) {
    /* istanbul ignore next */
    cov_1qxmivpssv().f[1]++;
    const matchCondition =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[22]++, {
      date: {
        $gte: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)
      } // Last 30 days
    });
    /* istanbul ignore next */
    cov_1qxmivpssv().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[2][0]++, segment?.country) &&
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[2][1]++, segment.country !== 'ALL')) {
      /* istanbul ignore next */
      cov_1qxmivpssv().b[1][0]++;
      cov_1qxmivpssv().s[24]++;
      matchCondition.country = segment.country;
    } else
    /* istanbul ignore next */
    {
      cov_1qxmivpssv().b[1][1]++;
    }
    const baselineData =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[25]++, await AnalyticsDailyKPI_1.AnalyticsDailyKPI.aggregate([{
      $match: matchCondition
    }, {
      $group: {
        _id: null,
        avgRevenue: {
          $avg: '$revenue.total'
        },
        avgPayerRate: {
          $avg: '$monetization.payerRate'
        },
        avgARPPU: {
          $avg: '$monetization.arppu'
        },
        avgEngagement: {
          $avg: '$engagement.dau'
        }
      }
    }]));
    /* istanbul ignore next */
    cov_1qxmivpssv().s[26]++;
    return /* istanbul ignore next */(cov_1qxmivpssv().b[3][0]++, baselineData[0]) ||
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[3][1]++, {
      avgRevenue: 4000,
      avgPayerRate: 6.5,
      avgARPPU: 120,
      avgEngagement: 15000
    });
  }
  /**
   * Simulate double gift multiplier scenario
   */
  async simulateDoubleGiftMultiplier(request, baseline) {
    /* istanbul ignore next */
    cov_1qxmivpssv().f[2]++;
    const multiplier =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[27]++,
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[4][0]++, request.params?.multiplier) ||
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[4][1]++, 2.0));
    const adoptionRate =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[28]++,
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[5][0]++, request.params?.adoptionRate) ||
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[5][1]++, 0.3)); // 30% adoption
    const horizonDays =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[29]++, request.horizonDays);
    // Calculate impact
    const giftRevenueImpact =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[30]++, baseline.avgRevenue * 0.4 * adoptionRate * (multiplier - 1)); // 40% of revenue from gifts
    const engagementImpact =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[31]++, baseline.avgEngagement * adoptionRate * 0.15); // 15% engagement boost
    const dailyProjections =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[32]++, this.generateDailyProjections(baseline, {
      revenue: giftRevenueImpact,
      payerRate: 0,
      // No direct impact on payer rate
      arppu: giftRevenueImpact / baseline.avgEngagement * 100,
      // ARPPU increase
      engagement: engagementImpact
    }, horizonDays));
    /* istanbul ignore next */
    cov_1qxmivpssv().s[33]++;
    return {
      scenario: 'double_gift_multiplier',
      params: {
        multiplier,
        adoptionRate
      },
      segment:
      /* istanbul ignore next */
      (cov_1qxmivpssv().b[6][0]++, request.segment) ||
      /* istanbul ignore next */
      (cov_1qxmivpssv().b[6][1]++, {}),
      horizonDays,
      baseline: {
        revenue: baseline.avgRevenue,
        payerRate: baseline.avgPayerRate,
        arppu: baseline.avgARPPU,
        engagement: baseline.avgEngagement
      },
      projected: {
        revenue: baseline.avgRevenue + giftRevenueImpact,
        payerRate: baseline.avgPayerRate,
        arppu: baseline.avgARPPU + giftRevenueImpact / baseline.avgEngagement * 100,
        engagement: baseline.avgEngagement + engagementImpact
      },
      delta: {
        revenue: giftRevenueImpact,
        payerRate: 0,
        arppu: giftRevenueImpact / baseline.avgEngagement * 100,
        engagement: engagementImpact
      },
      dailyProjections,
      confidence: 75,
      assumptions: [`${adoptionRate * 100}% of users adopt the double gift multiplier`, `Gift revenue represents 40% of total revenue`, `Engagement increases by 15% for adopting users`, `No impact on payer conversion rate`],
      generatedAt: new Date()
    };
  }
  /**
   * Simulate price change for coin packs
   */
  async simulatePriceChangeCoinPack(request, baseline) {
    /* istanbul ignore next */
    cov_1qxmivpssv().f[3]++;
    const priceChange =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[34]++,
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[7][0]++, request.params?.priceChange) ||
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[7][1]++, -0.2)); // 20% price reduction
    const elasticity =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[35]++,
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[8][0]++, request.params?.elasticity) ||
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[8][1]++, 1.5)); // Price elasticity
    const horizonDays =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[36]++, request.horizonDays);
    // Calculate impact based on price elasticity
    const volumeChange =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[37]++, Math.abs(priceChange) * elasticity);
    const revenueImpact =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[38]++, baseline.avgRevenue * 0.3 * (1 + priceChange) * (1 + volumeChange) - baseline.avgRevenue * 0.3); // 30% of revenue from coin packs
    const payerRateImpact =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[39]++, baseline.avgPayerRate * volumeChange * 0.5); // 50% of volume change affects payer rate
    const dailyProjections =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[40]++, this.generateDailyProjections(baseline, {
      revenue: revenueImpact,
      payerRate: payerRateImpact,
      arppu: revenueImpact / baseline.avgEngagement * 100,
      engagement: baseline.avgEngagement * volumeChange * 0.1 // 10% engagement boost from lower prices
    }, horizonDays));
    /* istanbul ignore next */
    cov_1qxmivpssv().s[41]++;
    return {
      scenario: 'price_change_coin_pack',
      params: {
        priceChange,
        elasticity
      },
      segment:
      /* istanbul ignore next */
      (cov_1qxmivpssv().b[9][0]++, request.segment) ||
      /* istanbul ignore next */
      (cov_1qxmivpssv().b[9][1]++, {}),
      horizonDays,
      baseline: {
        revenue: baseline.avgRevenue,
        payerRate: baseline.avgPayerRate,
        arppu: baseline.avgARPPU,
        engagement: baseline.avgEngagement
      },
      projected: {
        revenue: baseline.avgRevenue + revenueImpact,
        payerRate: baseline.avgPayerRate + payerRateImpact,
        arppu: baseline.avgARPPU + revenueImpact / baseline.avgEngagement * 100,
        engagement: baseline.avgEngagement + baseline.avgEngagement * volumeChange * 0.1
      },
      delta: {
        revenue: revenueImpact,
        payerRate: payerRateImpact,
        arppu: revenueImpact / baseline.avgEngagement * 100,
        engagement: baseline.avgEngagement * volumeChange * 0.1
      },
      dailyProjections,
      confidence: 80,
      assumptions: [`Price elasticity of ${elasticity} for coin pack purchases`, `Coin pack revenue represents 30% of total revenue`, `Volume increase of ${(volumeChange * 100).toFixed(1)}% due to price change`, `Payer rate increases proportionally with volume`],
      generatedAt: new Date()
    };
  }
  /**
   * Simulate OG tier promotion
   */
  async simulateOGTierPromo(request, baseline) {
    /* istanbul ignore next */
    cov_1qxmivpssv().f[4]++;
    const discountRate =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[42]++,
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[10][0]++, request.params?.discountRate) ||
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[10][1]++, 0.3)); // 30% discount
    const targetTier =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[43]++,
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[11][0]++, request.params?.targetTier) ||
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[11][1]++, 'tier3'));
    const conversionRate =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[44]++,
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[12][0]++, request.params?.conversionRate) ||
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[12][1]++, 0.15)); // 15% conversion
    const horizonDays =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[45]++, request.horizonDays);
    // Calculate impact
    const ogRevenueImpact =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[46]++, baseline.avgRevenue * 0.25 * conversionRate * (1 - discountRate)); // 25% of revenue from OG tiers
    const engagementImpact =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[47]++, baseline.avgEngagement * conversionRate * 0.25); // 25% engagement boost for new OG users
    const dailyProjections =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[48]++, this.generateDailyProjections(baseline, {
      revenue: ogRevenueImpact,
      payerRate: baseline.avgPayerRate * conversionRate * 0.3,
      // 30% of conversions become payers
      arppu: ogRevenueImpact / baseline.avgEngagement * 100,
      engagement: engagementImpact
    }, horizonDays));
    /* istanbul ignore next */
    cov_1qxmivpssv().s[49]++;
    return {
      scenario: 'og_tier_promo',
      params: {
        discountRate,
        targetTier,
        conversionRate
      },
      segment:
      /* istanbul ignore next */
      (cov_1qxmivpssv().b[13][0]++, request.segment) ||
      /* istanbul ignore next */
      (cov_1qxmivpssv().b[13][1]++, {}),
      horizonDays,
      baseline: {
        revenue: baseline.avgRevenue,
        payerRate: baseline.avgPayerRate,
        arppu: baseline.avgARPPU,
        engagement: baseline.avgEngagement
      },
      projected: {
        revenue: baseline.avgRevenue + ogRevenueImpact,
        payerRate: baseline.avgPayerRate + baseline.avgPayerRate * conversionRate * 0.3,
        arppu: baseline.avgARPPU + ogRevenueImpact / baseline.avgEngagement * 100,
        engagement: baseline.avgEngagement + engagementImpact
      },
      delta: {
        revenue: ogRevenueImpact,
        payerRate: baseline.avgPayerRate * conversionRate * 0.3,
        arppu: ogRevenueImpact / baseline.avgEngagement * 100,
        engagement: engagementImpact
      },
      dailyProjections,
      confidence: 70,
      assumptions: [`${conversionRate * 100}% of eligible users convert to ${targetTier}`, `OG tier revenue represents 25% of total revenue`, `30% of conversions become new payers`, `New OG users show 25% higher engagement`],
      generatedAt: new Date()
    };
  }
  /**
   * Simulate festival skin push
   */
  async simulateFestivalSkinPush(request, baseline) {
    /* istanbul ignore next */
    cov_1qxmivpssv().f[5]++;
    const skinPrice =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[50]++,
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[14][0]++, request.params?.skinPrice) ||
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[14][1]++, 500)); // 500 coins per skin
    const adoptionRate =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[51]++,
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[15][0]++, request.params?.adoptionRate) ||
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[15][1]++, 0.2)); // 20% adoption
    const festivalDuration =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[52]++,
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[16][0]++, request.params?.festivalDuration) ||
    /* istanbul ignore next */
    (cov_1qxmivpssv().b[16][1]++, 7)); // 7 days
    const horizonDays =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[53]++, request.horizonDays);
    // Calculate impact
    const skinRevenueImpact =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[54]++, baseline.avgEngagement * adoptionRate * skinPrice * 0.1); // 10% of adopters buy skins
    const engagementImpact =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[55]++, baseline.avgEngagement * adoptionRate * 0.2); // 20% engagement boost during festival
    const dailyProjections =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[56]++, this.generateDailyProjections(baseline, {
      revenue: skinRevenueImpact,
      payerRate: baseline.avgPayerRate * adoptionRate * 0.2,
      // 20% of adopters become payers
      arppu: skinRevenueImpact / baseline.avgEngagement * 100,
      engagement: engagementImpact
    }, horizonDays));
    /* istanbul ignore next */
    cov_1qxmivpssv().s[57]++;
    return {
      scenario: 'festival_skin_push',
      params: {
        skinPrice,
        adoptionRate,
        festivalDuration
      },
      segment:
      /* istanbul ignore next */
      (cov_1qxmivpssv().b[17][0]++, request.segment) ||
      /* istanbul ignore next */
      (cov_1qxmivpssv().b[17][1]++, {}),
      horizonDays,
      baseline: {
        revenue: baseline.avgRevenue,
        payerRate: baseline.avgPayerRate,
        arppu: baseline.avgARPPU,
        engagement: baseline.avgEngagement
      },
      projected: {
        revenue: baseline.avgRevenue + skinRevenueImpact,
        payerRate: baseline.avgPayerRate + baseline.avgPayerRate * adoptionRate * 0.2,
        arppu: baseline.avgARPPU + skinRevenueImpact / baseline.avgEngagement * 100,
        engagement: baseline.avgEngagement + engagementImpact
      },
      delta: {
        revenue: skinRevenueImpact,
        payerRate: baseline.avgPayerRate * adoptionRate * 0.2,
        arppu: skinRevenueImpact / baseline.avgEngagement * 100,
        engagement: engagementImpact
      },
      dailyProjections,
      confidence: 65,
      assumptions: [`${adoptionRate * 100}% of users adopt festival skins`, `Skin price of ${skinPrice} coins per skin`, `10% of adopters purchase skins`, `20% engagement boost during festival period`],
      generatedAt: new Date()
    };
  }
  /**
   * Generate daily projections for the simulation horizon
   */
  generateDailyProjections(baseline, dailyImpact, horizonDays) {
    /* istanbul ignore next */
    cov_1qxmivpssv().f[6]++;
    const projections =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[58]++, []);
    const startDate =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[59]++, new Date());
    /* istanbul ignore next */
    cov_1qxmivpssv().s[60]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1qxmivpssv().s[61]++, 0); i < horizonDays; i++) {
      const date =
      /* istanbul ignore next */
      (cov_1qxmivpssv().s[62]++, new Date(startDate.getTime() + i * 24 * 60 * 60 * 1000));
      // Apply gradual adoption curve (starts low, peaks mid-period, tapers off)
      const adoptionCurve =
      /* istanbul ignore next */
      (cov_1qxmivpssv().s[63]++, Math.sin(i / horizonDays * Math.PI) * 0.8 + 0.2);
      /* istanbul ignore next */
      cov_1qxmivpssv().s[64]++;
      projections.push({
        date: date.toISOString().split('T')[0],
        revenue: baseline.avgRevenue + dailyImpact.revenue * adoptionCurve,
        payerRate: baseline.avgPayerRate + dailyImpact.payerRate * adoptionCurve,
        arppu: baseline.avgARPPU + dailyImpact.arppu * adoptionCurve,
        engagement: baseline.avgEngagement + dailyImpact.engagement * adoptionCurve
      });
    }
    /* istanbul ignore next */
    cov_1qxmivpssv().s[65]++;
    return projections;
  }
  /**
   * Save simulation result to database
   */
  async saveSimulation(result) {
    /* istanbul ignore next */
    cov_1qxmivpssv().f[7]++;
    cov_1qxmivpssv().s[66]++;
    try {
      const simulation =
      /* istanbul ignore next */
      (cov_1qxmivpssv().s[67]++, new AnalyticsSimulation_1.AnalyticsSimulation({
        scenario: result.scenario,
        params: result.params,
        segment: result.segment,
        horizonDays: result.horizonDays,
        baseline: result.baseline,
        projected: result.projected,
        delta: result.delta,
        dailyProjections: result.dailyProjections,
        confidence: result.confidence,
        assumptions: result.assumptions,
        generatedAt: result.generatedAt
      }));
      /* istanbul ignore next */
      cov_1qxmivpssv().s[68]++;
      await simulation.save();
      /* istanbul ignore next */
      cov_1qxmivpssv().s[69]++;
      logger_1.logger.info('Simulation saved to database', {
        scenario: result.scenario
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1qxmivpssv().s[70]++;
      logger_1.logger.error('Failed to save simulation:', error);
      // Don't throw error, simulation can still be returned
    }
  }
}
/* istanbul ignore next */
cov_1qxmivpssv().s[71]++;
exports.SimulationEngine = SimulationEngine;
/* istanbul ignore next */
cov_1qxmivpssv().s[72]++;
exports.default = SimulationEngine;