bea33d1c9b2d0e9fc389e7adda2e8762
"use strict";

/* istanbul ignore next */
function cov_24ay5fjo3m() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\creator-economy.ts";
  var hash = "2e22ec8d2eff97f9d984ebbb1fcded6d02d872e7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\creator-economy.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 32
        },
        end: {
          line: 8,
          column: 76
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 44
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "8": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 41,
          column: 3
        }
      },
      "9": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "10": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 69
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "12": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 23,
          column: 15
        }
      },
      "13": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 37
        }
      },
      "14": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 95
        }
      },
      "15": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "16": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 68
        }
      },
      "17": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "18": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 72,
          column: 3
        }
      },
      "19": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "20": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 69
        }
      },
      "21": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "22": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 54,
          column: 15
        }
      },
      "23": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 56,
          column: 37
        }
      },
      "24": {
        start: {
          line: 57,
          column: 22
        },
        end: {
          line: 57,
          column: 97
        }
      },
      "25": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "26": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 69
        }
      },
      "27": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "28": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 133,
          column: 3
        }
      },
      "29": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "30": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 69
        }
      },
      "31": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "32": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 109,
          column: 15
        }
      },
      "33": {
        start: {
          line: 111,
          column: 73
        },
        end: {
          line: 111,
          column: 81
        }
      },
      "34": {
        start: {
          line: 112,
          column: 33
        },
        end: {
          line: 118,
          column: 10
        }
      },
      "35": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "36": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 76
        }
      },
      "37": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "38": {
        start: {
          line: 135,
          column: 0
        },
        end: {
          line: 178,
          column: 3
        }
      },
      "39": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "40": {
        start: {
          line: 149,
          column: 23
        },
        end: {
          line: 149,
          column: 69
        }
      },
      "41": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "42": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 154,
          column: 15
        }
      },
      "43": {
        start: {
          line: 156,
          column: 52
        },
        end: {
          line: 156,
          column: 60
        }
      },
      "44": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 157,
          column: 135
        }
      },
      "45": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "46": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 162,
          column: 15
        }
      },
      "47": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 168,
          column: 15
        }
      },
      "48": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 80
        }
      },
      "49": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 176,
          column: 11
        }
      },
      "50": {
        start: {
          line: 180,
          column: 0
        },
        end: {
          line: 247,
          column: 3
        }
      },
      "51": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "52": {
        start: {
          line: 214,
          column: 23
        },
        end: {
          line: 214,
          column: 69
        }
      },
      "53": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "54": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 219,
          column: 15
        }
      },
      "55": {
        start: {
          line: 221,
          column: 117
        },
        end: {
          line: 221,
          column: 125
        }
      },
      "56": {
        start: {
          line: 222,
          column: 26
        },
        end: {
          line: 232,
          column: 10
        }
      },
      "57": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "58": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 69
        }
      },
      "59": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 245,
          column: 11
        }
      },
      "60": {
        start: {
          line: 249,
          column: 0
        },
        end: {
          line: 286,
          column: 3
        }
      },
      "61": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 285,
          column: 5
        }
      },
      "62": {
        start: {
          line: 257,
          column: 23
        },
        end: {
          line: 257,
          column: 69
        }
      },
      "63": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "64": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 262,
          column: 15
        }
      },
      "65": {
        start: {
          line: 264,
          column: 27
        },
        end: {
          line: 264,
          column: 35
        }
      },
      "66": {
        start: {
          line: 265,
          column: 24
        },
        end: {
          line: 265,
          column: 107
        }
      },
      "67": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "68": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 270,
          column: 15
        }
      },
      "69": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 276,
          column: 15
        }
      },
      "70": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 78
        }
      },
      "71": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 284,
          column: 11
        }
      },
      "72": {
        start: {
          line: 288,
          column: 0
        },
        end: {
          line: 319,
          column: 3
        }
      },
      "73": {
        start: {
          line: 294,
          column: 4
        },
        end: {
          line: 318,
          column: 5
        }
      },
      "74": {
        start: {
          line: 295,
          column: 23
        },
        end: {
          line: 295,
          column: 69
        }
      },
      "75": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "76": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 300,
          column: 15
        }
      },
      "77": {
        start: {
          line: 302,
          column: 31
        },
        end: {
          line: 302,
          column: 40
        }
      },
      "78": {
        start: {
          line: 303,
          column: 28
        },
        end: {
          line: 303,
          column: 118
        }
      },
      "79": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 310,
          column: 11
        }
      },
      "80": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 75
        }
      },
      "81": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 317,
          column: 11
        }
      },
      "82": {
        start: {
          line: 321,
          column: 0
        },
        end: {
          line: 338,
          column: 3
        }
      },
      "83": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 337,
          column: 5
        }
      },
      "84": {
        start: {
          line: 323,
          column: 29
        },
        end: {
          line: 323,
          column: 106
        }
      },
      "85": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 329,
          column: 11
        }
      },
      "86": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 78
        }
      },
      "87": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 336,
          column: 11
        }
      },
      "88": {
        start: {
          line: 340,
          column: 0
        },
        end: {
          line: 407,
          column: 3
        }
      },
      "89": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 406,
          column: 5
        }
      },
      "90": {
        start: {
          line: 343,
          column: 34
        },
        end: {
          line: 392,
          column: 9
        }
      },
      "91": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 398,
          column: 11
        }
      },
      "92": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 401,
          column: 74
        }
      },
      "93": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 405,
          column: 11
        }
      },
      "94": {
        start: {
          line: 409,
          column: 0
        },
        end: {
          line: 510,
          column: 3
        }
      },
      "95": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 509,
          column: 5
        }
      },
      "96": {
        start: {
          line: 415,
          column: 23
        },
        end: {
          line: 415,
          column: 69
        }
      },
      "97": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "98": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 420,
          column: 15
        }
      },
      "99": {
        start: {
          line: 422,
          column: 26
        },
        end: {
          line: 422,
          column: 36
        }
      },
      "100": {
        start: {
          line: 424,
          column: 29
        },
        end: {
          line: 487,
          column: 9
        }
      },
      "101": {
        start: {
          line: 488,
          column: 25
        },
        end: {
          line: 488,
          column: 54
        }
      },
      "102": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 494,
          column: 9
        }
      },
      "103": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 493,
          column: 15
        }
      },
      "104": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 501,
          column: 11
        }
      },
      "105": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 504,
          column: 69
        }
      },
      "106": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 508,
          column: 11
        }
      },
      "107": {
        start: {
          line: 511,
          column: 0
        },
        end: {
          line: 511,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 3
          },
          end: {
            line: 16,
            column: 4
          }
        },
        loc: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 3
          },
          end: {
            line: 47,
            column: 4
          }
        },
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 102,
            column: 3
          },
          end: {
            line: 102,
            column: 4
          }
        },
        loc: {
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 102
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 147,
            column: 3
          },
          end: {
            line: 147,
            column: 4
          }
        },
        loc: {
          start: {
            line: 147,
            column: 23
          },
          end: {
            line: 178,
            column: 1
          }
        },
        line: 147
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 212,
            column: 3
          },
          end: {
            line: 212,
            column: 4
          }
        },
        loc: {
          start: {
            line: 212,
            column: 23
          },
          end: {
            line: 247,
            column: 1
          }
        },
        line: 212
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 255,
            column: 3
          },
          end: {
            line: 255,
            column: 4
          }
        },
        loc: {
          start: {
            line: 255,
            column: 23
          },
          end: {
            line: 286,
            column: 1
          }
        },
        line: 255
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 293,
            column: 3
          },
          end: {
            line: 293,
            column: 4
          }
        },
        loc: {
          start: {
            line: 293,
            column: 23
          },
          end: {
            line: 319,
            column: 1
          }
        },
        line: 293
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 321,
            column: 32
          },
          end: {
            line: 321,
            column: 33
          }
        },
        loc: {
          start: {
            line: 321,
            column: 52
          },
          end: {
            line: 338,
            column: 1
          }
        },
        line: 321
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 340,
            column: 34
          },
          end: {
            line: 340,
            column: 35
          }
        },
        loc: {
          start: {
            line: 340,
            column: 54
          },
          end: {
            line: 407,
            column: 1
          }
        },
        line: 340
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 413,
            column: 3
          },
          end: {
            line: 413,
            column: 4
          }
        },
        loc: {
          start: {
            line: 413,
            column: 23
          },
          end: {
            line: 510,
            column: 1
          }
        },
        line: 413
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 130,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 130,
            column: 32
          }
        }, {
          start: {
            line: 130,
            column: 36
          },
          end: {
            line: 130,
            column: 72
          }
        }],
        line: 130
      },
      "7": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "8": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: 164,
            column: 13
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 158
      },
      "9": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "10": {
        loc: {
          start: {
            line: 244,
            column: 19
          },
          end: {
            line: 244,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 19
          },
          end: {
            line: 244,
            column: 32
          }
        }, {
          start: {
            line: 244,
            column: 36
          },
          end: {
            line: 244,
            column: 65
          }
        }],
        line: 244
      },
      "11": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "12": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        }, {
          start: {
            line: 272,
            column: 13
          },
          end: {
            line: 277,
            column: 9
          }
        }],
        line: 266
      },
      "13": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "14": {
        loc: {
          start: {
            line: 302,
            column: 16
          },
          end: {
            line: 302,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 302,
            column: 24
          },
          end: {
            line: 302,
            column: 26
          }
        }],
        line: 302
      },
      "15": {
        loc: {
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "16": {
        loc: {
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2e22ec8d2eff97f9d984ebbb1fcded6d02d872e7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24ay5fjo3m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24ay5fjo3m();
var __importDefault =
/* istanbul ignore next */
(cov_24ay5fjo3m().s[0]++,
/* istanbul ignore next */
(cov_24ay5fjo3m().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_24ay5fjo3m().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_24ay5fjo3m().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_24ay5fjo3m().f[0]++;
  cov_24ay5fjo3m().s[1]++;
  return /* istanbul ignore next */(cov_24ay5fjo3m().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_24ay5fjo3m().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_24ay5fjo3m().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_24ay5fjo3m().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_24ay5fjo3m().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_24ay5fjo3m().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_24ay5fjo3m().s[4]++, require("express-validator"));
const CreatorEconomyService_1 =
/* istanbul ignore next */
(cov_24ay5fjo3m().s[5]++, require("../services/CreatorEconomyService"));
const logger_1 =
/* istanbul ignore next */
(cov_24ay5fjo3m().s[6]++, require("../config/logger"));
const router =
/* istanbul ignore next */
(cov_24ay5fjo3m().s[7]++, express_1.default.Router());
// Get creator tier information
/* istanbul ignore next */
cov_24ay5fjo3m().s[8]++;
router.get('/tier/:userId', [(0, express_validator_1.query)('userId').isMongoId().withMessage('Valid user ID is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_24ay5fjo3m().f[1]++;
  cov_24ay5fjo3m().s[9]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[10]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[11]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[3][0]++;
      cov_24ay5fjo3m().s[12]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ay5fjo3m().b[3][1]++;
    }
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[13]++, req.params);
    const tier =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[14]++, await CreatorEconomyService_1.creatorEconomyService.getCreatorTier(userId));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[15]++;
    res.json({
      success: true,
      data: {
        tier
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[16]++;
    logger_1.logger.error('Failed to get creator tier:', error);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[17]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get creator tier'
    });
  }
});
// Get creator statistics
/* istanbul ignore next */
cov_24ay5fjo3m().s[18]++;
router.get('/stats/:userId', [(0, express_validator_1.query)('userId').isMongoId().withMessage('Valid user ID is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_24ay5fjo3m().f[2]++;
  cov_24ay5fjo3m().s[19]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[20]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[21]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[4][0]++;
      cov_24ay5fjo3m().s[22]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ay5fjo3m().b[4][1]++;
    }
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[23]++, req.params);
    const stats =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[24]++, await CreatorEconomyService_1.creatorEconomyService.getCreatorStats(userId));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[25]++;
    res.json({
      success: true,
      data: {
        stats
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[26]++;
    logger_1.logger.error('Failed to get creator stats:', error);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[27]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get creator stats'
    });
  }
});
// Create subscription tier
/* istanbul ignore next */
cov_24ay5fjo3m().s[28]++;
router.post('/subscription-tier', [(0, express_validator_1.body)('creatorId').isMongoId().withMessage('Valid creator ID is required'), (0, express_validator_1.body)('name').isString().trim().isLength({
  min: 1,
  max: 50
}).withMessage('Tier name is required (1-50 characters)'), (0, express_validator_1.body)('price').isNumeric().isFloat({
  min: 0.99,
  max: 999.99
}).withMessage('Price must be between $0.99 and $999.99'), (0, express_validator_1.body)('currency').isString().isLength({
  min: 3,
  max: 3
}).withMessage('Valid currency code is required'), (0, express_validator_1.body)('benefits').isArray().withMessage('Benefits must be an array'), (0, express_validator_1.body)('benefits.*').isString().trim().isLength({
  min: 1,
  max: 100
}).withMessage('Each benefit must be 1-100 characters'), (0, express_validator_1.body)('duration').isIn(['monthly', 'yearly']).withMessage('Duration must be monthly or yearly')], async (req, res) => {
  /* istanbul ignore next */
  cov_24ay5fjo3m().f[3]++;
  cov_24ay5fjo3m().s[29]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[30]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[31]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[5][0]++;
      cov_24ay5fjo3m().s[32]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ay5fjo3m().b[5][1]++;
    }
    const {
      creatorId,
      name,
      price,
      currency,
      benefits,
      duration
    } =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[33]++, req.body);
    const subscriptionTier =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[34]++, await CreatorEconomyService_1.creatorEconomyService.createSubscriptionTier(creatorId, {
      name,
      price,
      currency,
      benefits,
      duration
    }));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[35]++;
    res.status(201).json({
      success: true,
      data: {
        subscriptionTier
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[36]++;
    logger_1.logger.error('Failed to create subscription tier:', error);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[37]++;
    res.status(500).json({
      success: false,
      error:
      /* istanbul ignore next */
      (cov_24ay5fjo3m().b[6][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_24ay5fjo3m().b[6][1]++, 'Failed to create subscription tier')
    });
  }
});
// Process subscription payment
/* istanbul ignore next */
cov_24ay5fjo3m().s[38]++;
router.post('/subscription-payment', [(0, express_validator_1.body)('subscriberId').isMongoId().withMessage('Valid subscriber ID is required'), (0, express_validator_1.body)('creatorId').isMongoId().withMessage('Valid creator ID is required'), (0, express_validator_1.body)('tierId').isString().trim().isLength({
  min: 1
}).withMessage('Tier ID is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_24ay5fjo3m().f[4]++;
  cov_24ay5fjo3m().s[39]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[40]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[41]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[7][0]++;
      cov_24ay5fjo3m().s[42]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ay5fjo3m().b[7][1]++;
    }
    const {
      subscriberId,
      creatorId,
      tierId
    } =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[43]++, req.body);
    const success =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[44]++, await CreatorEconomyService_1.creatorEconomyService.processSubscriptionPayment(subscriberId, creatorId, tierId));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[45]++;
    if (success) {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[8][0]++;
      cov_24ay5fjo3m().s[46]++;
      res.json({
        success: true,
        message: 'Subscription payment processed successfully'
      });
    } else {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[8][1]++;
      cov_24ay5fjo3m().s[47]++;
      res.status(400).json({
        success: false,
        error: 'Failed to process subscription payment'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[48]++;
    logger_1.logger.error('Failed to process subscription payment:', error);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[49]++;
    res.status(500).json({
      success: false,
      error: 'Failed to process subscription payment'
    });
  }
});
// Create brand deal
/* istanbul ignore next */
cov_24ay5fjo3m().s[50]++;
router.post('/brand-deal', [(0, express_validator_1.body)('creatorId').isMongoId().withMessage('Valid creator ID is required'), (0, express_validator_1.body)('brandName').isString().trim().isLength({
  min: 1,
  max: 100
}).withMessage('Brand name is required (1-100 characters)'), (0, express_validator_1.body)('dealType').isIn(['sponsored_stream', 'product_placement', 'brand_ambassador']).withMessage('Valid deal type is required'), (0, express_validator_1.body)('amount').isNumeric().isFloat({
  min: 10,
  max: 1000000
}).withMessage('Amount must be between $10 and $1,000,000'), (0, express_validator_1.body)('currency').isString().isLength({
  min: 3,
  max: 3
}).withMessage('Valid currency code is required'), (0, express_validator_1.body)('startDate').isISO8601().withMessage('Valid start date is required'), (0, express_validator_1.body)('endDate').isISO8601().withMessage('Valid end date is required'), (0, express_validator_1.body)('requirements').isArray().withMessage('Requirements must be an array'), (0, express_validator_1.body)('deliverables').isArray().withMessage('Deliverables must be an array')], async (req, res) => {
  /* istanbul ignore next */
  cov_24ay5fjo3m().f[5]++;
  cov_24ay5fjo3m().s[51]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[52]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[53]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[9][0]++;
      cov_24ay5fjo3m().s[54]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ay5fjo3m().b[9][1]++;
    }
    const {
      creatorId,
      brandName,
      dealType,
      amount,
      currency,
      startDate,
      endDate,
      requirements,
      deliverables
    } =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[55]++, req.body);
    const brandDeal =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[56]++, await CreatorEconomyService_1.creatorEconomyService.createBrandDeal({
      creatorId,
      brandName,
      dealType,
      amount,
      currency,
      startDate: new Date(startDate),
      endDate: new Date(endDate),
      requirements,
      deliverables
    }));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[57]++;
    res.status(201).json({
      success: true,
      data: {
        brandDeal
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[58]++;
    logger_1.logger.error('Failed to create brand deal:', error);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[59]++;
    res.status(500).json({
      success: false,
      error:
      /* istanbul ignore next */
      (cov_24ay5fjo3m().b[10][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_24ay5fjo3m().b[10][1]++, 'Failed to create brand deal')
    });
  }
});
// Process brand deal payment
/* istanbul ignore next */
cov_24ay5fjo3m().s[60]++;
router.post('/brand-deal-payment', [(0, express_validator_1.body)('dealId').isString().trim().isLength({
  min: 1
}).withMessage('Deal ID is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_24ay5fjo3m().f[6]++;
  cov_24ay5fjo3m().s[61]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[62]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[63]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[11][0]++;
      cov_24ay5fjo3m().s[64]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ay5fjo3m().b[11][1]++;
    }
    const {
      dealId
    } =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[65]++, req.body);
    const success =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[66]++, await CreatorEconomyService_1.creatorEconomyService.processBrandDealPayment(dealId));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[67]++;
    if (success) {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[12][0]++;
      cov_24ay5fjo3m().s[68]++;
      res.json({
        success: true,
        message: 'Brand deal payment processed successfully'
      });
    } else {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[12][1]++;
      cov_24ay5fjo3m().s[69]++;
      res.status(400).json({
        success: false,
        error: 'Failed to process brand deal payment'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[70]++;
    logger_1.logger.error('Failed to process brand deal payment:', error);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[71]++;
    res.status(500).json({
      success: false,
      error: 'Failed to process brand deal payment'
    });
  }
});
// Get creator leaderboard
/* istanbul ignore next */
cov_24ay5fjo3m().s[72]++;
router.get('/leaderboard', [(0, express_validator_1.query)('limit').optional().isInt({
  min: 1,
  max: 100
}).withMessage('Limit must be between 1 and 100')], async (req, res) => {
  /* istanbul ignore next */
  cov_24ay5fjo3m().f[7]++;
  cov_24ay5fjo3m().s[73]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[74]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[75]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[13][0]++;
      cov_24ay5fjo3m().s[76]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ay5fjo3m().b[13][1]++;
    }
    const {
      limit =
      /* istanbul ignore next */
      (cov_24ay5fjo3m().b[14][0]++, 10)
    } =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[77]++, req.query);
    const leaderboard =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[78]++, await CreatorEconomyService_1.creatorEconomyService.getCreatorLeaderboard(parseInt(limit)));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[79]++;
    res.json({
      success: true,
      data: {
        leaderboard,
        total: leaderboard.length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[80]++;
    logger_1.logger.error('Failed to get creator leaderboard:', error);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[81]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get creator leaderboard'
    });
  }
});
// Get platform revenue statistics
/* istanbul ignore next */
cov_24ay5fjo3m().s[82]++;
router.get('/platform-revenue', async (req, res) => {
  /* istanbul ignore next */
  cov_24ay5fjo3m().f[8]++;
  cov_24ay5fjo3m().s[83]++;
  try {
    const revenueStats =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[84]++, await CreatorEconomyService_1.creatorEconomyService.getPlatformRevenueStats());
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[85]++;
    res.json({
      success: true,
      data: {
        revenueStats
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[86]++;
    logger_1.logger.error('Failed to get platform revenue stats:', error);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[87]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get platform revenue statistics'
    });
  }
});
// Get available subscription tiers
/* istanbul ignore next */
cov_24ay5fjo3m().s[88]++;
router.get('/subscription-tiers', async (req, res) => {
  /* istanbul ignore next */
  cov_24ay5fjo3m().f[9]++;
  cov_24ay5fjo3m().s[89]++;
  try {
    // In production, fetch from database
    const subscriptionTiers =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[90]++, [{
      id: 'basic',
      name: 'Supporter',
      price: 4.99,
      currency: 'USD',
      benefits: ['Exclusive content access', 'Supporter badge', 'Priority chat', 'Monthly Q&A session'],
      duration: 'monthly',
      creatorRevenue: 3.49,
      platformFee: 1.50
    }, {
      id: 'premium',
      name: 'VIP Supporter',
      price: 9.99,
      currency: 'USD',
      benefits: ['All Supporter benefits', 'VIP badge', 'Direct messaging', 'Custom content requests', 'Weekly live sessions'],
      duration: 'monthly',
      creatorRevenue: 6.99,
      platformFee: 3.00
    }, {
      id: 'ultimate',
      name: 'Ultimate Fan',
      price: 19.99,
      currency: 'USD',
      benefits: ['All VIP benefits', 'Ultimate badge', 'Personal shoutouts', 'Exclusive merchandise', 'Private group access', 'Monthly 1-on-1 call'],
      duration: 'monthly',
      creatorRevenue: 13.99,
      platformFee: 6.00
    }]);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[91]++;
    res.json({
      success: true,
      data: {
        subscriptionTiers
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[92]++;
    logger_1.logger.error('Failed to get subscription tiers:', error);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[93]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get subscription tiers'
    });
  }
});
// Get creator tier benefits
/* istanbul ignore next */
cov_24ay5fjo3m().s[94]++;
router.get('/tier-benefits/:level', [(0, express_validator_1.query)('level').isInt({
  min: 1,
  max: 5
}).withMessage('Tier level must be between 1 and 5')], async (req, res) => {
  /* istanbul ignore next */
  cov_24ay5fjo3m().f[10]++;
  cov_24ay5fjo3m().s[95]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[96]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[97]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[15][0]++;
      cov_24ay5fjo3m().s[98]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ay5fjo3m().b[15][1]++;
    }
    const {
      level
    } =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[99]++, req.params);
    // In production, fetch from database
    const tierBenefits =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[100]++, {
      1: {
        name: 'Rising Star',
        benefits: ['Basic analytics', 'Standard support', 'Gift receiving', 'Basic customization'],
        revenueShare: 70,
        platformFee: 30
      },
      2: {
        name: 'Popular Creator',
        benefits: ['Advanced analytics', 'Priority support', 'Custom badges', 'Early access to features', 'Creator tools'],
        revenueShare: 75,
        platformFee: 25
      },
      3: {
        name: 'Influencer',
        benefits: ['Premium analytics', 'Dedicated support', 'Brand partnership opportunities', 'Merchandise store', 'Subscription tiers', 'Advanced creator tools'],
        revenueShare: 80,
        platformFee: 20
      },
      4: {
        name: 'Superstar',
        benefits: ['Enterprise analytics', 'Personal account manager', 'Exclusive brand deals', 'Revenue sharing programs', 'Platform partnership', 'Custom features'],
        revenueShare: 85,
        platformFee: 15
      },
      5: {
        name: 'Legend',
        benefits: ['White-label solutions', 'Revenue sharing equity', 'Platform advisory role', 'Exclusive events', 'Custom integrations', 'Global expansion support'],
        revenueShare: 90,
        platformFee: 10
      }
    });
    const benefits =
    /* istanbul ignore next */
    (cov_24ay5fjo3m().s[101]++, tierBenefits[parseInt(level)]);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[102]++;
    if (!benefits) {
      /* istanbul ignore next */
      cov_24ay5fjo3m().b[16][0]++;
      cov_24ay5fjo3m().s[103]++;
      return res.status(404).json({
        success: false,
        error: 'Tier level not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ay5fjo3m().b[16][1]++;
    }
    cov_24ay5fjo3m().s[104]++;
    res.json({
      success: true,
      data: {
        level: parseInt(level),
        benefits
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[105]++;
    logger_1.logger.error('Failed to get tier benefits:', error);
    /* istanbul ignore next */
    cov_24ay5fjo3m().s[106]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get tier benefits'
    });
  }
});
/* istanbul ignore next */
cov_24ay5fjo3m().s[107]++;
exports.default = router;