6215695a16cca6d1a17b7adebcc4ef4d
"use strict";

// HaloBuzz Load Testing Suite
// Comprehensive load testing for scalability validation
/* istanbul ignore next */
function cov_1b9ipvx3qr() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\testing\\LoadTestRunner.ts";
  var hash = "58e711178a3ff4ac99e913e17d52c80499e3e049";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\testing\\LoadTestRunner.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "3": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 60
        }
      },
      "4": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "5": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 34
        }
      },
      "6": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "7": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 67
        }
      },
      "8": {
        start: {
          line: 13,
          column: 13
        },
        end: {
          line: 13,
          column: 43
        }
      },
      "9": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 161,
          column: 1
        }
      },
      "10": {
        start: {
          line: 162,
          column: 0
        },
        end: {
          line: 162,
          column: 46
        }
      },
      "11": {
        start: {
          line: 164,
          column: 13
        },
        end: {
          line: 164,
          column: 50
        }
      },
      "12": {
        start: {
          line: 165,
          column: 19
        },
        end: {
          line: 165,
          column: 28
        }
      },
      "13": {
        start: {
          line: 166,
          column: 18
        },
        end: {
          line: 166,
          column: 42
        }
      },
      "14": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 21
        }
      },
      "15": {
        start: {
          line: 168,
          column: 14
        },
        end: {
          line: 168,
          column: 16
        }
      },
      "16": {
        start: {
          line: 169,
          column: 23
        },
        end: {
          line: 169,
          column: 27
        }
      },
      "17": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 16
        }
      },
      "18": {
        start: {
          line: 175,
          column: 23
        },
        end: {
          line: 175,
          column: 56
        }
      },
      "19": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "20": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 77
        }
      },
      "21": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 40
        }
      },
      "22": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 40
        }
      },
      "23": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "24": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 60
        }
      },
      "25": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 30
        }
      },
      "26": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 52
        }
      },
      "27": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 52
        }
      },
      "28": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 48
        }
      },
      "29": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 61
        }
      },
      "30": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 67
        }
      },
      "31": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 56
        }
      },
      "32": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 72
        }
      },
      "33": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 63
        }
      },
      "34": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "35": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 42
        }
      },
      "36": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 50
        }
      },
      "37": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 66
        }
      },
      "38": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 33
        }
      },
      "39": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 47
        }
      },
      "40": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 72
        }
      },
      "41": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 58
        }
      },
      "42": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 36
        }
      },
      "43": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 58
        }
      },
      "44": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 33
        }
      },
      "45": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 24
        }
      },
      "46": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 35
        }
      },
      "47": {
        start: {
          line: 225,
          column: 31
        },
        end: {
          line: 225,
          column: 77
        }
      },
      "48": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "49": {
        start: {
          line: 226,
          column: 21
        },
        end: {
          line: 226,
          column: 22
        }
      },
      "50": {
        start: {
          line: 228,
          column: 29
        },
        end: {
          line: 228,
          column: 66
        }
      },
      "51": {
        start: {
          line: 229,
          column: 25
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "52": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 49
        }
      },
      "53": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 49
        }
      },
      "54": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "55": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 49
        }
      },
      "56": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 255,
          column: 13
        }
      },
      "57": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 254,
          column: 19
        }
      },
      "58": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 80
        }
      },
      "59": {
        start: {
          line: 261,
          column: 30
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "60": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 301,
          column: 13
        }
      },
      "61": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 102
        }
      },
      "62": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 267,
          column: 17
        }
      },
      "63": {
        start: {
          line: 266,
          column: 20
        },
        end: {
          line: 266,
          column: 51
        }
      },
      "64": {
        start: {
          line: 268,
          column: 34
        },
        end: {
          line: 268,
          column: 44
        }
      },
      "65": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 285,
          column: 17
        }
      },
      "66": {
        start: {
          line: 271,
          column: 24
        },
        end: {
          line: 271,
          column: 87
        }
      },
      "67": {
        start: {
          line: 272,
          column: 24
        },
        end: {
          line: 272,
          column: 30
        }
      },
      "68": {
        start: {
          line: 274,
          column: 24
        },
        end: {
          line: 274,
          column: 66
        }
      },
      "69": {
        start: {
          line: 275,
          column: 24
        },
        end: {
          line: 275,
          column: 30
        }
      },
      "70": {
        start: {
          line: 277,
          column: 24
        },
        end: {
          line: 277,
          column: 63
        }
      },
      "71": {
        start: {
          line: 278,
          column: 24
        },
        end: {
          line: 278,
          column: 30
        }
      },
      "72": {
        start: {
          line: 280,
          column: 24
        },
        end: {
          line: 280,
          column: 56
        }
      },
      "73": {
        start: {
          line: 281,
          column: 24
        },
        end: {
          line: 281,
          column: 30
        }
      },
      "74": {
        start: {
          line: 284,
          column: 24
        },
        end: {
          line: 284,
          column: 30
        }
      },
      "75": {
        start: {
          line: 286,
          column: 37
        },
        end: {
          line: 286,
          column: 59
        }
      },
      "76": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 287,
          column: 54
        }
      },
      "77": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 37
        }
      },
      "78": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 289,
          column: 49
        }
      },
      "79": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 290,
          column: 100
        }
      },
      "80": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 69
        }
      },
      "81": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 299,
          column: 19
        }
      },
      "82": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 300,
          column: 97
        }
      },
      "83": {
        start: {
          line: 304,
          column: 28
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "84": {
        start: {
          line: 305,
          column: 29
        },
        end: {
          line: 305,
          column: 42
        }
      },
      "85": {
        start: {
          line: 306,
          column: 28
        },
        end: {
          line: 306,
          column: 29
        }
      },
      "86": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 319,
          column: 13
        }
      },
      "87": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 312,
          column: 17
        }
      },
      "88": {
        start: {
          line: 308,
          column: 29
        },
        end: {
          line: 308,
          column: 30
        }
      },
      "89": {
        start: {
          line: 309,
          column: 20
        },
        end: {
          line: 309,
          column: 48
        }
      },
      "90": {
        start: {
          line: 310,
          column: 20
        },
        end: {
          line: 310,
          column: 61
        }
      },
      "91": {
        start: {
          line: 311,
          column: 20
        },
        end: {
          line: 311,
          column: 40
        }
      },
      "92": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 313,
          column: 28
        }
      },
      "93": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 314,
          column: 44
        }
      },
      "94": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 318,
          column: 17
        }
      },
      "95": {
        start: {
          line: 317,
          column: 20
        },
        end: {
          line: 317,
          column: 26
        }
      },
      "96": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "97": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 48
        }
      },
      "98": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 34
        }
      },
      "99": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 330,
          column: 11
        }
      },
      "100": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 73
        }
      },
      "101": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 34
        }
      },
      "102": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 369,
          column: 11
        }
      },
      "103": {
        start: {
          line: 335,
          column: 26
        },
        end: {
          line: 337,
          column: 23
        }
      },
      "104": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 56
        }
      },
      "105": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 368,
          column: 13
        }
      },
      "106": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 61
        }
      },
      "107": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 344,
          column: 19
        }
      },
      "108": {
        start: {
          line: 341,
          column: 20
        },
        end: {
          line: 341,
          column: 40
        }
      },
      "109": {
        start: {
          line: 342,
          column: 20
        },
        end: {
          line: 342,
          column: 61
        }
      },
      "110": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 343,
          column: 30
        }
      },
      "111": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 349,
          column: 19
        }
      },
      "112": {
        start: {
          line: 346,
          column: 20
        },
        end: {
          line: 346,
          column: 40
        }
      },
      "113": {
        start: {
          line: 347,
          column: 20
        },
        end: {
          line: 347,
          column: 57
        }
      },
      "114": {
        start: {
          line: 348,
          column: 20
        },
        end: {
          line: 348,
          column: 34
        }
      },
      "115": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 359,
          column: 19
        }
      },
      "116": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 358,
          column: 21
        }
      },
      "117": {
        start: {
          line: 353,
          column: 40
        },
        end: {
          line: 353,
          column: 67
        }
      },
      "118": {
        start: {
          line: 354,
          column: 24
        },
        end: {
          line: 354,
          column: 62
        }
      },
      "119": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 362,
          column: 19
        }
      },
      "120": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 365,
          column: 36
        }
      },
      "121": {
        start: {
          line: 366,
          column: 16
        },
        end: {
          line: 366,
          column: 53
        }
      },
      "122": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 367,
          column: 30
        }
      },
      "123": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 375,
          column: 9
        }
      },
      "124": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 374,
          column: 55
        }
      },
      "125": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 390,
          column: 11
        }
      },
      "126": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 389,
          column: 13
        }
      },
      "127": {
        start: {
          line: 378,
          column: 32
        },
        end: {
          line: 383,
          column: 18
        }
      },
      "128": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 45
        }
      },
      "129": {
        start: {
          line: 387,
          column: 16
        },
        end: {
          line: 387,
          column: 50
        }
      },
      "130": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 388,
          column: 30
        }
      },
      "131": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 397,
          column: 9
        }
      },
      "132": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 35
        }
      },
      "133": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 39
        }
      },
      "134": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 410,
          column: 9
        }
      },
      "135": {
        start: {
          line: 405,
          column: 13
        },
        end: {
          line: 410,
          column: 9
        }
      },
      "136": {
        start: {
          line: 408,
          column: 13
        },
        end: {
          line: 410,
          column: 9
        }
      },
      "137": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 409,
          column: 63
        }
      },
      "138": {
        start: {
          line: 414,
          column: 23
        },
        end: {
          line: 414,
          column: 42
        }
      },
      "139": {
        start: {
          line: 415,
          column: 31
        },
        end: {
          line: 415,
          column: 32
        }
      },
      "140": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "141": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 48
        }
      },
      "142": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 420,
          column: 13
        }
      },
      "143": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 419,
          column: 32
        }
      },
      "144": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 47
        }
      },
      "145": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 428,
          column: 17
        }
      },
      "146": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 427,
          column: 34
        }
      },
      "147": {
        start: {
          line: 432,
          column: 28
        },
        end: {
          line: 432,
          column: 49
        }
      },
      "148": {
        start: {
          line: 433,
          column: 25
        },
        end: {
          line: 433,
          column: 43
        }
      },
      "149": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 435,
          column: 110
        }
      },
      "150": {
        start: {
          line: 437,
          column: 33
        },
        end: {
          line: 439,
          column: 34
        }
      },
      "151": {
        start: {
          line: 438,
          column: 29
        },
        end: {
          line: 438,
          column: 47
        }
      },
      "152": {
        start: {
          line: 439,
          column: 28
        },
        end: {
          line: 439,
          column: 33
        }
      },
      "153": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "154": {
        start: {
          line: 441,
          column: 29
        },
        end: {
          line: 441,
          column: 71
        }
      },
      "155": {
        start: {
          line: 442,
          column: 29
        },
        end: {
          line: 442,
          column: 71
        }
      },
      "156": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 79
        }
      },
      "157": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 444,
          column: 79
        }
      },
      "158": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 445,
          column: 131
        }
      },
      "159": {
        start: {
          line: 445,
          column: 90
        },
        end: {
          line: 445,
          column: 100
        }
      },
      "160": {
        start: {
          line: 448,
          column: 31
        },
        end: {
          line: 448,
          column: 79
        }
      },
      "161": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 86
        }
      },
      "162": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 451,
          column: 115
        }
      },
      "163": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 460,
          column: 11
        }
      },
      "164": {
        start: {
          line: 454,
          column: 76
        },
        end: {
          line: 454,
          column: 86
        }
      },
      "165": {
        start: {
          line: 464,
          column: 26
        },
        end: {
          line: 464,
          column: 36
        }
      },
      "166": {
        start: {
          line: 465,
          column: 8
        },
        end: {
          line: 482,
          column: 9
        }
      },
      "167": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 466,
          column: 35
        }
      },
      "168": {
        start: {
          line: 468,
          column: 32
        },
        end: {
          line: 468,
          column: 94
        }
      },
      "169": {
        start: {
          line: 468,
          column: 83
        },
        end: {
          line: 468,
          column: 93
        }
      },
      "170": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 472,
          column: 13
        }
      },
      "171": {
        start: {
          line: 470,
          column: 16
        },
        end: {
          line: 470,
          column: 72
        }
      },
      "172": {
        start: {
          line: 471,
          column: 16
        },
        end: {
          line: 471,
          column: 22
        }
      },
      "173": {
        start: {
          line: 474,
          column: 28
        },
        end: {
          line: 474,
          column: 50
        }
      },
      "174": {
        start: {
          line: 475,
          column: 29
        },
        end: {
          line: 475,
          column: 55
        }
      },
      "175": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 481,
          column: 15
        }
      },
      "176": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 486,
          column: 63
        }
      },
      "177": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "178": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 489,
          column: 49
        }
      },
      "179": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 41
        }
      },
      "180": {
        start: {
          line: 493,
          column: 35
        },
        end: {
          line: 503,
          column: 10
        }
      },
      "181": {
        start: {
          line: 494,
          column: 12
        },
        end: {
          line: 494,
          column: 34
        }
      },
      "182": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 502,
          column: 13
        }
      },
      "183": {
        start: {
          line: 496,
          column: 16
        },
        end: {
          line: 501,
          column: 17
        }
      },
      "184": {
        start: {
          line: 497,
          column: 20
        },
        end: {
          line: 497,
          column: 43
        }
      },
      "185": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 504,
          column: 46
        }
      },
      "186": {
        start: {
          line: 506,
          column: 30
        },
        end: {
          line: 508,
          column: 11
        }
      },
      "187": {
        start: {
          line: 506,
          column: 57
        },
        end: {
          line: 508,
          column: 10
        }
      },
      "188": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 507,
          column: 53
        }
      },
      "189": {
        start: {
          line: 507,
          column: 42
        },
        end: {
          line: 507,
          column: 51
        }
      },
      "190": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 509,
          column: 41
        }
      },
      "191": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 510,
          column: 26
        }
      },
      "192": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 511,
          column: 46
        }
      },
      "193": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 515,
          column: 46
        }
      },
      "194": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 516,
          column: 90
        }
      },
      "195": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 530,
          column: 11
        }
      },
      "196": {
        start: {
          line: 519,
          column: 34
        },
        end: {
          line: 520,
          column: 69
        }
      },
      "197": {
        start: {
          line: 520,
          column: 32
        },
        end: {
          line: 520,
          column: 68
        }
      },
      "198": {
        start: {
          line: 521,
          column: 35
        },
        end: {
          line: 521,
          column: 107
        }
      },
      "199": {
        start: {
          line: 521,
          column: 64
        },
        end: {
          line: 521,
          column: 106
        }
      },
      "200": {
        start: {
          line: 522,
          column: 32
        },
        end: {
          line: 522,
          column: 96
        }
      },
      "201": {
        start: {
          line: 522,
          column: 68
        },
        end: {
          line: 522,
          column: 92
        }
      },
      "202": {
        start: {
          line: 523,
          column: 30
        },
        end: {
          line: 523,
          column: 105
        }
      },
      "203": {
        start: {
          line: 523,
          column: 66
        },
        end: {
          line: 523,
          column: 101
        }
      },
      "204": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 529,
          column: 14
        }
      },
      "205": {
        start: {
          line: 532,
          column: 31
        },
        end: {
          line: 532,
          column: 63
        }
      },
      "206": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 533,
          column: 86
        }
      },
      "207": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 534,
          column: 50
        }
      },
      "208": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 535,
          column: 71
        }
      },
      "209": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 536,
          column: 80
        }
      },
      "210": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 537,
          column: 100
        }
      },
      "211": {
        start: {
          line: 538,
          column: 8
        },
        end: {
          line: 538,
          column: 88
        }
      },
      "212": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 539,
          column: 87
        }
      },
      "213": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 540,
          column: 109
        }
      },
      "214": {
        start: {
          line: 542,
          column: 23
        },
        end: {
          line: 542,
          column: 55
        }
      },
      "215": {
        start: {
          line: 543,
          column: 8
        },
        end: {
          line: 543,
          column: 81
        }
      },
      "216": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 544,
          column: 75
        }
      },
      "217": {
        start: {
          line: 548,
          column: 32
        },
        end: {
          line: 548,
          column: 38
        }
      },
      "218": {
        start: {
          line: 549,
          column: 21
        },
        end: {
          line: 549,
          column: 25
        }
      },
      "219": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 553,
          column: 9
        }
      },
      "220": {
        start: {
          line: 551,
          column: 12
        },
        end: {
          line: 551,
          column: 143
        }
      },
      "221": {
        start: {
          line: 552,
          column: 12
        },
        end: {
          line: 552,
          column: 27
        }
      },
      "222": {
        start: {
          line: 554,
          column: 8
        },
        end: {
          line: 557,
          column: 9
        }
      },
      "223": {
        start: {
          line: 555,
          column: 12
        },
        end: {
          line: 555,
          column: 160
        }
      },
      "224": {
        start: {
          line: 556,
          column: 12
        },
        end: {
          line: 556,
          column: 27
        }
      },
      "225": {
        start: {
          line: 558,
          column: 8
        },
        end: {
          line: 561,
          column: 9
        }
      },
      "226": {
        start: {
          line: 559,
          column: 12
        },
        end: {
          line: 559,
          column: 141
        }
      },
      "227": {
        start: {
          line: 560,
          column: 12
        },
        end: {
          line: 560,
          column: 27
        }
      },
      "228": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 562,
          column: 22
        }
      },
      "229": {
        start: {
          line: 566,
          column: 8
        },
        end: {
          line: 587,
          column: 10
        }
      },
      "230": {
        start: {
          line: 591,
          column: 8
        },
        end: {
          line: 591,
          column: 63
        }
      },
      "231": {
        start: {
          line: 591,
          column: 38
        },
        end: {
          line: 591,
          column: 61
        }
      },
      "232": {
        start: {
          line: 595,
          column: 8
        },
        end: {
          line: 595,
          column: 46
        }
      },
      "233": {
        start: {
          line: 599,
          column: 8
        },
        end: {
          line: 599,
          column: 39
        }
      },
      "234": {
        start: {
          line: 603,
          column: 8
        },
        end: {
          line: 604,
          column: 19
        }
      },
      "235": {
        start: {
          line: 604,
          column: 12
        },
        end: {
          line: 604,
          column: 19
        }
      },
      "236": {
        start: {
          line: 605,
          column: 8
        },
        end: {
          line: 605,
          column: 50
        }
      },
      "237": {
        start: {
          line: 607,
          column: 8
        },
        end: {
          line: 609,
          column: 9
        }
      },
      "238": {
        start: {
          line: 608,
          column: 12
        },
        end: {
          line: 608,
          column: 34
        }
      },
      "239": {
        start: {
          line: 611,
          column: 8
        },
        end: {
          line: 611,
          column: 29
        }
      },
      "240": {
        start: {
          line: 612,
          column: 8
        },
        end: {
          line: 612,
          column: 31
        }
      },
      "241": {
        start: {
          line: 613,
          column: 8
        },
        end: {
          line: 613,
          column: 52
        }
      },
      "242": {
        start: {
          line: 616,
          column: 0
        },
        end: {
          line: 616,
          column: 40
        }
      },
      "243": {
        start: {
          line: 619,
          column: 4
        },
        end: {
          line: 619,
          column: 32
        }
      },
      "244": {
        start: {
          line: 622,
          column: 0
        },
        end: {
          line: 645,
          column: 1
        }
      },
      "245": {
        start: {
          line: 623,
          column: 21
        },
        end: {
          line: 623,
          column: 59
        }
      },
      "246": {
        start: {
          line: 624,
          column: 19
        },
        end: {
          line: 624,
          column: 41
        }
      },
      "247": {
        start: {
          line: 625,
          column: 4
        },
        end: {
          line: 627,
          column: 7
        }
      },
      "248": {
        start: {
          line: 626,
          column: 8
        },
        end: {
          line: 626,
          column: 105
        }
      },
      "249": {
        start: {
          line: 628,
          column: 4
        },
        end: {
          line: 630,
          column: 7
        }
      },
      "250": {
        start: {
          line: 629,
          column: 8
        },
        end: {
          line: 629,
          column: 149
        }
      },
      "251": {
        start: {
          line: 631,
          column: 4
        },
        end: {
          line: 634,
          column: 7
        }
      },
      "252": {
        start: {
          line: 632,
          column: 8
        },
        end: {
          line: 632,
          column: 48
        }
      },
      "253": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 633,
          column: 54
        }
      },
      "254": {
        start: {
          line: 635,
          column: 4
        },
        end: {
          line: 635,
          column: 51
        }
      },
      "255": {
        start: {
          line: 636,
          column: 4
        },
        end: {
          line: 644,
          column: 7
        }
      },
      "256": {
        start: {
          line: 638,
          column: 8
        },
        end: {
          line: 638,
          column: 56
        }
      },
      "257": {
        start: {
          line: 639,
          column: 8
        },
        end: {
          line: 639,
          column: 24
        }
      },
      "258": {
        start: {
          line: 642,
          column: 8
        },
        end: {
          line: 642,
          column: 50
        }
      },
      "259": {
        start: {
          line: 643,
          column: 8
        },
        end: {
          line: 643,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 56
          },
          end: {
            line: 4,
            column: 57
          }
        },
        loc: {
          start: {
            line: 4,
            column: 71
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 18
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 170
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        loc: {
          start: {
            line: 174,
            column: 34
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 174
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 32
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 182
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        loc: {
          start: {
            line: 186,
            column: 30
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 186
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 37
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 224
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 42
          },
          end: {
            line: 331,
            column: 5
          }
        },
        line: 260
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 261,
            column: 30
          },
          end: {
            line: 261,
            column: 31
          }
        },
        loc: {
          start: {
            line: 261,
            column: 48
          },
          end: {
            line: 302,
            column: 9
          }
        },
        line: 261
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 304,
            column: 28
          },
          end: {
            line: 304,
            column: 29
          }
        },
        loc: {
          start: {
            line: 304,
            column: 40
          },
          end: {
            line: 325,
            column: 9
          }
        },
        line: 304
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 327,
            column: 28
          },
          end: {
            line: 327,
            column: 29
          }
        },
        loc: {
          start: {
            line: 327,
            column: 39
          },
          end: {
            line: 330,
            column: 9
          }
        },
        line: 327
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        },
        loc: {
          start: {
            line: 333,
            column: 55
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 333
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 334,
            column: 27
          },
          end: {
            line: 334,
            column: 28
          }
        },
        loc: {
          start: {
            line: 334,
            column: 48
          },
          end: {
            line: 369,
            column: 9
          }
        },
        line: 334
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 335,
            column: 37
          },
          end: {
            line: 335,
            column: 38
          }
        },
        loc: {
          start: {
            line: 335,
            column: 43
          },
          end: {
            line: 337,
            column: 13
          }
        },
        line: 335
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 340,
            column: 42
          },
          end: {
            line: 340,
            column: 43
          }
        },
        loc: {
          start: {
            line: 340,
            column: 48
          },
          end: {
            line: 344,
            column: 17
          }
        },
        line: 340
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 345,
            column: 43
          },
          end: {
            line: 345,
            column: 44
          }
        },
        loc: {
          start: {
            line: 345,
            column: 54
          },
          end: {
            line: 349,
            column: 17
          }
        },
        line: 345
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 350,
            column: 45
          },
          end: {
            line: 350,
            column: 46
          }
        },
        loc: {
          start: {
            line: 350,
            column: 55
          },
          end: {
            line: 359,
            column: 17
          }
        },
        line: 350
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 360,
            column: 43
          },
          end: {
            line: 360,
            column: 44
          }
        },
        loc: {
          start: {
            line: 360,
            column: 49
          },
          end: {
            line: 362,
            column: 17
          }
        },
        line: 360
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        loc: {
          start: {
            line: 372,
            column: 34
          },
          end: {
            line: 391,
            column: 5
          }
        },
        line: 372
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 376,
            column: 27
          },
          end: {
            line: 376,
            column: 28
          }
        },
        loc: {
          start: {
            line: 376,
            column: 48
          },
          end: {
            line: 390,
            column: 9
          }
        },
        line: 376
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 31
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 393
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 400,
            column: 5
          }
        },
        loc: {
          start: {
            line: 400,
            column: 37
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 400
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 413,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        },
        loc: {
          start: {
            line: 413,
            column: 30
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 413
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 425,
            column: 4
          },
          end: {
            line: 425,
            column: 5
          }
        },
        loc: {
          start: {
            line: 425,
            column: 29
          },
          end: {
            line: 429,
            column: 5
          }
        },
        line: 425
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 426,
            column: 44
          },
          end: {
            line: 426,
            column: 45
          }
        },
        loc: {
          start: {
            line: 426,
            column: 50
          },
          end: {
            line: 428,
            column: 9
          }
        },
        line: 426
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 431,
            column: 4
          },
          end: {
            line: 431,
            column: 5
          }
        },
        loc: {
          start: {
            line: 431,
            column: 21
          },
          end: {
            line: 461,
            column: 5
          }
        },
        line: 431
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 438,
            column: 21
          },
          end: {
            line: 438,
            column: 22
          }
        },
        loc: {
          start: {
            line: 438,
            column: 29
          },
          end: {
            line: 438,
            column: 47
          }
        },
        line: 438
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 439,
            column: 18
          },
          end: {
            line: 439,
            column: 19
          }
        },
        loc: {
          start: {
            line: 439,
            column: 28
          },
          end: {
            line: 439,
            column: 33
          }
        },
        line: 439
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 445,
            column: 75
          },
          end: {
            line: 445,
            column: 76
          }
        },
        loc: {
          start: {
            line: 445,
            column: 90
          },
          end: {
            line: 445,
            column: 100
          }
        },
        line: 445
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 454,
            column: 71
          },
          end: {
            line: 454,
            column: 72
          }
        },
        loc: {
          start: {
            line: 454,
            column: 76
          },
          end: {
            line: 454,
            column: 86
          }
        },
        line: 454
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 463,
            column: 4
          },
          end: {
            line: 463,
            column: 5
          }
        },
        loc: {
          start: {
            line: 463,
            column: 42
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 463
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 468,
            column: 78
          },
          end: {
            line: 468,
            column: 79
          }
        },
        loc: {
          start: {
            line: 468,
            column: 83
          },
          end: {
            line: 468,
            column: 93
          }
        },
        line: 468
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 485,
            column: 4
          },
          end: {
            line: 485,
            column: 5
          }
        },
        loc: {
          start: {
            line: 485,
            column: 20
          },
          end: {
            line: 512,
            column: 5
          }
        },
        line: 485
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 493,
            column: 78
          },
          end: {
            line: 493,
            column: 79
          }
        },
        loc: {
          start: {
            line: 493,
            column: 94
          },
          end: {
            line: 503,
            column: 9
          }
        },
        line: 493
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 506,
            column: 47
          },
          end: {
            line: 506,
            column: 48
          }
        },
        loc: {
          start: {
            line: 506,
            column: 57
          },
          end: {
            line: 508,
            column: 10
          }
        },
        line: 506
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 506,
            column: 69
          },
          end: {
            line: 506,
            column: 70
          }
        },
        loc: {
          start: {
            line: 506,
            column: 82
          },
          end: {
            line: 508,
            column: 9
          }
        },
        line: 506
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 507,
            column: 36
          },
          end: {
            line: 507,
            column: 37
          }
        },
        loc: {
          start: {
            line: 507,
            column: 42
          },
          end: {
            line: 507,
            column: 51
          }
        },
        line: 507
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        },
        loc: {
          start: {
            line: 514,
            column: 34
          },
          end: {
            line: 545,
            column: 5
          }
        },
        line: 514
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 518,
            column: 58
          },
          end: {
            line: 518,
            column: 59
          }
        },
        loc: {
          start: {
            line: 518,
            column: 70
          },
          end: {
            line: 530,
            column: 9
          }
        },
        line: 518
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 520,
            column: 24
          },
          end: {
            line: 520,
            column: 25
          }
        },
        loc: {
          start: {
            line: 520,
            column: 32
          },
          end: {
            line: 520,
            column: 68
          }
        },
        line: 520
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 521,
            column: 56
          },
          end: {
            line: 521,
            column: 57
          }
        },
        loc: {
          start: {
            line: 521,
            column: 64
          },
          end: {
            line: 521,
            column: 106
          }
        },
        line: 521
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 522,
            column: 53
          },
          end: {
            line: 522,
            column: 54
          }
        },
        loc: {
          start: {
            line: 522,
            column: 68
          },
          end: {
            line: 522,
            column: 92
          }
        },
        line: 522
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 523,
            column: 51
          },
          end: {
            line: 523,
            column: 52
          }
        },
        loc: {
          start: {
            line: 523,
            column: 66
          },
          end: {
            line: 523,
            column: 101
          }
        },
        line: 523
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 547,
            column: 4
          },
          end: {
            line: 547,
            column: 5
          }
        },
        loc: {
          start: {
            line: 547,
            column: 32
          },
          end: {
            line: 563,
            column: 5
          }
        },
        line: 547
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 565,
            column: 4
          },
          end: {
            line: 565,
            column: 5
          }
        },
        loc: {
          start: {
            line: 565,
            column: 24
          },
          end: {
            line: 588,
            column: 5
          }
        },
        line: 565
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 590,
            column: 4
          },
          end: {
            line: 590,
            column: 5
          }
        },
        loc: {
          start: {
            line: 590,
            column: 14
          },
          end: {
            line: 592,
            column: 5
          }
        },
        line: 590
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 591,
            column: 27
          },
          end: {
            line: 591,
            column: 28
          }
        },
        loc: {
          start: {
            line: 591,
            column: 38
          },
          end: {
            line: 591,
            column: 61
          }
        },
        line: 591
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 594,
            column: 4
          },
          end: {
            line: 594,
            column: 5
          }
        },
        loc: {
          start: {
            line: 594,
            column: 24
          },
          end: {
            line: 596,
            column: 5
          }
        },
        line: 594
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 598,
            column: 4
          },
          end: {
            line: 598,
            column: 5
          }
        },
        loc: {
          start: {
            line: 598,
            column: 24
          },
          end: {
            line: 600,
            column: 5
          }
        },
        line: 598
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 602,
            column: 4
          },
          end: {
            line: 602,
            column: 5
          }
        },
        loc: {
          start: {
            line: 602,
            column: 21
          },
          end: {
            line: 614,
            column: 5
          }
        },
        line: 602
      },
      "49": {
        name: "createLoadTestRunner",
        decl: {
          start: {
            line: 618,
            column: 9
          },
          end: {
            line: 618,
            column: 29
          }
        },
        loc: {
          start: {
            line: 618,
            column: 32
          },
          end: {
            line: 620,
            column: 1
          }
        },
        line: 618
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 625,
            column: 31
          },
          end: {
            line: 625,
            column: 32
          }
        },
        loc: {
          start: {
            line: 625,
            column: 45
          },
          end: {
            line: 627,
            column: 5
          }
        },
        line: 625
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 628,
            column: 32
          },
          end: {
            line: 628,
            column: 33
          }
        },
        loc: {
          start: {
            line: 628,
            column: 45
          },
          end: {
            line: 630,
            column: 5
          }
        },
        line: 628
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 631,
            column: 32
          },
          end: {
            line: 631,
            column: 33
          }
        },
        loc: {
          start: {
            line: 631,
            column: 45
          },
          end: {
            line: 634,
            column: 5
          }
        },
        line: 631
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 637,
            column: 14
          },
          end: {
            line: 637,
            column: 15
          }
        },
        loc: {
          start: {
            line: 637,
            column: 20
          },
          end: {
            line: 640,
            column: 5
          }
        },
        line: 637
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 641,
            column: 15
          },
          end: {
            line: 641,
            column: 16
          }
        },
        loc: {
          start: {
            line: 641,
            column: 26
          },
          end: {
            line: 644,
            column: 5
          }
        },
        line: 641
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 6,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 23
          },
          end: {
            line: 4,
            column: 27
          }
        }, {
          start: {
            line: 4,
            column: 31
          },
          end: {
            line: 4,
            column: 51
          }
        }, {
          start: {
            line: 4,
            column: 56
          },
          end: {
            line: 6,
            column: 1
          }
        }],
        line: 4
      },
      "1": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 37
          },
          end: {
            line: 5,
            column: 40
          }
        }, {
          start: {
            line: 5,
            column: 43
          },
          end: {
            line: 5,
            column: 61
          }
        }],
        line: 5
      },
      "2": {
        loc: {
          start: {
            line: 5,
            column: 12
          },
          end: {
            line: 5,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 12
          },
          end: {
            line: 5,
            column: 15
          }
        }, {
          start: {
            line: 5,
            column: 19
          },
          end: {
            line: 5,
            column: 33
          }
        }],
        line: 5
      },
      "3": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "4": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "5": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "6": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 255,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 255,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "7": {
        loc: {
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 249,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 249,
            column: 28
          }
        }, {
          start: {
            line: 249,
            column: 32
          },
          end: {
            line: 249,
            column: 64
          }
        }],
        line: 249
      },
      "8": {
        loc: {
          start: {
            line: 265,
            column: 16
          },
          end: {
            line: 267,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 16
          },
          end: {
            line: 267,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "9": {
        loc: {
          start: {
            line: 269,
            column: 16
          },
          end: {
            line: 285,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 270,
            column: 20
          },
          end: {
            line: 272,
            column: 30
          }
        }, {
          start: {
            line: 273,
            column: 20
          },
          end: {
            line: 275,
            column: 30
          }
        }, {
          start: {
            line: 276,
            column: 20
          },
          end: {
            line: 278,
            column: 30
          }
        }, {
          start: {
            line: 279,
            column: 20
          },
          end: {
            line: 281,
            column: 30
          }
        }, {
          start: {
            line: 282,
            column: 20
          },
          end: {
            line: 284,
            column: 30
          }
        }],
        line: 269
      },
      "10": {
        loc: {
          start: {
            line: 277,
            column: 41
          },
          end: {
            line: 277,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 41
          },
          end: {
            line: 277,
            column: 53
          }
        }, {
          start: {
            line: 277,
            column: 57
          },
          end: {
            line: 277,
            column: 61
          }
        }],
        line: 277
      },
      "11": {
        loc: {
          start: {
            line: 307,
            column: 19
          },
          end: {
            line: 307,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 19
          },
          end: {
            line: 307,
            column: 32
          }
        }, {
          start: {
            line: 307,
            column: 37
          },
          end: {
            line: 307,
            column: 58
          }
        }, {
          start: {
            line: 307,
            column: 62
          },
          end: {
            line: 307,
            column: 88
          }
        }],
        line: 307
      },
      "12": {
        loc: {
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 308,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 308,
            column: 59
          }
        }, {
          start: {
            line: 308,
            column: 63
          },
          end: {
            line: 308,
            column: 76
          }
        }],
        line: 308
      },
      "13": {
        loc: {
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 318,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 318,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "14": {
        loc: {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "15": {
        loc: {
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 321,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 321,
            column: 30
          }
        }, {
          start: {
            line: 321,
            column: 34
          },
          end: {
            line: 321,
            column: 81
          }
        }],
        line: 321
      },
      "16": {
        loc: {
          start: {
            line: 333,
            column: 39
          },
          end: {
            line: 333,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 333,
            column: 49
          },
          end: {
            line: 333,
            column: 53
          }
        }],
        line: 333
      },
      "17": {
        loc: {
          start: {
            line: 373,
            column: 8
          },
          end: {
            line: 375,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 8
          },
          end: {
            line: 375,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 373
      },
      "18": {
        loc: {
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 373,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 373,
            column: 27
          }
        }, {
          start: {
            line: 373,
            column: 31
          },
          end: {
            line: 373,
            column: 78
          }
        }],
        line: 373
      },
      "19": {
        loc: {
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 397,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 397,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "20": {
        loc: {
          start: {
            line: 402,
            column: 8
          },
          end: {
            line: 410,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 8
          },
          end: {
            line: 410,
            column: 9
          }
        }, {
          start: {
            line: 405,
            column: 13
          },
          end: {
            line: 410,
            column: 9
          }
        }],
        line: 402
      },
      "21": {
        loc: {
          start: {
            line: 405,
            column: 13
          },
          end: {
            line: 410,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 13
          },
          end: {
            line: 410,
            column: 9
          }
        }, {
          start: {
            line: 408,
            column: 13
          },
          end: {
            line: 410,
            column: 9
          }
        }],
        line: 405
      },
      "22": {
        loc: {
          start: {
            line: 408,
            column: 13
          },
          end: {
            line: 410,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 13
          },
          end: {
            line: 410,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "23": {
        loc: {
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 420,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 420,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "24": {
        loc: {
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "25": {
        loc: {
          start: {
            line: 443,
            column: 47
          },
          end: {
            line: 443,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 443,
            column: 47
          },
          end: {
            line: 443,
            column: 73
          }
        }, {
          start: {
            line: 443,
            column: 77
          },
          end: {
            line: 443,
            column: 78
          }
        }],
        line: 443
      },
      "26": {
        loc: {
          start: {
            line: 444,
            column: 47
          },
          end: {
            line: 444,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 444,
            column: 47
          },
          end: {
            line: 444,
            column: 73
          }
        }, {
          start: {
            line: 444,
            column: 77
          },
          end: {
            line: 444,
            column: 78
          }
        }],
        line: 444
      },
      "27": {
        loc: {
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 472,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 472,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "28": {
        loc: {
          start: {
            line: 488,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 488,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 488
      },
      "29": {
        loc: {
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 502,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 502,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "30": {
        loc: {
          start: {
            line: 521,
            column: 64
          },
          end: {
            line: 521,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 64
          },
          end: {
            line: 521,
            column: 78
          }
        }, {
          start: {
            line: 521,
            column: 82
          },
          end: {
            line: 521,
            column: 106
          }
        }],
        line: 521
      },
      "31": {
        loc: {
          start: {
            line: 526,
            column: 32
          },
          end: {
            line: 526,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 526,
            column: 59
          },
          end: {
            line: 526,
            column: 103
          }
        }, {
          start: {
            line: 526,
            column: 106
          },
          end: {
            line: 526,
            column: 107
          }
        }],
        line: 526
      },
      "32": {
        loc: {
          start: {
            line: 527,
            column: 29
          },
          end: {
            line: 527,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 527,
            column: 56
          },
          end: {
            line: 527,
            column: 88
          }
        }, {
          start: {
            line: 527,
            column: 91
          },
          end: {
            line: 527,
            column: 92
          }
        }],
        line: 527
      },
      "33": {
        loc: {
          start: {
            line: 550,
            column: 8
          },
          end: {
            line: 553,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 550,
            column: 8
          },
          end: {
            line: 553,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 550
      },
      "34": {
        loc: {
          start: {
            line: 554,
            column: 8
          },
          end: {
            line: 557,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 554,
            column: 8
          },
          end: {
            line: 557,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 554
      },
      "35": {
        loc: {
          start: {
            line: 558,
            column: 8
          },
          end: {
            line: 561,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 558,
            column: 8
          },
          end: {
            line: 561,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 558
      },
      "36": {
        loc: {
          start: {
            line: 603,
            column: 8
          },
          end: {
            line: 604,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 603,
            column: 8
          },
          end: {
            line: 604,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 603
      },
      "37": {
        loc: {
          start: {
            line: 622,
            column: 0
          },
          end: {
            line: 645,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 622,
            column: 0
          },
          end: {
            line: 645,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 622
      },
      "38": {
        loc: {
          start: {
            line: 623,
            column: 21
          },
          end: {
            line: 623,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 623,
            column: 21
          },
          end: {
            line: 623,
            column: 36
          }
        }, {
          start: {
            line: 623,
            column: 40
          },
          end: {
            line: 623,
            column: 59
          }
        }],
        line: 623
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0, 0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "58e711178a3ff4ac99e913e17d52c80499e3e049"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1b9ipvx3qr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1b9ipvx3qr();
var __importDefault =
/* istanbul ignore next */
(cov_1b9ipvx3qr().s[0]++,
/* istanbul ignore next */
(cov_1b9ipvx3qr().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1b9ipvx3qr().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1b9ipvx3qr().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1b9ipvx3qr().f[0]++;
  cov_1b9ipvx3qr().s[1]++;
  return /* istanbul ignore next */(cov_1b9ipvx3qr().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1b9ipvx3qr().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1b9ipvx3qr().s[3]++;
exports.LOAD_TEST_CONFIGS = exports.LoadTestRunner = void 0;
/* istanbul ignore next */
cov_1b9ipvx3qr().s[4]++;
exports.createLoadTestRunner = createLoadTestRunner;
const events_1 =
/* istanbul ignore next */
(cov_1b9ipvx3qr().s[5]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_1b9ipvx3qr().s[6]++, require("../utils/logger"));
const performanceMonitor_1 =
/* istanbul ignore next */
(cov_1b9ipvx3qr().s[7]++, require("../utils/performanceMonitor"));
const ws_1 =
/* istanbul ignore next */
(cov_1b9ipvx3qr().s[8]++, __importDefault(require("ws")));
// Predefined test configurations
const LOAD_TEST_CONFIGS =
/* istanbul ignore next */
(cov_1b9ipvx3qr().s[9]++, {
  'halo-arena-stress': {
    testName: 'HaloArena Stress Test',
    targetUrl: 'ws://localhost:8080',
    concurrentUsers: 100,
    rampUpDuration: 30000,
    // 30 seconds
    testDuration: 300000,
    // 5 minutes
    gameMode: 'halo-arena',
    scenarios: [{
      name: 'Normal Gameplay',
      weight: 80,
      duration: 300000,
      loops: -1,
      // Infinite loops
      actions: [{
        type: 'connect',
        timeout: 5000
      }, {
        type: 'send_message',
        data: {
          action: 'join_queue',
          gameMode: 'halo-arena'
        }
      }, {
        type: 'wait',
        delay: 1000
      }, {
        type: 'send_message',
        data: {
          type: 'move',
          direction: {
            x: 1,
            y: 0
          },
          magnitude: 1
        }
      }, {
        type: 'wait',
        delay: 100
      }, {
        type: 'send_message',
        data: {
          type: 'attack',
          target: 'enemy_player'
        }
      }, {
        type: 'wait',
        delay: 500
      }, {
        type: 'send_message',
        data: {
          type: 'ability',
          abilityId: 'q',
          position: {
            x: 100,
            y: 100
          }
        }
      }, {
        type: 'wait',
        delay: 2000
      }]
    }, {
      name: 'Heavy Combat',
      weight: 15,
      duration: 60000,
      loops: -1,
      actions: [{
        type: 'connect',
        timeout: 5000
      }, {
        type: 'send_message',
        data: {
          action: 'join_queue',
          gameMode: 'halo-arena'
        }
      }, {
        type: 'wait',
        delay: 500
      }, {
        type: 'send_message',
        data: {
          type: 'attack',
          target: 'enemy_player'
        }
      }, {
        type: 'wait',
        delay: 100
      }, {
        type: 'send_message',
        data: {
          type: 'attack',
          target: 'enemy_player'
        }
      }, {
        type: 'wait',
        delay: 100
      }, {
        type: 'send_message',
        data: {
          type: 'ability',
          abilityId: 'w'
        }
      }, {
        type: 'wait',
        delay: 200
      }]
    }, {
      name: 'Connection Churn',
      weight: 5,
      duration: 30000,
      loops: 5,
      actions: [{
        type: 'connect',
        timeout: 5000
      }, {
        type: 'send_message',
        data: {
          action: 'join_queue',
          gameMode: 'halo-arena'
        }
      }, {
        type: 'wait',
        delay: 5000
      }, {
        type: 'disconnect'
      }, {
        type: 'wait',
        delay: 2000
      }]
    }],
    performance: {
      targetResponseTime: 120,
      // 120ms P95
      maxErrorRate: 0.01,
      // 1% error rate
      targetThroughput: 1000 // 1000 RPS
    }
  },
  'halo-royale-capacity': {
    testName: 'HaloRoyale Capacity Test',
    targetUrl: 'ws://localhost:8080',
    concurrentUsers: 1000,
    rampUpDuration: 60000,
    // 1 minute
    testDuration: 600000,
    // 10 minutes
    gameMode: 'halo-royale',
    scenarios: [{
      name: 'Battle Royale Gameplay',
      weight: 90,
      duration: 600000,
      loops: -1,
      actions: [{
        type: 'connect',
        timeout: 10000
      }, {
        type: 'send_message',
        data: {
          action: 'join_queue',
          gameMode: 'halo-royale'
        }
      }, {
        type: 'wait',
        delay: 2000
      }, {
        type: 'send_message',
        data: {
          type: 'jump',
          targetPosition: {
            x: 500,
            y: 500
          }
        }
      }, {
        type: 'wait',
        delay: 10000
      },
      // Parachute time
      {
        type: 'send_message',
        data: {
          type: 'move',
          direction: {
            x: 1,
            y: 1
          },
          magnitude: 0.8
        }
      }, {
        type: 'wait',
        delay: 1000
      }, {
        type: 'send_message',
        data: {
          type: 'interact',
          targetId: 'loot_item',
          action: 'pickup_loot'
        }
      }, {
        type: 'wait',
        delay: 3000
      }, {
        type: 'send_message',
        data: {
          type: 'attack',
          position: {
            x: 600,
            y: 600
          }
        }
      }, {
        type: 'wait',
        delay: 1500
      }]
    }, {
      name: 'High Mobility',
      weight: 10,
      duration: 300000,
      loops: -1,
      actions: [{
        type: 'connect',
        timeout: 10000
      }, {
        type: 'send_message',
        data: {
          action: 'join_queue',
          gameMode: 'halo-royale'
        }
      }, {
        type: 'wait',
        delay: 1000
      }, {
        type: 'send_message',
        data: {
          type: 'move',
          direction: {
            x: 1,
            y: 0
          },
          magnitude: 1,
          sprint: true
        }
      }, {
        type: 'wait',
        delay: 200
      }, {
        type: 'send_message',
        data: {
          type: 'move',
          direction: {
            x: 0,
            y: 1
          },
          magnitude: 1,
          sprint: true
        }
      }, {
        type: 'wait',
        delay: 200
      }, {
        type: 'send_message',
        data: {
          type: 'vehicle',
          action: 'enter_vehicle',
          vehicleId: 'nearest'
        }
      }, {
        type: 'wait',
        delay: 5000
      }]
    }],
    performance: {
      targetResponseTime: 200,
      // 200ms P95 for BR
      maxErrorRate: 0.005,
      // 0.5% error rate
      targetThroughput: 500 // 500 RPS
    }
  },
  'matchmaking-spike': {
    testName: 'Matchmaking Spike Test',
    targetUrl: 'ws://localhost:8080',
    concurrentUsers: 500,
    rampUpDuration: 5000,
    // 5 seconds - rapid spike
    testDuration: 120000,
    // 2 minutes
    gameMode: 'halo-arena',
    scenarios: [{
      name: 'Queue Flood',
      weight: 100,
      duration: 120000,
      loops: -1,
      actions: [{
        type: 'connect',
        timeout: 3000
      }, {
        type: 'send_message',
        data: {
          action: 'join_queue',
          gameMode: 'halo-arena'
        }
      }, {
        type: 'wait',
        delay: 15000
      },
      // Wait for match
      {
        type: 'send_message',
        data: {
          action: 'leave_queue'
        }
      }, {
        type: 'wait',
        delay: 1000
      }, {
        type: 'send_message',
        data: {
          action: 'join_queue',
          gameMode: 'halo-royale'
        }
      }, {
        type: 'wait',
        delay: 10000
      }, {
        type: 'disconnect'
      }, {
        type: 'wait',
        delay: 5000
      }]
    }],
    performance: {
      targetResponseTime: 18000,
      // 18s matchmaking target
      maxErrorRate: 0.02,
      // 2% error rate during spike
      targetThroughput: 100 // 100 RPS
    }
  }
});
/* istanbul ignore next */
cov_1b9ipvx3qr().s[10]++;
exports.LOAD_TEST_CONFIGS = LOAD_TEST_CONFIGS;
class LoadTestRunner extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  logger =
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().s[11]++, new logger_1.Logger('LoadTestRunner'));
  virtualUsers =
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().s[12]++, new Map());
  testResults =
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().s[13]++, this.createEmptyResult());
  isRunning =
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().s[14]++, false);
  workers =
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().s[15]++, []);
  metricsCollector =
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().s[16]++, null);
  constructor() {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[1]++;
    cov_1b9ipvx3qr().s[17]++;
    super();
  }
  // Run a predefined load test
  async runTest(testConfigName) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[2]++;
    const config =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[18]++, LOAD_TEST_CONFIGS[testConfigName]);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[19]++;
    if (!config) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[3][0]++;
      cov_1b9ipvx3qr().s[20]++;
      throw new Error(`Unknown test configuration: ${testConfigName}`);
    } else
    /* istanbul ignore next */
    {
      cov_1b9ipvx3qr().b[3][1]++;
    }
    cov_1b9ipvx3qr().s[21]++;
    return this.executeTest(config);
  }
  // Run a custom load test
  async runCustomTest(config) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[3]++;
    cov_1b9ipvx3qr().s[22]++;
    return this.executeTest(config);
  }
  // Execute load test
  async executeTest(config) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[4]++;
    cov_1b9ipvx3qr().s[23]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[4][0]++;
      cov_1b9ipvx3qr().s[24]++;
      throw new Error('Load test is already running');
    } else
    /* istanbul ignore next */
    {
      cov_1b9ipvx3qr().b[4][1]++;
    }
    cov_1b9ipvx3qr().s[25]++;
    this.isRunning = true;
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[26]++;
    this.testResults = this.createEmptyResult();
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[27]++;
    this.testResults.testName = config.testName;
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[28]++;
    this.testResults.startTime = Date.now();
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[29]++;
    this.testResults.totalUsers = config.concurrentUsers;
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[30]++;
    this.logger.info(`Starting load test: ${config.testName}`);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[31]++;
    this.logger.info(`Target: ${config.targetUrl}`);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[32]++;
    this.logger.info(`Concurrent users: ${config.concurrentUsers}`);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[33]++;
    this.logger.info(`Duration: ${config.testDuration}ms`);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[34]++;
    try {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[35]++;
      // Start metrics collection
      this.startMetricsCollection();
      // Create virtual users with ramp-up
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[36]++;
      await this.createVirtualUsers(config);
      // Wait for test duration
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[37]++;
      await this.waitForTestCompletion(config.testDuration);
      // Cleanup
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[38]++;
      await this.cleanup();
      // Calculate final results
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[39]++;
      this.calculateFinalResults(config);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[40]++;
      this.logger.info(`Load test completed: ${config.testName}`);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[41]++;
      this.emit('test_completed', this.testResults);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[42]++;
      return this.testResults;
    } catch (error) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[43]++;
      this.logger.error('Load test failed:', error);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[44]++;
      await this.cleanup();
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[45]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[46]++;
      this.isRunning = false;
    }
  }
  // Create virtual users with ramp-up
  async createVirtualUsers(config) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[5]++;
    const rampUpInterval =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[47]++, config.rampUpDuration / config.concurrentUsers);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[48]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[49]++, 0); i < config.concurrentUsers; i++) {
      // Select scenario based on weight
      const scenario =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[50]++, this.selectScenario(config.scenarios));
      const user =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[51]++, {
        id: `user_${i + 1}`,
        scenario,
        currentActionIndex: 0,
        startTime: Date.now(),
        lastActionTime: 0,
        requestCount: 0,
        responseCount: 0,
        errors: [],
        isActive: true,
        responseTimes: []
      });
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[52]++;
      this.virtualUsers.set(user.id, user);
      // Start user scenario
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[53]++;
      this.startUserScenario(user, config);
      // Ramp-up delay
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[54]++;
      if (i < config.concurrentUsers - 1) {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().b[5][0]++;
        cov_1b9ipvx3qr().s[55]++;
        await this.sleep(rampUpInterval);
      } else
      /* istanbul ignore next */
      {
        cov_1b9ipvx3qr().b[5][1]++;
      }
      // Emit progress
      cov_1b9ipvx3qr().s[56]++;
      if (
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().b[7][0]++, i % 10 === 0) ||
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().b[7][1]++, i === config.concurrentUsers - 1)) {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().b[6][0]++;
        cov_1b9ipvx3qr().s[57]++;
        this.emit('ramp_up_progress', {
          created: i + 1,
          total: config.concurrentUsers,
          percentage: (i + 1) / config.concurrentUsers * 100
        });
      } else
      /* istanbul ignore next */
      {
        cov_1b9ipvx3qr().b[6][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[58]++;
    this.logger.info(`All ${config.concurrentUsers} virtual users created`);
  }
  // Start user scenario execution
  async startUserScenario(user, config) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[6]++;
    cov_1b9ipvx3qr().s[59]++;
    const executeAction = async action => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[7]++;
      cov_1b9ipvx3qr().s[60]++;
      try {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[61]++;
        performanceMonitor_1.PerformanceMonitor.markStart(`action_${action.type}_${user.id}`);
        // Apply delay if specified
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[62]++;
        if (action.delay) {
          /* istanbul ignore next */
          cov_1b9ipvx3qr().b[8][0]++;
          cov_1b9ipvx3qr().s[63]++;
          await this.sleep(action.delay);
        } else
        /* istanbul ignore next */
        {
          cov_1b9ipvx3qr().b[8][1]++;
        }
        const startTime =
        /* istanbul ignore next */
        (cov_1b9ipvx3qr().s[64]++, Date.now());
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[65]++;
        switch (action.type) {
          case 'connect':
            /* istanbul ignore next */
            cov_1b9ipvx3qr().b[9][0]++;
            cov_1b9ipvx3qr().s[66]++;
            await this.connectUser(user, config.targetUrl, action.timeout);
            /* istanbul ignore next */
            cov_1b9ipvx3qr().s[67]++;
            break;
          case 'send_message':
            /* istanbul ignore next */
            cov_1b9ipvx3qr().b[9][1]++;
            cov_1b9ipvx3qr().s[68]++;
            await this.sendMessage(user, action.data);
            /* istanbul ignore next */
            cov_1b9ipvx3qr().s[69]++;
            break;
          case 'wait':
            /* istanbul ignore next */
            cov_1b9ipvx3qr().b[9][2]++;
            cov_1b9ipvx3qr().s[70]++;
            await this.sleep(
            /* istanbul ignore next */
            (cov_1b9ipvx3qr().b[10][0]++, action.delay) ||
            /* istanbul ignore next */
            (cov_1b9ipvx3qr().b[10][1]++, 1000));
            /* istanbul ignore next */
            cov_1b9ipvx3qr().s[71]++;
            break;
          case 'disconnect':
            /* istanbul ignore next */
            cov_1b9ipvx3qr().b[9][3]++;
            cov_1b9ipvx3qr().s[72]++;
            await this.disconnectUser(user);
            /* istanbul ignore next */
            cov_1b9ipvx3qr().s[73]++;
            break;
          case 'validate_response':
            /* istanbul ignore next */
            cov_1b9ipvx3qr().b[9][4]++;
            cov_1b9ipvx3qr().s[74]++;
            // Response validation would be implemented here
            break;
        }
        const responseTime =
        /* istanbul ignore next */
        (cov_1b9ipvx3qr().s[75]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[76]++;
        user.responseTimes.push(responseTime);
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[77]++;
        user.responseCount++;
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[78]++;
        user.lastActionTime = Date.now();
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[79]++;
        performanceMonitor_1.PerformanceMonitor.markEnd(`action_${action.type}_${user.id}`);
      } catch (error) {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[80]++;
        user.errors.push(`${action.type}: ${error.message}`);
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[81]++;
        this.testResults.errors.push({
          timestamp: Date.now(),
          error: error.message,
          userId: user.id,
          action: action.type
        });
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[82]++;
        this.logger.warn(`User ${user.id} action ${action.type} failed:`, error.message);
      }
    };
    // Execute scenario actions
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[83]++;
    const runScenario = async () => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[8]++;
      const scenario =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[84]++, user.scenario);
      let loopCount =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[85]++, 0);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[86]++;
      while (
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().b[11][0]++, user.isActive) && (
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().b[11][1]++, scenario.loops === -1) ||
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().b[11][2]++, loopCount < scenario.loops))) {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[87]++;
        for (let i =
        /* istanbul ignore next */
        (cov_1b9ipvx3qr().s[88]++, 0);
        /* istanbul ignore next */
        (cov_1b9ipvx3qr().b[12][0]++, i < scenario.actions.length) &&
        /* istanbul ignore next */
        (cov_1b9ipvx3qr().b[12][1]++, user.isActive); i++) {
          /* istanbul ignore next */
          cov_1b9ipvx3qr().s[89]++;
          user.currentActionIndex = i;
          /* istanbul ignore next */
          cov_1b9ipvx3qr().s[90]++;
          await executeAction(scenario.actions[i]);
          /* istanbul ignore next */
          cov_1b9ipvx3qr().s[91]++;
          user.requestCount++;
        }
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[92]++;
        loopCount++;
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[93]++;
        user.currentActionIndex = 0;
        // Check if scenario duration has elapsed
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[94]++;
        if (Date.now() - user.startTime > scenario.duration) {
          /* istanbul ignore next */
          cov_1b9ipvx3qr().b[13][0]++;
          cov_1b9ipvx3qr().s[95]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_1b9ipvx3qr().b[13][1]++;
        }
      }
      // Disconnect if still connected
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[96]++;
      if (
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().b[15][0]++, user.websocket) &&
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().b[15][1]++, user.websocket.readyState === ws_1.default.OPEN)) {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().b[14][0]++;
        cov_1b9ipvx3qr().s[97]++;
        await this.disconnectUser(user);
      } else
      /* istanbul ignore next */
      {
        cov_1b9ipvx3qr().b[14][1]++;
      }
      cov_1b9ipvx3qr().s[98]++;
      user.isActive = false;
    };
    // Start scenario execution asynchronously
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[99]++;
    runScenario().catch(error => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[9]++;
      cov_1b9ipvx3qr().s[100]++;
      this.logger.error(`User ${user.id} scenario failed:`, error);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[101]++;
      user.isActive = false;
    });
  }
  // Connect virtual user
  async connectUser(user, targetUrl, timeout =
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().b[16][0]++, 5000)) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[10]++;
    cov_1b9ipvx3qr().s[102]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[11]++;
      const timer =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[103]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().f[12]++;
        cov_1b9ipvx3qr().s[104]++;
        reject(new Error('Connection timeout'));
      }, timeout));
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[105]++;
      try {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[106]++;
        user.websocket = new ws_1.default(targetUrl);
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[107]++;
        user.websocket.on('open', () => {
          /* istanbul ignore next */
          cov_1b9ipvx3qr().f[13]++;
          cov_1b9ipvx3qr().s[108]++;
          clearTimeout(timer);
          /* istanbul ignore next */
          cov_1b9ipvx3qr().s[109]++;
          this.testResults.successfulConnections++;
          /* istanbul ignore next */
          cov_1b9ipvx3qr().s[110]++;
          resolve();
        });
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[111]++;
        user.websocket.on('error', error => {
          /* istanbul ignore next */
          cov_1b9ipvx3qr().f[14]++;
          cov_1b9ipvx3qr().s[112]++;
          clearTimeout(timer);
          /* istanbul ignore next */
          cov_1b9ipvx3qr().s[113]++;
          this.testResults.failedConnections++;
          /* istanbul ignore next */
          cov_1b9ipvx3qr().s[114]++;
          reject(error);
        });
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[115]++;
        user.websocket.on('message', data => {
          /* istanbul ignore next */
          cov_1b9ipvx3qr().f[15]++;
          cov_1b9ipvx3qr().s[116]++;
          // Handle incoming messages
          try {
            const message =
            /* istanbul ignore next */
            (cov_1b9ipvx3qr().s[117]++, JSON.parse(data.toString()));
            /* istanbul ignore next */
            cov_1b9ipvx3qr().s[118]++;
            this.handleUserMessage(user, message);
          } catch (error) {
            // Ignore parsing errors for now
          }
        });
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[119]++;
        user.websocket.on('close', () => {
          /* istanbul ignore next */
          cov_1b9ipvx3qr().f[16]++;
        } // Connection closed
        );
      } catch (error) {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[120]++;
        clearTimeout(timer);
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[121]++;
        this.testResults.failedConnections++;
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[122]++;
        reject(error);
      }
    });
  }
  // Send message from virtual user
  async sendMessage(user, data) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[17]++;
    cov_1b9ipvx3qr().s[123]++;
    if (
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().b[18][0]++, !user.websocket) ||
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().b[18][1]++, user.websocket.readyState !== ws_1.default.OPEN)) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[17][0]++;
      cov_1b9ipvx3qr().s[124]++;
      throw new Error('WebSocket not connected');
    } else
    /* istanbul ignore next */
    {
      cov_1b9ipvx3qr().b[17][1]++;
    }
    cov_1b9ipvx3qr().s[125]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[18]++;
      cov_1b9ipvx3qr().s[126]++;
      try {
        const message =
        /* istanbul ignore next */
        (cov_1b9ipvx3qr().s[127]++, JSON.stringify({
          ...data,
          userId: user.id,
          timestamp: Date.now(),
          sequence: user.requestCount + 1
        }));
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[128]++;
        user.websocket.send(message);
      } catch (error) {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[129]++;
        this.testResults.failedRequests++;
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[130]++;
        reject(error);
      }
    });
  }
  // Disconnect virtual user
  async disconnectUser(user) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[19]++;
    cov_1b9ipvx3qr().s[131]++;
    if (user.websocket) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[19][0]++;
      cov_1b9ipvx3qr().s[132]++;
      user.websocket.close();
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[133]++;
      user.websocket = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1b9ipvx3qr().b[19][1]++;
    }
  }
  // Handle incoming message for user
  handleUserMessage(user, message) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[20]++;
    cov_1b9ipvx3qr().s[134]++;
    // Process server responses and update test metrics
    if (message.type === 'match_found') {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[20][0]++;
    } // User found a match
    else {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[20][1]++;
      cov_1b9ipvx3qr().s[135]++;
      if (message.type === 'game_state') {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().b[21][0]++;
      } // Game state update
      else {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().b[21][1]++;
        cov_1b9ipvx3qr().s[136]++;
        if (message.type === 'error') {
          /* istanbul ignore next */
          cov_1b9ipvx3qr().b[22][0]++;
          cov_1b9ipvx3qr().s[137]++;
          user.errors.push(`Server error: ${message.error}`);
        } else
        /* istanbul ignore next */
        {
          cov_1b9ipvx3qr().b[22][1]++;
        }
      }
    }
  }
  // Select scenario based on weight
  selectScenario(scenarios) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[21]++;
    const random =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[138]++, Math.random() * 100);
    let cumulativeWeight =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[139]++, 0);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[140]++;
    for (const scenario of scenarios) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[141]++;
      cumulativeWeight += scenario.weight;
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[142]++;
      if (random <= cumulativeWeight) {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().b[23][0]++;
        cov_1b9ipvx3qr().s[143]++;
        return scenario;
      } else
      /* istanbul ignore next */
      {
        cov_1b9ipvx3qr().b[23][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[144]++;
    return scenarios[scenarios.length - 1]; // Fallback
  }
  // Start metrics collection
  startMetricsCollection() {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[22]++;
    cov_1b9ipvx3qr().s[145]++;
    this.metricsCollector = setInterval(() => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[23]++;
      cov_1b9ipvx3qr().s[146]++;
      this.collectMetrics();
    }, 1000); // Collect metrics every second
  }
  // Collect performance metrics
  collectMetrics() {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[24]++;
    const memoryUsage =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[147]++, process.memoryUsage());
    const cpuUsage =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[148]++, process.cpuUsage());
    // Update memory stats
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[149]++;
    this.testResults.memoryUsage.peak = Math.max(this.testResults.memoryUsage.peak, memoryUsage.heapUsed);
    // Calculate response time percentiles
    const allResponseTimes =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[150]++, Array.from(this.virtualUsers.values()).flatMap(user => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[25]++;
      cov_1b9ipvx3qr().s[151]++;
      return user.responseTimes;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[26]++;
      cov_1b9ipvx3qr().s[152]++;
      return a - b;
    }));
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[153]++;
    if (allResponseTimes.length > 0) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[24][0]++;
      const p95Index =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[154]++, Math.floor(allResponseTimes.length * 0.95));
      const p99Index =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[155]++, Math.floor(allResponseTimes.length * 0.99));
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[156]++;
      this.testResults.p95ResponseTime =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().b[25][0]++, allResponseTimes[p95Index]) ||
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().b[25][1]++, 0);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[157]++;
      this.testResults.p99ResponseTime =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().b[26][0]++, allResponseTimes[p99Index]) ||
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().b[26][1]++, 0);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[158]++;
      this.testResults.averageResponseTime = allResponseTimes.reduce((sum, time) => {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().f[27]++;
        cov_1b9ipvx3qr().s[159]++;
        return sum + time;
      }, 0) / allResponseTimes.length;
    } else
    /* istanbul ignore next */
    {
      cov_1b9ipvx3qr().b[24][1]++;
    }
    // Calculate throughput
    const elapsedSeconds =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[160]++, (Date.now() - this.testResults.startTime) / 1000);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[161]++;
    this.testResults.throughput = this.testResults.totalRequests / elapsedSeconds;
    // Calculate error rate
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[162]++;
    this.testResults.errorRate = this.testResults.failedRequests / Math.max(this.testResults.totalRequests, 1);
    // Emit metrics update
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[163]++;
    this.emit('metrics_update', {
      activeUsers: Array.from(this.virtualUsers.values()).filter(u => {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().f[28]++;
        cov_1b9ipvx3qr().s[164]++;
        return u.isActive;
      }).length,
      totalRequests: this.testResults.totalRequests,
      throughput: this.testResults.throughput,
      errorRate: this.testResults.errorRate,
      p95ResponseTime: this.testResults.p95ResponseTime,
      memoryUsage: memoryUsage.heapUsed
    });
  }
  // Wait for test completion
  async waitForTestCompletion(duration) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[29]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[165]++, Date.now());
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[166]++;
    while (Date.now() - startTime < duration) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[167]++;
      await this.sleep(1000);
      // Check if all users have finished
      const activeUsers =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[168]++, Array.from(this.virtualUsers.values()).filter(u => {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().f[30]++;
        cov_1b9ipvx3qr().s[169]++;
        return u.isActive;
      }));
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[170]++;
      if (activeUsers.length === 0) {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().b[27][0]++;
        cov_1b9ipvx3qr().s[171]++;
        this.logger.info('All users completed scenarios early');
        /* istanbul ignore next */
        cov_1b9ipvx3qr().s[172]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_1b9ipvx3qr().b[27][1]++;
      }
      // Emit progress
      const elapsed =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[173]++, Date.now() - startTime);
      const progress =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[174]++, elapsed / duration * 100);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[175]++;
      this.emit('test_progress', {
        elapsed,
        duration,
        progress,
        activeUsers: activeUsers.length
      });
    }
  }
  // Cleanup resources
  async cleanup() {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[31]++;
    cov_1b9ipvx3qr().s[176]++;
    this.logger.info('Cleaning up load test resources...');
    // Stop metrics collection
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[177]++;
    if (this.metricsCollector) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[28][0]++;
      cov_1b9ipvx3qr().s[178]++;
      clearInterval(this.metricsCollector);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[179]++;
      this.metricsCollector = null;
    } else
    /* istanbul ignore next */
    {
      cov_1b9ipvx3qr().b[28][1]++;
    }
    // Disconnect all users
    const disconnectPromises =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[180]++, Array.from(this.virtualUsers.values()).map(async user => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[32]++;
      cov_1b9ipvx3qr().s[181]++;
      user.isActive = false;
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[182]++;
      if (user.websocket) {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().b[29][0]++;
        cov_1b9ipvx3qr().s[183]++;
        try {
          /* istanbul ignore next */
          cov_1b9ipvx3qr().s[184]++;
          user.websocket.close();
        } catch (error) {
          // Ignore cleanup errors
        }
      } else
      /* istanbul ignore next */
      {
        cov_1b9ipvx3qr().b[29][1]++;
      }
    }));
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[185]++;
    await Promise.all(disconnectPromises);
    // Clean up workers
    const workerCleanup =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[186]++, this.workers.map(worker => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[33]++;
      cov_1b9ipvx3qr().s[187]++;
      return new Promise(resolve => {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().f[34]++;
        cov_1b9ipvx3qr().s[188]++;
        worker.terminate().then(() => {
          /* istanbul ignore next */
          cov_1b9ipvx3qr().f[35]++;
          cov_1b9ipvx3qr().s[189]++;
          return resolve();
        });
      });
    }));
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[190]++;
    await Promise.all(workerCleanup);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[191]++;
    this.workers = [];
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[192]++;
    this.logger.info('Cleanup completed');
  }
  // Calculate final test results
  calculateFinalResults(config) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[36]++;
    cov_1b9ipvx3qr().s[193]++;
    this.testResults.endTime = Date.now();
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[194]++;
    this.testResults.duration = this.testResults.endTime - this.testResults.startTime;
    // Calculate scenario completion rates
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[195]++;
    this.testResults.scenarios = config.scenarios.map(scenario => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[37]++;
      const scenarioUsers =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[196]++, Array.from(this.virtualUsers.values()).filter(user => {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().f[38]++;
        cov_1b9ipvx3qr().s[197]++;
        return user.scenario.name === scenario.name;
      }));
      const completedUsers =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[198]++, scenarioUsers.filter(user => {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().f[39]++;
        cov_1b9ipvx3qr().s[199]++;
        return /* istanbul ignore next */(cov_1b9ipvx3qr().b[30][0]++, !user.isActive) ||
        /* istanbul ignore next */
        (cov_1b9ipvx3qr().b[30][1]++, user.errors.length === 0);
      }));
      const totalErrors =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[200]++, scenarioUsers.reduce((sum, user) => {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().f[40]++;
        cov_1b9ipvx3qr().s[201]++;
        return sum + user.errors.length;
      }, 0));
      const totalTime =
      /* istanbul ignore next */
      (cov_1b9ipvx3qr().s[202]++, scenarioUsers.reduce((sum, user) => {
        /* istanbul ignore next */
        cov_1b9ipvx3qr().f[41]++;
        cov_1b9ipvx3qr().s[203]++;
        return sum + (Date.now() - user.startTime);
      }, 0));
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[204]++;
      return {
        name: scenario.name,
        completionRate: scenarioUsers.length > 0 ?
        /* istanbul ignore next */
        (cov_1b9ipvx3qr().b[31][0]++, completedUsers.length / scenarioUsers.length) :
        /* istanbul ignore next */
        (cov_1b9ipvx3qr().b[31][1]++, 0),
        averageTime: scenarioUsers.length > 0 ?
        /* istanbul ignore next */
        (cov_1b9ipvx3qr().b[32][0]++, totalTime / scenarioUsers.length) :
        /* istanbul ignore next */
        (cov_1b9ipvx3qr().b[32][1]++, 0),
        errorCount: totalErrors
      };
    });
    // Final calculations
    const elapsedSeconds =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[205]++, this.testResults.duration / 1000);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[206]++;
    this.testResults.throughput = this.testResults.totalRequests / elapsedSeconds;
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[207]++;
    this.logger.info(`Test Results Summary:`);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[208]++;
    this.logger.info(`- Duration: ${this.testResults.duration}ms`);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[209]++;
    this.logger.info(`- Total Requests: ${this.testResults.totalRequests}`);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[210]++;
    this.logger.info(`- Success Rate: ${((1 - this.testResults.errorRate) * 100).toFixed(2)}%`);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[211]++;
    this.logger.info(`- Throughput: ${this.testResults.throughput.toFixed(2)} RPS`);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[212]++;
    this.logger.info(`- P95 Response Time: ${this.testResults.p95ResponseTime}ms`);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[213]++;
    this.logger.info(`- Peak Memory: ${(this.testResults.memoryUsage.peak / 1024 / 1024).toFixed(2)}MB`);
    // Check if test passed performance criteria
    const passed =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[214]++, this.evaluateTestResults(config));
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[215]++;
    this.testResults.memoryUsage.average = this.testResults.memoryUsage.peak; // Simplified
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[216]++;
    this.emit('test_evaluated', {
      passed,
      results: this.testResults
    });
  }
  // Evaluate test results against performance criteria
  evaluateTestResults(config) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[42]++;
    const {
      performance
    } =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[217]++, config);
    let passed =
    /* istanbul ignore next */
    (cov_1b9ipvx3qr().s[218]++, true);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[219]++;
    if (this.testResults.p95ResponseTime > performance.targetResponseTime) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[33][0]++;
      cov_1b9ipvx3qr().s[220]++;
      this.logger.warn(`P95 response time exceeded target: ${this.testResults.p95ResponseTime}ms > ${performance.targetResponseTime}ms`);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[221]++;
      passed = false;
    } else
    /* istanbul ignore next */
    {
      cov_1b9ipvx3qr().b[33][1]++;
    }
    cov_1b9ipvx3qr().s[222]++;
    if (this.testResults.errorRate > performance.maxErrorRate) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[34][0]++;
      cov_1b9ipvx3qr().s[223]++;
      this.logger.warn(`Error rate exceeded target: ${(this.testResults.errorRate * 100).toFixed(2)}% > ${(performance.maxErrorRate * 100).toFixed(2)}%`);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[224]++;
      passed = false;
    } else
    /* istanbul ignore next */
    {
      cov_1b9ipvx3qr().b[34][1]++;
    }
    cov_1b9ipvx3qr().s[225]++;
    if (this.testResults.throughput < performance.targetThroughput) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[35][0]++;
      cov_1b9ipvx3qr().s[226]++;
      this.logger.warn(`Throughput below target: ${this.testResults.throughput.toFixed(2)} RPS < ${performance.targetThroughput} RPS`);
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[227]++;
      passed = false;
    } else
    /* istanbul ignore next */
    {
      cov_1b9ipvx3qr().b[35][1]++;
    }
    cov_1b9ipvx3qr().s[228]++;
    return passed;
  }
  // Create empty test result
  createEmptyResult() {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[43]++;
    cov_1b9ipvx3qr().s[229]++;
    return {
      testName: '',
      startTime: 0,
      endTime: 0,
      duration: 0,
      totalUsers: 0,
      successfulConnections: 0,
      failedConnections: 0,
      totalRequests: 0,
      successfulRequests: 0,
      failedRequests: 0,
      averageResponseTime: 0,
      p95ResponseTime: 0,
      p99ResponseTime: 0,
      throughput: 0,
      errorRate: 0,
      memoryUsage: {
        peak: 0,
        average: 0
      },
      cpuUsage: {
        peak: 0,
        average: 0
      },
      networkStats: {
        bytesReceived: 0,
        bytesSent: 0,
        packetsLost: 0
      },
      errors: [],
      scenarios: []
    };
  }
  // Utility method for delays
  sleep(ms) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[44]++;
    cov_1b9ipvx3qr().s[230]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().f[45]++;
      cov_1b9ipvx3qr().s[231]++;
      return setTimeout(resolve, ms);
    });
  }
  // Get available test configurations
  getAvailableTests() {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[46]++;
    cov_1b9ipvx3qr().s[232]++;
    return Object.keys(LOAD_TEST_CONFIGS);
  }
  // Get test configuration
  getTestConfig(name) {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[47]++;
    cov_1b9ipvx3qr().s[233]++;
    return LOAD_TEST_CONFIGS[name];
  }
  // Stop running test
  async stopTest() {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[48]++;
    cov_1b9ipvx3qr().s[234]++;
    if (!this.isRunning) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().b[36][0]++;
      cov_1b9ipvx3qr().s[235]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1b9ipvx3qr().b[36][1]++;
    }
    cov_1b9ipvx3qr().s[236]++;
    this.logger.info('Stopping load test...');
    // Mark all users as inactive
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[237]++;
    for (const user of Array.from(this.virtualUsers.values())) {
      /* istanbul ignore next */
      cov_1b9ipvx3qr().s[238]++;
      user.isActive = false;
    }
    // Cleanup will be handled by the main test loop
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[239]++;
    await this.cleanup();
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[240]++;
    this.isRunning = false;
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[241]++;
    this.emit('test_stopped', this.testResults);
  }
}
/* istanbul ignore next */
cov_1b9ipvx3qr().s[242]++;
exports.LoadTestRunner = LoadTestRunner;
// Factory function for creating test runner
function createLoadTestRunner() {
  /* istanbul ignore next */
  cov_1b9ipvx3qr().f[49]++;
  cov_1b9ipvx3qr().s[243]++;
  return new LoadTestRunner();
}
// CLI interface for running tests
/* istanbul ignore next */
cov_1b9ipvx3qr().s[244]++;
if (require.main === module) {
  /* istanbul ignore next */
  cov_1b9ipvx3qr().b[37][0]++;
  const testName =
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().s[245]++,
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().b[38][0]++, process.argv[2]) ||
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().b[38][1]++, 'halo-arena-stress'));
  const runner =
  /* istanbul ignore next */
  (cov_1b9ipvx3qr().s[246]++, createLoadTestRunner());
  /* istanbul ignore next */
  cov_1b9ipvx3qr().s[247]++;
  runner.on('test_progress', progress => {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[50]++;
    cov_1b9ipvx3qr().s[248]++;
    console.log(`Progress: ${progress.progress.toFixed(1)}% (${progress.activeUsers} active users)`);
  });
  /* istanbul ignore next */
  cov_1b9ipvx3qr().s[249]++;
  runner.on('metrics_update', metrics => {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[51]++;
    cov_1b9ipvx3qr().s[250]++;
    console.log(`Metrics: ${metrics.totalRequests} reqs, ${metrics.throughput.toFixed(1)} RPS, ${(metrics.errorRate * 100).toFixed(2)}% errors`);
  });
  /* istanbul ignore next */
  cov_1b9ipvx3qr().s[251]++;
  runner.on('test_completed', results => {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[52]++;
    cov_1b9ipvx3qr().s[252]++;
    console.log('\n=== Test Completed ===');
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[253]++;
    console.log(JSON.stringify(results, null, 2));
  });
  /* istanbul ignore next */
  cov_1b9ipvx3qr().s[254]++;
  console.log(`Starting load test: ${testName}`);
  /* istanbul ignore next */
  cov_1b9ipvx3qr().s[255]++;
  runner.runTest(testName).then(() => {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[53]++;
    cov_1b9ipvx3qr().s[256]++;
    console.log('Load test completed successfully');
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[257]++;
    process.exit(0);
  }).catch(error => {
    /* istanbul ignore next */
    cov_1b9ipvx3qr().f[54]++;
    cov_1b9ipvx3qr().s[258]++;
    console.error('Load test failed:', error);
    /* istanbul ignore next */
    cov_1b9ipvx3qr().s[259]++;
    process.exit(1);
  });
} else
/* istanbul ignore next */
{
  cov_1b9ipvx3qr().b[37][1]++;
}