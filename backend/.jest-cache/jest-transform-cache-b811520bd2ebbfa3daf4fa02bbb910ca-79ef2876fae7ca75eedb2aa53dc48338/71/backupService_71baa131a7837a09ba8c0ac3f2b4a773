4be1e3a520fc10d6966660c3b8442645
"use strict";

/* istanbul ignore next */
function cov_15icdb21yd() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\backupService.ts";
  var hash = "633922eb321064475027ff12f6db58f6ee236bf7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\backupService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 55
        }
      },
      "4": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 41
        }
      },
      "6": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 9,
          column: 58
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 47
        }
      },
      "8": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "9": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 30
        }
      },
      "10": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "11": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 61
        }
      },
      "12": {
        start: {
          line: 17,
          column: 13
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "13": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "14": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 57
        }
      },
      "15": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "16": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "17": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "18": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 62
        }
      },
      "19": {
        start: {
          line: 42,
          column: 30
        },
        end: {
          line: 42,
          column: 76
        }
      },
      "20": {
        start: {
          line: 43,
          column: 31
        },
        end: {
          line: 43,
          column: 64
        }
      },
      "21": {
        start: {
          line: 44,
          column: 31
        },
        end: {
          line: 44,
          column: 88
        }
      },
      "22": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 90
        }
      },
      "23": {
        start: {
          line: 48,
          column: 29
        },
        end: {
          line: 48,
          column: 92
        }
      },
      "24": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 49,
          column: 66
        }
      },
      "25": {
        start: {
          line: 51,
          column: 32
        },
        end: {
          line: 51,
          column: 85
        }
      },
      "26": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 41
        }
      },
      "27": {
        start: {
          line: 54,
          column: 28
        },
        end: {
          line: 54,
          column: 38
        }
      },
      "28": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "29": {
        start: {
          line: 56,
          column: 39
        },
        end: {
          line: 56,
          column: 61
        }
      },
      "30": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 148
        }
      },
      "31": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 90
        }
      },
      "32": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 43
        }
      },
      "33": {
        start: {
          line: 62,
          column: 26
        },
        end: {
          line: 62,
          column: 66
        }
      },
      "34": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 35
        }
      },
      "35": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "36": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 59
        }
      },
      "37": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 94
        }
      },
      "38": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 74,
          column: 14
        }
      },
      "39": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 59
        }
      },
      "40": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 84,
          column: 14
        }
      },
      "41": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "42": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 91,
          column: 13
        }
      },
      "43": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 62
        }
      },
      "44": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 76
        }
      },
      "45": {
        start: {
          line: 93,
          column: 31
        },
        end: {
          line: 93,
          column: 71
        }
      },
      "46": {
        start: {
          line: 94,
          column: 31
        },
        end: {
          line: 94,
          column: 88
        }
      },
      "47": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 90
        }
      },
      "48": {
        start: {
          line: 98,
          column: 32
        },
        end: {
          line: 98,
          column: 61
        }
      },
      "49": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 39
        }
      },
      "50": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 42
        }
      },
      "51": {
        start: {
          line: 103,
          column: 33
        },
        end: {
          line: 103,
          column: 79
        }
      },
      "52": {
        start: {
          line: 104,
          column: 28
        },
        end: {
          line: 104,
          column: 73
        }
      },
      "53": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 67
        }
      },
      "54": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 107,
          column: 38
        }
      },
      "55": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "56": {
        start: {
          line: 109,
          column: 39
        },
        end: {
          line: 109,
          column: 57
        }
      },
      "57": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 56
        }
      },
      "58": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 43
        }
      },
      "59": {
        start: {
          line: 114,
          column: 26
        },
        end: {
          line: 114,
          column: 66
        }
      },
      "60": {
        start: {
          line: 115,
          column: 25
        },
        end: {
          line: 115,
          column: 35
        }
      },
      "61": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 119,
          column: 13
        }
      },
      "62": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 59
        }
      },
      "63": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 91
        }
      },
      "64": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 126,
          column: 14
        }
      },
      "65": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 56
        }
      },
      "66": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 136,
          column: 14
        }
      },
      "67": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 54
        }
      },
      "68": {
        start: {
          line: 141,
          column: 60
        },
        end: {
          line: 145,
          column: 10
        }
      },
      "69": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "70": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 155,
          column: 10
        }
      },
      "71": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "72": {
        start: {
          line: 159,
          column: 30
        },
        end: {
          line: 159,
          column: 76
        }
      },
      "73": {
        start: {
          line: 160,
          column: 31
        },
        end: {
          line: 160,
          column: 73
        }
      },
      "74": {
        start: {
          line: 161,
          column: 31
        },
        end: {
          line: 161,
          column: 88
        }
      },
      "75": {
        start: {
          line: 163,
          column: 31
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "76": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 96
        }
      },
      "77": {
        start: {
          line: 179,
          column: 26
        },
        end: {
          line: 179,
          column: 67
        }
      },
      "78": {
        start: {
          line: 180,
          column: 25
        },
        end: {
          line: 180,
          column: 35
        }
      },
      "79": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 186,
          column: 14
        }
      },
      "80": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 57
        }
      },
      "81": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 196,
          column: 14
        }
      },
      "82": {
        start: {
          line: 200,
          column: 28
        },
        end: {
          line: 200,
          column: 57
        }
      },
      "83": {
        start: {
          line: 201,
          column: 25
        },
        end: {
          line: 201,
          column: 53
        }
      },
      "84": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "85": {
        start: {
          line: 203,
          column: 21
        },
        end: {
          line: 203,
          column: 22
        }
      },
      "86": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 68
        }
      },
      "87": {
        start: {
          line: 204,
          column: 41
        },
        end: {
          line: 204,
          column: 66
        }
      },
      "88": {
        start: {
          line: 205,
          column: 32
        },
        end: {
          line: 205,
          column: 60
        }
      },
      "89": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "90": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 23
        }
      },
      "91": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 57
        }
      },
      "92": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 84
        }
      },
      "93": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "94": {
        start: {
          line: 219,
          column: 30
        },
        end: {
          line: 219,
          column: 54
        }
      },
      "95": {
        start: {
          line: 220,
          column: 26
        },
        end: {
          line: 220,
          column: 69
        }
      },
      "96": {
        start: {
          line: 221,
          column: 31
        },
        end: {
          line: 221,
          column: 41
        }
      },
      "97": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 77
        }
      },
      "98": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 230,
          column: 13
        }
      },
      "99": {
        start: {
          line: 224,
          column: 33
        },
        end: {
          line: 224,
          column: 69
        }
      },
      "100": {
        start: {
          line: 225,
          column: 30
        },
        end: {
          line: 225,
          column: 69
        }
      },
      "101": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 229,
          column: 17
        }
      },
      "102": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 227,
          column: 62
        }
      },
      "103": {
        start: {
          line: 228,
          column: 20
        },
        end: {
          line: 228,
          column: 63
        }
      },
      "104": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 66
        }
      },
      "105": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "106": {
        start: {
          line: 238,
          column: 29
        },
        end: {
          line: 238,
          column: 92
        }
      },
      "107": {
        start: {
          line: 239,
          column: 27
        },
        end: {
          line: 239,
          column: 66
        }
      },
      "108": {
        start: {
          line: 241,
          column: 30
        },
        end: {
          line: 241,
          column: 40
        }
      },
      "109": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "110": {
        start: {
          line: 243,
          column: 36
        },
        end: {
          line: 243,
          column: 69
        }
      },
      "111": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 244,
          column: 103
        }
      },
      "112": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 42
        }
      },
      "113": {
        start: {
          line: 248,
          column: 35
        },
        end: {
          line: 248,
          column: 93
        }
      },
      "114": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 44
        }
      },
      "115": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 78
        }
      },
      "116": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 24
        }
      },
      "117": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 60
        }
      },
      "118": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 25
        }
      },
      "119": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 34
        }
      },
      "120": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 55
        }
      },
      "121": {
        start: {
          line: 265,
          column: 0
        },
        end: {
          line: 265,
          column: 38
        }
      },
      "122": {
        start: {
          line: 266,
          column: 0
        },
        end: {
          line: 266,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 21
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 30
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 87
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 29
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 139
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 31
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 157
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 29
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 199
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 204,
            column: 30
          },
          end: {
            line: 204,
            column: 31
          }
        },
        loc: {
          start: {
            line: 204,
            column: 41
          },
          end: {
            line: 204,
            column: 66
          }
        },
        line: 204
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        loc: {
          start: {
            line: 212,
            column: 41
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 212
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        },
        loc: {
          start: {
            line: 217,
            column: 30
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 217
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 38
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 236
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 258
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 28
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 261
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 45
          }
        }, {
          start: {
            line: 19,
            column: 49
          },
          end: {
            line: 19,
            column: 60
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 20,
            column: 28
          },
          end: {
            line: 20,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 28
          },
          end: {
            line: 20,
            column: 56
          }
        }, {
          start: {
            line: 20,
            column: 60
          },
          end: {
            line: 20,
            column: 64
          }
        }],
        line: 20
      },
      "5": {
        loc: {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 49
          }
        }, {
          start: {
            line: 24,
            column: 53
          },
          end: {
            line: 24,
            column: 60
          }
        }],
        line: 24
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 49
          }
        }, {
          start: {
            line: 25,
            column: 53
          },
          end: {
            line: 25,
            column: 64
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 29
          },
          end: {
            line: 48,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 29
          },
          end: {
            line: 48,
            column: 52
          }
        }, {
          start: {
            line: 48,
            column: 56
          },
          end: {
            line: 48,
            column: 92
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "11": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "12": {
        loc: {
          start: {
            line: 83,
            column: 23
          },
          end: {
            line: 83,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 48
          },
          end: {
            line: 83,
            column: 61
          }
        }, {
          start: {
            line: 83,
            column: 64
          },
          end: {
            line: 83,
            column: 79
          }
        }],
        line: 83
      },
      "13": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "14": {
        loc: {
          start: {
            line: 103,
            column: 33
          },
          end: {
            line: 103,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 33
          },
          end: {
            line: 103,
            column: 59
          }
        }, {
          start: {
            line: 103,
            column: 63
          },
          end: {
            line: 103,
            column: 79
          }
        }],
        line: 103
      },
      "15": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "16": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "17": {
        loc: {
          start: {
            line: 135,
            column: 23
          },
          end: {
            line: 135,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 48
          },
          end: {
            line: 135,
            column: 61
          }
        }, {
          start: {
            line: 135,
            column: 64
          },
          end: {
            line: 135,
            column: 79
          }
        }],
        line: 135
      },
      "18": {
        loc: {
          start: {
            line: 174,
            column: 30
          },
          end: {
            line: 174,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 30
          },
          end: {
            line: 174,
            column: 65
          }
        }, {
          start: {
            line: 174,
            column: 69
          },
          end: {
            line: 174,
            column: 71
          }
        }],
        line: 174
      },
      "19": {
        loc: {
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 195,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 195,
            column: 48
          },
          end: {
            line: 195,
            column: 61
          }
        }, {
          start: {
            line: 195,
            column: 64
          },
          end: {
            line: 195,
            column: 79
          }
        }],
        line: 195
      },
      "20": {
        loc: {
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "21": {
        loc: {
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 229,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 229,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "22": {
        loc: {
          start: {
            line: 238,
            column: 29
          },
          end: {
            line: 238,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 29
          },
          end: {
            line: 238,
            column: 52
          }
        }, {
          start: {
            line: 238,
            column: 56
          },
          end: {
            line: 238,
            column: 92
          }
        }],
        line: 238
      },
      "23": {
        loc: {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "633922eb321064475027ff12f6db58f6ee236bf7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15icdb21yd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15icdb21yd();
var __importDefault =
/* istanbul ignore next */
(cov_15icdb21yd().s[0]++,
/* istanbul ignore next */
(cov_15icdb21yd().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_15icdb21yd().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_15icdb21yd().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_15icdb21yd().f[0]++;
  cov_15icdb21yd().s[1]++;
  return /* istanbul ignore next */(cov_15icdb21yd().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_15icdb21yd().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_15icdb21yd().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_15icdb21yd().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_15icdb21yd().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_15icdb21yd().s[3]++;
exports.backupService = exports.BackupService = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_15icdb21yd().s[4]++, require("@/config/logger"));
const redis_1 =
/* istanbul ignore next */
(cov_15icdb21yd().s[5]++, require("@/config/redis"));
const promises_1 =
/* istanbul ignore next */
(cov_15icdb21yd().s[6]++, __importDefault(require("fs/promises")));
const path_1 =
/* istanbul ignore next */
(cov_15icdb21yd().s[7]++, __importDefault(require("path")));
const child_process_1 =
/* istanbul ignore next */
(cov_15icdb21yd().s[8]++, require("child_process"));
const util_1 =
/* istanbul ignore next */
(cov_15icdb21yd().s[9]++, require("util"));
const logger =
/* istanbul ignore next */
(cov_15icdb21yd().s[10]++, (0, logger_1.setupLogger)());
const execAsync =
/* istanbul ignore next */
(cov_15icdb21yd().s[11]++, (0, util_1.promisify)(child_process_1.exec));
class BackupService {
  static instance;
  config =
  /* istanbul ignore next */
  (cov_15icdb21yd().s[12]++, {
    enabled: process.env.BACKUP_ENABLED === 'true',
    schedule:
    /* istanbul ignore next */
    (cov_15icdb21yd().b[3][0]++, process.env.BACKUP_SCHEDULE) ||
    /* istanbul ignore next */
    (cov_15icdb21yd().b[3][1]++, '0 2 * * *'),
    // Daily at 2 AM
    retention: parseInt(
    /* istanbul ignore next */
    (cov_15icdb21yd().b[4][0]++, process.env.BACKUP_RETENTION) ||
    /* istanbul ignore next */
    (cov_15icdb21yd().b[4][1]++, '30')),
    compression: process.env.BACKUP_COMPRESSION !== 'false',
    encryption: process.env.BACKUP_ENCRYPTION === 'true',
    storage: {
      type:
      /* istanbul ignore next */
      (cov_15icdb21yd().b[5][0]++, process.env.BACKUP_STORAGE_TYPE) ||
      /* istanbul ignore next */
      (cov_15icdb21yd().b[5][1]++, 'local'),
      path:
      /* istanbul ignore next */
      (cov_15icdb21yd().b[6][0]++, process.env.BACKUP_STORAGE_PATH) ||
      /* istanbul ignore next */
      (cov_15icdb21yd().b[6][1]++, './backups'),
      bucket: process.env.BACKUP_STORAGE_BUCKET,
      region: process.env.BACKUP_STORAGE_REGION
    }
  });
  constructor() {
    /* istanbul ignore next */
    cov_15icdb21yd().f[1]++;
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_15icdb21yd().f[2]++;
    cov_15icdb21yd().s[13]++;
    if (!BackupService.instance) {
      /* istanbul ignore next */
      cov_15icdb21yd().b[7][0]++;
      cov_15icdb21yd().s[14]++;
      BackupService.instance = new BackupService();
    } else
    /* istanbul ignore next */
    {
      cov_15icdb21yd().b[7][1]++;
    }
    cov_15icdb21yd().s[15]++;
    return BackupService.instance;
  }
  async createDatabaseBackup() {
    /* istanbul ignore next */
    cov_15icdb21yd().f[3]++;
    cov_15icdb21yd().s[16]++;
    try {
      /* istanbul ignore next */
      cov_15icdb21yd().s[17]++;
      if (!this.config.enabled) {
        /* istanbul ignore next */
        cov_15icdb21yd().b[8][0]++;
        cov_15icdb21yd().s[18]++;
        throw new Error('Backup service is disabled');
      } else
      /* istanbul ignore next */
      {
        cov_15icdb21yd().b[8][1]++;
      }
      const timestamp =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[19]++, new Date().toISOString().replace(/[:.]/g, '-'));
      const backupName =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[20]++, `halobuzz-db-backup-${timestamp}`);
      const backupPath =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[21]++, path_1.default.join(this.config.storage.path, backupName));
      // Ensure backup directory exists
      /* istanbul ignore next */
      cov_15icdb21yd().s[22]++;
      await promises_1.default.mkdir(this.config.storage.path, {
        recursive: true
      });
      // Get MongoDB connection string
      const mongoUri =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[23]++,
      /* istanbul ignore next */
      (cov_15icdb21yd().b[9][0]++, process.env.MONGODB_URI) ||
      /* istanbul ignore next */
      (cov_15icdb21yd().b[9][1]++, 'mongodb://localhost:27017/halobuzz'));
      const dbName =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[24]++, new URL(mongoUri).pathname.substring(1));
      // Create MongoDB dump
      const dumpCommand =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[25]++, `mongodump --uri="${mongoUri}" --out="${backupPath}"`);
      /* istanbul ignore next */
      cov_15icdb21yd().s[26]++;
      await execAsync(dumpCommand);
      // Compress if enabled
      let finalPath =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[27]++, backupPath);
      /* istanbul ignore next */
      cov_15icdb21yd().s[28]++;
      if (this.config.compression) {
        /* istanbul ignore next */
        cov_15icdb21yd().b[10][0]++;
        const compressedPath =
        /* istanbul ignore next */
        (cov_15icdb21yd().s[29]++, `${backupPath}.tar.gz`);
        /* istanbul ignore next */
        cov_15icdb21yd().s[30]++;
        await execAsync(`tar -czf "${compressedPath}" -C "${path_1.default.dirname(backupPath)}" "${path_1.default.basename(backupPath)}"`);
        /* istanbul ignore next */
        cov_15icdb21yd().s[31]++;
        await promises_1.default.rm(backupPath, {
          recursive: true,
          force: true
        });
        /* istanbul ignore next */
        cov_15icdb21yd().s[32]++;
        finalPath = compressedPath;
      } else
      /* istanbul ignore next */
      {
        cov_15icdb21yd().b[10][1]++;
      }
      // Get file size
      const stats =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[33]++, await promises_1.default.stat(finalPath));
      const size =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[34]++, stats.size);
      // Upload to cloud storage if configured
      /* istanbul ignore next */
      cov_15icdb21yd().s[35]++;
      if (this.config.storage.type !== 'local') {
        /* istanbul ignore next */
        cov_15icdb21yd().b[11][0]++;
        cov_15icdb21yd().s[36]++;
        await this.uploadToCloudStorage(finalPath);
      } else
      /* istanbul ignore next */
      {
        cov_15icdb21yd().b[11][1]++;
      }
      cov_15icdb21yd().s[37]++;
      logger.info(`Database backup created successfully: ${finalPath} (${size} bytes)`);
      /* istanbul ignore next */
      cov_15icdb21yd().s[38]++;
      return {
        success: true,
        timestamp: new Date(),
        size,
        path: finalPath
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15icdb21yd().s[39]++;
      logger.error('Database backup failed:', error);
      /* istanbul ignore next */
      cov_15icdb21yd().s[40]++;
      return {
        success: false,
        timestamp: new Date(),
        size: 0,
        path: '',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_15icdb21yd().b[12][0]++, error.message) :
        /* istanbul ignore next */
        (cov_15icdb21yd().b[12][1]++, 'Unknown error')
      };
    }
  }
  async createRedisBackup() {
    /* istanbul ignore next */
    cov_15icdb21yd().f[4]++;
    cov_15icdb21yd().s[41]++;
    try {
      /* istanbul ignore next */
      cov_15icdb21yd().s[42]++;
      if (!this.config.enabled) {
        /* istanbul ignore next */
        cov_15icdb21yd().b[13][0]++;
        cov_15icdb21yd().s[43]++;
        throw new Error('Backup service is disabled');
      } else
      /* istanbul ignore next */
      {
        cov_15icdb21yd().b[13][1]++;
      }
      const timestamp =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[44]++, new Date().toISOString().replace(/[:.]/g, '-'));
      const backupName =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[45]++, `halobuzz-redis-backup-${timestamp}.rdb`);
      const backupPath =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[46]++, path_1.default.join(this.config.storage.path, backupName));
      // Ensure backup directory exists
      /* istanbul ignore next */
      cov_15icdb21yd().s[47]++;
      await promises_1.default.mkdir(this.config.storage.path, {
        recursive: true
      });
      // Trigger Redis BGSAVE
      const redisClient =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[48]++, (0, redis_1.getRedisClient)());
      /* istanbul ignore next */
      cov_15icdb21yd().s[49]++;
      await redisClient.bgSave();
      // Wait for background save to complete
      /* istanbul ignore next */
      cov_15icdb21yd().s[50]++;
      await this.waitForRedisSave();
      // Copy the RDB file
      const redisDataDir =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[51]++,
      /* istanbul ignore next */
      (cov_15icdb21yd().b[14][0]++, process.env.REDIS_DATA_DIR) ||
      /* istanbul ignore next */
      (cov_15icdb21yd().b[14][1]++, '/var/lib/redis'));
      const rdbFile =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[52]++, path_1.default.join(redisDataDir, 'dump.rdb'));
      /* istanbul ignore next */
      cov_15icdb21yd().s[53]++;
      await promises_1.default.copyFile(rdbFile, backupPath);
      // Compress if enabled
      let finalPath =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[54]++, backupPath);
      /* istanbul ignore next */
      cov_15icdb21yd().s[55]++;
      if (this.config.compression) {
        /* istanbul ignore next */
        cov_15icdb21yd().b[15][0]++;
        const compressedPath =
        /* istanbul ignore next */
        (cov_15icdb21yd().s[56]++, `${backupPath}.gz`);
        /* istanbul ignore next */
        cov_15icdb21yd().s[57]++;
        await execAsync(`gzip "${backupPath}"`);
        /* istanbul ignore next */
        cov_15icdb21yd().s[58]++;
        finalPath = compressedPath;
      } else
      /* istanbul ignore next */
      {
        cov_15icdb21yd().b[15][1]++;
      }
      // Get file size
      const stats =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[59]++, await promises_1.default.stat(finalPath));
      const size =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[60]++, stats.size);
      // Upload to cloud storage if configured
      /* istanbul ignore next */
      cov_15icdb21yd().s[61]++;
      if (this.config.storage.type !== 'local') {
        /* istanbul ignore next */
        cov_15icdb21yd().b[16][0]++;
        cov_15icdb21yd().s[62]++;
        await this.uploadToCloudStorage(finalPath);
      } else
      /* istanbul ignore next */
      {
        cov_15icdb21yd().b[16][1]++;
      }
      cov_15icdb21yd().s[63]++;
      logger.info(`Redis backup created successfully: ${finalPath} (${size} bytes)`);
      /* istanbul ignore next */
      cov_15icdb21yd().s[64]++;
      return {
        success: true,
        timestamp: new Date(),
        size,
        path: finalPath
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15icdb21yd().s[65]++;
      logger.error('Redis backup failed:', error);
      /* istanbul ignore next */
      cov_15icdb21yd().s[66]++;
      return {
        success: false,
        timestamp: new Date(),
        size: 0,
        path: '',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_15icdb21yd().b[17][0]++, error.message) :
        /* istanbul ignore next */
        (cov_15icdb21yd().b[17][1]++, 'Unknown error')
      };
    }
  }
  async createFullBackup() {
    /* istanbul ignore next */
    cov_15icdb21yd().f[5]++;
    cov_15icdb21yd().s[67]++;
    logger.info('Starting full system backup...');
    const [databaseBackup, redisBackup, configBackup] =
    /* istanbul ignore next */
    (cov_15icdb21yd().s[68]++, await Promise.all([this.createDatabaseBackup(), this.createRedisBackup(), this.createConfigBackup()]));
    /* istanbul ignore next */
    cov_15icdb21yd().s[69]++;
    logger.info('Full system backup completed', {
      database: databaseBackup.success,
      redis: redisBackup.success,
      config: configBackup.success
    });
    /* istanbul ignore next */
    cov_15icdb21yd().s[70]++;
    return {
      database: databaseBackup,
      redis: redisBackup,
      config: configBackup
    };
  }
  async createConfigBackup() {
    /* istanbul ignore next */
    cov_15icdb21yd().f[6]++;
    cov_15icdb21yd().s[71]++;
    try {
      const timestamp =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[72]++, new Date().toISOString().replace(/[:.]/g, '-'));
      const backupName =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[73]++, `halobuzz-config-backup-${timestamp}.json`);
      const backupPath =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[74]++, path_1.default.join(this.config.storage.path, backupName));
      // Collect configuration data
      const configData =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[75]++, {
        timestamp: new Date().toISOString(),
        environment: process.env.NODE_ENV,
        version: process.env.npm_package_version,
        features: {
          backup: this.config,
          monitoring: {
            enabled: process.env.MONITORING_ENABLED === 'true'
          },
          security: {
            rateLimiting: process.env.RATE_LIMITING_ENABLED !== 'false',
            cors:
            /* istanbul ignore next */
            (cov_15icdb21yd().b[18][0]++, process.env.CORS_ORIGIN?.split(',')) ||
            /* istanbul ignore next */
            (cov_15icdb21yd().b[18][1]++, [])
          }
        }
      });
      /* istanbul ignore next */
      cov_15icdb21yd().s[76]++;
      await promises_1.default.writeFile(backupPath, JSON.stringify(configData, null, 2));
      const stats =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[77]++, await promises_1.default.stat(backupPath));
      const size =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[78]++, stats.size);
      /* istanbul ignore next */
      cov_15icdb21yd().s[79]++;
      return {
        success: true,
        timestamp: new Date(),
        size,
        path: backupPath
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15icdb21yd().s[80]++;
      logger.error('Config backup failed:', error);
      /* istanbul ignore next */
      cov_15icdb21yd().s[81]++;
      return {
        success: false,
        timestamp: new Date(),
        size: 0,
        path: '',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_15icdb21yd().b[19][0]++, error.message) :
        /* istanbul ignore next */
        (cov_15icdb21yd().b[19][1]++, 'Unknown error')
      };
    }
  }
  async waitForRedisSave() {
    /* istanbul ignore next */
    cov_15icdb21yd().f[7]++;
    const redisClient =
    /* istanbul ignore next */
    (cov_15icdb21yd().s[82]++, (0, redis_1.getRedisClient)());
    const lastSave =
    /* istanbul ignore next */
    (cov_15icdb21yd().s[83]++, await redisClient.lastSave());
    // Wait up to 30 seconds for background save to complete
    /* istanbul ignore next */
    cov_15icdb21yd().s[84]++;
    for (let i =
    /* istanbul ignore next */
    (cov_15icdb21yd().s[85]++, 0); i < 30; i++) {
      /* istanbul ignore next */
      cov_15icdb21yd().s[86]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_15icdb21yd().f[8]++;
        cov_15icdb21yd().s[87]++;
        return setTimeout(resolve, 1000);
      });
      const currentSave =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[88]++, await redisClient.lastSave());
      /* istanbul ignore next */
      cov_15icdb21yd().s[89]++;
      if (currentSave > lastSave) {
        /* istanbul ignore next */
        cov_15icdb21yd().b[20][0]++;
        cov_15icdb21yd().s[90]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_15icdb21yd().b[20][1]++;
      }
    }
    /* istanbul ignore next */
    cov_15icdb21yd().s[91]++;
    throw new Error('Redis background save timeout');
  }
  async uploadToCloudStorage(filePath) {
    /* istanbul ignore next */
    cov_15icdb21yd().f[9]++;
    cov_15icdb21yd().s[92]++;
    // Implementation would depend on the storage type
    // This is a placeholder for S3/GCS upload logic
    logger.info(`Uploading ${filePath} to ${this.config.storage.type} storage`);
  }
  async cleanupOldBackups() {
    /* istanbul ignore next */
    cov_15icdb21yd().f[10]++;
    cov_15icdb21yd().s[93]++;
    try {
      const backupDir =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[94]++, this.config.storage.path);
      const files =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[95]++, await promises_1.default.readdir(backupDir));
      const cutoffDate =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[96]++, new Date());
      /* istanbul ignore next */
      cov_15icdb21yd().s[97]++;
      cutoffDate.setDate(cutoffDate.getDate() - this.config.retention);
      /* istanbul ignore next */
      cov_15icdb21yd().s[98]++;
      for (const file of files) {
        const filePath =
        /* istanbul ignore next */
        (cov_15icdb21yd().s[99]++, path_1.default.join(backupDir, file));
        const stats =
        /* istanbul ignore next */
        (cov_15icdb21yd().s[100]++, await promises_1.default.stat(filePath));
        /* istanbul ignore next */
        cov_15icdb21yd().s[101]++;
        if (stats.mtime < cutoffDate) {
          /* istanbul ignore next */
          cov_15icdb21yd().b[21][0]++;
          cov_15icdb21yd().s[102]++;
          await promises_1.default.unlink(filePath);
          /* istanbul ignore next */
          cov_15icdb21yd().s[103]++;
          logger.info(`Deleted old backup: ${file}`);
        } else
        /* istanbul ignore next */
        {
          cov_15icdb21yd().b[21][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_15icdb21yd().s[104]++;
      logger.error('Error cleaning up old backups:', error);
    }
  }
  async restoreDatabase(backupPath) {
    /* istanbul ignore next */
    cov_15icdb21yd().f[11]++;
    cov_15icdb21yd().s[105]++;
    try {
      const mongoUri =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[106]++,
      /* istanbul ignore next */
      (cov_15icdb21yd().b[22][0]++, process.env.MONGODB_URI) ||
      /* istanbul ignore next */
      (cov_15icdb21yd().b[22][1]++, 'mongodb://localhost:27017/halobuzz'));
      const dbName =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[107]++, new URL(mongoUri).pathname.substring(1));
      // Extract if compressed
      let restorePath =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[108]++, backupPath);
      /* istanbul ignore next */
      cov_15icdb21yd().s[109]++;
      if (backupPath.endsWith('.tar.gz')) {
        /* istanbul ignore next */
        cov_15icdb21yd().b[23][0]++;
        const extractPath =
        /* istanbul ignore next */
        (cov_15icdb21yd().s[110]++, backupPath.replace('.tar.gz', ''));
        /* istanbul ignore next */
        cov_15icdb21yd().s[111]++;
        await execAsync(`tar -xzf "${backupPath}" -C "${path_1.default.dirname(backupPath)}"`);
        /* istanbul ignore next */
        cov_15icdb21yd().s[112]++;
        restorePath = extractPath;
      } else
      /* istanbul ignore next */
      {
        cov_15icdb21yd().b[23][1]++;
      }
      // Restore MongoDB dump
      const restoreCommand =
      /* istanbul ignore next */
      (cov_15icdb21yd().s[113]++, `mongorestore --uri="${mongoUri}" --drop "${restorePath}"`);
      /* istanbul ignore next */
      cov_15icdb21yd().s[114]++;
      await execAsync(restoreCommand);
      /* istanbul ignore next */
      cov_15icdb21yd().s[115]++;
      logger.info(`Database restored successfully from: ${backupPath}`);
      /* istanbul ignore next */
      cov_15icdb21yd().s[116]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_15icdb21yd().s[117]++;
      logger.error('Database restore failed:', error);
      /* istanbul ignore next */
      cov_15icdb21yd().s[118]++;
      return false;
    }
  }
  getConfig() {
    /* istanbul ignore next */
    cov_15icdb21yd().f[12]++;
    cov_15icdb21yd().s[119]++;
    return {
      ...this.config
    };
  }
  updateConfig(newConfig) {
    /* istanbul ignore next */
    cov_15icdb21yd().f[13]++;
    cov_15icdb21yd().s[120]++;
    this.config = {
      ...this.config,
      ...newConfig
    };
  }
}
/* istanbul ignore next */
cov_15icdb21yd().s[121]++;
exports.BackupService = BackupService;
/* istanbul ignore next */
cov_15icdb21yd().s[122]++;
exports.backupService = BackupService.getInstance();