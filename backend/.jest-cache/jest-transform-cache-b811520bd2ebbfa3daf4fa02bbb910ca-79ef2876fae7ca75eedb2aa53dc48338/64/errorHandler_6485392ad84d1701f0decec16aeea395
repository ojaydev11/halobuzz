56693483d219593456d4137cf08426b7
"use strict";

/* istanbul ignore next */
function cov_1zynsr3urh() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\middleware\\errorHandler.ts";
  var hash = "8c1ff14b5a306aa608fe52693fd2abe00096d13e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\middleware\\errorHandler.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 79
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 42
        }
      },
      "4": {
        start: {
          line: 6,
          column: 21
        },
        end: {
          line: 68,
          column: 1
        }
      },
      "5": {
        start: {
          line: 7,
          column: 19
        },
        end: {
          line: 7,
          column: 58
        }
      },
      "6": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 8,
          column: 60
        }
      },
      "7": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 17,
          column: 7
        }
      },
      "8": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 19,
          column: 64
        }
      },
      "9": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "10": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 31,
          column: 11
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "13": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "15": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 15
        }
      },
      "16": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "17": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "18": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "19": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "20": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "21": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "22": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "23": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "24": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "25": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 43
        }
      },
      "26": {
        start: {
          line: 69,
          column: 0
        },
        end: {
          line: 69,
          column: 36
        }
      },
      "27": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "28": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "29": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 79,
          column: 42
        }
      },
      "30": {
        start: {
          line: 81,
          column: 21
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "31": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 84,
          column: 6
        }
      },
      "32": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 56
        }
      },
      "33": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 86,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 22
          }
        },
        loc: {
          start: {
            line: 6,
            column: 48
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 71,
            column: 24
          },
          end: {
            line: 71,
            column: 25
          }
        },
        loc: {
          start: {
            line: 71,
            column: 38
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 71
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 81,
            column: 21
          },
          end: {
            line: 81,
            column: 22
          }
        },
        loc: {
          start: {
            line: 81,
            column: 29
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 81
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 82,
            column: 11
          },
          end: {
            line: 82,
            column: 12
          }
        },
        loc: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 82
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 19
          },
          end: {
            line: 7,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 19
          },
          end: {
            line: 7,
            column: 31
          }
        }, {
          start: {
            line: 7,
            column: 35
          },
          end: {
            line: 7,
            column: 51
          }
        }, {
          start: {
            line: 7,
            column: 55
          },
          end: {
            line: 7,
            column: 58
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 8,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 8,
            column: 33
          }
        }, {
          start: {
            line: 8,
            column: 37
          },
          end: {
            line: 8,
            column: 60
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 22,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 22,
            column: 40
          }
        }, {
          start: {
            line: 22,
            column: 43
          },
          end: {
            line: 22,
            column: 62
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 25
          }
        }, {
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 23,
            column: 51
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 35
          }
        }, {
          start: {
            line: 42,
            column: 39
          },
          end: {
            line: 42,
            column: 59
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8c1ff14b5a306aa608fe52693fd2abe00096d13e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1zynsr3urh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1zynsr3urh();
cov_1zynsr3urh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1zynsr3urh().s[1]++;
exports.asyncHandler = exports.notFoundHandler = exports.errorHandler = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_1zynsr3urh().s[2]++, require("@/config/logger"));
const logger =
/* istanbul ignore next */
(cov_1zynsr3urh().s[3]++, (0, logger_1.setupLogger)());
/* istanbul ignore next */
cov_1zynsr3urh().s[4]++;
const errorHandler = (error, req, res, next) => {
  /* istanbul ignore next */
  cov_1zynsr3urh().f[0]++;
  const status =
  /* istanbul ignore next */
  (cov_1zynsr3urh().s[5]++,
  /* istanbul ignore next */
  (cov_1zynsr3urh().b[0][0]++, error.status) ||
  /* istanbul ignore next */
  (cov_1zynsr3urh().b[0][1]++, error.statusCode) ||
  /* istanbul ignore next */
  (cov_1zynsr3urh().b[0][2]++, 500));
  const message =
  /* istanbul ignore next */
  (cov_1zynsr3urh().s[6]++,
  /* istanbul ignore next */
  (cov_1zynsr3urh().b[1][0]++, error.message) ||
  /* istanbul ignore next */
  (cov_1zynsr3urh().b[1][1]++, 'Internal Server Error'));
  // Log error
  /* istanbul ignore next */
  cov_1zynsr3urh().s[7]++;
  logger.error('Error occurred:', {
    error: error.message,
    stack: error.stack,
    url: req.url,
    method: req.method,
    ip: req.ip,
    userAgent: req.get('User-Agent')
  });
  // Don't leak error details in production
  const isDevelopment =
  /* istanbul ignore next */
  (cov_1zynsr3urh().s[8]++, process.env.NODE_ENV === 'development');
  const errorResponse =
  /* istanbul ignore next */
  (cov_1zynsr3urh().s[9]++, {
    error: true,
    message: isDevelopment ?
    /* istanbul ignore next */
    (cov_1zynsr3urh().b[2][0]++, message) :
    /* istanbul ignore next */
    (cov_1zynsr3urh().b[2][1]++, 'An error occurred'),
    ...(
    /* istanbul ignore next */
    (cov_1zynsr3urh().b[3][0]++, isDevelopment) &&
    /* istanbul ignore next */
    (cov_1zynsr3urh().b[3][1]++, {
      stack: error.stack
    }))
  });
  // Handle specific error types
  /* istanbul ignore next */
  cov_1zynsr3urh().s[10]++;
  if (error.name === 'ValidationError') {
    /* istanbul ignore next */
    cov_1zynsr3urh().b[4][0]++;
    cov_1zynsr3urh().s[11]++;
    res.status(400).json({
      error: true,
      message: 'Validation Error',
      details: error.message
    });
    /* istanbul ignore next */
    cov_1zynsr3urh().s[12]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1zynsr3urh().b[4][1]++;
  }
  cov_1zynsr3urh().s[13]++;
  if (error.name === 'CastError') {
    /* istanbul ignore next */
    cov_1zynsr3urh().b[5][0]++;
    cov_1zynsr3urh().s[14]++;
    res.status(400).json({
      error: true,
      message: 'Invalid ID format',
      details: 'The provided ID is not valid'
    });
    /* istanbul ignore next */
    cov_1zynsr3urh().s[15]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1zynsr3urh().b[5][1]++;
  }
  cov_1zynsr3urh().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_1zynsr3urh().b[7][0]++, error.name === 'MongoError') &&
  /* istanbul ignore next */
  (cov_1zynsr3urh().b[7][1]++, error.code === 11000)) {
    /* istanbul ignore next */
    cov_1zynsr3urh().b[6][0]++;
    cov_1zynsr3urh().s[17]++;
    res.status(409).json({
      error: true,
      message: 'Duplicate Error',
      details: 'A record with this information already exists'
    });
    /* istanbul ignore next */
    cov_1zynsr3urh().s[18]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1zynsr3urh().b[6][1]++;
  }
  cov_1zynsr3urh().s[19]++;
  if (error.name === 'JsonWebTokenError') {
    /* istanbul ignore next */
    cov_1zynsr3urh().b[8][0]++;
    cov_1zynsr3urh().s[20]++;
    res.status(401).json({
      error: true,
      message: 'Invalid Token',
      details: 'The provided token is invalid'
    });
    /* istanbul ignore next */
    cov_1zynsr3urh().s[21]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1zynsr3urh().b[8][1]++;
  }
  cov_1zynsr3urh().s[22]++;
  if (error.name === 'TokenExpiredError') {
    /* istanbul ignore next */
    cov_1zynsr3urh().b[9][0]++;
    cov_1zynsr3urh().s[23]++;
    res.status(401).json({
      error: true,
      message: 'Token Expired',
      details: 'The provided token has expired'
    });
    /* istanbul ignore next */
    cov_1zynsr3urh().s[24]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1zynsr3urh().b[9][1]++;
  }
  // Default error response
  cov_1zynsr3urh().s[25]++;
  res.status(status).json(errorResponse);
};
/* istanbul ignore next */
cov_1zynsr3urh().s[26]++;
exports.errorHandler = errorHandler;
// 404 handler
/* istanbul ignore next */
cov_1zynsr3urh().s[27]++;
const notFoundHandler = (req, res) => {
  /* istanbul ignore next */
  cov_1zynsr3urh().f[1]++;
  cov_1zynsr3urh().s[28]++;
  res.status(404).json({
    error: true,
    message: 'Route not found',
    path: req.originalUrl,
    method: req.method
  });
};
/* istanbul ignore next */
cov_1zynsr3urh().s[29]++;
exports.notFoundHandler = notFoundHandler;
// Async error wrapper
/* istanbul ignore next */
cov_1zynsr3urh().s[30]++;
const asyncHandler = fn => {
  /* istanbul ignore next */
  cov_1zynsr3urh().f[2]++;
  cov_1zynsr3urh().s[31]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_1zynsr3urh().f[3]++;
    cov_1zynsr3urh().s[32]++;
    Promise.resolve(fn(req, res, next)).catch(next);
  };
};
/* istanbul ignore next */
cov_1zynsr3urh().s[33]++;
exports.asyncHandler = asyncHandler;