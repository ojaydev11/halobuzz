462ce6a8cdabb6e0339c558233bf3695
"use strict";

/* istanbul ignore next */
function cov_1tju29m22s() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\gifts.ts";
  var hash = "5331ff53ca2cfd61ba19490fbe750f232b1b23e6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\gifts.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 55
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 40
        }
      },
      "9": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "10": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 13,
          column: 54
        }
      },
      "11": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 68
        }
      },
      "12": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "13": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "14": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "15": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 114,
          column: 3
        }
      },
      "16": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "17": {
        start: {
          line: 21,
          column: 102
        },
        end: {
          line: 21,
          column: 111
        }
      },
      "18": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 59
        }
      },
      "19": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "20": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 25,
          column: 39
        }
      },
      "21": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 39
        }
      },
      "22": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 27,
          column: 35
        }
      },
      "23": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 35
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "25": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 35
        }
      },
      "26": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 31,
          column: 60
        }
      },
      "27": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 60
        }
      },
      "28": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 33,
          column: 60
        }
      },
      "29": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 60
        }
      },
      "30": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 35,
          column: 29
        }
      },
      "31": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "32": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 49
        }
      },
      "33": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 22
        }
      },
      "34": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 45
        }
      },
      "35": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 22
        }
      },
      "36": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 58
        }
      },
      "37": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 22
        }
      },
      "38": {
        start: {
          line: 48,
          column: 47
        },
        end: {
          line: 54,
          column: 10
        }
      },
      "39": {
        start: {
          line: 56,
          column: 32
        },
        end: {
          line: 56,
          column: 41
        }
      },
      "40": {
        start: {
          line: 57,
          column: 30
        },
        end: {
          line: 57,
          column: 32
        }
      },
      "41": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "42": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "43": {
        start: {
          line: 60,
          column: 27
        },
        end: {
          line: 60,
          column: 56
        }
      },
      "44": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 40
        }
      },
      "45": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 41
        }
      },
      "46": {
        start: {
          line: 66,
          column: 27
        },
        end: {
          line: 66,
          column: 79
        }
      },
      "47": {
        start: {
          line: 66,
          column: 56
        },
        end: {
          line: 66,
          column: 77
        }
      },
      "48": {
        start: {
          line: 67,
          column: 26
        },
        end: {
          line: 67,
          column: 35
        }
      },
      "49": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 69,
          column: 47
        }
      },
      "50": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 47
        }
      },
      "51": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "52": {
        start: {
          line: 71,
          column: 23
        },
        end: {
          line: 71,
          column: 46
        }
      },
      "53": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "54": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 59
        }
      },
      "55": {
        start: {
          line: 76,
          column: 22
        },
        end: {
          line: 76,
          column: 52
        }
      },
      "56": {
        start: {
          line: 77,
          column: 22
        },
        end: {
          line: 77,
          column: 34
        }
      },
      "57": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "58": {
        start: {
          line: 81,
          column: 42
        },
        end: {
          line: 97,
          column: 17
        }
      },
      "59": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 58
        }
      },
      "60": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 112,
          column: 11
        }
      },
      "61": {
        start: {
          line: 116,
          column: 0
        },
        end: {
          line: 142,
          column: 3
        }
      },
      "62": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "63": {
        start: {
          line: 118,
          column: 31
        },
        end: {
          line: 118,
          column: 40
        }
      },
      "64": {
        start: {
          line: 119,
          column: 22
        },
        end: {
          line: 119,
          column: 129
        }
      },
      "65": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 133,
          column: 11
        }
      },
      "66": {
        start: {
          line: 123,
          column: 42
        },
        end: {
          line: 131,
          column: 17
        }
      },
      "67": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 66
        }
      },
      "68": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "69": {
        start: {
          line: 144,
          column: 0
        },
        end: {
          line: 185,
          column: 3
        }
      },
      "70": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "71": {
        start: {
          line: 146,
          column: 23
        },
        end: {
          line: 146,
          column: 33
        }
      },
      "72": {
        start: {
          line: 147,
          column: 21
        },
        end: {
          line: 147,
          column: 51
        }
      },
      "73": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "74": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 152,
          column: 15
        }
      },
      "75": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 176,
          column: 11
        }
      },
      "76": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 57
        }
      },
      "77": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "78": {
        start: {
          line: 187,
          column: 0
        },
        end: {
          line: 391,
          column: 3
        }
      },
      "79": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 390,
          column: 5
        }
      },
      "80": {
        start: {
          line: 196,
          column: 23
        },
        end: {
          line: 196,
          column: 69
        }
      },
      "81": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "82": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 201,
          column: 15
        }
      },
      "83": {
        start: {
          line: 203,
          column: 29
        },
        end: {
          line: 203,
          column: 39
        }
      },
      "84": {
        start: {
          line: 204,
          column: 41
        },
        end: {
          line: 204,
          column: 49
        }
      },
      "85": {
        start: {
          line: 205,
          column: 23
        },
        end: {
          line: 205,
          column: 39
        }
      },
      "86": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "87": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 210,
          column: 15
        }
      },
      "88": {
        start: {
          line: 213,
          column: 21
        },
        end: {
          line: 213,
          column: 55
        }
      },
      "89": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "90": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 218,
          column: 15
        }
      },
      "91": {
        start: {
          line: 221,
          column: 23
        },
        end: {
          line: 221,
          column: 71
        }
      },
      "92": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "93": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 226,
          column: 15
        }
      },
      "94": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "95": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 232,
          column: 15
        }
      },
      "96": {
        start: {
          line: 235,
          column: 21
        },
        end: {
          line: 235,
          column: 55
        }
      },
      "97": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "98": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 240,
          column: 15
        }
      },
      "99": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "100": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 246,
          column: 15
        }
      },
      "101": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "102": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 253,
          column: 15
        }
      },
      "103": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "104": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 260,
          column: 15
        }
      },
      "105": {
        start: {
          line: 262,
          column: 26
        },
        end: {
          line: 262,
          column: 52
        }
      },
      "106": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "107": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 268,
          column: 15
        }
      },
      "108": {
        start: {
          line: 271,
          column: 24
        },
        end: {
          line: 271,
          column: 63
        }
      },
      "109": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 35
        }
      },
      "110": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "111": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 280,
          column: 28
        }
      },
      "112": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 287,
          column: 28
        }
      },
      "113": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 38
        }
      },
      "114": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 43
        }
      },
      "115": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 42
        }
      },
      "116": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 41
        }
      },
      "117": {
        start: {
          line: 295,
          column: 38
        },
        end: {
          line: 309,
          column: 14
        }
      },
      "118": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 54
        }
      },
      "119": {
        start: {
          line: 311,
          column: 40
        },
        end: {
          line: 327,
          column: 14
        }
      },
      "120": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 56
        }
      },
      "121": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 334,
          column: 15
        }
      },
      "122": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 339,
          column: 15
        }
      },
      "123": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 46
        }
      },
      "124": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 349,
          column: 15
        }
      },
      "125": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 372,
          column: 15
        }
      },
      "126": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 45
        }
      },
      "127": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 35
        }
      },
      "128": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 33
        }
      },
      "129": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 58
        }
      },
      "130": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 389,
          column: 11
        }
      },
      "131": {
        start: {
          line: 393,
          column: 0
        },
        end: {
          line: 421,
          column: 3
        }
      },
      "132": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 420,
          column: 5
        }
      },
      "133": {
        start: {
          line: 395,
          column: 29
        },
        end: {
          line: 395,
          column: 39
        }
      },
      "134": {
        start: {
          line: 396,
          column: 31
        },
        end: {
          line: 396,
          column: 40
        }
      },
      "135": {
        start: {
          line: 397,
          column: 22
        },
        end: {
          line: 397,
          column: 98
        }
      },
      "136": {
        start: {
          line: 398,
          column: 29
        },
        end: {
          line: 398,
          column: 60
        }
      },
      "137": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 412,
          column: 11
        }
      },
      "138": {
        start: {
          line: 403,
          column: 49
        },
        end: {
          line: 410,
          column: 17
        }
      },
      "139": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 415,
          column: 70
        }
      },
      "140": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 419,
          column: 11
        }
      },
      "141": {
        start: {
          line: 422,
          column: 0
        },
        end: {
          line: 422,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 17
          }
        },
        loc: {
          start: {
            line: 19,
            column: 36
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 66,
            column: 51
          },
          end: {
            line: 66,
            column: 52
          }
        },
        loc: {
          start: {
            line: 66,
            column: 56
          },
          end: {
            line: 66,
            column: 77
          }
        },
        line: 66
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 81,
            column: 33
          },
          end: {
            line: 81,
            column: 34
          }
        },
        loc: {
          start: {
            line: 81,
            column: 42
          },
          end: {
            line: 97,
            column: 17
          }
        },
        line: 81
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 116,
            column: 23
          },
          end: {
            line: 116,
            column: 24
          }
        },
        loc: {
          start: {
            line: 116,
            column: 43
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 116
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 123,
            column: 33
          },
          end: {
            line: 123,
            column: 34
          }
        },
        loc: {
          start: {
            line: 123,
            column: 42
          },
          end: {
            line: 131,
            column: 17
          }
        },
        line: 123
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 144,
            column: 19
          },
          end: {
            line: 144,
            column: 20
          }
        },
        loc: {
          start: {
            line: 144,
            column: 39
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 144
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 194,
            column: 3
          },
          end: {
            line: 194,
            column: 4
          }
        },
        loc: {
          start: {
            line: 194,
            column: 23
          },
          end: {
            line: 391,
            column: 1
          }
        },
        line: 194
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 393,
            column: 34
          },
          end: {
            line: 393,
            column: 35
          }
        },
        loc: {
          start: {
            line: 393,
            column: 54
          },
          end: {
            line: 421,
            column: 1
          }
        },
        line: 393
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 403,
            column: 40
          },
          end: {
            line: 403,
            column: 41
          }
        },
        loc: {
          start: {
            line: 403,
            column: 49
          },
          end: {
            line: 410,
            column: 17
          }
        },
        line: 403
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 54
          },
          end: {
            line: 21,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 62
          },
          end: {
            line: 21,
            column: 64
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 66
          },
          end: {
            line: 21,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 73
          },
          end: {
            line: 21,
            column: 74
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 21,
            column: 76
          },
          end: {
            line: 21,
            column: 97
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 85
          },
          end: {
            line: 21,
            column: 97
          }
        }],
        line: 21
      },
      "6": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 25,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 25,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "7": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 27,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 27,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "8": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "9": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 32
          }
        }],
        line: 28
      },
      "10": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 31,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 31,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "11": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 33,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 33,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "12": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 39,
            column: 22
          }
        }, {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 42,
            column: 22
          }
        }, {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 30
          }
        }, {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 46,
            column: 22
          }
        }],
        line: 36
      },
      "13": {
        loc: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 42
          }
        }, {
          start: {
            line: 59,
            column: 46
          },
          end: {
            line: 59,
            column: 48
          }
        }],
        line: 59
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 28
          },
          end: {
            line: 60,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 28
          },
          end: {
            line: 60,
            column: 36
          }
        }, {
          start: {
            line: 60,
            column: 40
          },
          end: {
            line: 60,
            column: 44
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 71,
            column: 24
          },
          end: {
            line: 71,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 24
          },
          end: {
            line: 71,
            column: 29
          }
        }, {
          start: {
            line: 71,
            column: 33
          },
          end: {
            line: 71,
            column: 34
          }
        }],
        line: 71
      },
      "16": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "17": {
        loc: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 52
          }
        }, {
          start: {
            line: 73,
            column: 56
          },
          end: {
            line: 73,
            column: 57
          }
        }],
        line: 73
      },
      "18": {
        loc: {
          start: {
            line: 118,
            column: 16
          },
          end: {
            line: 118,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 118,
            column: 24
          },
          end: {
            line: 118,
            column: 26
          }
        }],
        line: 118
      },
      "19": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "20": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "21": {
        loc: {
          start: {
            line: 204,
            column: 24
          },
          end: {
            line: 204,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 204,
            column: 35
          },
          end: {
            line: 204,
            column: 36
          }
        }],
        line: 204
      },
      "22": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "23": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "24": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "25": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "26": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "27": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "28": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "29": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 249,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 249,
            column: 31
          }
        }, {
          start: {
            line: 249,
            column: 35
          },
          end: {
            line: 249,
            column: 69
          }
        }],
        line: 249
      },
      "30": {
        loc: {
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "31": {
        loc: {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 256,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 256,
            column: 26
          }
        }, {
          start: {
            line: 256,
            column: 30
          },
          end: {
            line: 256,
            column: 71
          }
        }],
        line: 256
      },
      "32": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "33": {
        loc: {
          start: {
            line: 369,
            column: 37
          },
          end: {
            line: 369,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 37
          },
          end: {
            line: 369,
            column: 56
          }
        }, {
          start: {
            line: 369,
            column: 60
          },
          end: {
            line: 369,
            column: 61
          }
        }],
        line: 369
      },
      "34": {
        loc: {
          start: {
            line: 396,
            column: 16
          },
          end: {
            line: 396,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 396,
            column: 24
          },
          end: {
            line: 396,
            column: 26
          }
        }],
        line: 396
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5331ff53ca2cfd61ba19490fbe750f232b1b23e6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tju29m22s = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tju29m22s();
var __importDefault =
/* istanbul ignore next */
(cov_1tju29m22s().s[0]++,
/* istanbul ignore next */
(cov_1tju29m22s().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1tju29m22s().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1tju29m22s().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1tju29m22s().f[0]++;
  cov_1tju29m22s().s[1]++;
  return /* istanbul ignore next */(cov_1tju29m22s().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1tju29m22s().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1tju29m22s().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1tju29m22s().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1tju29m22s().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1tju29m22s().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_1tju29m22s().s[4]++, require("express-validator"));
const mongoose_1 =
/* istanbul ignore next */
(cov_1tju29m22s().s[5]++, __importDefault(require("mongoose")));
const Gift_1 =
/* istanbul ignore next */
(cov_1tju29m22s().s[6]++, require("../models/Gift"));
const Festival_1 =
/* istanbul ignore next */
(cov_1tju29m22s().s[7]++, require("../models/Festival"));
const User_1 =
/* istanbul ignore next */
(cov_1tju29m22s().s[8]++, require("../models/User"));
const LiveStream_1 =
/* istanbul ignore next */
(cov_1tju29m22s().s[9]++, require("../models/LiveStream"));
const Transaction_1 =
/* istanbul ignore next */
(cov_1tju29m22s().s[10]++, require("../models/Transaction"));
const ReputationService_1 =
/* istanbul ignore next */
(cov_1tju29m22s().s[11]++, require("../services/ReputationService"));
const logger_1 =
/* istanbul ignore next */
(cov_1tju29m22s().s[12]++, require("../config/logger"));
const emitters_1 =
/* istanbul ignore next */
(cov_1tju29m22s().s[13]++, require("../realtime/emitters"));
const router =
/* istanbul ignore next */
(cov_1tju29m22s().s[14]++, express_1.default.Router());
// Get gifts list
/* istanbul ignore next */
cov_1tju29m22s().s[15]++;
router.get('/', async (req, res) => {
  /* istanbul ignore next */
  cov_1tju29m22s().f[1]++;
  cov_1tju29m22s().s[16]++;
  try {
    const {
      category,
      rarity,
      priceMin,
      priceMax,
      limit =
      /* istanbul ignore next */
      (cov_1tju29m22s().b[3][0]++, 50),
      page =
      /* istanbul ignore next */
      (cov_1tju29m22s().b[4][0]++, 1),
      sortBy =
      /* istanbul ignore next */
      (cov_1tju29m22s().b[5][0]++, 'popularity')
    } =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[17]++, req.query);
    const skip =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[18]++, (parseInt(page) - 1) * parseInt(limit));
    const filter =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[19]++, {
      isActive: true
    });
    /* istanbul ignore next */
    cov_1tju29m22s().s[20]++;
    if (category) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[6][0]++;
      cov_1tju29m22s().s[21]++;
      filter.category = category;
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[6][1]++;
    }
    cov_1tju29m22s().s[22]++;
    if (rarity) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[7][0]++;
      cov_1tju29m22s().s[23]++;
      filter.rarity = rarity;
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[7][1]++;
    }
    cov_1tju29m22s().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1tju29m22s().b[9][0]++, priceMin) ||
    /* istanbul ignore next */
    (cov_1tju29m22s().b[9][1]++, priceMax)) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[8][0]++;
      cov_1tju29m22s().s[25]++;
      filter.priceCoins = {};
      /* istanbul ignore next */
      cov_1tju29m22s().s[26]++;
      if (priceMin) {
        /* istanbul ignore next */
        cov_1tju29m22s().b[10][0]++;
        cov_1tju29m22s().s[27]++;
        filter.priceCoins.$gte = parseInt(priceMin);
      } else
      /* istanbul ignore next */
      {
        cov_1tju29m22s().b[10][1]++;
      }
      cov_1tju29m22s().s[28]++;
      if (priceMax) {
        /* istanbul ignore next */
        cov_1tju29m22s().b[11][0]++;
        cov_1tju29m22s().s[29]++;
        filter.priceCoins.$lte = parseInt(priceMax);
      } else
      /* istanbul ignore next */
      {
        cov_1tju29m22s().b[11][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[8][1]++;
    }
    let sortCriteria =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[30]++, {});
    /* istanbul ignore next */
    cov_1tju29m22s().s[31]++;
    switch (sortBy) {
      case 'price':
        /* istanbul ignore next */
        cov_1tju29m22s().b[12][0]++;
        cov_1tju29m22s().s[32]++;
        sortCriteria = {
          priceCoins: 1
        };
        /* istanbul ignore next */
        cov_1tju29m22s().s[33]++;
        break;
      case 'rarity':
        /* istanbul ignore next */
        cov_1tju29m22s().b[12][1]++;
        cov_1tju29m22s().s[34]++;
        sortCriteria = {
          rarity: 1
        };
        /* istanbul ignore next */
        cov_1tju29m22s().s[35]++;
        break;
      case 'popularity':
        /* istanbul ignore next */
        cov_1tju29m22s().b[12][2]++;
      default:
        /* istanbul ignore next */
        cov_1tju29m22s().b[12][3]++;
        cov_1tju29m22s().s[36]++;
        sortCriteria = {
          'stats.popularity': -1
        };
        /* istanbul ignore next */
        cov_1tju29m22s().s[37]++;
        break;
    }
    const [activeGifts, activeFestivals] =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[38]++, await Promise.all([Gift_1.Gift.find(filter).sort(sortCriteria).skip(skip).limit(parseInt(limit)), Festival_1.Festival.find({
      isActive: true,
      startDate: {
        $lte: new Date()
      },
      endDate: {
        $gte: new Date()
      }
    })]));
    // Merge festival gifts if within festival dates
    const festivalGiftIds =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[39]++, new Set());
    const festivalGifts =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[40]++, []);
    /* istanbul ignore next */
    cov_1tju29m22s().s[41]++;
    for (const fest of activeFestivals) {
      /* istanbul ignore next */
      cov_1tju29m22s().s[42]++;
      for (const gift of
      /* istanbul ignore next */
      (cov_1tju29m22s().b[13][0]++, fest.gifts) ||
      /* istanbul ignore next */
      (cov_1tju29m22s().b[13][1]++, [])) {
        const id =
        /* istanbul ignore next */
        (cov_1tju29m22s().s[43]++, (
        /* istanbul ignore next */
        (cov_1tju29m22s().b[14][0]++, gift._id) ||
        /* istanbul ignore next */
        (cov_1tju29m22s().b[14][1]++, gift)).toString());
        /* istanbul ignore next */
        cov_1tju29m22s().s[44]++;
        festivalGiftIds.add(id);
        /* istanbul ignore next */
        cov_1tju29m22s().s[45]++;
        festivalGifts.push(gift);
      }
    }
    // Deduplicate by id, prefer active gift doc details when available
    const activeById =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[46]++, new Map(activeGifts.map(g => {
      /* istanbul ignore next */
      cov_1tju29m22s().f[2]++;
      cov_1tju29m22s().s[47]++;
      return [g._id.toString(), g];
    })));
    const mergedMap =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[48]++, new Map());
    /* istanbul ignore next */
    cov_1tju29m22s().s[49]++;
    for (const g of activeGifts) {
      /* istanbul ignore next */
      cov_1tju29m22s().s[50]++;
      mergedMap.set(g._id.toString(), g);
    }
    /* istanbul ignore next */
    cov_1tju29m22s().s[51]++;
    for (const g of festivalGifts) {
      const id =
      /* istanbul ignore next */
      (cov_1tju29m22s().s[52]++, (
      /* istanbul ignore next */
      (cov_1tju29m22s().b[15][0]++, g._id) ||
      /* istanbul ignore next */
      (cov_1tju29m22s().b[15][1]++, g)).toString());
      /* istanbul ignore next */
      cov_1tju29m22s().s[53]++;
      if (!mergedMap.has(id)) {
        /* istanbul ignore next */
        cov_1tju29m22s().b[16][0]++;
        cov_1tju29m22s().s[54]++;
        mergedMap.set(id,
        /* istanbul ignore next */
        (cov_1tju29m22s().b[17][0]++, activeById.get(id)) ||
        /* istanbul ignore next */
        (cov_1tju29m22s().b[17][1]++, g));
      } else
      /* istanbul ignore next */
      {
        cov_1tju29m22s().b[16][1]++;
      }
    }
    const gifts =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[55]++, Array.from(mergedMap.values()));
    const total =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[56]++, gifts.length);
    /* istanbul ignore next */
    cov_1tju29m22s().s[57]++;
    res.json({
      success: true,
      data: {
        gifts: gifts.map(gift => {
          /* istanbul ignore next */
          cov_1tju29m22s().f[3]++;
          cov_1tju29m22s().s[58]++;
          return {
            id: gift._id,
            name: gift.name,
            description: gift.description,
            icon: gift.icon,
            animation: gift.animation,
            priceCoins: gift.priceCoins,
            priceUSD: gift.priceUSD,
            category: gift.category,
            rarity: gift.rarity,
            isLimited: gift.isLimited,
            limitedQuantity: gift.limitedQuantity,
            soldQuantity: gift.soldQuantity,
            effects: gift.effects,
            stats: gift.stats,
            ogTierRequired: gift.ogTierRequired
          };
        }),
        pagination: {
          page: parseInt(page),
          limit: parseInt(limit),
          total,
          pages: Math.ceil(total / parseInt(limit))
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tju29m22s().s[59]++;
    logger_1.logger.error('Get gifts failed:', error);
    /* istanbul ignore next */
    cov_1tju29m22s().s[60]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get gifts'
    });
  }
});
// Get popular gifts
/* istanbul ignore next */
cov_1tju29m22s().s[61]++;
router.get('/popular', async (req, res) => {
  /* istanbul ignore next */
  cov_1tju29m22s().f[4]++;
  cov_1tju29m22s().s[62]++;
  try {
    const {
      limit =
      /* istanbul ignore next */
      (cov_1tju29m22s().b[18][0]++, 10)
    } =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[63]++, req.query);
    const gifts =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[64]++, await Gift_1.Gift.find({
      isActive: true
    }).sort({
      sentCount: -1,
      totalRevenue: -1
    }).limit(parseInt(limit)));
    /* istanbul ignore next */
    cov_1tju29m22s().s[65]++;
    res.json({
      success: true,
      data: {
        gifts: gifts.map(gift => {
          /* istanbul ignore next */
          cov_1tju29m22s().f[5]++;
          cov_1tju29m22s().s[66]++;
          return {
            id: gift._id,
            name: gift.name,
            icon: gift.icon,
            priceCoins: gift.priceCoins,
            category: gift.category,
            rarity: gift.rarity,
            stats: gift.stats
          };
        })
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tju29m22s().s[67]++;
    logger_1.logger.error('Get popular gifts failed:', error);
    /* istanbul ignore next */
    cov_1tju29m22s().s[68]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get popular gifts'
    });
  }
});
// Get gift by ID
/* istanbul ignore next */
cov_1tju29m22s().s[69]++;
router.get('/:id', async (req, res) => {
  /* istanbul ignore next */
  cov_1tju29m22s().f[6]++;
  cov_1tju29m22s().s[70]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[71]++, req.params);
    const gift =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[72]++, await Gift_1.Gift.findById(id));
    /* istanbul ignore next */
    cov_1tju29m22s().s[73]++;
    if (!gift) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[19][0]++;
      cov_1tju29m22s().s[74]++;
      return res.status(404).json({
        success: false,
        error: 'Gift not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[19][1]++;
    }
    cov_1tju29m22s().s[75]++;
    res.json({
      success: true,
      data: {
        gift: {
          id: gift._id,
          name: gift.name,
          description: gift.description,
          icon: gift.icon,
          animation: gift.animation,
          priceCoins: gift.priceCoins,
          priceUSD: gift.priceUSD,
          category: gift.category,
          rarity: gift.rarity,
          isLimited: gift.isLimited,
          limitedQuantity: gift.limitedQuantity,
          soldQuantity: gift.soldQuantity,
          effects: gift.effects,
          stats: gift.stats,
          ogTierRequired: gift.ogTierRequired,
          festivalId: gift.festivalId
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tju29m22s().s[76]++;
    logger_1.logger.error('Get gift failed:', error);
    /* istanbul ignore next */
    cov_1tju29m22s().s[77]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get gift'
    });
  }
});
// Send gift to stream
/* istanbul ignore next */
cov_1tju29m22s().s[78]++;
router.post('/:streamId/gift', [(0, express_validator_1.body)('giftId').isMongoId().withMessage('Valid gift ID is required'), (0, express_validator_1.body)('quantity').isInt({
  min: 1,
  max: 100
}).withMessage('Quantity must be 1-100')], async (req, res) => {
  /* istanbul ignore next */
  cov_1tju29m22s().f[7]++;
  cov_1tju29m22s().s[79]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[80]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_1tju29m22s().s[81]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[20][0]++;
      cov_1tju29m22s().s[82]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[20][1]++;
    }
    const {
      streamId
    } =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[83]++, req.params);
    const {
      giftId,
      quantity =
      /* istanbul ignore next */
      (cov_1tju29m22s().b[21][0]++, 1)
    } =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[84]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[85]++, req.user?.userId);
    /* istanbul ignore next */
    cov_1tju29m22s().s[86]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[22][0]++;
      cov_1tju29m22s().s[87]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[22][1]++;
    }
    // Validate user
    const user =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[88]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_1tju29m22s().s[89]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[23][0]++;
      cov_1tju29m22s().s[90]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[23][1]++;
    }
    // Validate stream
    const stream =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[91]++, await LiveStream_1.LiveStream.findById(streamId));
    /* istanbul ignore next */
    cov_1tju29m22s().s[92]++;
    if (!stream) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[24][0]++;
      cov_1tju29m22s().s[93]++;
      return res.status(404).json({
        success: false,
        error: 'Stream not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[24][1]++;
    }
    cov_1tju29m22s().s[94]++;
    if (stream.status !== 'live') {
      /* istanbul ignore next */
      cov_1tju29m22s().b[25][0]++;
      cov_1tju29m22s().s[95]++;
      return res.status(400).json({
        success: false,
        error: 'Stream is not live'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[25][1]++;
    }
    // Validate gift
    const gift =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[96]++, await Gift_1.Gift.findById(giftId));
    /* istanbul ignore next */
    cov_1tju29m22s().s[97]++;
    if (!gift) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[26][0]++;
      cov_1tju29m22s().s[98]++;
      return res.status(404).json({
        success: false,
        error: 'Gift not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[26][1]++;
    }
    cov_1tju29m22s().s[99]++;
    if (!gift.isActive) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[27][0]++;
      cov_1tju29m22s().s[100]++;
      return res.status(400).json({
        success: false,
        error: 'Gift is not available'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[27][1]++;
    }
    // Check OG tier requirement
    cov_1tju29m22s().s[101]++;
    if (
    /* istanbul ignore next */
    (cov_1tju29m22s().b[29][0]++, gift.ogTierRequired) &&
    /* istanbul ignore next */
    (cov_1tju29m22s().b[29][1]++, user.ogLevel < gift.ogTierRequired)) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[28][0]++;
      cov_1tju29m22s().s[102]++;
      return res.status(403).json({
        success: false,
        error: `OG Tier ${gift.ogTierRequired} required for this gift`
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[28][1]++;
    }
    // Check limited quantity
    cov_1tju29m22s().s[103]++;
    if (
    /* istanbul ignore next */
    (cov_1tju29m22s().b[31][0]++, gift.isLimited) &&
    /* istanbul ignore next */
    (cov_1tju29m22s().b[31][1]++, gift.soldQuantity >= gift.limitedQuantity)) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[30][0]++;
      cov_1tju29m22s().s[104]++;
      return res.status(400).json({
        success: false,
        error: 'Gift is sold out'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[30][1]++;
    }
    const totalCost =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[105]++, gift.priceCoins * quantity);
    // Check user balance
    /* istanbul ignore next */
    cov_1tju29m22s().s[106]++;
    if (user.coins?.balance < totalCost) {
      /* istanbul ignore next */
      cov_1tju29m22s().b[32][0]++;
      cov_1tju29m22s().s[107]++;
      return res.status(400).json({
        success: false,
        error: 'Insufficient coins'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tju29m22s().b[32][1]++;
    }
    // Start database transaction for atomicity
    const session =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[108]++, await mongoose_1.default.startSession());
    /* istanbul ignore next */
    cov_1tju29m22s().s[109]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_1tju29m22s().s[110]++;
    try {
      /* istanbul ignore next */
      cov_1tju29m22s().s[111]++;
      // Deduct coins from user
      await User_1.User.findByIdAndUpdate(userId, {
        $inc: {
          'coins.balance': -totalCost,
          'coins.totalSpent': totalCost
        }
      }, {
        session
      });
      // Add coins to stream host
      /* istanbul ignore next */
      cov_1tju29m22s().s[112]++;
      await User_1.User.findByIdAndUpdate(stream.hostId, {
        $inc: {
          'coins.balance': totalCost,
          'coins.totalEarned': totalCost
        }
      }, {
        session
      });
      // Update stream metrics
      /* istanbul ignore next */
      cov_1tju29m22s().s[113]++;
      stream.addGift(totalCost);
      /* istanbul ignore next */
      cov_1tju29m22s().s[114]++;
      await stream.save({
        session
      });
      // Update gift stats
      /* istanbul ignore next */
      cov_1tju29m22s().s[115]++;
      gift.incrementSent(totalCost);
      /* istanbul ignore next */
      cov_1tju29m22s().s[116]++;
      await gift.save({
        session
      });
      // Create transaction records
      const senderTransaction =
      /* istanbul ignore next */
      (cov_1tju29m22s().s[117]++, new Transaction_1.Transaction({
        userId,
        type: 'gift_sent',
        amount: totalCost,
        currency: 'coins',
        status: 'completed',
        description: `Sent ${quantity}x ${gift.name} to stream`,
        metadata: {
          giftId: gift._id,
          streamId: stream._id,
          quantity,
          giftName: gift.name
        },
        netAmount: totalCost
      }));
      /* istanbul ignore next */
      cov_1tju29m22s().s[118]++;
      await senderTransaction.save({
        session
      });
      const receiverTransaction =
      /* istanbul ignore next */
      (cov_1tju29m22s().s[119]++, new Transaction_1.Transaction({
        userId: stream.hostId,
        type: 'gift_received',
        amount: totalCost,
        currency: 'coins',
        status: 'completed',
        description: `Received ${quantity}x ${gift.name} from ${user.username}`,
        metadata: {
          giftId: gift._id,
          streamId: stream._id,
          quantity,
          giftName: gift.name,
          senderId: userId,
          senderUsername: user.username
        },
        netAmount: totalCost
      }));
      /* istanbul ignore next */
      cov_1tju29m22s().s[120]++;
      await receiverTransaction.save({
        session
      });
      // Apply reputation changes
      /* istanbul ignore next */
      cov_1tju29m22s().s[121]++;
      await ReputationService_1.reputationService.applyReputationDelta(userId, 'gift_sent', {
        coins: totalCost,
        giftId: gift._id,
        streamId: stream._id
      });
      /* istanbul ignore next */
      cov_1tju29m22s().s[122]++;
      await ReputationService_1.reputationService.applyReputationDelta(stream.hostId.toString(), 'gift_received', {
        coins: totalCost,
        giftId: gift._id,
        streamId: stream._id
      });
      // Commit the transaction
      /* istanbul ignore next */
      cov_1tju29m22s().s[123]++;
      await session.commitTransaction();
      // Emit gift event to WebSocket clients
      /* istanbul ignore next */
      cov_1tju29m22s().s[124]++;
      (0, emitters_1.emitGift)(stream.agoraChannel, {
        from: userId,
        fromUsername: user.username,
        giftId: gift._id.toString(),
        qty: quantity,
        timestamp: Date.now()
      });
      /* istanbul ignore next */
      cov_1tju29m22s().s[125]++;
      res.json({
        success: true,
        message: 'Gift sent successfully',
        data: {
          gift: {
            id: gift._id,
            name: gift.name,
            icon: gift.icon,
            animation: gift.animation,
            quantity,
            totalCost,
            effects: gift.effects
          },
          stream: {
            id: stream._id,
            totalCoins: stream.totalCoins,
            totalGifts: stream.totalGifts
          },
          user: {
            newBalance: (
            /* istanbul ignore next */
            (cov_1tju29m22s().b[33][0]++, user.coins?.balance) ||
            /* istanbul ignore next */
            (cov_1tju29m22s().b[33][1]++, 0)) - totalCost
          }
        }
      });
    } catch (transactionError) {
      /* istanbul ignore next */
      cov_1tju29m22s().s[126]++;
      // Rollback the transaction on any error
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_1tju29m22s().s[127]++;
      throw transactionError;
    } finally {
      /* istanbul ignore next */
      cov_1tju29m22s().s[128]++;
      // End the session
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1tju29m22s().s[129]++;
    logger_1.logger.error('Send gift failed:', error);
    /* istanbul ignore next */
    cov_1tju29m22s().s[130]++;
    res.status(500).json({
      success: false,
      error: 'Failed to send gift'
    });
  }
});
// Get gifts by category
/* istanbul ignore next */
cov_1tju29m22s().s[131]++;
router.get('/category/:category', async (req, res) => {
  /* istanbul ignore next */
  cov_1tju29m22s().f[8]++;
  cov_1tju29m22s().s[132]++;
  try {
    const {
      category
    } =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[133]++, req.params);
    const {
      limit =
      /* istanbul ignore next */
      (cov_1tju29m22s().b[34][0]++, 20)
    } =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[134]++, req.query);
    const gifts =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[135]++, await Gift_1.Gift.find({
      category,
      isActive: true
    }).sort({
      sentCount: -1
    }));
    const limitedGifts =
    /* istanbul ignore next */
    (cov_1tju29m22s().s[136]++, gifts.slice(0, parseInt(limit)));
    /* istanbul ignore next */
    cov_1tju29m22s().s[137]++;
    res.json({
      success: true,
      data: {
        category,
        gifts: limitedGifts.map(gift => {
          /* istanbul ignore next */
          cov_1tju29m22s().f[9]++;
          cov_1tju29m22s().s[138]++;
          return {
            id: gift._id,
            name: gift.name,
            icon: gift.icon,
            priceCoins: gift.priceCoins,
            rarity: gift.rarity,
            stats: gift.stats
          };
        })
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tju29m22s().s[139]++;
    logger_1.logger.error('Get gifts by category failed:', error);
    /* istanbul ignore next */
    cov_1tju29m22s().s[140]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get gifts by category'
    });
  }
});
/* istanbul ignore next */
cov_1tju29m22s().s[141]++;
exports.default = router;