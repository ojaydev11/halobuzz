60e64025cf769949b8f3c7df39212b03
"use strict";

// HaloBuzz Big Games Agent Program - Sprint 1 Foundation
// Agent orchestration and initialization
/* istanbul ignore next */
function cov_1hdgsfofle() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\agents\\index.ts";
  var hash = "8c477948818863f6a173763b5c2da2ea9d9d1a2c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\agents\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 62
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 33
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 48
        }
      },
      "3": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "4": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 44
        }
      },
      "5": {
        start: {
          line: 9,
          column: 28
        },
        end: {
          line: 9,
          column: 58
        }
      },
      "6": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "7": {
        start: {
          line: 11,
          column: 27
        },
        end: {
          line: 11,
          column: 56
        }
      },
      "8": {
        start: {
          line: 12,
          column: 25
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "9": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 43
        }
      },
      "10": {
        start: {
          line: 16,
          column: 13
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "11": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 72
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 82
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 36,
          column: 11
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "16": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "17": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 65
        }
      },
      "18": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 65
        }
      },
      "19": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 69
        }
      },
      "20": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 67
        }
      },
      "21": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 82
        }
      },
      "22": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 45
        }
      },
      "23": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 45
        }
      },
      "24": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 74
        }
      },
      "25": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "26": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "27": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 84,
          column: 19
        }
      },
      "28": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "29": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "30": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 98,
          column: 19
        }
      },
      "31": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "32": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "33": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 113,
          column: 19
        }
      },
      "34": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "35": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "36": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 127,
          column: 19
        }
      },
      "37": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 71
        }
      },
      "38": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 64
        }
      },
      "39": {
        start: {
          line: 134,
          column: 32
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "40": {
        start: {
          line: 139,
          column: 24
        },
        end: {
          line: 139,
          column: 109
        }
      },
      "41": {
        start: {
          line: 140,
          column: 25
        },
        end: {
          line: 140,
          column: 29
        }
      },
      "42": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "43": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "44": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 87
        }
      },
      "45": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 35
        }
      },
      "46": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 73
        }
      },
      "47": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "48": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 97
        }
      },
      "49": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 46
        }
      },
      "50": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 89
        }
      },
      "51": {
        start: {
          line: 158,
          column: 28
        },
        end: {
          line: 158,
          column: 48
        }
      },
      "52": {
        start: {
          line: 159,
          column: 25
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "53": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 175,
          column: 11
        }
      },
      "54": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 79
        }
      },
      "55": {
        start: {
          line: 179,
          column: 24
        },
        end: {
          line: 179,
          column: 54
        }
      },
      "56": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 196,
          column: 10
        }
      },
      "57": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 66
        }
      },
      "58": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "59": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 53
        }
      },
      "60": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 57
        }
      },
      "61": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 60
        }
      },
      "62": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 51
        }
      },
      "63": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 68
        }
      },
      "64": {
        start: {
          line: 214,
          column: 38
        },
        end: {
          line: 214,
          column: 44
        }
      },
      "65": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "66": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 237,
          column: 11
        }
      },
      "67": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 78
        }
      },
      "68": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 249,
          column: 11
        }
      },
      "69": {
        start: {
          line: 252,
          column: 24
        },
        end: {
          line: 256,
          column: 10
        }
      },
      "70": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 261,
          column: 10
        }
      },
      "71": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 75
        }
      },
      "72": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 43
        }
      },
      "73": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 66
        }
      },
      "74": {
        start: {
          line: 269,
          column: 0
        },
        end: {
          line: 269,
          column: 42
        }
      },
      "75": {
        start: {
          line: 271,
          column: 23
        },
        end: {
          line: 271,
          column: 27
        }
      },
      "76": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 275,
          column: 5
        }
      },
      "77": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 65
        }
      },
      "78": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 276,
          column: 45
        }
      },
      "79": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 277,
          column: 40
        }
      },
      "80": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 278,
          column: 28
        }
      },
      "81": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 283,
          column: 5
        }
      },
      "82": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 95
        }
      },
      "83": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 284,
          column: 28
        }
      },
      "84": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 290,
          column: 5
        }
      },
      "85": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 42
        }
      },
      "86": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 36
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 75
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 78,
            column: 40
          },
          end: {
            line: 78,
            column: 41
          }
        },
        loc: {
          start: {
            line: 78,
            column: 53
          },
          end: {
            line: 86,
            column: 9
          }
        },
        line: 78
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 88,
            column: 44
          },
          end: {
            line: 88,
            column: 45
          }
        },
        loc: {
          start: {
            line: 88,
            column: 57
          },
          end: {
            line: 100,
            column: 9
          }
        },
        line: 88
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 102,
            column: 40
          },
          end: {
            line: 102,
            column: 41
          }
        },
        loc: {
          start: {
            line: 102,
            column: 53
          },
          end: {
            line: 115,
            column: 9
          }
        },
        line: 102
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 117,
            column: 42
          },
          end: {
            line: 117,
            column: 43
          }
        },
        loc: {
          start: {
            line: 117,
            column: 55
          },
          end: {
            line: 129,
            column: 9
          }
        },
        line: 117
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 36
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 132
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 37
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 157
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        loc: {
          start: {
            line: 178,
            column: 28
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 178
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 51
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 198
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 29
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 213
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        loc: {
          start: {
            line: 227,
            column: 33
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 227
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        loc: {
          start: {
            line: 239,
            column: 36
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 239
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        loc: {
          start: {
            line: 251,
            column: 27
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 251
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 21
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 263
      },
      "16": {
        name: "initializeBigGames",
        decl: {
          start: {
            line: 272,
            column: 15
          },
          end: {
            line: 272,
            column: 33
          }
        },
        loc: {
          start: {
            line: 272,
            column: 36
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 272
      },
      "17": {
        name: "getBigGamesInstance",
        decl: {
          start: {
            line: 280,
            column: 9
          },
          end: {
            line: 280,
            column: 28
          }
        },
        loc: {
          start: {
            line: 280,
            column: 31
          },
          end: {
            line: 285,
            column: 1
          }
        },
        line: 280
      },
      "18": {
        name: "shutdownBigGames",
        decl: {
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 286,
            column: 31
          }
        },
        loc: {
          start: {
            line: 286,
            column: 34
          },
          end: {
            line: 291,
            column: 1
          }
        },
        line: 286
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "1": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "2": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "3": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "4": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: 146,
            column: 17
          },
          end: {
            line: 148,
            column: 13
          }
        }],
        line: 142
      },
      "5": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "6": {
        loc: {
          start: {
            line: 198,
            column: 38
          },
          end: {
            line: 198,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 198,
            column: 47
          },
          end: {
            line: 198,
            column: 49
          }
        }],
        line: 198
      },
      "7": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 202,
            column: 53
          }
        }, {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 204,
            column: 57
          }
        }, {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 206,
            column: 60
          }
        }, {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 208,
            column: 51
          }
        }, {
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 210,
            column: 68
          }
        }],
        line: 200
      },
      "8": {
        loc: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "9": {
        loc: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "10": {
        loc: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8c477948818863f6a173763b5c2da2ea9d9d1a2c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hdgsfofle = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hdgsfofle();
cov_1hdgsfofle().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1hdgsfofle().s[1]++;
exports.BigGamesProgram = void 0;
/* istanbul ignore next */
cov_1hdgsfofle().s[2]++;
exports.initializeBigGames = initializeBigGames;
/* istanbul ignore next */
cov_1hdgsfofle().s[3]++;
exports.getBigGamesInstance = getBigGamesInstance;
/* istanbul ignore next */
cov_1hdgsfofle().s[4]++;
exports.shutdownBigGames = shutdownBigGames;
const AgentOrchestrator_1 =
/* istanbul ignore next */
(cov_1hdgsfofle().s[5]++, require("./AgentOrchestrator"));
const NetcodeAgent_1 =
/* istanbul ignore next */
(cov_1hdgsfofle().s[6]++, require("./NetcodeAgent"));
const MatchmakingAgent_1 =
/* istanbul ignore next */
(cov_1hdgsfofle().s[7]++, require("./MatchmakingAgent"));
const TelemetryAgent_1 =
/* istanbul ignore next */
(cov_1hdgsfofle().s[8]++, require("./TelemetryAgent"));
const logger_1 =
/* istanbul ignore next */
(cov_1hdgsfofle().s[9]++, require("../utils/logger"));
class BigGamesProgram {
  orchestrator;
  logger =
  /* istanbul ignore next */
  (cov_1hdgsfofle().s[10]++, new logger_1.Logger('BigGamesProgram'));
  // Sprint 1 Foundation Agents
  gameDirector;
  netcodeAgent;
  matchmakingAgent;
  telemetryAgent;
  constructor() {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[0]++;
    cov_1hdgsfofle().s[11]++;
    this.orchestrator = new AgentOrchestrator_1.AgentOrchestrator();
  }
  async initialize() {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[1]++;
    cov_1hdgsfofle().s[12]++;
    this.logger.info('🚀 Initializing HaloBuzz Big Games Program - Sprint 1');
    // Initialize foundation agents
    /* istanbul ignore next */
    cov_1hdgsfofle().s[13]++;
    this.gameDirector = new AgentOrchestrator_1.GameDirectorAgent({
      id: 'game-director',
      name: 'Game Director',
      role: 'Lead orchestrator and milestone gatekeeper',
      priority: 1,
      dependencies: [],
      timeout: 30000,
      retryCount: 3
    });
    /* istanbul ignore next */
    cov_1hdgsfofle().s[14]++;
    this.netcodeAgent = new NetcodeAgent_1.NetcodeAgent({
      id: 'netcode',
      name: 'Netcode & Scale',
      role: 'Authoritative multiplayer networking',
      priority: 2,
      dependencies: ['game-director'],
      timeout: 15000,
      retryCount: 2
    });
    /* istanbul ignore next */
    cov_1hdgsfofle().s[15]++;
    this.matchmakingAgent = new MatchmakingAgent_1.MatchmakingAgent({
      id: 'matchmaking',
      name: 'Matchmaking & Ranking',
      role: 'TrueSkill2 matchmaking and player ranking',
      priority: 2,
      dependencies: ['game-director'],
      timeout: 20000,
      retryCount: 2
    });
    /* istanbul ignore next */
    cov_1hdgsfofle().s[16]++;
    this.telemetryAgent = new TelemetryAgent_1.TelemetryAgent({
      id: 'telemetry',
      name: 'Telemetry & Analytics',
      role: 'Real-time event tracking and analytics',
      priority: 3,
      dependencies: ['game-director'],
      timeout: 10000,
      retryCount: 3
    });
    // Register all agents with orchestrator
    /* istanbul ignore next */
    cov_1hdgsfofle().s[17]++;
    await this.orchestrator.registerAgent(this.gameDirector);
    /* istanbul ignore next */
    cov_1hdgsfofle().s[18]++;
    await this.orchestrator.registerAgent(this.netcodeAgent);
    /* istanbul ignore next */
    cov_1hdgsfofle().s[19]++;
    await this.orchestrator.registerAgent(this.matchmakingAgent);
    /* istanbul ignore next */
    cov_1hdgsfofle().s[20]++;
    await this.orchestrator.registerAgent(this.telemetryAgent);
    /* istanbul ignore next */
    cov_1hdgsfofle().s[21]++;
    this.logger.info('✅ Sprint 1 Foundation agents initialized successfully');
    // Set up inter-agent communication patterns
    /* istanbul ignore next */
    cov_1hdgsfofle().s[22]++;
    await this.setupAgentCommunication();
    // Validate Sprint 1 readiness
    /* istanbul ignore next */
    cov_1hdgsfofle().s[23]++;
    await this.validateSprintReadiness();
  }
  async setupAgentCommunication() {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[2]++;
    cov_1hdgsfofle().s[24]++;
    this.logger.info('🔗 Setting up agent communication patterns...');
    // Game Director -> All agents coordination
    /* istanbul ignore next */
    cov_1hdgsfofle().s[25]++;
    this.gameDirector.on('message', message => {
      /* istanbul ignore next */
      cov_1hdgsfofle().f[3]++;
      cov_1hdgsfofle().s[26]++;
      if (message.data.event === 'kill_switch') {
        /* istanbul ignore next */
        cov_1hdgsfofle().b[0][0]++;
        cov_1hdgsfofle().s[27]++;
        this.orchestrator.broadcast({
          type: 'event',
          from: 'game-director',
          data: {
            event: 'emergency_shutdown',
            reason: message.data.reason
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hdgsfofle().b[0][1]++;
      }
    });
    // Matchmaking -> Netcode server allocation requests
    /* istanbul ignore next */
    cov_1hdgsfofle().s[28]++;
    this.matchmakingAgent.on('message', message => {
      /* istanbul ignore next */
      cov_1hdgsfofle().f[4]++;
      cov_1hdgsfofle().s[29]++;
      if (message.data.event === 'match_created') {
        /* istanbul ignore next */
        cov_1hdgsfofle().b[1][0]++;
        cov_1hdgsfofle().s[30]++;
        this.orchestrator.sendMessage({
          type: 'command',
          from: 'matchmaking',
          to: 'netcode',
          data: {
            action: 'allocate_server',
            matchResult: message.data.matchResult
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hdgsfofle().b[1][1]++;
      }
    });
    // Netcode -> Telemetry performance events
    /* istanbul ignore next */
    cov_1hdgsfofle().s[31]++;
    this.netcodeAgent.on('message', message => {
      /* istanbul ignore next */
      cov_1hdgsfofle().f[5]++;
      cov_1hdgsfofle().s[32]++;
      if (message.data.event?.startsWith('performance.')) {
        /* istanbul ignore next */
        cov_1hdgsfofle().b[2][0]++;
        cov_1hdgsfofle().s[33]++;
        this.orchestrator.sendMessage({
          type: 'event',
          from: 'netcode',
          to: 'telemetry',
          data: {
            action: 'track_event',
            eventType: message.data.event,
            properties: message.data.properties
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hdgsfofle().b[2][1]++;
      }
    });
    // Telemetry -> Game Director critical alerts
    /* istanbul ignore next */
    cov_1hdgsfofle().s[34]++;
    this.telemetryAgent.on('message', message => {
      /* istanbul ignore next */
      cov_1hdgsfofle().f[6]++;
      cov_1hdgsfofle().s[35]++;
      if (message.data.event === 'critical_alert') {
        /* istanbul ignore next */
        cov_1hdgsfofle().b[3][0]++;
        cov_1hdgsfofle().s[36]++;
        this.orchestrator.sendMessage({
          type: 'event',
          from: 'telemetry',
          to: 'game-director',
          data: {
            event: 'critical_alert',
            alert: message.data.alert
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hdgsfofle().b[3][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1hdgsfofle().s[37]++;
    this.logger.info('✅ Agent communication patterns established');
  }
  async validateSprintReadiness() {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[7]++;
    cov_1hdgsfofle().s[38]++;
    this.logger.info('🔍 Validating Sprint 1 readiness...');
    const validationTasks =
    /* istanbul ignore next */
    (cov_1hdgsfofle().s[39]++, [{
      agentId: 'netcode',
      task: {
        action: 'health_check'
      }
    }, {
      agentId: 'matchmaking',
      task: {
        action: 'get_queue_status'
      }
    }, {
      agentId: 'telemetry',
      task: {
        action: 'get_metrics',
        type: 'system'
      }
    }]);
    const results =
    /* istanbul ignore next */
    (cov_1hdgsfofle().s[40]++, await this.orchestrator.executeCoordinatedTask('sprint1_validation', validationTasks));
    let allHealthy =
    /* istanbul ignore next */
    (cov_1hdgsfofle().s[41]++, true);
    /* istanbul ignore next */
    cov_1hdgsfofle().s[42]++;
    for (const [agentId, result] of Object.entries(results)) {
      /* istanbul ignore next */
      cov_1hdgsfofle().s[43]++;
      if (result.error) {
        /* istanbul ignore next */
        cov_1hdgsfofle().b[4][0]++;
        cov_1hdgsfofle().s[44]++;
        this.logger.error(`Agent ${agentId} failed validation:`, result.error);
        /* istanbul ignore next */
        cov_1hdgsfofle().s[45]++;
        allHealthy = false;
      } else {
        /* istanbul ignore next */
        cov_1hdgsfofle().b[4][1]++;
        cov_1hdgsfofle().s[46]++;
        this.logger.info(`✅ Agent ${agentId} validation passed`);
      }
    }
    /* istanbul ignore next */
    cov_1hdgsfofle().s[47]++;
    if (!allHealthy) {
      /* istanbul ignore next */
      cov_1hdgsfofle().b[5][0]++;
      cov_1hdgsfofle().s[48]++;
      throw new Error('Sprint 1 foundation validation failed - some agents are not ready');
    } else
    /* istanbul ignore next */
    {
      cov_1hdgsfofle().b[5][1]++;
    }
    // Request milestone approval from Game Director
    cov_1hdgsfofle().s[49]++;
    await this.requestMilestoneApproval();
    /* istanbul ignore next */
    cov_1hdgsfofle().s[50]++;
    this.logger.info('🎯 Sprint 1 Foundation validation complete - READY FOR GAMES');
  }
  async requestMilestoneApproval() {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[8]++;
    const milestoneId =
    /* istanbul ignore next */
    (cov_1hdgsfofle().s[51]++, 'sprint1_foundation');
    const criteria =
    /* istanbul ignore next */
    (cov_1hdgsfofle().s[52]++, {
      netcode_ready: true,
      matchmaking_prototype: true,
      telemetry_live: true,
      agents_healthy: true,
      communication_established: true
    });
    /* istanbul ignore next */
    cov_1hdgsfofle().s[53]++;
    await this.orchestrator.sendMessage({
      type: 'request',
      from: 'big-games-program',
      to: 'game-director',
      data: {
        action: 'greenlight_milestone',
        milestoneId,
        criteria
      }
    });
    /* istanbul ignore next */
    cov_1hdgsfofle().s[54]++;
    this.logger.info('🚦 Milestone approval requested from Game Director');
  }
  async getSystemStatus() {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[9]++;
    const metrics =
    /* istanbul ignore next */
    (cov_1hdgsfofle().s[55]++, this.orchestrator.getMetrics());
    /* istanbul ignore next */
    cov_1hdgsfofle().s[56]++;
    return {
      program: 'HaloBuzz Big Games',
      sprint: 'Sprint 1: Foundations',
      status: 'ACTIVE',
      uptime: Date.now(),
      agents: metrics.agents,
      totalMessages: metrics.totalMessages,
      averageLatency: metrics.averageLatency,
      queueLength: metrics.queueLength,
      foundation: {
        gameDirector: true,
        netcode: true,
        matchmaking: true,
        telemetry: true
      },
      readyForGames: true
    };
  }
  async executeGameCommand(command, params =
  /* istanbul ignore next */
  (cov_1hdgsfofle().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[10]++;
    cov_1hdgsfofle().s[57]++;
    this.logger.info(`🎮 Executing game command: ${command}`);
    /* istanbul ignore next */
    cov_1hdgsfofle().s[58]++;
    switch (command) {
      case 'start_match':
        /* istanbul ignore next */
        cov_1hdgsfofle().b[7][0]++;
        cov_1hdgsfofle().s[59]++;
        return await this.startMatch(params);
      case 'get_player_stats':
        /* istanbul ignore next */
        cov_1hdgsfofle().b[7][1]++;
        cov_1hdgsfofle().s[60]++;
        return await this.getPlayerStats(params);
      case 'emergency_shutdown':
        /* istanbul ignore next */
        cov_1hdgsfofle().b[7][2]++;
        cov_1hdgsfofle().s[61]++;
        return await this.emergencyShutdown(params);
      case 'get_live_metrics':
        /* istanbul ignore next */
        cov_1hdgsfofle().b[7][3]++;
        cov_1hdgsfofle().s[62]++;
        return await this.getLiveMetrics();
      default:
        /* istanbul ignore next */
        cov_1hdgsfofle().b[7][4]++;
        cov_1hdgsfofle().s[63]++;
        throw new Error(`Unknown game command: ${command}`);
    }
  }
  async startMatch(params) {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[11]++;
    const {
      gameMode,
      players
    } =
    /* istanbul ignore next */
    (cov_1hdgsfofle().s[64]++, params);
    // Send to matchmaking for processing
    /* istanbul ignore next */
    cov_1hdgsfofle().s[65]++;
    return await this.orchestrator.sendMessage({
      type: 'request',
      from: 'big-games-program',
      to: 'matchmaking',
      data: {
        action: 'create_custom_match',
        gameMode,
        players
      }
    });
  }
  async getPlayerStats(params) {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[12]++;
    cov_1hdgsfofle().s[66]++;
    return await this.orchestrator.sendMessage({
      type: 'request',
      from: 'big-games-program',
      to: 'telemetry',
      data: {
        action: 'get_metrics',
        type: 'player',
        filters: {
          playerId: params.playerId
        }
      }
    });
  }
  async emergencyShutdown(params) {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[13]++;
    cov_1hdgsfofle().s[67]++;
    this.logger.warn(`🚨 Emergency shutdown initiated: ${params.reason}`);
    /* istanbul ignore next */
    cov_1hdgsfofle().s[68]++;
    return await this.orchestrator.sendMessage({
      type: 'command',
      from: 'big-games-program',
      to: 'game-director',
      data: {
        action: 'kill_switch',
        reason: params.reason
      }
    });
  }
  async getLiveMetrics() {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[14]++;
    const results =
    /* istanbul ignore next */
    (cov_1hdgsfofle().s[69]++, await this.orchestrator.executeCoordinatedTask('live_metrics', [{
      agentId: 'matchmaking',
      task: {
        action: 'get_queue_status'
      }
    }, {
      agentId: 'telemetry',
      task: {
        action: 'get_metrics',
        type: 'system'
      }
    }, {
      agentId: 'netcode',
      task: {
        action: 'get_server_status'
      }
    }]));
    /* istanbul ignore next */
    cov_1hdgsfofle().s[70]++;
    return {
      timestamp: Date.now(),
      orchestrator: this.orchestrator.getMetrics(),
      agents: results
    };
  }
  async shutdown() {
    /* istanbul ignore next */
    cov_1hdgsfofle().f[15]++;
    cov_1hdgsfofle().s[71]++;
    this.logger.info('🔴 Shutting down HaloBuzz Big Games Program...');
    /* istanbul ignore next */
    cov_1hdgsfofle().s[72]++;
    await this.orchestrator.shutdown();
    /* istanbul ignore next */
    cov_1hdgsfofle().s[73]++;
    this.logger.info('✅ Big Games Program shutdown complete');
  }
}
/* istanbul ignore next */
cov_1hdgsfofle().s[74]++;
exports.BigGamesProgram = BigGamesProgram;
// Global instance for singleton pattern
let bigGamesInstance =
/* istanbul ignore next */
(cov_1hdgsfofle().s[75]++, null);
async function initializeBigGames() {
  /* istanbul ignore next */
  cov_1hdgsfofle().f[16]++;
  cov_1hdgsfofle().s[76]++;
  if (bigGamesInstance) {
    /* istanbul ignore next */
    cov_1hdgsfofle().b[8][0]++;
    cov_1hdgsfofle().s[77]++;
    throw new Error('Big Games Program already initialized');
  } else
  /* istanbul ignore next */
  {
    cov_1hdgsfofle().b[8][1]++;
  }
  cov_1hdgsfofle().s[78]++;
  bigGamesInstance = new BigGamesProgram();
  /* istanbul ignore next */
  cov_1hdgsfofle().s[79]++;
  await bigGamesInstance.initialize();
  /* istanbul ignore next */
  cov_1hdgsfofle().s[80]++;
  return bigGamesInstance;
}
function getBigGamesInstance() {
  /* istanbul ignore next */
  cov_1hdgsfofle().f[17]++;
  cov_1hdgsfofle().s[81]++;
  if (!bigGamesInstance) {
    /* istanbul ignore next */
    cov_1hdgsfofle().b[9][0]++;
    cov_1hdgsfofle().s[82]++;
    throw new Error('Big Games Program not initialized. Call initializeBigGames() first.');
  } else
  /* istanbul ignore next */
  {
    cov_1hdgsfofle().b[9][1]++;
  }
  cov_1hdgsfofle().s[83]++;
  return bigGamesInstance;
}
async function shutdownBigGames() {
  /* istanbul ignore next */
  cov_1hdgsfofle().f[18]++;
  cov_1hdgsfofle().s[84]++;
  if (bigGamesInstance) {
    /* istanbul ignore next */
    cov_1hdgsfofle().b[10][0]++;
    cov_1hdgsfofle().s[85]++;
    await bigGamesInstance.shutdown();
    /* istanbul ignore next */
    cov_1hdgsfofle().s[86]++;
    bigGamesInstance = null;
  } else
  /* istanbul ignore next */
  {
    cov_1hdgsfofle().b[10][1]++;
  }
}