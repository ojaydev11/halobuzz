d0e8a49ad7dccdf5f98b99fee435a0c9
"use strict";

/**
 * Performance Monitoring Utility
 * Provides performance tracking and monitoring capabilities
 */
/* istanbul ignore next */
function cov_17ubtgdmvo() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\utils\\performanceMonitor.ts";
  var hash = "ade989b1d8e27500cf4add53fc8bcfc1032eb65c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\utils\\performanceMonitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 36
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 15,
          column: 10
        }
      },
      "3": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "4": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 67
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 43
        }
      },
      "6": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 57
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 28,
          column: 11
        }
      },
      "8": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 31,
          column: 57
        }
      },
      "9": {
        start: {
          line: 32,
          column: 21
        },
        end: {
          line: 32,
          column: 53
        }
      },
      "10": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "11": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 65
        }
      },
      "12": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 29
        }
      },
      "13": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 34
        }
      },
      "14": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 38,
          column: 49
        }
      },
      "15": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 31
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 33
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 58
        }
      },
      "18": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 24
        }
      },
      "19": {
        start: {
          line: 45,
          column: 25
        },
        end: {
          line: 45,
          column: 57
        }
      },
      "20": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 55
        }
      },
      "21": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "22": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 54
        }
      },
      "23": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "24": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "25": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 46
        }
      },
      "26": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 58,
          column: 57
        }
      },
      "27": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 10
        }
      },
      "28": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 65,
          column: 48
        }
      },
      "29": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 18
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 25
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 44
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 48
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 52
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ade989b1d8e27500cf4add53fc8bcfc1032eb65c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_17ubtgdmvo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_17ubtgdmvo();
cov_17ubtgdmvo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_17ubtgdmvo().s[1]++;
exports.PerformanceMonitor = void 0;
class PerformanceMonitor {
  static instance;
  metrics;
  constructor() {
    /* istanbul ignore next */
    cov_17ubtgdmvo().f[0]++;
    cov_17ubtgdmvo().s[2]++;
    this.metrics = {
      marks: new Map(),
      measurements: new Map()
    };
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_17ubtgdmvo().f[1]++;
    cov_17ubtgdmvo().s[3]++;
    if (!PerformanceMonitor.instance) {
      /* istanbul ignore next */
      cov_17ubtgdmvo().b[0][0]++;
      cov_17ubtgdmvo().s[4]++;
      PerformanceMonitor.instance = new PerformanceMonitor();
    } else
    /* istanbul ignore next */
    {
      cov_17ubtgdmvo().b[0][1]++;
    }
    cov_17ubtgdmvo().s[5]++;
    return PerformanceMonitor.instance;
  }
  static markStart(name) {
    /* istanbul ignore next */
    cov_17ubtgdmvo().f[2]++;
    const instance =
    /* istanbul ignore next */
    (cov_17ubtgdmvo().s[6]++, PerformanceMonitor.getInstance());
    /* istanbul ignore next */
    cov_17ubtgdmvo().s[7]++;
    instance.metrics.marks.set(name, {
      name,
      startTime: Date.now()
    });
  }
  static markEnd(name) {
    /* istanbul ignore next */
    cov_17ubtgdmvo().f[3]++;
    const instance =
    /* istanbul ignore next */
    (cov_17ubtgdmvo().s[8]++, PerformanceMonitor.getInstance());
    const mark =
    /* istanbul ignore next */
    (cov_17ubtgdmvo().s[9]++, instance.metrics.marks.get(name));
    /* istanbul ignore next */
    cov_17ubtgdmvo().s[10]++;
    if (!mark) {
      /* istanbul ignore next */
      cov_17ubtgdmvo().b[1][0]++;
      cov_17ubtgdmvo().s[11]++;
      console.warn(`Performance mark "${name}" not found`);
      /* istanbul ignore next */
      cov_17ubtgdmvo().s[12]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_17ubtgdmvo().b[1][1]++;
    }
    const endTime =
    /* istanbul ignore next */
    (cov_17ubtgdmvo().s[13]++, Date.now());
    const duration =
    /* istanbul ignore next */
    (cov_17ubtgdmvo().s[14]++, endTime - mark.startTime);
    /* istanbul ignore next */
    cov_17ubtgdmvo().s[15]++;
    mark.endTime = endTime;
    /* istanbul ignore next */
    cov_17ubtgdmvo().s[16]++;
    mark.duration = duration;
    /* istanbul ignore next */
    cov_17ubtgdmvo().s[17]++;
    instance.metrics.measurements.set(name, duration);
    /* istanbul ignore next */
    cov_17ubtgdmvo().s[18]++;
    return duration;
  }
  static getMeasurement(name) {
    /* istanbul ignore next */
    cov_17ubtgdmvo().f[4]++;
    const instance =
    /* istanbul ignore next */
    (cov_17ubtgdmvo().s[19]++, PerformanceMonitor.getInstance());
    /* istanbul ignore next */
    cov_17ubtgdmvo().s[20]++;
    return instance.metrics.measurements.get(name);
  }
  static getAllMeasurements() {
    /* istanbul ignore next */
    cov_17ubtgdmvo().f[5]++;
    const instance =
    /* istanbul ignore next */
    (cov_17ubtgdmvo().s[21]++, PerformanceMonitor.getInstance());
    /* istanbul ignore next */
    cov_17ubtgdmvo().s[22]++;
    return new Map(instance.metrics.measurements);
  }
  static clear() {
    /* istanbul ignore next */
    cov_17ubtgdmvo().f[6]++;
    const instance =
    /* istanbul ignore next */
    (cov_17ubtgdmvo().s[23]++, PerformanceMonitor.getInstance());
    /* istanbul ignore next */
    cov_17ubtgdmvo().s[24]++;
    instance.metrics.marks.clear();
    /* istanbul ignore next */
    cov_17ubtgdmvo().s[25]++;
    instance.metrics.measurements.clear();
  }
  static getMetrics() {
    /* istanbul ignore next */
    cov_17ubtgdmvo().f[7]++;
    const instance =
    /* istanbul ignore next */
    (cov_17ubtgdmvo().s[26]++, PerformanceMonitor.getInstance());
    /* istanbul ignore next */
    cov_17ubtgdmvo().s[27]++;
    return {
      marks: new Map(instance.metrics.marks),
      measurements: new Map(instance.metrics.measurements)
    };
  }
}
/* istanbul ignore next */
cov_17ubtgdmvo().s[28]++;
exports.PerformanceMonitor = PerformanceMonitor;
/* istanbul ignore next */
cov_17ubtgdmvo().s[29]++;
exports.default = PerformanceMonitor;