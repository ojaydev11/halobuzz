aca4901ecd823a6262f875e48b49bbcc
"use strict";

/* istanbul ignore next */
function cov_2m9app4frk() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\reels-old.ts";
  var hash = "8b20c92353f954b7f37ea04d414bd4fd4186f156";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\reels-old.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 40
        }
      },
      "8": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 68
        }
      },
      "9": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 64
        }
      },
      "10": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 52
        }
      },
      "11": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "12": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "13": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "14": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 90,
          column: 3
        }
      },
      "15": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "16": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 69
        }
      },
      "17": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "18": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "19": {
        start: {
          line: 50,
          column: 49
        },
        end: {
          line: 50,
          column: 57
        }
      },
      "20": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "21": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "22": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "23": {
        start: {
          line: 59,
          column: 21
        },
        end: {
          line: 59,
          column: 55
        }
      },
      "24": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "25": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "26": {
        start: {
          line: 67,
          column: 30
        },
        end: {
          line: 67,
          column: 55
        }
      },
      "27": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 78
        }
      },
      "28": {
        start: {
          line: 70,
          column: 29
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "29": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "30": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 71
        }
      },
      "31": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "32": {
        start: {
          line: 92,
          column: 0
        },
        end: {
          line: 257,
          column: 3
        }
      },
      "33": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "34": {
        start: {
          line: 130,
          column: 23
        },
        end: {
          line: 130,
          column: 69
        }
      },
      "35": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "36": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "37": {
        start: {
          line: 137,
          column: 96
        },
        end: {
          line: 137,
          column: 104
        }
      },
      "38": {
        start: {
          line: 138,
          column: 23
        },
        end: {
          line: 138,
          column: 39
        }
      },
      "39": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "40": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 143,
          column: 15
        }
      },
      "41": {
        start: {
          line: 146,
          column: 21
        },
        end: {
          line: 146,
          column: 55
        }
      },
      "42": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "43": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 151,
          column: 15
        }
      },
      "44": {
        start: {
          line: 188,
          column: 24
        },
        end: {
          line: 188,
          column: 76
        }
      },
      "45": {
        start: {
          line: 190,
          column: 21
        },
        end: {
          line: 223,
          column: 10
        }
      },
      "46": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 26
        }
      },
      "47": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 230,
          column: 11
        }
      },
      "48": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 95
        }
      },
      "49": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 248,
          column: 11
        }
      },
      "50": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 69
        }
      },
      "51": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 255,
          column: 11
        }
      },
      "52": {
        start: {
          line: 259,
          column: 0
        },
        end: {
          line: 345,
          column: 3
        }
      },
      "53": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "54": {
        start: {
          line: 261,
          column: 99
        },
        end: {
          line: 261,
          column: 108
        }
      },
      "55": {
        start: {
          line: 262,
          column: 21
        },
        end: {
          line: 262,
          column: 59
        }
      },
      "56": {
        start: {
          line: 263,
          column: 23
        },
        end: {
          line: 263,
          column: 59
        }
      },
      "57": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 265,
          column: 39
        }
      },
      "58": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 39
        }
      },
      "59": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 267,
          column: 35
        }
      },
      "60": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 35
        }
      },
      "61": {
        start: {
          line: 268,
          column: 27
        },
        end: {
          line: 268,
          column: 29
        }
      },
      "62": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "63": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 271,
          column: 56
        }
      },
      "64": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 272,
          column: 22
        }
      },
      "65": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 56
        }
      },
      "66": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 22
        }
      },
      "67": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 64
        }
      },
      "68": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 22
        }
      },
      "69": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 49
        }
      },
      "70": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 282,
          column: 22
        }
      },
      "71": {
        start: {
          line: 284,
          column: 22
        },
        end: {
          line: 288,
          column: 58
        }
      },
      "72": {
        start: {
          line: 289,
          column: 22
        },
        end: {
          line: 289,
          column: 62
        }
      },
      "73": {
        start: {
          line: 301,
          column: 30
        },
        end: {
          line: 324,
          column: 11
        }
      },
      "74": {
        start: {
          line: 310,
          column: 28
        },
        end: {
          line: 310,
          column: 85
        }
      },
      "75": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 323,
          column: 14
        }
      },
      "76": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 336,
          column: 11
        }
      },
      "77": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 58
        }
      },
      "78": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 343,
          column: 11
        }
      },
      "79": {
        start: {
          line: 347,
          column: 0
        },
        end: {
          line: 390,
          column: 3
        }
      },
      "80": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 389,
          column: 5
        }
      },
      "81": {
        start: {
          line: 349,
          column: 50
        },
        end: {
          line: 349,
          column: 59
        }
      },
      "82": {
        start: {
          line: 350,
          column: 22
        },
        end: {
          line: 350,
          column: 80
        }
      },
      "83": {
        start: {
          line: 352,
          column: 30
        },
        end: {
          line: 374,
          column: 11
        }
      },
      "84": {
        start: {
          line: 361,
          column: 28
        },
        end: {
          line: 361,
          column: 85
        }
      },
      "85": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 373,
          column: 14
        }
      },
      "86": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 381,
          column: 11
        }
      },
      "87": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 67
        }
      },
      "88": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 388,
          column: 11
        }
      },
      "89": {
        start: {
          line: 392,
          column: 0
        },
        end: {
          line: 451,
          column: 3
        }
      },
      "90": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 450,
          column: 5
        }
      },
      "91": {
        start: {
          line: 394,
          column: 23
        },
        end: {
          line: 394,
          column: 33
        }
      },
      "92": {
        start: {
          line: 395,
          column: 21
        },
        end: {
          line: 396,
          column: 58
        }
      },
      "93": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "94": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 401,
          column: 15
        }
      },
      "95": {
        start: {
          line: 422,
          column: 24
        },
        end: {
          line: 422,
          column: 81
        }
      },
      "96": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 35
        }
      },
      "97": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 442,
          column: 11
        }
      },
      "98": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 57
        }
      },
      "99": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 449,
          column: 11
        }
      },
      "100": {
        start: {
          line: 453,
          column: 0
        },
        end: {
          line: 504,
          column: 3
        }
      },
      "101": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 503,
          column: 5
        }
      },
      "102": {
        start: {
          line: 455,
          column: 27
        },
        end: {
          line: 455,
          column: 37
        }
      },
      "103": {
        start: {
          line: 456,
          column: 41
        },
        end: {
          line: 456,
          column: 50
        }
      },
      "104": {
        start: {
          line: 457,
          column: 21
        },
        end: {
          line: 457,
          column: 59
        }
      },
      "105": {
        start: {
          line: 458,
          column: 22
        },
        end: {
          line: 461,
          column: 35
        }
      },
      "106": {
        start: {
          line: 462,
          column: 22
        },
        end: {
          line: 462,
          column: 66
        }
      },
      "107": {
        start: {
          line: 464,
          column: 30
        },
        end: {
          line: 483,
          column: 11
        }
      },
      "108": {
        start: {
          line: 473,
          column: 28
        },
        end: {
          line: 473,
          column: 85
        }
      },
      "109": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 482,
          column: 14
        }
      },
      "110": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 495,
          column: 11
        }
      },
      "111": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 63
        }
      },
      "112": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 502,
          column: 11
        }
      },
      "113": {
        start: {
          line: 506,
          column: 0
        },
        end: {
          line: 547,
          column: 3
        }
      },
      "114": {
        start: {
          line: 507,
          column: 4
        },
        end: {
          line: 546,
          column: 5
        }
      },
      "115": {
        start: {
          line: 508,
          column: 23
        },
        end: {
          line: 508,
          column: 33
        }
      },
      "116": {
        start: {
          line: 509,
          column: 23
        },
        end: {
          line: 509,
          column: 39
        }
      },
      "117": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 515,
          column: 9
        }
      },
      "118": {
        start: {
          line: 511,
          column: 12
        },
        end: {
          line: 514,
          column: 15
        }
      },
      "119": {
        start: {
          line: 516,
          column: 21
        },
        end: {
          line: 516,
          column: 51
        }
      },
      "120": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 522,
          column: 9
        }
      },
      "121": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 521,
          column: 15
        }
      },
      "122": {
        start: {
          line: 523,
          column: 33
        },
        end: {
          line: 523,
          column: 60
        }
      },
      "123": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 530,
          column: 9
        }
      },
      "124": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 526,
          column: 55
        }
      },
      "125": {
        start: {
          line: 529,
          column: 12
        },
        end: {
          line: 529,
          column: 49
        }
      },
      "126": {
        start: {
          line: 531,
          column: 8
        },
        end: {
          line: 538,
          column: 11
        }
      },
      "127": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 541,
          column: 58
        }
      },
      "128": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 545,
          column: 11
        }
      },
      "129": {
        start: {
          line: 549,
          column: 0
        },
        end: {
          line: 579,
          column: 3
        }
      },
      "130": {
        start: {
          line: 550,
          column: 4
        },
        end: {
          line: 578,
          column: 5
        }
      },
      "131": {
        start: {
          line: 551,
          column: 23
        },
        end: {
          line: 551,
          column: 33
        }
      },
      "132": {
        start: {
          line: 552,
          column: 23
        },
        end: {
          line: 552,
          column: 39
        }
      },
      "133": {
        start: {
          line: 553,
          column: 8
        },
        end: {
          line: 558,
          column: 9
        }
      },
      "134": {
        start: {
          line: 554,
          column: 12
        },
        end: {
          line: 557,
          column: 15
        }
      },
      "135": {
        start: {
          line: 559,
          column: 21
        },
        end: {
          line: 559,
          column: 51
        }
      },
      "136": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 565,
          column: 9
        }
      },
      "137": {
        start: {
          line: 561,
          column: 12
        },
        end: {
          line: 564,
          column: 15
        }
      },
      "138": {
        start: {
          line: 566,
          column: 8
        },
        end: {
          line: 566,
          column: 84
        }
      },
      "139": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 570,
          column: 11
        }
      },
      "140": {
        start: {
          line: 573,
          column: 8
        },
        end: {
          line: 573,
          column: 59
        }
      },
      "141": {
        start: {
          line: 574,
          column: 8
        },
        end: {
          line: 577,
          column: 11
        }
      },
      "142": {
        start: {
          line: 580,
          column: 0
        },
        end: {
          line: 580,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 41,
            column: 3
          },
          end: {
            line: 41,
            column: 4
          }
        },
        loc: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 41
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 128,
            column: 3
          },
          end: {
            line: 128,
            column: 4
          }
        },
        loc: {
          start: {
            line: 128,
            column: 23
          },
          end: {
            line: 257,
            column: 1
          }
        },
        line: 128
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 259,
            column: 16
          },
          end: {
            line: 259,
            column: 17
          }
        },
        loc: {
          start: {
            line: 259,
            column: 36
          },
          end: {
            line: 345,
            column: 1
          }
        },
        line: 259
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 301,
            column: 58
          },
          end: {
            line: 301,
            column: 59
          }
        },
        loc: {
          start: {
            line: 301,
            column: 74
          },
          end: {
            line: 324,
            column: 9
          }
        },
        line: 301
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 347,
            column: 24
          },
          end: {
            line: 347,
            column: 25
          }
        },
        loc: {
          start: {
            line: 347,
            column: 44
          },
          end: {
            line: 390,
            column: 1
          }
        },
        line: 347
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 352,
            column: 58
          },
          end: {
            line: 352,
            column: 59
          }
        },
        loc: {
          start: {
            line: 352,
            column: 74
          },
          end: {
            line: 374,
            column: 9
          }
        },
        line: 352
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 392,
            column: 19
          },
          end: {
            line: 392,
            column: 20
          }
        },
        loc: {
          start: {
            line: 392,
            column: 39
          },
          end: {
            line: 451,
            column: 1
          }
        },
        line: 392
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 453,
            column: 28
          },
          end: {
            line: 453,
            column: 29
          }
        },
        loc: {
          start: {
            line: 453,
            column: 48
          },
          end: {
            line: 504,
            column: 1
          }
        },
        line: 453
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 464,
            column: 58
          },
          end: {
            line: 464,
            column: 59
          }
        },
        loc: {
          start: {
            line: 464,
            column: 74
          },
          end: {
            line: 483,
            column: 9
          }
        },
        line: 464
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 506,
            column: 25
          },
          end: {
            line: 506,
            column: 26
          }
        },
        loc: {
          start: {
            line: 506,
            column: 45
          },
          end: {
            line: 547,
            column: 1
          }
        },
        line: 506
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 549,
            column: 26
          },
          end: {
            line: 549,
            column: 27
          }
        },
        loc: {
          start: {
            line: 549,
            column: 46
          },
          end: {
            line: 579,
            column: 1
          }
        },
        line: 549
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 46
          }
        }, {
          start: {
            line: 25,
            column: 50
          },
          end: {
            line: 25,
            column: 66
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "8": {
        loc: {
          start: {
            line: 137,
            column: 45
          },
          end: {
            line: 137,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 137,
            column: 52
          },
          end: {
            line: 137,
            column: 54
          }
        }],
        line: 137
      },
      "9": {
        loc: {
          start: {
            line: 137,
            column: 56
          },
          end: {
            line: 137,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 137,
            column: 67
          },
          end: {
            line: 137,
            column: 74
          }
        }],
        line: 137
      },
      "10": {
        loc: {
          start: {
            line: 137,
            column: 76
          },
          end: {
            line: 137,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 137,
            column: 87
          },
          end: {
            line: 137,
            column: 91
          }
        }],
        line: 137
      },
      "11": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "12": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "13": {
        loc: {
          start: {
            line: 261,
            column: 34
          },
          end: {
            line: 261,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 261,
            column: 45
          },
          end: {
            line: 261,
            column: 50
          }
        }],
        line: 261
      },
      "14": {
        loc: {
          start: {
            line: 261,
            column: 52
          },
          end: {
            line: 261,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 261,
            column: 60
          },
          end: {
            line: 261,
            column: 62
          }
        }],
        line: 261
      },
      "15": {
        loc: {
          start: {
            line: 261,
            column: 64
          },
          end: {
            line: 261,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 261,
            column: 71
          },
          end: {
            line: 261,
            column: 72
          }
        }],
        line: 261
      },
      "16": {
        loc: {
          start: {
            line: 261,
            column: 74
          },
          end: {
            line: 261,
            column: 94
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 261,
            column: 83
          },
          end: {
            line: 261,
            column: 94
          }
        }],
        line: 261
      },
      "17": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 265,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 265,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "18": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 267,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 267,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "19": {
        loc: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 272,
            column: 22
          }
        }, {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 275,
            column: 22
          }
        }, {
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 278,
            column: 22
          }
        }, {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 279,
            column: 29
          }
        }, {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 282,
            column: 22
          }
        }],
        line: 269
      },
      "20": {
        loc: {
          start: {
            line: 349,
            column: 16
          },
          end: {
            line: 349,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 349,
            column: 24
          },
          end: {
            line: 349,
            column: 26
          }
        }],
        line: 349
      },
      "21": {
        loc: {
          start: {
            line: 349,
            column: 28
          },
          end: {
            line: 349,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 349,
            column: 40
          },
          end: {
            line: 349,
            column: 45
          }
        }],
        line: 349
      },
      "22": {
        loc: {
          start: {
            line: 397,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 397
      },
      "23": {
        loc: {
          start: {
            line: 456,
            column: 16
          },
          end: {
            line: 456,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 456,
            column: 24
          },
          end: {
            line: 456,
            column: 26
          }
        }],
        line: 456
      },
      "24": {
        loc: {
          start: {
            line: 456,
            column: 28
          },
          end: {
            line: 456,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 456,
            column: 35
          },
          end: {
            line: 456,
            column: 36
          }
        }],
        line: 456
      },
      "25": {
        loc: {
          start: {
            line: 510,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 510,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 510
      },
      "26": {
        loc: {
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "27": {
        loc: {
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        }, {
          start: {
            line: 528,
            column: 13
          },
          end: {
            line: 530,
            column: 9
          }
        }],
        line: 525
      },
      "28": {
        loc: {
          start: {
            line: 553,
            column: 8
          },
          end: {
            line: 558,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 553,
            column: 8
          },
          end: {
            line: 558,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 553
      },
      "29": {
        loc: {
          start: {
            line: 560,
            column: 8
          },
          end: {
            line: 565,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 560,
            column: 8
          },
          end: {
            line: 565,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 560
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0],
      "15": [0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0, 0, 0],
      "20": [0],
      "21": [0],
      "22": [0, 0],
      "23": [0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8b20c92353f954b7f37ea04d414bd4fd4186f156"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2m9app4frk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2m9app4frk();
var __importDefault =
/* istanbul ignore next */
(cov_2m9app4frk().s[0]++,
/* istanbul ignore next */
(cov_2m9app4frk().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2m9app4frk().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2m9app4frk().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2m9app4frk().f[0]++;
  cov_2m9app4frk().s[1]++;
  return /* istanbul ignore next */(cov_2m9app4frk().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2m9app4frk().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2m9app4frk().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2m9app4frk().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2m9app4frk().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2m9app4frk().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_2m9app4frk().s[4]++, require("express-validator"));
const uuid_1 =
/* istanbul ignore next */
(cov_2m9app4frk().s[5]++, require("uuid"));
const User_1 =
/* istanbul ignore next */
(cov_2m9app4frk().s[6]++, require("../models/User"));
const Reel_1 =
/* istanbul ignore next */
(cov_2m9app4frk().s[7]++, require("../models/Reel"));
const ReputationService_1 =
/* istanbul ignore next */
(cov_2m9app4frk().s[8]++, require("../services/ReputationService"));
const ModerationQueue_1 =
/* istanbul ignore next */
(cov_2m9app4frk().s[9]++, require("../services/ModerationQueue"));
const s3Service_1 =
/* istanbul ignore next */
(cov_2m9app4frk().s[10]++, require("../services/s3Service"));
const logger_1 =
/* istanbul ignore next */
(cov_2m9app4frk().s[11]++, require("../config/logger"));
const router =
/* istanbul ignore next */
(cov_2m9app4frk().s[12]++, express_1.default.Router());
// Initialize S3 client
// S3Client will be dynamically imported when needed
// const s3Client = new S3Client({
//   region: process.env.AWS_REGION || 'us-east-1',
//   credentials: {
//     accessKeyId: process.env.AWS_ACCESS_KEY_ID || '',
//     secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY || ''
//   }
// });
const BUCKET_NAME =
/* istanbul ignore next */
(cov_2m9app4frk().s[13]++,
/* istanbul ignore next */
(cov_2m9app4frk().b[3][0]++, process.env.S3_BUCKET_NAME) ||
/* istanbul ignore next */
(cov_2m9app4frk().b[3][1]++, 'halobuzz-reels'));
// Get presigned URL for reel upload
/* istanbul ignore next */
cov_2m9app4frk().s[14]++;
router.post('/upload/presign', [(0, express_validator_1.body)('fileName').isString().trim().isLength({
  min: 1,
  max: 255
}).withMessage('Valid file name is required'), (0, express_validator_1.body)('fileType').isString().trim().matches(/^video\/(mp4|mov|avi|mkv|webm)$/).withMessage('Valid video file type is required'), (0, express_validator_1.body)('fileSize').isInt({
  min: 1024,
  max: 100 * 1024 * 1024
}) // 1KB to 100MB
.withMessage('File size must be between 1KB and 100MB')], async (req, res) => {
  /* istanbul ignore next */
  cov_2m9app4frk().f[1]++;
  cov_2m9app4frk().s[15]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[16]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_2m9app4frk().s[17]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[4][0]++;
      cov_2m9app4frk().s[18]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[4][1]++;
    }
    const {
      fileName,
      fileType,
      fileSize
    } =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[19]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[20]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2m9app4frk().s[21]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[5][0]++;
      cov_2m9app4frk().s[22]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[5][1]++;
    }
    // Validate user
    const user =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[23]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_2m9app4frk().s[24]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[6][0]++;
      cov_2m9app4frk().s[25]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[6][1]++;
    }
    // Generate unique file key
    const fileExtension =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[26]++, fileName.split('.').pop());
    const fileKey =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[27]++, `reels/${userId}/${(0, uuid_1.v4)()}.${fileExtension}`);
    // Create presigned URL for upload using S3 service
    const presignedUrl =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[28]++, await s3Service_1.s3Service.generatePresignedUploadUrl(fileKey, fileType, {
      userId: userId,
      originalName: fileName
    }));
    /* istanbul ignore next */
    cov_2m9app4frk().s[29]++;
    res.json({
      success: true,
      data: {
        uploadUrl: presignedUrl,
        fileKey,
        expiresIn: 3600
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2m9app4frk().s[30]++;
    logger_1.logger.error('Generate presigned URL failed:', error);
    /* istanbul ignore next */
    cov_2m9app4frk().s[31]++;
    res.status(500).json({
      success: false,
      error: 'Failed to generate upload URL'
    });
  }
});
// Create reel record after upload
/* istanbul ignore next */
cov_2m9app4frk().s[32]++;
router.post('/upload/complete', [(0, express_validator_1.body)('fileKey').isString().trim().isLength({
  min: 1
}).withMessage('File key is required'), (0, express_validator_1.body)('title').isString().trim().isLength({
  min: 1,
  max: 100
}).withMessage('Title must be between 1 and 100 characters'), (0, express_validator_1.body)('description').optional().isString().trim().isLength({
  max: 500
}).withMessage('Description must be less than 500 characters'), (0, express_validator_1.body)('tags').optional().isArray().withMessage('Tags must be an array'), (0, express_validator_1.body)('tags.*').isString().trim().isLength({
  min: 1,
  max: 20
}).withMessage('Each tag must be between 1 and 20 characters'), (0, express_validator_1.body)('category').optional().isString().trim().isIn(['entertainment', 'gaming', 'music', 'comedy', 'education', 'lifestyle', 'other']).withMessage('Valid category is required'), (0, express_validator_1.body)('isPublic').optional().isBoolean().withMessage('isPublic must be a boolean')], async (req, res) => {
  /* istanbul ignore next */
  cov_2m9app4frk().f[2]++;
  cov_2m9app4frk().s[33]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[34]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_2m9app4frk().s[35]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[7][0]++;
      cov_2m9app4frk().s[36]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[7][1]++;
    }
    const {
      fileKey,
      title,
      description,
      tags =
      /* istanbul ignore next */
      (cov_2m9app4frk().b[8][0]++, []),
      category =
      /* istanbul ignore next */
      (cov_2m9app4frk().b[9][0]++, 'other'),
      isPublic =
      /* istanbul ignore next */
      (cov_2m9app4frk().b[10][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[37]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[38]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2m9app4frk().s[39]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[11][0]++;
      cov_2m9app4frk().s[40]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[11][1]++;
    }
    // Validate user
    const user =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[41]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_2m9app4frk().s[42]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[12][0]++;
      cov_2m9app4frk().s[43]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[12][1]++;
    }
    // Verify file exists in S3
    // AWS SDK functionality temporarily disabled for compilation
    // try {
    //   const { S3Client, GetObjectCommand } = await import('@aws-sdk/client-s3') as any;
    //   const { getSignedUrl } = await import('@aws-sdk/s3-request-presigner') as any;
    //   
    //   const s3Client = new S3Client({
    //     region: process.env.AWS_REGION || 'us-east-1',
    //     credentials: {
    //       accessKeyId: process.env.AWS_ACCESS_KEY_ID || '',
    //       secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY || ''
    //     }
    //   });
    //   
    //   const headObjectCommand = new GetObjectCommand({
    //     Bucket: BUCKET_NAME,
    //     Key: fileKey
    //   });
    //   await s3Client.send(headObjectCommand);
    // } catch (error) {
    //   return res.status(400).json({
    //     success: false,
    //     error: 'File not found in storage'
    //   });
    // }
    // Generate presigned URL for viewing
    // AWS SDK functionality temporarily disabled for compilation
    // const getObjectCommand = new GetObjectCommand({
    //   Bucket: BUCKET_NAME,
    //   Key: fileKey
    // });
    // const viewUrl = await getSignedUrl(s3Client, getObjectCommand, {
    //   expiresIn: 86400 // 24 hours
    // });
    // Temporary mock URL for compilation
    const viewUrl =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[44]++, `https://${BUCKET_NAME}.s3.amazonaws.com/${fileKey}`);
    // Create reel record
    const reel =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[45]++, new Reel_1.Reel({
      userId,
      username: user.username,
      avatar: user.avatar,
      fileKey,
      viewUrl,
      title,
      description,
      tags,
      category,
      isPublic,
      status: 'processing',
      // Will be updated after video processing
      metadata: {
        duration: 0,
        // Will be updated after processing
        resolution: '',
        fileSize: 0,
        views: 0,
        likes: 0,
        shares: 0,
        comments: 0,
        trendingScore: 0,
        engagementRate: 0
      },
      processing: {
        status: 'queued',
        progress: 0,
        tasks: {
          transcoding: false,
          thumbnailGeneration: false,
          contentModeration: false,
          aiAnalysis: false
        }
      }
    }));
    /* istanbul ignore next */
    cov_2m9app4frk().s[46]++;
    await reel.save();
    // Apply reputation bonus for content creation
    /* istanbul ignore next */
    cov_2m9app4frk().s[47]++;
    await ReputationService_1.reputationService.applyReputationDelta(userId, 'reel_uploaded', {
      count: 1,
      category,
      isPublic
    });
    // Auto-moderate content
    /* istanbul ignore next */
    cov_2m9app4frk().s[48]++;
    await ModerationQueue_1.moderationQueue.autoModerateContent(title + ' ' + description);
    /* istanbul ignore next */
    cov_2m9app4frk().s[49]++;
    res.json({
      success: true,
      message: 'Reel uploaded successfully',
      data: {
        reel: {
          id: reel._id,
          title: reel.title,
          description: reel.description,
          category: reel.category,
          isPublic: reel.isPublic,
          status: reel.status,
          viewUrl: reel.viewUrl,
          createdAt: reel.createdAt
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2m9app4frk().s[50]++;
    logger_1.logger.error('Complete reel upload failed:', error);
    /* istanbul ignore next */
    cov_2m9app4frk().s[51]++;
    res.status(500).json({
      success: false,
      error: 'Failed to complete upload'
    });
  }
});
// Get reels list
/* istanbul ignore next */
cov_2m9app4frk().s[52]++;
router.get('/', async (req, res) => {
  /* istanbul ignore next */
  cov_2m9app4frk().f[3]++;
  cov_2m9app4frk().s[53]++;
  try {
    const {
      category,
      userId,
      trending =
      /* istanbul ignore next */
      (cov_2m9app4frk().b[13][0]++, false),
      limit =
      /* istanbul ignore next */
      (cov_2m9app4frk().b[14][0]++, 20),
      page =
      /* istanbul ignore next */
      (cov_2m9app4frk().b[15][0]++, 1),
      sortBy =
      /* istanbul ignore next */
      (cov_2m9app4frk().b[16][0]++, 'createdAt')
    } =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[54]++, req.query);
    const skip =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[55]++, (parseInt(page) - 1) * parseInt(limit));
    const filter =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[56]++, {
      isPublic: true,
      status: 'active'
    });
    /* istanbul ignore next */
    cov_2m9app4frk().s[57]++;
    if (category) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[17][0]++;
      cov_2m9app4frk().s[58]++;
      filter.category = category;
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[17][1]++;
    }
    cov_2m9app4frk().s[59]++;
    if (userId) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[18][0]++;
      cov_2m9app4frk().s[60]++;
      filter.userId = userId;
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[18][1]++;
    }
    let sortCriteria =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[61]++, {});
    /* istanbul ignore next */
    cov_2m9app4frk().s[62]++;
    switch (sortBy) {
      case 'views':
        /* istanbul ignore next */
        cov_2m9app4frk().b[19][0]++;
        cov_2m9app4frk().s[63]++;
        sortCriteria = {
          'metadata.views': -1
        };
        /* istanbul ignore next */
        cov_2m9app4frk().s[64]++;
        break;
      case 'likes':
        /* istanbul ignore next */
        cov_2m9app4frk().b[19][1]++;
        cov_2m9app4frk().s[65]++;
        sortCriteria = {
          'metadata.likes': -1
        };
        /* istanbul ignore next */
        cov_2m9app4frk().s[66]++;
        break;
      case 'trending':
        /* istanbul ignore next */
        cov_2m9app4frk().b[19][2]++;
        cov_2m9app4frk().s[67]++;
        sortCriteria = {
          'metadata.trendingScore': -1
        };
        /* istanbul ignore next */
        cov_2m9app4frk().s[68]++;
        break;
      case 'createdAt':
        /* istanbul ignore next */
        cov_2m9app4frk().b[19][3]++;
      default:
        /* istanbul ignore next */
        cov_2m9app4frk().b[19][4]++;
        cov_2m9app4frk().s[69]++;
        sortCriteria = {
          createdAt: -1
        };
        /* istanbul ignore next */
        cov_2m9app4frk().s[70]++;
        break;
    }
    const reels =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[71]++, await Reel_1.Reel.find(filter).sort(sortCriteria).skip(skip).limit(parseInt(limit)).populate('userId', 'username avatar ogLevel'));
    const total =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[72]++, await Reel_1.Reel.countDocuments(filter));
    // Generate fresh view URLs for each reel
    // AWS SDK functionality temporarily disabled for compilation
    // const { S3Client, GetObjectCommand } = await import('@aws-sdk/client-s3') as any;
    // const { getSignedUrl } = await import('@aws-sdk/s3-request-presigner') as any;
    // const s3Client = new S3Client({
    //   region: process.env.AWS_REGION || 'us-east-1',
    //   credentials: {
    //     accessKeyId: process.env.AWS_ACCESS_KEY_ID || '',
    //     secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY || ''
    //   }
    // });
    const reelsWithUrls =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[73]++, await Promise.all(reels.map(async reel => {
      /* istanbul ignore next */
      cov_2m9app4frk().f[4]++;
      // const getObjectCommand = new GetObjectCommand({
      //   Bucket: BUCKET_NAME,
      //   Key: reel.fileKey
      // });
      // const viewUrl = await getSignedUrl(s3Client, getObjectCommand, {
      //   expiresIn: 86400 // 24 hours
      // });
      // Temporary mock URL for compilation
      const viewUrl =
      /* istanbul ignore next */
      (cov_2m9app4frk().s[74]++, `https://${BUCKET_NAME}.s3.amazonaws.com/${reel.fileKey}`);
      /* istanbul ignore next */
      cov_2m9app4frk().s[75]++;
      return {
        id: reel._id,
        userId: reel.userId,
        username: reel.username,
        avatar: reel.avatar,
        title: reel.title,
        description: reel.description,
        category: reel.category,
        tags: reel.tags,
        viewUrl,
        metadata: reel.metadata,
        createdAt: reel.createdAt
      };
    })));
    /* istanbul ignore next */
    cov_2m9app4frk().s[76]++;
    res.json({
      success: true,
      data: {
        reels: reelsWithUrls,
        pagination: {
          page: parseInt(page),
          limit: parseInt(limit),
          total,
          pages: Math.ceil(total / parseInt(limit))
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2m9app4frk().s[77]++;
    logger_1.logger.error('Get reels failed:', error);
    /* istanbul ignore next */
    cov_2m9app4frk().s[78]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get reels'
    });
  }
});
// Get trending reels
/* istanbul ignore next */
cov_2m9app4frk().s[79]++;
router.get('/trending', async (req, res) => {
  /* istanbul ignore next */
  cov_2m9app4frk().f[5]++;
  cov_2m9app4frk().s[80]++;
  try {
    const {
      limit =
      /* istanbul ignore next */
      (cov_2m9app4frk().b[20][0]++, 10),
      timeFrame =
      /* istanbul ignore next */
      (cov_2m9app4frk().b[21][0]++, '24h')
    } =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[81]++, req.query);
    const reels =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[82]++, await Reel_1.Reel.findTrending(parseInt(limit), timeFrame));
    // Generate fresh view URLs
    const reelsWithUrls =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[83]++, await Promise.all(reels.map(async reel => {
      /* istanbul ignore next */
      cov_2m9app4frk().f[6]++;
      // const getObjectCommand = new GetObjectCommand({
      //   Bucket: BUCKET_NAME,
      //   Key: reel.fileKey
      // });
      // const viewUrl = await getSignedUrl(s3Client, getObjectCommand, {
      //   expiresIn: 86400
      // });
      // Temporary mock URL for compilation
      const viewUrl =
      /* istanbul ignore next */
      (cov_2m9app4frk().s[84]++, `https://${BUCKET_NAME}.s3.amazonaws.com/${reel.fileKey}`);
      /* istanbul ignore next */
      cov_2m9app4frk().s[85]++;
      return {
        id: reel._id,
        userId: reel.userId,
        username: reel.username,
        avatar: reel.avatar,
        title: reel.title,
        description: reel.description,
        category: reel.category,
        viewUrl,
        metadata: reel.metadata,
        trendingScore: reel.metadata.trendingScore
      };
    })));
    /* istanbul ignore next */
    cov_2m9app4frk().s[86]++;
    res.json({
      success: true,
      data: {
        reels: reelsWithUrls,
        timeFrame
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2m9app4frk().s[87]++;
    logger_1.logger.error('Get trending reels failed:', error);
    /* istanbul ignore next */
    cov_2m9app4frk().s[88]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get trending reels'
    });
  }
});
// Get reel by ID
/* istanbul ignore next */
cov_2m9app4frk().s[89]++;
router.get('/:id', async (req, res) => {
  /* istanbul ignore next */
  cov_2m9app4frk().f[7]++;
  cov_2m9app4frk().s[90]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[91]++, req.params);
    const reel =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[92]++, await Reel_1.Reel.findById(id).populate('userId', 'username avatar ogLevel'));
    /* istanbul ignore next */
    cov_2m9app4frk().s[93]++;
    if (!reel) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[22][0]++;
      cov_2m9app4frk().s[94]++;
      return res.status(404).json({
        success: false,
        error: 'Reel not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[22][1]++;
    }
    // Generate fresh view URL
    // AWS SDK functionality temporarily disabled for compilation
    // const { S3Client, GetObjectCommand } = await import('@aws-sdk/client-s3') as any;
    // const { getSignedUrl } = await import('@aws-sdk/s3-request-presigner') as any;
    // const s3Client = new S3Client({
    //   region: process.env.AWS_REGION || 'us-east-1',
    //   credentials: {
    //     accessKeyId: process.env.AWS_ACCESS_KEY_ID || '',
    //     secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY || ''
    //   }
    // });
    // const getObjectCommand = new GetObjectCommand({
    //   Bucket: BUCKET_NAME,
    //   Key: reel.fileKey
    // });
    // const viewUrl = await getSignedUrl(s3Client, getObjectCommand, {
    //   expiresIn: 86400
    // });
    // Temporary mock URL for compilation
    const viewUrl =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[95]++, `https://${BUCKET_NAME}.s3.amazonaws.com/${reel.fileKey}`);
    // Increment view count
    /* istanbul ignore next */
    cov_2m9app4frk().s[96]++;
    await reel.incrementView();
    /* istanbul ignore next */
    cov_2m9app4frk().s[97]++;
    res.json({
      success: true,
      data: {
        reel: {
          id: reel._id,
          userId: reel.userId,
          username: reel.username,
          avatar: reel.avatar,
          title: reel.title,
          description: reel.description,
          category: reel.category,
          tags: reel.tags,
          viewUrl,
          metadata: reel.metadata,
          createdAt: reel.createdAt
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2m9app4frk().s[98]++;
    logger_1.logger.error('Get reel failed:', error);
    /* istanbul ignore next */
    cov_2m9app4frk().s[99]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get reel'
    });
  }
});
// Get user's reels
/* istanbul ignore next */
cov_2m9app4frk().s[100]++;
router.get('/user/:userId', async (req, res) => {
  /* istanbul ignore next */
  cov_2m9app4frk().f[8]++;
  cov_2m9app4frk().s[101]++;
  try {
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[102]++, req.params);
    const {
      limit =
      /* istanbul ignore next */
      (cov_2m9app4frk().b[23][0]++, 20),
      page =
      /* istanbul ignore next */
      (cov_2m9app4frk().b[24][0]++, 1)
    } =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[103]++, req.query);
    const skip =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[104]++, (parseInt(page) - 1) * parseInt(limit));
    const reels =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[105]++, await Reel_1.Reel.find({
      userId
    }).sort({
      createdAt: -1
    }).skip(skip).limit(parseInt(limit)));
    const total =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[106]++, await Reel_1.Reel.countDocuments({
      userId
    }));
    // Generate fresh view URLs
    const reelsWithUrls =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[107]++, await Promise.all(reels.map(async reel => {
      /* istanbul ignore next */
      cov_2m9app4frk().f[9]++;
      // const getObjectCommand = new GetObjectCommand({
      //   Bucket: BUCKET_NAME,
      //   Key: reel.fileKey
      // });
      // const viewUrl = await getSignedUrl(s3Client, getObjectCommand, {
      //   expiresIn: 86400
      // });
      // Temporary mock URL for compilation
      const viewUrl =
      /* istanbul ignore next */
      (cov_2m9app4frk().s[108]++, `https://${BUCKET_NAME}.s3.amazonaws.com/${reel.fileKey}`);
      /* istanbul ignore next */
      cov_2m9app4frk().s[109]++;
      return {
        id: reel._id,
        title: reel.title,
        description: reel.description,
        category: reel.category,
        viewUrl,
        metadata: reel.metadata,
        createdAt: reel.createdAt
      };
    })));
    /* istanbul ignore next */
    cov_2m9app4frk().s[110]++;
    res.json({
      success: true,
      data: {
        reels: reelsWithUrls,
        pagination: {
          page: parseInt(page),
          limit: parseInt(limit),
          total,
          pages: Math.ceil(total / parseInt(limit))
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2m9app4frk().s[111]++;
    logger_1.logger.error('Get user reels failed:', error);
    /* istanbul ignore next */
    cov_2m9app4frk().s[112]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get user reels'
    });
  }
});
// Like/unlike reel
/* istanbul ignore next */
cov_2m9app4frk().s[113]++;
router.post('/:id/like', async (req, res) => {
  /* istanbul ignore next */
  cov_2m9app4frk().f[10]++;
  cov_2m9app4frk().s[114]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[115]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[116]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2m9app4frk().s[117]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[25][0]++;
      cov_2m9app4frk().s[118]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[25][1]++;
    }
    const reel =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[119]++, await Reel_1.Reel.findById(id));
    /* istanbul ignore next */
    cov_2m9app4frk().s[120]++;
    if (!reel) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[26][0]++;
      cov_2m9app4frk().s[121]++;
      return res.status(404).json({
        success: false,
        error: 'Reel not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[26][1]++;
    }
    const isCurrentlyLiked =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[122]++, reel.likes.includes(userId));
    let isLiked;
    /* istanbul ignore next */
    cov_2m9app4frk().s[123]++;
    if (isCurrentlyLiked) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[27][0]++;
      cov_2m9app4frk().s[124]++;
      isLiked = !(await reel.removeLike(userId));
    } else {
      /* istanbul ignore next */
      cov_2m9app4frk().b[27][1]++;
      cov_2m9app4frk().s[125]++;
      isLiked = await reel.addLike(userId);
    }
    /* istanbul ignore next */
    cov_2m9app4frk().s[126]++;
    res.json({
      success: true,
      message: 'Like status updated',
      data: {
        isLiked,
        totalLikes: reel.metadata.likes
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2m9app4frk().s[127]++;
    logger_1.logger.error('Like reel failed:', error);
    /* istanbul ignore next */
    cov_2m9app4frk().s[128]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update like status'
    });
  }
});
// Share reel
/* istanbul ignore next */
cov_2m9app4frk().s[129]++;
router.post('/:id/share', async (req, res) => {
  /* istanbul ignore next */
  cov_2m9app4frk().f[11]++;
  cov_2m9app4frk().s[130]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[131]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[132]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2m9app4frk().s[133]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[28][0]++;
      cov_2m9app4frk().s[134]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[28][1]++;
    }
    const reel =
    /* istanbul ignore next */
    (cov_2m9app4frk().s[135]++, await Reel_1.Reel.findById(id));
    /* istanbul ignore next */
    cov_2m9app4frk().s[136]++;
    if (!reel) {
      /* istanbul ignore next */
      cov_2m9app4frk().b[29][0]++;
      cov_2m9app4frk().s[137]++;
      return res.status(404).json({
        success: false,
        error: 'Reel not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m9app4frk().b[29][1]++;
    }
    cov_2m9app4frk().s[138]++;
    await Reel_1.Reel.findByIdAndUpdate(id, {
      $inc: {
        'metadata.shares': 1
      }
    });
    /* istanbul ignore next */
    cov_2m9app4frk().s[139]++;
    res.json({
      success: true,
      message: 'Reel shared successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2m9app4frk().s[140]++;
    logger_1.logger.error('Share reel failed:', error);
    /* istanbul ignore next */
    cov_2m9app4frk().s[141]++;
    res.status(500).json({
      success: false,
      error: 'Failed to share reel'
    });
  }
});
/* istanbul ignore next */
cov_2m9app4frk().s[142]++;
exports.default = router;