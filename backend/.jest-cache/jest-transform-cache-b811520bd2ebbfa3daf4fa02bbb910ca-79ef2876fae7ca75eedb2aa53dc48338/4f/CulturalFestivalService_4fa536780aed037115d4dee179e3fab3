a1eb19927d9bfc2fca85e432bb59a8b2
"use strict";

/* istanbul ignore next */
function cov_18jbg0hk1c() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\cultural\\CulturalFestivalService.ts";
  var hash = "b83fc725ea5e52619880af5b84e0b2e1a02cc8be";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\cultural\\CulturalFestivalService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 75
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 47
        }
      },
      "3": {
        start: {
          line: 5,
          column: 33
        },
        end: {
          line: 5,
          column: 69
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 42
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "6": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 30
        }
      },
      "7": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 30
        }
      },
      "8": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 172,
          column: 37
        }
      },
      "9": {
        start: {
          line: 170,
          column: 49
        },
        end: {
          line: 172,
          column: 35
        }
      },
      "10": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 83
        }
      },
      "11": {
        start: {
          line: 178,
          column: 47
        },
        end: {
          line: 178,
          column: 73
        }
      },
      "12": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "13": {
        start: {
          line: 185,
          column: 29
        },
        end: {
          line: 185,
          column: 67
        }
      },
      "14": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "15": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 102
        }
      },
      "16": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 35
        }
      },
      "17": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 89
        }
      },
      "18": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 58
        }
      },
      "19": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 196,
          column: 14
        }
      },
      "20": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 64
        }
      },
      "21": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 100
        }
      },
      "22": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "23": {
        start: {
          line: 208,
          column: 29
        },
        end: {
          line: 208,
          column: 67
        }
      },
      "24": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 211,
          column: 13
        }
      },
      "25": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 102
        }
      },
      "26": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 36
        }
      },
      "27": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 91
        }
      },
      "28": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 217,
          column: 14
        }
      },
      "29": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 66
        }
      },
      "30": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 102
        }
      },
      "31": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "32": {
        start: {
          line: 229,
          column: 29
        },
        end: {
          line: 229,
          column: 67
        }
      },
      "33": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "34": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 71
        }
      },
      "35": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 235,
          column: 13
        }
      },
      "36": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 85
        }
      },
      "37": {
        start: {
          line: 236,
          column: 26
        },
        end: {
          line: 236,
          column: 76
        }
      },
      "38": {
        start: {
          line: 236,
          column: 59
        },
        end: {
          line: 236,
          column: 75
        }
      },
      "39": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "40": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 77
        }
      },
      "41": {
        start: {
          line: 241,
          column: 31
        },
        end: {
          line: 241,
          column: 86
        }
      },
      "42": {
        start: {
          line: 242,
          column: 36
        },
        end: {
          line: 242,
          column: 96
        }
      },
      "43": {
        start: {
          line: 244,
          column: 27
        },
        end: {
          line: 244,
          column: 155
        }
      },
      "44": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "45": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 63
        }
      },
      "46": {
        start: {
          line: 249,
          column: 34
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "47": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 120
        }
      },
      "48": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 265,
          column: 14
        }
      },
      "49": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 76
        }
      },
      "50": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 60
        }
      },
      "51": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "52": {
        start: {
          line: 277,
          column: 29
        },
        end: {
          line: 277,
          column: 67
        }
      },
      "53": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 280,
          column: 13
        }
      },
      "54": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 71
        }
      },
      "55": {
        start: {
          line: 283,
          column: 32
        },
        end: {
          line: 283,
          column: 34
        }
      },
      "56": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 56
        }
      },
      "57": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 71
        }
      },
      "58": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 60
        }
      },
      "59": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 295,
          column: 30
        }
      },
      "60": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 299,
          column: 29
        }
      },
      "61": {
        start: {
          line: 297,
          column: 32
        },
        end: {
          line: 297,
          column: 56
        }
      },
      "62": {
        start: {
          line: 298,
          column: 28
        },
        end: {
          line: 298,
          column: 73
        }
      },
      "63": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "64": {
        start: {
          line: 306,
          column: 29
        },
        end: {
          line: 306,
          column: 67
        }
      },
      "65": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 309,
          column: 13
        }
      },
      "66": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 308,
          column: 79
        }
      },
      "67": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 312,
          column: 13
        }
      },
      "68": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 311,
          column: 93
        }
      },
      "69": {
        start: {
          line: 313,
          column: 26
        },
        end: {
          line: 313,
          column: 76
        }
      },
      "70": {
        start: {
          line: 313,
          column: 59
        },
        end: {
          line: 313,
          column: 75
        }
      },
      "71": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 316,
          column: 13
        }
      },
      "72": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 76
        }
      },
      "73": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 44
        }
      },
      "74": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 78
        }
      },
      "75": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 69
        }
      },
      "76": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "77": {
        start: {
          line: 332,
          column: 29
        },
        end: {
          line: 332,
          column: 67
        }
      },
      "78": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 335,
          column: 13
        }
      },
      "79": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 334,
          column: 71
        }
      },
      "80": {
        start: {
          line: 337,
          column: 26
        },
        end: {
          line: 344,
          column: 13
        }
      },
      "81": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 50
        }
      },
      "82": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 65
        }
      },
      "83": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 60
        }
      },
      "84": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "85": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 111
        }
      },
      "86": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 73
        }
      },
      "87": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 387,
          column: 9
        }
      },
      "88": {
        start: {
          line: 371,
          column: 29
        },
        end: {
          line: 371,
          column: 67
        }
      },
      "89": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 374,
          column: 13
        }
      },
      "90": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 373,
          column: 102
        }
      },
      "91": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 43
        }
      },
      "92": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 39
        }
      },
      "93": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 109
        }
      },
      "94": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 127
        }
      },
      "95": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 382,
          column: 14
        }
      },
      "96": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 68
        }
      },
      "97": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 104
        }
      },
      "98": {
        start: {
          line: 390,
          column: 0
        },
        end: {
          line: 390,
          column: 58
        }
      },
      "99": {
        start: {
          line: 391,
          column: 0
        },
        end: {
          line: 391,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 28
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 162
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 31
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 168
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 170,
            column: 37
          },
          end: {
            line: 170,
            column: 38
          }
        },
        loc: {
          start: {
            line: 170,
            column: 49
          },
          end: {
            line: 172,
            column: 35
          }
        },
        line: 170
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 38
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 177
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 178,
            column: 35
          },
          end: {
            line: 178,
            column: 36
          }
        },
        loc: {
          start: {
            line: 178,
            column: 47
          },
          end: {
            line: 178,
            column: 73
          }
        },
        line: 178
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 183
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        loc: {
          start: {
            line: 206,
            column: 41
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 206
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        loc: {
          start: {
            line: 227,
            column: 101
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 227
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 236,
            column: 54
          },
          end: {
            line: 236,
            column: 55
          }
        },
        loc: {
          start: {
            line: 236,
            column: 59
          },
          end: {
            line: 236,
            column: 75
          }
        },
        line: 236
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 57
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 275
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        loc: {
          start: {
            line: 294,
            column: 42
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 294
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 297,
            column: 20
          },
          end: {
            line: 297,
            column: 21
          }
        },
        loc: {
          start: {
            line: 297,
            column: 32
          },
          end: {
            line: 297,
            column: 56
          }
        },
        line: 297
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 298,
            column: 18
          },
          end: {
            line: 298,
            column: 19
          }
        },
        loc: {
          start: {
            line: 298,
            column: 28
          },
          end: {
            line: 298,
            column: 73
          }
        },
        line: 298
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 61
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 304
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 313,
            column: 54
          },
          end: {
            line: 313,
            column: 55
          }
        },
        loc: {
          start: {
            line: 313,
            column: 59
          },
          end: {
            line: 313,
            column: 75
          }
        },
        line: 313
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 39
          },
          end: {
            line: 351,
            column: 5
          }
        },
        line: 330
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 355,
            column: 5
          }
        },
        loc: {
          start: {
            line: 355,
            column: 45
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 355
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        },
        loc: {
          start: {
            line: 369,
            column: 62
          },
          end: {
            line: 388,
            column: 5
          }
        },
        line: 369
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 170,
            column: 49
          },
          end: {
            line: 172,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 49
          },
          end: {
            line: 170,
            column: 64
          }
        }, {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 171,
            column: 37
          }
        }, {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 35
          }
        }],
        line: 170
      },
      "1": {
        loc: {
          start: {
            line: 178,
            column: 15
          },
          end: {
            line: 178,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 15
          },
          end: {
            line: 178,
            column: 74
          }
        }, {
          start: {
            line: 178,
            column: 78
          },
          end: {
            line: 178,
            column: 82
          }
        }],
        line: 178
      },
      "2": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "3": {
        loc: {
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 211,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 211,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "4": {
        loc: {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "5": {
        loc: {
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 235,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 235,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "6": {
        loc: {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 239,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 239,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "7": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "8": {
        loc: {
          start: {
            line: 254,
            column: 29
          },
          end: {
            line: 254,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 29
          },
          end: {
            line: 254,
            column: 46
          }
        }, {
          start: {
            line: 254,
            column: 50
          },
          end: {
            line: 254,
            column: 51
          }
        }],
        line: 254
      },
      "9": {
        loc: {
          start: {
            line: 255,
            column: 34
          },
          end: {
            line: 255,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 34
          },
          end: {
            line: 255,
            column: 56
          }
        }, {
          start: {
            line: 255,
            column: 60
          },
          end: {
            line: 255,
            column: 61
          }
        }],
        line: 255
      },
      "10": {
        loc: {
          start: {
            line: 275,
            column: 45
          },
          end: {
            line: 275,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 275,
            column: 53
          },
          end: {
            line: 275,
            column: 55
          }
        }],
        line: 275
      },
      "11": {
        loc: {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 280,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 280,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "12": {
        loc: {
          start: {
            line: 294,
            column: 31
          },
          end: {
            line: 294,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 294,
            column: 39
          },
          end: {
            line: 294,
            column: 40
          }
        }],
        line: 294
      },
      "13": {
        loc: {
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "14": {
        loc: {
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "15": {
        loc: {
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "16": {
        loc: {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 335,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 335,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "17": {
        loc: {
          start: {
            line: 342,
            column: 34
          },
          end: {
            line: 342,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 34
          },
          end: {
            line: 342,
            column: 65
          }
        }, {
          start: {
            line: 342,
            column: 69
          },
          end: {
            line: 342,
            column: 75
          }
        }],
        line: 342
      },
      "18": {
        loc: {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 374,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 374,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b83fc725ea5e52619880af5b84e0b2e1a02cc8be"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18jbg0hk1c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18jbg0hk1c();
cov_18jbg0hk1c().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_18jbg0hk1c().s[1]++;
exports.culturalFestivalService = exports.CulturalFestivalService = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_18jbg0hk1c().s[2]++, require("../../config/logger"));
const KarmaReputationService_1 =
/* istanbul ignore next */
(cov_18jbg0hk1c().s[3]++, require("../KarmaReputationService"));
const logger =
/* istanbul ignore next */
(cov_18jbg0hk1c().s[4]++, (0, logger_1.setupLogger)());
class CulturalFestivalService {
  festivals =
  /* istanbul ignore next */
  (cov_18jbg0hk1c().s[5]++, [{
    id: 'dashain',
    name: 'Dashain',
    nameNepali: 'दशैं',
    startDate: new Date('2024-10-03'),
    endDate: new Date('2024-10-17'),
    duration: 15,
    active: false,
    culturalSignificance: 'The greatest festival of Nepal, celebrating the victory of good over evil',
    traditions: ['Tika and Jamara blessing', 'Family gatherings and feasts', 'Kite flying', 'Swing (ping) playing', 'Card games and gambling', 'New clothes and gifts'],
    bonusMultiplier: 2.0,
    specialEvents: [{
      id: 'dashain_tika',
      name: 'Tika Blessing',
      nameNepali: 'टिका आशीर्वाद',
      type: 'celebration',
      karmaBonus: 50,
      reputationBonus: 25,
      description: 'Receive or give Tika blessing during Dashain',
      descriptionNepali: 'दशैंको समयमा टिका आशीर्वाद लिनु वा दिनु',
      requirements: ['Family gathering', 'Traditional blessing ceremony']
    }, {
      id: 'dashain_kite',
      name: 'Kite Flying',
      nameNepali: 'चङ्गा उडाउने',
      type: 'participation',
      karmaBonus: 30,
      reputationBonus: 15,
      description: 'Participate in traditional kite flying',
      descriptionNepali: 'परम्परागत चङ्गा उडाउनेमा सहभागी हुनु',
      requirements: ['Kite flying activity', 'Community participation']
    }, {
      id: 'dashain_swing',
      name: 'Swing Playing',
      nameNepali: 'पिङ खेल्ने',
      type: 'participation',
      karmaBonus: 25,
      reputationBonus: 12,
      description: 'Play on traditional bamboo swing',
      descriptionNepali: 'परम्परागत बाँसको पिङमा खेल्नु',
      requirements: ['Swing construction', 'Community gathering']
    }]
  }, {
    id: 'tihar',
    name: 'Tihar',
    nameNepali: 'तिहार',
    startDate: new Date('2024-11-01'),
    endDate: new Date('2024-11-05'),
    duration: 5,
    active: false,
    culturalSignificance: 'Festival of lights celebrating the bond between humans and animals',
    traditions: ['Worship of crows, dogs, cows, and oxen', 'Laxmi Puja (worship of goddess of wealth)', 'Bhai Tika (brother-sister bond)', 'Deusi-Bhailo (traditional songs and dances)', 'Oil lamps and lights decoration'],
    bonusMultiplier: 1.8,
    specialEvents: [{
      id: 'tihar_laxmi',
      name: 'Laxmi Puja',
      nameNepali: 'लक्ष्मी पूजा',
      type: 'celebration',
      karmaBonus: 40,
      reputationBonus: 20,
      description: 'Perform Laxmi Puja for prosperity',
      descriptionNepali: 'समृद्धिको लागि लक्ष्मी पूजा गर्नु',
      requirements: ['Traditional puja ceremony', 'Light decoration']
    }, {
      id: 'tihar_bhai',
      name: 'Bhai Tika',
      nameNepali: 'भाई टिका',
      type: 'celebration',
      karmaBonus: 45,
      reputationBonus: 22,
      description: 'Celebrate brother-sister bond with Tika',
      descriptionNepali: 'दाजुभाइको सम्बन्ध टिकाको साथ मनाउनु',
      requirements: ['Family gathering', 'Traditional ceremony']
    }, {
      id: 'tihar_deusi',
      name: 'Deusi-Bhailo',
      nameNepali: 'देउसी-भैलो',
      type: 'cultural_contribution',
      karmaBonus: 35,
      reputationBonus: 18,
      description: 'Participate in traditional Deusi-Bhailo',
      descriptionNepali: 'परम्परागत देउसी-भैलोमा सहभागी हुनु',
      requirements: ['Traditional songs', 'Community participation']
    }]
  }, {
    id: 'holi',
    name: 'Holi',
    nameNepali: 'होली',
    startDate: new Date('2025-03-14'),
    endDate: new Date('2025-03-15'),
    duration: 2,
    active: false,
    culturalSignificance: 'Festival of colors celebrating the arrival of spring',
    traditions: ['Color throwing and playing', 'Bonfire (Holika Dahan)', 'Traditional songs and dances', 'Special sweets and delicacies', 'Community gatherings'],
    bonusMultiplier: 1.5,
    specialEvents: [{
      id: 'holi_colors',
      name: 'Color Playing',
      nameNepali: 'रङ खेल्ने',
      type: 'participation',
      karmaBonus: 30,
      reputationBonus: 15,
      description: 'Participate in color throwing and playing',
      descriptionNepali: 'रङ फ्याँक्ने र खेल्नेमा सहभागी हुनु',
      requirements: ['Color participation', 'Community gathering']
    }, {
      id: 'holi_bonfire',
      name: 'Holika Dahan',
      nameNepali: 'होलिका दहन',
      type: 'celebration',
      karmaBonus: 35,
      reputationBonus: 18,
      description: 'Participate in traditional bonfire ceremony',
      descriptionNepali: 'परम्परागत चुलो दहनमा सहभागी हुनु',
      requirements: ['Bonfire ceremony', 'Traditional rituals']
    }]
  }]);
  /**
   * Get all festivals
   */
  async getAllFestivals() {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[0]++;
    cov_18jbg0hk1c().s[6]++;
    return this.festivals;
  }
  /**
   * Get active festivals
   */
  async getActiveFestivals() {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[1]++;
    const now =
    /* istanbul ignore next */
    (cov_18jbg0hk1c().s[7]++, new Date());
    /* istanbul ignore next */
    cov_18jbg0hk1c().s[8]++;
    return this.festivals.filter(festival => {
      /* istanbul ignore next */
      cov_18jbg0hk1c().f[2]++;
      cov_18jbg0hk1c().s[9]++;
      return /* istanbul ignore next */(cov_18jbg0hk1c().b[0][0]++, festival.active) &&
      /* istanbul ignore next */
      (cov_18jbg0hk1c().b[0][1]++, now >= festival.startDate) &&
      /* istanbul ignore next */
      (cov_18jbg0hk1c().b[0][2]++, now <= festival.endDate);
    });
  }
  /**
   * Get festival by ID
   */
  async getFestivalById(festivalId) {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[3]++;
    cov_18jbg0hk1c().s[10]++;
    return /* istanbul ignore next */(cov_18jbg0hk1c().b[1][0]++, this.festivals.find(festival => {
      /* istanbul ignore next */
      cov_18jbg0hk1c().f[4]++;
      cov_18jbg0hk1c().s[11]++;
      return festival.id === festivalId;
    })) ||
    /* istanbul ignore next */
    (cov_18jbg0hk1c().b[1][1]++, null);
  }
  /**
   * Activate festival (called by cron job or admin)
   */
  async activateFestival(festivalId) {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[5]++;
    cov_18jbg0hk1c().s[12]++;
    try {
      const festival =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[13]++, await this.getFestivalById(festivalId));
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[14]++;
      if (!festival) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[2][0]++;
        cov_18jbg0hk1c().s[15]++;
        return {
          success: false,
          message: 'Festival not found',
          error: 'FESTIVAL_NOT_FOUND'
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[2][1]++;
      }
      cov_18jbg0hk1c().s[16]++;
      festival.active = true;
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[17]++;
      logger.info(`Festival activated: ${festival.name} (${festival.nameNepali})`);
      // Send notification to all users about festival activation
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[18]++;
      await this.notifyFestivalActivation(festival);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[19]++;
      return {
        success: true,
        message: `Festival ${festival.name} (${festival.nameNepali}) is now active!`
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[20]++;
      logger.error('Failed to activate festival:', error);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[21]++;
      return {
        success: false,
        message: 'Failed to activate festival',
        error: error.message
      };
    }
  }
  /**
   * Deactivate festival
   */
  async deactivateFestival(festivalId) {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[6]++;
    cov_18jbg0hk1c().s[22]++;
    try {
      const festival =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[23]++, await this.getFestivalById(festivalId));
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[24]++;
      if (!festival) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[3][0]++;
        cov_18jbg0hk1c().s[25]++;
        return {
          success: false,
          message: 'Festival not found',
          error: 'FESTIVAL_NOT_FOUND'
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[3][1]++;
      }
      cov_18jbg0hk1c().s[26]++;
      festival.active = false;
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[27]++;
      logger.info(`Festival deactivated: ${festival.name} (${festival.nameNepali})`);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[28]++;
      return {
        success: true,
        message: `Festival ${festival.name} (${festival.nameNepali}) has ended`
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[29]++;
      logger.error('Failed to deactivate festival:', error);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[30]++;
      return {
        success: false,
        message: 'Failed to deactivate festival',
        error: error.message
      };
    }
  }
  /**
   * Record festival participation
   */
  async recordFestivalParticipation(userId, festivalId, eventId, participationType, culturalNotes) {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[7]++;
    cov_18jbg0hk1c().s[31]++;
    try {
      const festival =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[32]++, await this.getFestivalById(festivalId));
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[33]++;
      if (!festival) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[4][0]++;
        cov_18jbg0hk1c().s[34]++;
        return {
          success: false,
          error: 'Festival not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[4][1]++;
      }
      cov_18jbg0hk1c().s[35]++;
      if (!festival.active) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[5][0]++;
        cov_18jbg0hk1c().s[36]++;
        return {
          success: false,
          error: 'Festival is not currently active'
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[5][1]++;
      }
      const event =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[37]++, festival.specialEvents.find(e => {
        /* istanbul ignore next */
        cov_18jbg0hk1c().f[8]++;
        cov_18jbg0hk1c().s[38]++;
        return e.id === eventId;
      }));
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[39]++;
      if (!event) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[6][0]++;
        cov_18jbg0hk1c().s[40]++;
        return {
          success: false,
          error: 'Festival event not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[6][1]++;
      }
      // Apply festival bonus multiplier
      const karmaBonus =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[41]++, Math.round(event.karmaBonus * festival.bonusMultiplier));
      const reputationBonus =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[42]++, Math.round(event.reputationBonus * festival.bonusMultiplier));
      // Award karma and reputation through unified service
      const result =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[43]++, await KarmaReputationService_1.karmaReputationService.awardFestivalBonus(userId, festival.name, festival.nameNepali, event.type));
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[44]++;
      if (!result.success) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[7][0]++;
        cov_18jbg0hk1c().s[45]++;
        return {
          success: false,
          error: result.error
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[7][1]++;
      }
      // Log participation
      const participation =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[46]++, {
        userId,
        festivalId,
        eventId,
        participationType,
        karmaEarned:
        /* istanbul ignore next */
        (cov_18jbg0hk1c().b[8][0]++, result.karmaBonus) ||
        /* istanbul ignore next */
        (cov_18jbg0hk1c().b[8][1]++, 0),
        reputationEarned:
        /* istanbul ignore next */
        (cov_18jbg0hk1c().b[9][0]++, result.reputationBonus) ||
        /* istanbul ignore next */
        (cov_18jbg0hk1c().b[9][1]++, 0),
        timestamp: new Date(),
        culturalNotes
      });
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[47]++;
      logger.info(`Festival participation recorded: ${userId} - ${festival.name} - ${event.name}`, participation);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[48]++;
      return {
        success: true,
        karmaEarned: result.karmaBonus,
        reputationEarned: result.reputationBonus,
        message: `Successfully participated in ${event.nameNepali} (${event.name}) during ${festival.nameNepali} (${festival.name})`
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[49]++;
      logger.error('Failed to record festival participation:', error);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[50]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  /**
   * Get festival leaderboard
   */
  async getFestivalLeaderboard(festivalId, limit =
  /* istanbul ignore next */
  (cov_18jbg0hk1c().b[10][0]++, 20)) {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[9]++;
    cov_18jbg0hk1c().s[51]++;
    try {
      const festival =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[52]++, await this.getFestivalById(festivalId));
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[53]++;
      if (!festival) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[11][0]++;
        cov_18jbg0hk1c().s[54]++;
        return {
          success: false,
          error: 'Festival not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[11][1]++;
      }
      // This would typically query a database for festival participations
      // For now, we'll return a placeholder structure
      const leaderboard =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[55]++, []);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[56]++;
      return {
        success: true,
        data: leaderboard
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[57]++;
      logger.error('Failed to get festival leaderboard:', error);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[58]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  /**
   * Get upcoming festivals
   */
  async getUpcomingFestivals(limit =
  /* istanbul ignore next */
  (cov_18jbg0hk1c().b[12][0]++, 5)) {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[10]++;
    const now =
    /* istanbul ignore next */
    (cov_18jbg0hk1c().s[59]++, new Date());
    /* istanbul ignore next */
    cov_18jbg0hk1c().s[60]++;
    return this.festivals.filter(festival => {
      /* istanbul ignore next */
      cov_18jbg0hk1c().f[11]++;
      cov_18jbg0hk1c().s[61]++;
      return festival.startDate > now;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_18jbg0hk1c().f[12]++;
      cov_18jbg0hk1c().s[62]++;
      return a.startDate.getTime() - b.startDate.getTime();
    }).slice(0, limit);
  }
  /**
   * Check if user can participate in festival event
   */
  async canParticipateInEvent(userId, festivalId, eventId) {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[13]++;
    cov_18jbg0hk1c().s[63]++;
    try {
      const festival =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[64]++, await this.getFestivalById(festivalId));
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[65]++;
      if (!festival) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[13][0]++;
        cov_18jbg0hk1c().s[66]++;
        return {
          canParticipate: false,
          reason: 'Festival not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[13][1]++;
      }
      cov_18jbg0hk1c().s[67]++;
      if (!festival.active) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[14][0]++;
        cov_18jbg0hk1c().s[68]++;
        return {
          canParticipate: false,
          reason: 'Festival is not currently active'
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[14][1]++;
      }
      const event =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[69]++, festival.specialEvents.find(e => {
        /* istanbul ignore next */
        cov_18jbg0hk1c().f[14]++;
        cov_18jbg0hk1c().s[70]++;
        return e.id === eventId;
      }));
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[71]++;
      if (!event) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[15][0]++;
        cov_18jbg0hk1c().s[72]++;
        return {
          canParticipate: false,
          reason: 'Event not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[15][1]++;
      }
      // Check if user has already participated in this event today
      // This would typically check a database
      // For now, we'll allow participation
      cov_18jbg0hk1c().s[73]++;
      return {
        canParticipate: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[74]++;
      logger.error('Failed to check participation eligibility:', error);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[75]++;
      return {
        canParticipate: false,
        reason: 'System error'
      };
    }
  }
  /**
   * Get festival statistics
   */
  async getFestivalStats(festivalId) {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[15]++;
    cov_18jbg0hk1c().s[76]++;
    try {
      const festival =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[77]++, await this.getFestivalById(festivalId));
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[78]++;
      if (!festival) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[16][0]++;
        cov_18jbg0hk1c().s[79]++;
        return {
          success: false,
          error: 'Festival not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[16][1]++;
      }
      // This would typically query database for statistics
      const stats =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[80]++, {
        totalParticipants: 0,
        totalEvents: festival.specialEvents.length,
        totalKarmaAwarded: 0,
        totalReputationAwarded: 0,
        mostPopularEvent:
        /* istanbul ignore next */
        (cov_18jbg0hk1c().b[17][0]++, festival.specialEvents[0]?.name) ||
        /* istanbul ignore next */
        (cov_18jbg0hk1c().b[17][1]++, 'None'),
        averageParticipation: 0
      });
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[81]++;
      return {
        success: true,
        data: stats
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[82]++;
      logger.error('Failed to get festival stats:', error);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[83]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  /**
   * Notify users about festival activation
   */
  async notifyFestivalActivation(festival) {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[16]++;
    cov_18jbg0hk1c().s[84]++;
    try {
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[85]++;
      // This would typically send push notifications to all users
      logger.info(`Sending festival activation notification: ${festival.name} (${festival.nameNepali})`);
      // Placeholder for notification service integration
      // await notificationService.sendFestivalNotification(festival);
    } catch (error) {
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[86]++;
      logger.error('Failed to send festival notification:', error);
    }
  }
  /**
   * Update festival dates (for admin use)
   */
  async updateFestivalDates(festivalId, startDate, endDate) {
    /* istanbul ignore next */
    cov_18jbg0hk1c().f[17]++;
    cov_18jbg0hk1c().s[87]++;
    try {
      const festival =
      /* istanbul ignore next */
      (cov_18jbg0hk1c().s[88]++, await this.getFestivalById(festivalId));
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[89]++;
      if (!festival) {
        /* istanbul ignore next */
        cov_18jbg0hk1c().b[18][0]++;
        cov_18jbg0hk1c().s[90]++;
        return {
          success: false,
          message: 'Festival not found',
          error: 'FESTIVAL_NOT_FOUND'
        };
      } else
      /* istanbul ignore next */
      {
        cov_18jbg0hk1c().b[18][1]++;
      }
      cov_18jbg0hk1c().s[91]++;
      festival.startDate = startDate;
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[92]++;
      festival.endDate = endDate;
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[93]++;
      festival.duration = Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[94]++;
      logger.info(`Festival dates updated: ${festival.name} - ${startDate.toDateString()} to ${endDate.toDateString()}`);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[95]++;
      return {
        success: true,
        message: `Festival ${festival.name} dates updated successfully`
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[96]++;
      logger.error('Failed to update festival dates:', error);
      /* istanbul ignore next */
      cov_18jbg0hk1c().s[97]++;
      return {
        success: false,
        message: 'Failed to update festival dates',
        error: error.message
      };
    }
  }
}
/* istanbul ignore next */
cov_18jbg0hk1c().s[98]++;
exports.CulturalFestivalService = CulturalFestivalService;
/* istanbul ignore next */
cov_18jbg0hk1c().s[99]++;
exports.culturalFestivalService = new CulturalFestivalService();