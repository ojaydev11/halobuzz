7f6b42b098f294b6a0a39c27f3578977
"use strict";

/* istanbul ignore next */
function cov_12tt0iiz3w() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\liveStreamService.ts";
  var hash = "0c8a9c69c14949cfd639fb814a4c799423ae9268";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\liveStreamService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 35
        }
      },
      "2": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 4,
          column: 51
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 39
        }
      },
      "5": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 53
        }
      },
      "6": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 43
        }
      },
      "7": {
        start: {
          line: 9,
          column: 16
        },
        end: {
          line: 9,
          column: 41
        }
      },
      "8": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 42
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "10": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 15,
          column: 75
        }
      },
      "11": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 18,
          column: 13
        }
      },
      "12": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 52
        }
      },
      "13": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 30,
          column: 13
        }
      },
      "14": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 43
        }
      },
      "15": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 67
        }
      },
      "16": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 26,
          column: 17
        }
      },
      "17": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 63
        }
      },
      "18": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 36
        }
      },
      "19": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 88
        }
      },
      "20": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "21": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 24
        }
      },
      "22": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "23": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 40,
          column: 75
        }
      },
      "24": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "25": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 52
        }
      },
      "26": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "27": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 43
        }
      },
      "28": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 67
        }
      },
      "29": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 36
        }
      },
      "30": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 88
        }
      },
      "31": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 70
        }
      },
      "32": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 24
        }
      },
      "33": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "34": {
        start: {
          line: 62,
          column: 27
        },
        end: {
          line: 62,
          column: 76
        }
      },
      "35": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "36": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 30
        }
      },
      "37": {
        start: {
          line: 66,
          column: 27
        },
        end: {
          line: 68,
          column: 55
        }
      },
      "38": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "39": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 52
        }
      },
      "40": {
        start: {
          line: 72,
          column: 31
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "41": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 79
        }
      },
      "42": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 30
        }
      },
      "43": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 62
        }
      },
      "44": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 24
        }
      },
      "45": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "46": {
        start: {
          line: 95,
          column: 61
        },
        end: {
          line: 95,
          column: 65
        }
      },
      "47": {
        start: {
          line: 97,
          column: 25
        },
        end: {
          line: 97,
          column: 59
        }
      },
      "48": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "49": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 71
        }
      },
      "50": {
        start: {
          line: 102,
          column: 27
        },
        end: {
          line: 102,
          column: 63
        }
      },
      "51": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "52": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 69
        }
      },
      "53": {
        start: {
          line: 106,
          column: 30
        },
        end: {
          line: 106,
          column: 56
        }
      },
      "54": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "55": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 71
        }
      },
      "56": {
        start: {
          line: 112,
          column: 27
        },
        end: {
          line: 112,
          column: 75
        }
      },
      "57": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "58": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 69
        }
      },
      "59": {
        start: {
          line: 116,
          column: 25
        },
        end: {
          line: 116,
          column: 66
        }
      },
      "60": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 119,
          column: 13
        }
      },
      "61": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 67
        }
      },
      "62": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 46
        }
      },
      "63": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 49
        }
      },
      "64": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 32
        }
      },
      "65": {
        start: {
          line: 125,
          column: 33
        },
        end: {
          line: 125,
          column: 60
        }
      },
      "66": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 47
        }
      },
      "67": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 51
        }
      },
      "68": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 30
        }
      },
      "69": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 51
        }
      },
      "70": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 32
        }
      },
      "71": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "72": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 161,
          column: 14
        }
      },
      "73": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 58
        }
      },
      "74": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 71
        }
      },
      "75": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "76": {
        start: {
          line: 171,
          column: 25
        },
        end: {
          line: 171,
          column: 59
        }
      },
      "77": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "78": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 29
        }
      },
      "79": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 178,
          column: 13
        }
      },
      "80": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 28
        }
      },
      "81": {
        start: {
          line: 180,
          column: 27
        },
        end: {
          line: 180,
          column: 75
        }
      },
      "82": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 183,
          column: 13
        }
      },
      "83": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 29
        }
      },
      "84": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 70
        }
      },
      "85": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 65
        }
      },
      "86": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 25
        }
      },
      "87": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "88": {
        start: {
          line: 195,
          column: 65
        },
        end: {
          line: 195,
          column: 69
        }
      },
      "89": {
        start: {
          line: 196,
          column: 27
        },
        end: {
          line: 196,
          column: 75
        }
      },
      "90": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 199,
          column: 13
        }
      },
      "91": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 69
        }
      },
      "92": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 66
        }
      },
      "93": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 32
        }
      },
      "94": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 37
        }
      },
      "95": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 66
        }
      },
      "96": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 79
        }
      },
      "97": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "98": {
        start: {
          line: 213,
          column: 27
        },
        end: {
          line: 213,
          column: 75
        }
      },
      "99": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "100": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 52
        }
      },
      "101": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 63
        }
      },
      "102": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 224,
          column: 14
        }
      },
      "103": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 32
        }
      },
      "104": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 66
        }
      },
      "105": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 24
        }
      },
      "106": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "107": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 64
        }
      },
      "108": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 55
        }
      },
      "109": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 24
        }
      },
      "110": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "111": {
        start: {
          line: 247,
          column: 34
        },
        end: {
          line: 250,
          column: 14
        }
      },
      "112": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "113": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 71
        }
      },
      "114": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 257,
          column: 15
        }
      },
      "115": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 67
        }
      },
      "116": {
        start: {
          line: 264,
          column: 0
        },
        end: {
          line: 264,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 45
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 48
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 41
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 35
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 93
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 53
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 169
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 42
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 193
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 56
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 211
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 42
          },
          end: {
            line: 242,
            column: 5
          }
        },
        line: 233
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 244,
            column: 5
          }
        },
        loc: {
          start: {
            line: 244,
            column: 46
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 244
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 26,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 26,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "8": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 21
          }
        }, {
          start: {
            line: 98,
            column: 25
          },
          end: {
            line: 98,
            column: 39
          }
        }],
        line: 98
      },
      "9": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "10": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "11": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "12": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "13": {
        loc: {
          start: {
            line: 160,
            column: 27
          },
          end: {
            line: 160,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 27
          },
          end: {
            line: 160,
            column: 52
          }
        }, {
          start: {
            line: 160,
            column: 56
          },
          end: {
            line: 160,
            column: 58
          }
        }],
        line: 160
      },
      "14": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "15": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "16": {
        loc: {
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 176,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 176,
            column: 33
          }
        }, {
          start: {
            line: 176,
            column: 37
          },
          end: {
            line: 176,
            column: 60
          }
        }],
        line: 176
      },
      "17": {
        loc: {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "18": {
        loc: {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "19": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "20": {
        loc: {
          start: {
            line: 223,
            column: 35
          },
          end: {
            line: 223,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 35
          },
          end: {
            line: 223,
            column: 65
          }
        }, {
          start: {
            line: 223,
            column: 69
          },
          end: {
            line: 223,
            column: 70
          }
        }],
        line: 223
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c8a9c69c14949cfd639fb814a4c799423ae9268"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12tt0iiz3w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12tt0iiz3w();
cov_12tt0iiz3w().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_12tt0iiz3w().s[1]++;
exports.LiveStreamService = void 0;
const LiveStream_1 =
/* istanbul ignore next */
(cov_12tt0iiz3w().s[2]++, require("@/models/LiveStream"));
const User_1 =
/* istanbul ignore next */
(cov_12tt0iiz3w().s[3]++, require("@/models/User"));
const Gift_1 =
/* istanbul ignore next */
(cov_12tt0iiz3w().s[4]++, require("@/models/Gift"));
const Transaction_1 =
/* istanbul ignore next */
(cov_12tt0iiz3w().s[5]++, require("@/models/Transaction"));
const logger_1 =
/* istanbul ignore next */
(cov_12tt0iiz3w().s[6]++, require("@/config/logger"));
const redis_1 =
/* istanbul ignore next */
(cov_12tt0iiz3w().s[7]++, require("@/config/redis"));
const logger =
/* istanbul ignore next */
(cov_12tt0iiz3w().s[8]++, (0, logger_1.setupLogger)());
class LiveStreamService {
  // Add viewer to stream
  static async addViewer(streamId, userId) {
    /* istanbul ignore next */
    cov_12tt0iiz3w().f[0]++;
    cov_12tt0iiz3w().s[9]++;
    try {
      const stream =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[10]++, await LiveStream_1.LiveStream.findById(streamId));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[11]++;
      if (!stream) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[0][0]++;
        cov_12tt0iiz3w().s[12]++;
        throw new Error('Stream not found');
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[0][1]++;
      }
      // Add viewer to stream
      cov_12tt0iiz3w().s[13]++;
      if (stream.currentViewers < stream.maxViewers) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[1][0]++;
        cov_12tt0iiz3w().s[14]++;
        stream.currentViewers += 1;
        /* istanbul ignore next */
        cov_12tt0iiz3w().s[15]++;
        stream.metrics.viewerCount = stream.currentViewers;
        // Update peak viewers
        /* istanbul ignore next */
        cov_12tt0iiz3w().s[16]++;
        if (stream.currentViewers > stream.peakViewers) {
          /* istanbul ignore next */
          cov_12tt0iiz3w().b[2][0]++;
          cov_12tt0iiz3w().s[17]++;
          stream.peakViewers = stream.currentViewers;
        } else
        /* istanbul ignore next */
        {
          cov_12tt0iiz3w().b[2][1]++;
        }
        cov_12tt0iiz3w().s[18]++;
        await stream.save();
        // Cache stream info
        /* istanbul ignore next */
        cov_12tt0iiz3w().s[19]++;
        await (0, redis_1.setCache)(`stream:${streamId}`, stream.toJSON(), 300); // 5 minutes
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[1][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[20]++;
      logger.error('Error adding viewer to stream:', error);
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[21]++;
      throw error;
    }
  }
  // Remove viewer from stream
  static async removeViewer(streamId, userId) {
    /* istanbul ignore next */
    cov_12tt0iiz3w().f[1]++;
    cov_12tt0iiz3w().s[22]++;
    try {
      const stream =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[23]++, await LiveStream_1.LiveStream.findById(streamId));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[24]++;
      if (!stream) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[3][0]++;
        cov_12tt0iiz3w().s[25]++;
        throw new Error('Stream not found');
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[3][1]++;
      }
      // Remove viewer from stream
      cov_12tt0iiz3w().s[26]++;
      if (stream.currentViewers > 0) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[4][0]++;
        cov_12tt0iiz3w().s[27]++;
        stream.currentViewers -= 1;
        /* istanbul ignore next */
        cov_12tt0iiz3w().s[28]++;
        stream.metrics.viewerCount = stream.currentViewers;
        /* istanbul ignore next */
        cov_12tt0iiz3w().s[29]++;
        await stream.save();
        // Update cache
        /* istanbul ignore next */
        cov_12tt0iiz3w().s[30]++;
        await (0, redis_1.setCache)(`stream:${streamId}`, stream.toJSON(), 300);
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[4][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[31]++;
      logger.error('Error removing viewer from stream:', error);
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[32]++;
      throw error;
    }
  }
  // Get stream info
  static async getStreamInfo(streamId) {
    /* istanbul ignore next */
    cov_12tt0iiz3w().f[2]++;
    cov_12tt0iiz3w().s[33]++;
    try {
      // Try cache first
      const cached =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[34]++, await (0, redis_1.getCache)(`stream:${streamId}`));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[35]++;
      if (cached) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[5][0]++;
        cov_12tt0iiz3w().s[36]++;
        return cached;
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[5][1]++;
      }
      const stream =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[37]++, await LiveStream_1.LiveStream.findById(streamId).populate('hostId', 'username avatar ogLevel').populate('viewers', 'username avatar'));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[38]++;
      if (!stream) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[6][0]++;
        cov_12tt0iiz3w().s[39]++;
        throw new Error('Stream not found');
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[6][1]++;
      }
      const streamInfo =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[40]++, {
        id: stream._id,
        title: stream.title,
        host: stream.hostId,
        viewers: stream.currentViewers,
        metrics: stream.metrics,
        status: stream.status,
        isAnonymous: stream.isAnonymous,
        country: stream.country,
        agoraChannel: stream.agoraChannel
      });
      // Cache for 5 minutes
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[41]++;
      await (0, redis_1.setCache)(`stream:${streamId}`, streamInfo, 300);
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[42]++;
      return streamInfo;
    } catch (error) {
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[43]++;
      logger.error('Error getting stream info:', error);
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[44]++;
      throw error;
    }
  }
  // Process gift transaction
  static async processGift(data) {
    /* istanbul ignore next */
    cov_12tt0iiz3w().f[3]++;
    cov_12tt0iiz3w().s[45]++;
    try {
      const {
        streamId,
        senderId,
        giftId,
        quantity
      } =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[46]++, data);
      // Get gift details
      const gift =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[47]++, await Gift_1.Gift.findById(giftId));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[48]++;
      if (
      /* istanbul ignore next */
      (cov_12tt0iiz3w().b[8][0]++, !gift) ||
      /* istanbul ignore next */
      (cov_12tt0iiz3w().b[8][1]++, !gift.isActive)) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[7][0]++;
        cov_12tt0iiz3w().s[49]++;
        return {
          success: false,
          error: 'Gift not available'
        };
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[7][1]++;
      }
      // Get sender
      const sender =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[50]++, await User_1.User.findById(senderId));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[51]++;
      if (!sender) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[9][0]++;
        cov_12tt0iiz3w().s[52]++;
        return {
          success: false,
          error: 'Sender not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[9][1]++;
      }
      const totalCost =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[53]++, gift.priceCoins * quantity);
      // Check if sender has enough coins
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[54]++;
      if (sender.coins.balance < totalCost) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[10][0]++;
        cov_12tt0iiz3w().s[55]++;
        return {
          success: false,
          error: 'Insufficient coins'
        };
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[10][1]++;
      }
      // Get stream and host
      const stream =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[56]++, await LiveStream_1.LiveStream.findById(streamId));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[57]++;
      if (!stream) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[11][0]++;
        cov_12tt0iiz3w().s[58]++;
        return {
          success: false,
          error: 'Stream not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[11][1]++;
      }
      const host =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[59]++, await User_1.User.findById(stream.hostId));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[60]++;
      if (!host) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[12][0]++;
        cov_12tt0iiz3w().s[61]++;
        return {
          success: false,
          error: 'Host not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[12][1]++;
      }
      // Deduct coins from sender
      cov_12tt0iiz3w().s[62]++;
      sender.coins.balance -= totalCost;
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[63]++;
      sender.coins.totalSpent += totalCost;
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[64]++;
      await sender.save();
      // Add coins to host (70% of gift value)
      const hostEarnings =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[65]++, Math.floor(totalCost * 0.7));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[66]++;
      host.coins.balance += hostEarnings;
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[67]++;
      host.coins.totalEarned += hostEarnings;
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[68]++;
      await host.save();
      // Update stream metrics
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[69]++;
      stream.metrics.giftsCoins += totalCost;
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[70]++;
      await stream.save();
      // Create transaction records
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[71]++;
      await Transaction_1.Transaction.create([{
        userId: senderId,
        type: 'gift_sent',
        amountCoins: -totalCost,
        metadata: {
          streamId,
          giftId,
          quantity,
          recipientId: host._id
        }
      }, {
        userId: host._id,
        type: 'gift_received',
        amountCoins: hostEarnings,
        metadata: {
          streamId,
          giftId,
          quantity,
          senderId
        }
      }]);
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[72]++;
      return {
        success: true,
        giftName: gift.name,
        animation:
        /* istanbul ignore next */
        (cov_12tt0iiz3w().b[13][0]++, gift.animation?.lottieUrl) ||
        /* istanbul ignore next */
        (cov_12tt0iiz3w().b[13][1]++, '')
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[73]++;
      logger.error('Error processing gift:', error);
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[74]++;
      return {
        success: false,
        error: 'Failed to process gift'
      };
    }
  }
  // Check throne access
  static async checkThroneAccess(userId, streamId) {
    /* istanbul ignore next */
    cov_12tt0iiz3w().f[4]++;
    cov_12tt0iiz3w().s[75]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[76]++, await User_1.User.findById(userId));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[77]++;
      if (!user) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[14][0]++;
        cov_12tt0iiz3w().s[78]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[14][1]++;
      }
      // Check if user has OG level 4+ or active throne
      cov_12tt0iiz3w().s[79]++;
      if (
      /* istanbul ignore next */
      (cov_12tt0iiz3w().b[16][0]++, user.ogLevel >= 4) ||
      /* istanbul ignore next */
      (cov_12tt0iiz3w().b[16][1]++, user.isHaloThroneActive)) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[15][0]++;
        cov_12tt0iiz3w().s[80]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[15][1]++;
      }
      // Check if user has claimed throne for this stream
      const stream =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[81]++, await LiveStream_1.LiveStream.findById(streamId));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[82]++;
      if (!stream) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[17][0]++;
        cov_12tt0iiz3w().s[83]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[17][1]++;
      }
      // Check if user is the throne holder for this stream
      cov_12tt0iiz3w().s[84]++;
      return stream.throne?.holderUserId?.toString() === userId;
    } catch (error) {
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[85]++;
      logger.error('Error checking throne access:', error);
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[86]++;
      return false;
    }
  }
  // Process battle boost
  static async processBattleBoost(data) {
    /* istanbul ignore next */
    cov_12tt0iiz3w().f[5]++;
    cov_12tt0iiz3w().s[87]++;
    try {
      const {
        streamId,
        userId,
        boostType,
        boostAmount
      } =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[88]++, data);
      const stream =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[89]++, await LiveStream_1.LiveStream.findById(streamId));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[90]++;
      if (!stream) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[18][0]++;
        cov_12tt0iiz3w().s[91]++;
        return {
          success: false,
          error: 'Stream not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[18][1]++;
      }
      // Update stream engagement score
      cov_12tt0iiz3w().s[92]++;
      stream.rankingInputs.aiEngagementScore += boostAmount;
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[93]++;
      await stream.save();
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[94]++;
      return {
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[95]++;
      logger.error('Error processing battle boost:', error);
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[96]++;
      return {
        success: false,
        error: 'Failed to process battle boost'
      };
    }
  }
  // Update stream metrics
  static async updateStreamMetrics(streamId, metrics) {
    /* istanbul ignore next */
    cov_12tt0iiz3w().f[6]++;
    cov_12tt0iiz3w().s[97]++;
    try {
      const stream =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[98]++, await LiveStream_1.LiveStream.findById(streamId));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[99]++;
      if (!stream) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().b[19][0]++;
        cov_12tt0iiz3w().s[100]++;
        throw new Error('Stream not found');
      } else
      /* istanbul ignore next */
      {
        cov_12tt0iiz3w().b[19][1]++;
      }
      // Update metrics
      cov_12tt0iiz3w().s[101]++;
      stream.metrics = {
        ...stream.metrics,
        ...metrics
      };
      // Update ranking inputs
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[102]++;
      stream.rankingInputs = {
        viewerCount: stream.metrics.viewerCount,
        giftsAmount: stream.metrics.giftsCoins,
        aiEngagementScore:
        /* istanbul ignore next */
        (cov_12tt0iiz3w().b[20][0]++, stream.metrics.engagementScore) ||
        /* istanbul ignore next */
        (cov_12tt0iiz3w().b[20][1]++, 0)
      };
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[103]++;
      await stream.save();
    } catch (error) {
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[104]++;
      logger.error('Error updating stream metrics:', error);
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[105]++;
      throw error;
    }
  }
  // Join game
  static async joinGame(gameId, userId) {
    /* istanbul ignore next */
    cov_12tt0iiz3w().f[7]++;
    cov_12tt0iiz3w().s[106]++;
    try {
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[107]++;
      // This would integrate with the games service
      logger.info(`User ${userId} joined game ${gameId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[108]++;
      logger.error('Error joining game:', error);
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[109]++;
      throw error;
    }
  }
  // Handle user disconnect
  static async handleUserDisconnect(userId) {
    /* istanbul ignore next */
    cov_12tt0iiz3w().f[8]++;
    cov_12tt0iiz3w().s[110]++;
    try {
      // Remove user from all active streams
      const activeStreams =
      /* istanbul ignore next */
      (cov_12tt0iiz3w().s[111]++, await LiveStream_1.LiveStream.find({
        status: 'live',
        viewers: userId
      }));
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[112]++;
      for (const stream of activeStreams) {
        /* istanbul ignore next */
        cov_12tt0iiz3w().s[113]++;
        await this.removeViewer(stream._id.toString(), userId);
      }
      // Update user's last active time
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[114]++;
      await User_1.User.findByIdAndUpdate(userId, {
        lastActiveAt: new Date()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_12tt0iiz3w().s[115]++;
      logger.error('Error handling user disconnect:', error);
    }
  }
}
/* istanbul ignore next */
cov_12tt0iiz3w().s[116]++;
exports.LiveStreamService = LiveStreamService;