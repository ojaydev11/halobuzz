1a1fc2634c9cf8e9596b2d4505cdfb0f
"use strict";

/* istanbul ignore next */
function cov_1smz123c36() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\admin\\live.ts";
  var hash = "a5204f96d27d9d9a208bfbddc48962150879c2f3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\admin\\live.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 4,
          column: 55
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 51
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 47
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 47
        }
      },
      "7": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "8": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "9": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "10": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 50
        }
      },
      "11": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 53
        }
      },
      "12": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 39
        }
      },
      "13": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "14": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 21,
          column: 24
        }
      },
      "15": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "16": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "17": {
        start: {
          line: 24,
          column: 34
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "18": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 33,
          column: 46
        }
      },
      "19": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "20": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 63
        }
      },
      "21": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "22": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 92,
          column: 3
        }
      },
      "23": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "24": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 56,
          column: 35
        }
      },
      "25": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "26": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 73
        }
      },
      "27": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 77
        }
      },
      "28": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "29": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 77
        }
      },
      "30": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "31": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 74
        }
      },
      "32": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 33
        }
      },
      "33": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 37
        }
      },
      "34": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 29
        }
      },
      "35": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "36": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "37": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 63
        }
      },
      "38": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "39": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 131,
          column: 3
        }
      },
      "40": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "41": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 100,
          column: 50
        }
      },
      "42": {
        start: {
          line: 101,
          column: 22
        },
        end: {
          line: 101,
          column: 53
        }
      },
      "43": {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 102,
          column: 75
        }
      },
      "44": {
        start: {
          line: 103,
          column: 21
        },
        end: {
          line: 103,
          column: 39
        }
      },
      "45": {
        start: {
          line: 104,
          column: 22
        },
        end: {
          line: 104,
          column: 24
        }
      },
      "46": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 106,
          column: 40
        }
      },
      "47": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 40
        }
      },
      "48": {
        start: {
          line: 107,
          column: 31
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "49": {
        start: {
          line: 116,
          column: 22
        },
        end: {
          line: 116,
          column: 46
        }
      },
      "50": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 122,
          column: 11
        }
      },
      "51": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 55
        }
      },
      "52": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "53": {
        start: {
          line: 137,
          column: 0
        },
        end: {
          line: 172,
          column: 3
        }
      },
      "54": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "55": {
        start: {
          line: 139,
          column: 27
        },
        end: {
          line: 139,
          column: 35
        }
      },
      "56": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "57": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 73
        }
      },
      "58": {
        start: {
          line: 143,
          column: 21
        },
        end: {
          line: 143,
          column: 62
        }
      },
      "59": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "60": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 69
        }
      },
      "61": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 32
        }
      },
      "62": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 85
        }
      },
      "63": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 26
        }
      },
      "64": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 159,
          column: 11
        }
      },
      "65": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 163,
          column: 11
        }
      },
      "66": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 59
        }
      },
      "67": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 170,
          column: 11
        }
      },
      "68": {
        start: {
          line: 173,
          column: 0
        },
        end: {
          line: 173,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 86
          },
          end: {
            line: 15,
            column: 87
          }
        },
        loc: {
          start: {
            line: 15,
            column: 106
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 54,
            column: 102
          },
          end: {
            line: 54,
            column: 103
          }
        },
        loc: {
          start: {
            line: 54,
            column: 122
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 54
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 98,
            column: 78
          },
          end: {
            line: 98,
            column: 79
          }
        },
        loc: {
          start: {
            line: 98,
            column: 98
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 98
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 137,
            column: 92
          },
          end: {
            line: 137,
            column: 93
          }
        },
        loc: {
          start: {
            line: 137,
            column: 112
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 137
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 45
          }
        }, {
          start: {
            line: 17,
            column: 49
          },
          end: {
            line: 17,
            column: 50
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 47
          }
        }, {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 53
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 21
          },
          end: {
            line: 45,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 46
          },
          end: {
            line: 45,
            column: 59
          }
        }, {
          start: {
            line: 45,
            column: 62
          },
          end: {
            line: 45,
            column: 77
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "6": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "7": {
        loc: {
          start: {
            line: 89,
            column: 21
          },
          end: {
            line: 89,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 46
          },
          end: {
            line: 89,
            column: 59
          }
        }, {
          start: {
            line: 89,
            column: 62
          },
          end: {
            line: 89,
            column: 77
          }
        }],
        line: 89
      },
      "8": {
        loc: {
          start: {
            line: 100,
            column: 21
          },
          end: {
            line: 100,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 21
          },
          end: {
            line: 100,
            column: 45
          }
        }, {
          start: {
            line: 100,
            column: 49
          },
          end: {
            line: 100,
            column: 50
          }
        }],
        line: 100
      },
      "9": {
        loc: {
          start: {
            line: 101,
            column: 22
          },
          end: {
            line: 101,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 22
          },
          end: {
            line: 101,
            column: 47
          }
        }, {
          start: {
            line: 101,
            column: 51
          },
          end: {
            line: 101,
            column: 53
          }
        }],
        line: 101
      },
      "10": {
        loc: {
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 59
          },
          end: {
            line: 102,
            column: 63
          }
        }, {
          start: {
            line: 102,
            column: 66
          },
          end: {
            line: 102,
            column: 75
          }
        }],
        line: 102
      },
      "11": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 106,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 106,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "12": {
        loc: {
          start: {
            line: 128,
            column: 21
          },
          end: {
            line: 128,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 46
          },
          end: {
            line: 128,
            column: 59
          }
        }, {
          start: {
            line: 128,
            column: 62
          },
          end: {
            line: 128,
            column: 77
          }
        }],
        line: 128
      },
      "13": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "14": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "15": {
        loc: {
          start: {
            line: 148,
            column: 37
          },
          end: {
            line: 148,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 37
          },
          end: {
            line: 148,
            column: 58
          }
        }, {
          start: {
            line: 148,
            column: 62
          },
          end: {
            line: 148,
            column: 64
          }
        }],
        line: 148
      },
      "16": {
        loc: {
          start: {
            line: 169,
            column: 21
          },
          end: {
            line: 169,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 46
          },
          end: {
            line: 169,
            column: 59
          }
        }, {
          start: {
            line: 169,
            column: 62
          },
          end: {
            line: 169,
            column: 77
          }
        }],
        line: 169
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a5204f96d27d9d9a208bfbddc48962150879c2f3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1smz123c36 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1smz123c36();
cov_1smz123c36().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1smz123c36().s[1]++, require("express"));
const LiveStream_1 =
/* istanbul ignore next */
(cov_1smz123c36().s[2]++, require("../../models/LiveStream"));
const Reel_1 =
/* istanbul ignore next */
(cov_1smz123c36().s[3]++, require("../../models/Reel"));
const AuditLog_1 =
/* istanbul ignore next */
(cov_1smz123c36().s[4]++, require("../../models/AuditLog"));
const auth_1 =
/* istanbul ignore next */
(cov_1smz123c36().s[5]++, require("../../middleware/auth"));
const rbac_1 =
/* istanbul ignore next */
(cov_1smz123c36().s[6]++, require("../../middleware/rbac"));
const router =
/* istanbul ignore next */
(cov_1smz123c36().s[7]++, (0, express_1.Router)());
/**
 * GET /api/v1/admin/live/sessions
 * Get paginated live sessions
 * Requires: admin:read scope
 */
/* istanbul ignore next */
cov_1smz123c36().s[8]++;
router.get('/sessions', auth_1.requireAuth, (0, rbac_1.requireScope)(['admin:read']), async (req, res) => {
  /* istanbul ignore next */
  cov_1smz123c36().f[0]++;
  cov_1smz123c36().s[9]++;
  try {
    const page =
    /* istanbul ignore next */
    (cov_1smz123c36().s[10]++,
    /* istanbul ignore next */
    (cov_1smz123c36().b[0][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_1smz123c36().b[0][1]++, 1));
    const limit =
    /* istanbul ignore next */
    (cov_1smz123c36().s[11]++,
    /* istanbul ignore next */
    (cov_1smz123c36().b[1][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_1smz123c36().b[1][1]++, 20));
    const status =
    /* istanbul ignore next */
    (cov_1smz123c36().s[12]++, req.query.status);
    const skip =
    /* istanbul ignore next */
    (cov_1smz123c36().s[13]++, (page - 1) * limit);
    const query =
    /* istanbul ignore next */
    (cov_1smz123c36().s[14]++, {});
    /* istanbul ignore next */
    cov_1smz123c36().s[15]++;
    if (status) {
      /* istanbul ignore next */
      cov_1smz123c36().b[2][0]++;
      cov_1smz123c36().s[16]++;
      query.status = status;
    } else
    /* istanbul ignore next */
    {
      cov_1smz123c36().b[2][1]++;
    }
    const [sessions, total] =
    /* istanbul ignore next */
    (cov_1smz123c36().s[17]++, await Promise.all([LiveStream_1.LiveStream.find(query).populate('host', 'username avatar followers').sort('-createdAt').skip(skip).limit(limit).lean(), LiveStream_1.LiveStream.countDocuments(query)]));
    const pages =
    /* istanbul ignore next */
    (cov_1smz123c36().s[18]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_1smz123c36().s[19]++;
    res.json({
      data: sessions,
      total,
      page,
      pages
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1smz123c36().s[20]++;
    console.error('Admin get live sessions error:', error);
    /* istanbul ignore next */
    cov_1smz123c36().s[21]++;
    res.status(500).json({
      error: 'Failed to fetch live sessions',
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1smz123c36().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1smz123c36().b[3][1]++, 'Unknown error')
    });
  }
});
/**
 * POST /api/v1/admin/live/sessions/:id/force-end
 * Force end a live session
 * Requires: admin:write scope
 */
/* istanbul ignore next */
cov_1smz123c36().s[22]++;
router.post('/sessions/:id/force-end', auth_1.requireAuth, (0, rbac_1.requireScope)(['admin:write']), async (req, res) => {
  /* istanbul ignore next */
  cov_1smz123c36().f[1]++;
  cov_1smz123c36().s[23]++;
  try {
    const {
      reason
    } =
    /* istanbul ignore next */
    (cov_1smz123c36().s[24]++, req.body);
    /* istanbul ignore next */
    cov_1smz123c36().s[25]++;
    if (!reason) {
      /* istanbul ignore next */
      cov_1smz123c36().b[4][0]++;
      cov_1smz123c36().s[26]++;
      return res.status(400).json({
        error: 'Reason is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1smz123c36().b[4][1]++;
    }
    const session =
    /* istanbul ignore next */
    (cov_1smz123c36().s[27]++, await LiveStream_1.LiveStream.findById(req.params.id));
    /* istanbul ignore next */
    cov_1smz123c36().s[28]++;
    if (!session) {
      /* istanbul ignore next */
      cov_1smz123c36().b[5][0]++;
      cov_1smz123c36().s[29]++;
      return res.status(404).json({
        error: 'Live session not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1smz123c36().b[5][1]++;
    }
    cov_1smz123c36().s[30]++;
    if (session.status !== 'live') {
      /* istanbul ignore next */
      cov_1smz123c36().b[6][0]++;
      cov_1smz123c36().s[31]++;
      return res.status(400).json({
        error: 'Session is not live'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1smz123c36().b[6][1]++;
    }
    cov_1smz123c36().s[32]++;
    session.status = 'ended';
    /* istanbul ignore next */
    cov_1smz123c36().s[33]++;
    session.endedAt = new Date();
    /* istanbul ignore next */
    cov_1smz123c36().s[34]++;
    await session.save();
    // Log action
    /* istanbul ignore next */
    cov_1smz123c36().s[35]++;
    await AuditLog_1.AuditLog.create({
      admin: req.user.userId,
      action: 'live.force_end',
      resource: 'livestream',
      resourceId: session._id,
      details: {
        reason,
        hostId: session.hostId
      },
      ip: req.ip,
      userAgent: req.get('user-agent')
    });
    /* istanbul ignore next */
    cov_1smz123c36().s[36]++;
    res.json({
      message: 'Live session ended successfully',
      session
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1smz123c36().s[37]++;
    console.error('Admin force end session error:', error);
    /* istanbul ignore next */
    cov_1smz123c36().s[38]++;
    res.status(500).json({
      error: 'Failed to end live session',
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1smz123c36().b[7][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1smz123c36().b[7][1]++, 'Unknown error')
    });
  }
});
/**
 * GET /api/v1/admin/reels
 * Get paginated reels
 * Requires: admin:read scope
 */
/* istanbul ignore next */
cov_1smz123c36().s[39]++;
router.get('/', auth_1.requireAuth, (0, rbac_1.requireScope)(['admin:read']), async (req, res) => {
  /* istanbul ignore next */
  cov_1smz123c36().f[2]++;
  cov_1smz123c36().s[40]++;
  try {
    const page =
    /* istanbul ignore next */
    (cov_1smz123c36().s[41]++,
    /* istanbul ignore next */
    (cov_1smz123c36().b[8][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_1smz123c36().b[8][1]++, 1));
    const limit =
    /* istanbul ignore next */
    (cov_1smz123c36().s[42]++,
    /* istanbul ignore next */
    (cov_1smz123c36().b[9][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_1smz123c36().b[9][1]++, 20));
    const isFlagged =
    /* istanbul ignore next */
    (cov_1smz123c36().s[43]++, req.query.isFlagged === 'true' ?
    /* istanbul ignore next */
    (cov_1smz123c36().b[10][0]++, true) :
    /* istanbul ignore next */
    (cov_1smz123c36().b[10][1]++, undefined));
    const skip =
    /* istanbul ignore next */
    (cov_1smz123c36().s[44]++, (page - 1) * limit);
    const query =
    /* istanbul ignore next */
    (cov_1smz123c36().s[45]++, {});
    /* istanbul ignore next */
    cov_1smz123c36().s[46]++;
    if (isFlagged !== undefined) {
      /* istanbul ignore next */
      cov_1smz123c36().b[11][0]++;
      cov_1smz123c36().s[47]++;
      query.isFlagged = isFlagged;
    } else
    /* istanbul ignore next */
    {
      cov_1smz123c36().b[11][1]++;
    }
    const [reels, total] =
    /* istanbul ignore next */
    (cov_1smz123c36().s[48]++, await Promise.all([Reel_1.Reel.find(query).populate('creator', 'username avatar followers').sort('-createdAt').skip(skip).limit(limit).lean(), Reel_1.Reel.countDocuments(query)]));
    const pages =
    /* istanbul ignore next */
    (cov_1smz123c36().s[49]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_1smz123c36().s[50]++;
    res.json({
      data: reels,
      total,
      page,
      pages
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1smz123c36().s[51]++;
    console.error('Admin get reels error:', error);
    /* istanbul ignore next */
    cov_1smz123c36().s[52]++;
    res.status(500).json({
      error: 'Failed to fetch reels',
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1smz123c36().b[12][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1smz123c36().b[12][1]++, 'Unknown error')
    });
  }
});
/**
 * POST /api/v1/admin/reels/:id/takedown
 * Takedown a reel
 * Requires: admin:write scope
 */
/* istanbul ignore next */
cov_1smz123c36().s[53]++;
router.post('/:id/takedown', auth_1.requireAuth, (0, rbac_1.requireScope)(['admin:write']), async (req, res) => {
  /* istanbul ignore next */
  cov_1smz123c36().f[3]++;
  cov_1smz123c36().s[54]++;
  try {
    const {
      reason
    } =
    /* istanbul ignore next */
    (cov_1smz123c36().s[55]++, req.body);
    /* istanbul ignore next */
    cov_1smz123c36().s[56]++;
    if (!reason) {
      /* istanbul ignore next */
      cov_1smz123c36().b[13][0]++;
      cov_1smz123c36().s[57]++;
      return res.status(400).json({
        error: 'Reason is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1smz123c36().b[13][1]++;
    }
    const reel =
    /* istanbul ignore next */
    (cov_1smz123c36().s[58]++, await Reel_1.Reel.findById(req.params.id));
    /* istanbul ignore next */
    cov_1smz123c36().s[59]++;
    if (!reel) {
      /* istanbul ignore next */
      cov_1smz123c36().b[14][0]++;
      cov_1smz123c36().s[60]++;
      return res.status(404).json({
        error: 'Reel not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1smz123c36().b[14][1]++;
    }
    cov_1smz123c36().s[61]++;
    reel.status = 'deleted';
    /* istanbul ignore next */
    cov_1smz123c36().s[62]++;
    reel.moderation.flags = [...(
    /* istanbul ignore next */
    (cov_1smz123c36().b[15][0]++, reel.moderation.flags) ||
    /* istanbul ignore next */
    (cov_1smz123c36().b[15][1]++, [])), 'admin_takedown'];
    /* istanbul ignore next */
    cov_1smz123c36().s[63]++;
    await reel.save();
    // Log action
    /* istanbul ignore next */
    cov_1smz123c36().s[64]++;
    await AuditLog_1.AuditLog.create({
      admin: req.user.userId,
      action: 'reel.takedown',
      resource: 'reel',
      resourceId: reel._id,
      details: {
        reason,
        creatorId: reel.userId
      },
      ip: req.ip,
      userAgent: req.get('user-agent')
    });
    /* istanbul ignore next */
    cov_1smz123c36().s[65]++;
    res.json({
      message: 'Reel taken down successfully',
      reel
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1smz123c36().s[66]++;
    console.error('Admin takedown reel error:', error);
    /* istanbul ignore next */
    cov_1smz123c36().s[67]++;
    res.status(500).json({
      error: 'Failed to takedown reel',
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1smz123c36().b[16][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1smz123c36().b[16][1]++, 'Unknown error')
    });
  }
});
/* istanbul ignore next */
cov_1smz123c36().s[68]++;
exports.default = router;