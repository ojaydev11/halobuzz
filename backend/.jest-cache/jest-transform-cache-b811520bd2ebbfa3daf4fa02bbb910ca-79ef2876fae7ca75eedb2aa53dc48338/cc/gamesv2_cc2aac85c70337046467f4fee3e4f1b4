56f5e19b34fefba26a88d51cd714d3f3
"use strict";

/* istanbul ignore next */
function cov_102aggr03m() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\games-v2.ts";
  var hash = "a6c32afc15e0e5f4896cb44ee40c70179f03bc1a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\games-v2.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "6": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 9,
          column: 49
        }
      },
      "7": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 49
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "9": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 12,
          column: 53
        }
      },
      "10": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 69
        }
      },
      "11": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 71
        }
      },
      "12": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 43
        }
      },
      "13": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "14": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "15": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "16": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "17": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 26,
          column: 49
        }
      },
      "19": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 30,
          column: 11
        }
      },
      "20": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "21": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 79
        }
      },
      "22": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 68,
          column: 3
        }
      },
      "23": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "24": {
        start: {
          line: 42,
          column: 29
        },
        end: {
          line: 42,
          column: 39
        }
      },
      "25": {
        start: {
          line: 43,
          column: 21
        },
        end: {
          line: 43,
          column: 82
        }
      },
      "26": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "27": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 85
        }
      },
      "28": {
        start: {
          line: 47,
          column: 22
        },
        end: {
          line: 47,
          column: 158
        }
      },
      "29": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "30": {
        start: {
          line: 50,
          column: 30
        },
        end: {
          line: 50,
          column: 101
        }
      },
      "31": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "32": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 69
        }
      },
      "33": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 87
        }
      },
      "34": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 173,
          column: 3
        }
      },
      "35": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "36": {
        start: {
          line: 77,
          column: 23
        },
        end: {
          line: 77,
          column: 69
        }
      },
      "37": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "38": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 84
        }
      },
      "39": {
        start: {
          line: 81,
          column: 29
        },
        end: {
          line: 81,
          column: 39
        }
      },
      "40": {
        start: {
          line: 82,
          column: 53
        },
        end: {
          line: 82,
          column: 61
        }
      },
      "41": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 83,
          column: 39
        }
      },
      "42": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "43": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 94
        }
      },
      "44": {
        start: {
          line: 88,
          column: 21
        },
        end: {
          line: 88,
          column: 82
        }
      },
      "45": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "46": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 85
        }
      },
      "47": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "48": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 97,
          column: 15
        }
      },
      "49": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 100,
          column: 55
        }
      },
      "50": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "51": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 91
        }
      },
      "52": {
        start: {
          line: 105,
          column: 22
        },
        end: {
          line: 105,
          column: 158
        }
      },
      "53": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 107,
          column: 30
        }
      },
      "54": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "55": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 86
        }
      },
      "56": {
        start: {
          line: 112,
          column: 30
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "57": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "58": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 99
        }
      },
      "59": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 125,
          column: 11
        }
      },
      "60": {
        start: {
          line: 127,
          column: 22
        },
        end: {
          line: 137,
          column: 10
        }
      },
      "61": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "62": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 156,
          column: 11
        }
      },
      "63": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 167,
          column: 11
        }
      },
      "64": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 63
        }
      },
      "65": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 81
        }
      },
      "66": {
        start: {
          line: 177,
          column: 0
        },
        end: {
          line: 326,
          column: 3
        }
      },
      "67": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 325,
          column: 5
        }
      },
      "68": {
        start: {
          line: 179,
          column: 38
        },
        end: {
          line: 179,
          column: 48
        }
      },
      "69": {
        start: {
          line: 180,
          column: 23
        },
        end: {
          line: 180,
          column: 39
        }
      },
      "70": {
        start: {
          line: 181,
          column: 21
        },
        end: {
          line: 181,
          column: 66
        }
      },
      "71": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "72": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 85
        }
      },
      "73": {
        start: {
          line: 185,
          column: 22
        },
        end: {
          line: 185,
          column: 70
        }
      },
      "74": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "75": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 86
        }
      },
      "76": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 30
        }
      },
      "77": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "78": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 94
        }
      },
      "79": {
        start: {
          line: 195,
          column: 26
        },
        end: {
          line: 195,
          column: 82
        }
      },
      "80": {
        start: {
          line: 198,
          column: 22
        },
        end: {
          line: 198,
          column: 27
        }
      },
      "81": {
        start: {
          line: 199,
          column: 24
        },
        end: {
          line: 199,
          column: 25
        }
      },
      "82": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "83": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 206,
          column: 17
        }
      },
      "84": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 126
        }
      },
      "85": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 56
        }
      },
      "86": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 90
        }
      },
      "87": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 22
        }
      },
      "88": {
        start: {
          line: 209,
          column: 37
        },
        end: {
          line: 209,
          column: 92
        }
      },
      "89": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 111
        }
      },
      "90": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 219,
          column: 17
        }
      },
      "91": {
        start: {
          line: 213,
          column: 35
        },
        end: {
          line: 213,
          column: 103
        }
      },
      "92": {
        start: {
          line: 214,
          column: 38
        },
        end: {
          line: 214,
          column: 91
        }
      },
      "93": {
        start: {
          line: 214,
          column: 60
        },
        end: {
          line: 214,
          column: 90
        }
      },
      "94": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 68
        }
      },
      "95": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 218,
          column: 21
        }
      },
      "96": {
        start: {
          line: 217,
          column: 24
        },
        end: {
          line: 217,
          column: 71
        }
      },
      "97": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 220,
          column: 22
        }
      },
      "98": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 102
        }
      },
      "99": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 226,
          column: 17
        }
      },
      "100": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 224,
          column: 90
        }
      },
      "101": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 225,
          column: 56
        }
      },
      "102": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 22
        }
      },
      "103": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 233,
          column: 17
        }
      },
      "104": {
        start: {
          line: 230,
          column: 20
        },
        end: {
          line: 230,
          column: 167
        }
      },
      "105": {
        start: {
          line: 231,
          column: 20
        },
        end: {
          line: 231,
          column: 56
        }
      },
      "106": {
        start: {
          line: 232,
          column: 20
        },
        end: {
          line: 232,
          column: 90
        }
      },
      "107": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 22
        }
      },
      "108": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 240,
          column: 17
        }
      },
      "109": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 237,
          column: 127
        }
      },
      "110": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 56
        }
      },
      "111": {
        start: {
          line: 239,
          column: 20
        },
        end: {
          line: 239,
          column: 90
        }
      },
      "112": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 22
        }
      },
      "113": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 247,
          column: 17
        }
      },
      "114": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 244,
          column: 135
        }
      },
      "115": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 245,
          column: 56
        }
      },
      "116": {
        start: {
          line: 246,
          column: 20
        },
        end: {
          line: 246,
          column: 90
        }
      },
      "117": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 22
        }
      },
      "118": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 254,
          column: 17
        }
      },
      "119": {
        start: {
          line: 251,
          column: 20
        },
        end: {
          line: 251,
          column: 136
        }
      },
      "120": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 252,
          column: 56
        }
      },
      "121": {
        start: {
          line: 253,
          column: 20
        },
        end: {
          line: 253,
          column: 90
        }
      },
      "122": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 255,
          column: 22
        }
      },
      "123": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 261,
          column: 17
        }
      },
      "124": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 258,
          column: 150
        }
      },
      "125": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 56
        }
      },
      "126": {
        start: {
          line: 260,
          column: 20
        },
        end: {
          line: 260,
          column: 90
        }
      },
      "127": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 22
        }
      },
      "128": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "129": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 272,
          column: 15
        }
      },
      "130": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 37
        }
      },
      "131": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 44
        }
      },
      "132": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 44
        }
      },
      "133": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 35
        }
      },
      "134": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 293,
          column: 15
        }
      },
      "135": {
        start: {
          line: 295,
          column: 13
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "136": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 38
        }
      },
      "137": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 35
        }
      },
      "138": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "139": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 79
        }
      },
      "140": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 320,
          column: 11
        }
      },
      "141": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 68
        }
      },
      "142": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 86
        }
      },
      "143": {
        start: {
          line: 330,
          column: 0
        },
        end: {
          line: 377,
          column: 3
        }
      },
      "144": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 376,
          column: 5
        }
      },
      "145": {
        start: {
          line: 332,
          column: 23
        },
        end: {
          line: 332,
          column: 39
        }
      },
      "146": {
        start: {
          line: 333,
          column: 43
        },
        end: {
          line: 333,
          column: 52
        }
      },
      "147": {
        start: {
          line: 334,
          column: 23
        },
        end: {
          line: 338,
          column: 33
        }
      },
      "148": {
        start: {
          line: 339,
          column: 22
        },
        end: {
          line: 339,
          column: 76
        }
      },
      "149": {
        start: {
          line: 341,
          column: 22
        },
        end: {
          line: 354,
          column: 10
        }
      },
      "150": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 371,
          column: 11
        }
      },
      "151": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 68
        }
      },
      "152": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 86
        }
      },
      "153": {
        start: {
          line: 381,
          column: 0
        },
        end: {
          line: 456,
          column: 3
        }
      },
      "154": {
        start: {
          line: 382,
          column: 4
        },
        end: {
          line: 455,
          column: 5
        }
      },
      "155": {
        start: {
          line: 383,
          column: 29
        },
        end: {
          line: 383,
          column: 39
        }
      },
      "156": {
        start: {
          line: 384,
          column: 37
        },
        end: {
          line: 384,
          column: 46
        }
      },
      "157": {
        start: {
          line: 385,
          column: 21
        },
        end: {
          line: 385,
          column: 66
        }
      },
      "158": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 388,
          column: 9
        }
      },
      "159": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 85
        }
      },
      "160": {
        start: {
          line: 390,
          column: 24
        },
        end: {
          line: 390,
          column: 34
        }
      },
      "161": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "162": {
        start: {
          line: 393,
          column: 16
        },
        end: {
          line: 393,
          column: 47
        }
      },
      "163": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 394,
          column: 22
        }
      },
      "164": {
        start: {
          line: 396,
          column: 16
        },
        end: {
          line: 396,
          column: 59
        }
      },
      "165": {
        start: {
          line: 397,
          column: 16
        },
        end: {
          line: 397,
          column: 22
        }
      },
      "166": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 399,
          column: 61
        }
      },
      "167": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 400,
          column: 22
        }
      },
      "168": {
        start: {
          line: 402,
          column: 16
        },
        end: {
          line: 402,
          column: 40
        }
      },
      "169": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 403,
          column: 22
        }
      },
      "170": {
        start: {
          line: 405,
          column: 28
        },
        end: {
          line: 442,
          column: 10
        }
      },
      "171": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 450,
          column: 11
        }
      },
      "172": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 453,
          column: 67
        }
      },
      "173": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 454,
          column: 85
        }
      },
      "174": {
        start: {
          line: 457,
          column: 0
        },
        end: {
          line: 457,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 22,
            column: 21
          }
        },
        loc: {
          start: {
            line: 22,
            column: 40
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 39
          },
          end: {
            line: 40,
            column: 40
          }
        },
        loc: {
          start: {
            line: 40,
            column: 59
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 75,
            column: 3
          },
          end: {
            line: 75,
            column: 4
          }
        },
        loc: {
          start: {
            line: 75,
            column: 23
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 75
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 177,
            column: 70
          },
          end: {
            line: 177,
            column: 71
          }
        },
        loc: {
          start: {
            line: 177,
            column: 90
          },
          end: {
            line: 326,
            column: 1
          }
        },
        line: 177
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 214,
            column: 55
          },
          end: {
            line: 214,
            column: 56
          }
        },
        loc: {
          start: {
            line: 214,
            column: 60
          },
          end: {
            line: 214,
            column: 90
          }
        },
        line: 214
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 330,
            column: 46
          },
          end: {
            line: 330,
            column: 47
          }
        },
        loc: {
          start: {
            line: 330,
            column: 66
          },
          end: {
            line: 377,
            column: 1
          }
        },
        line: 330
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 381,
            column: 37
          },
          end: {
            line: 381,
            column: 38
          }
        },
        loc: {
          start: {
            line: 381,
            column: 57
          },
          end: {
            line: 456,
            column: 1
          }
        },
        line: 381
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 106
          },
          end: {
            line: 47,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 106
          },
          end: {
            line: 47,
            column: 124
          }
        }, {
          start: {
            line: 47,
            column: 128
          },
          end: {
            line: 47,
            column: 130
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 132
          },
          end: {
            line: 47,
            column: 157
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 132
          },
          end: {
            line: 47,
            column: 152
          }
        }, {
          start: {
            line: 47,
            column: 156
          },
          end: {
            line: 47,
            column: 157
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "8": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "9": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "10": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 93,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 93,
            column: 34
          }
        }, {
          start: {
            line: 93,
            column: 38
          },
          end: {
            line: 93,
            column: 60
          }
        }],
        line: 93
      },
      "11": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "12": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 17
          }
        }, {
          start: {
            line: 101,
            column: 21
          },
          end: {
            line: 101,
            column: 32
          }
        }, {
          start: {
            line: 101,
            column: 36
          },
          end: {
            line: 101,
            column: 63
          }
        }],
        line: 101
      },
      "13": {
        loc: {
          start: {
            line: 105,
            column: 106
          },
          end: {
            line: 105,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 106
          },
          end: {
            line: 105,
            column: 124
          }
        }, {
          start: {
            line: 105,
            column: 128
          },
          end: {
            line: 105,
            column: 130
          }
        }],
        line: 105
      },
      "14": {
        loc: {
          start: {
            line: 105,
            column: 132
          },
          end: {
            line: 105,
            column: 157
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 132
          },
          end: {
            line: 105,
            column: 152
          }
        }, {
          start: {
            line: 105,
            column: 156
          },
          end: {
            line: 105,
            column: 157
          }
        }],
        line: 105
      },
      "15": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "16": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "17": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "18": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "19": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "20": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 207,
            column: 22
          }
        }, {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 220,
            column: 22
          }
        }, {
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 227,
            column: 22
          }
        }, {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 234,
            column: 22
          }
        }, {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 241,
            column: 22
          }
        }, {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 248,
            column: 22
          }
        }, {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 255,
            column: 22
          }
        }, {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 262,
            column: 22
          }
        }],
        line: 200
      },
      "21": {
        loc: {
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "22": {
        loc: {
          start: {
            line: 211,
            column: 16
          },
          end: {
            line: 219,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 16
          },
          end: {
            line: 219,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "23": {
        loc: {
          start: {
            line: 216,
            column: 20
          },
          end: {
            line: 218,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 20
          },
          end: {
            line: 218,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "24": {
        loc: {
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 226,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 226,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "25": {
        loc: {
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 233,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 233,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "26": {
        loc: {
          start: {
            line: 229,
            column: 20
          },
          end: {
            line: 229,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 20
          },
          end: {
            line: 229,
            column: 54
          }
        }, {
          start: {
            line: 229,
            column: 58
          },
          end: {
            line: 229,
            column: 84
          }
        }],
        line: 229
      },
      "27": {
        loc: {
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 240,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 240,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "28": {
        loc: {
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 247,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 247,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "29": {
        loc: {
          start: {
            line: 250,
            column: 16
          },
          end: {
            line: 254,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 16
          },
          end: {
            line: 254,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "30": {
        loc: {
          start: {
            line: 257,
            column: 16
          },
          end: {
            line: 261,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 16
          },
          end: {
            line: 261,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "31": {
        loc: {
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: 295,
            column: 13
          },
          end: {
            line: 298,
            column: 9
          }
        }],
        line: 265
      },
      "32": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 21
          }
        }, {
          start: {
            line: 265,
            column: 25
          },
          end: {
            line: 265,
            column: 32
          }
        }, {
          start: {
            line: 265,
            column: 36
          },
          end: {
            line: 265,
            column: 72
          }
        }],
        line: 265
      },
      "33": {
        loc: {
          start: {
            line: 295,
            column: 13
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 13
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "34": {
        loc: {
          start: {
            line: 295,
            column: 17
          },
          end: {
            line: 295,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 17
          },
          end: {
            line: 295,
            column: 26
          }
        }, {
          start: {
            line: 295,
            column: 30
          },
          end: {
            line: 295,
            column: 38
          }
        }, {
          start: {
            line: 295,
            column: 42
          },
          end: {
            line: 295,
            column: 72
          }
        }],
        line: 295
      },
      "35": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "36": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 300,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 300,
            column: 35
          }
        }, {
          start: {
            line: 300,
            column: 39
          },
          end: {
            line: 300,
            column: 57
          }
        }],
        line: 300
      },
      "37": {
        loc: {
          start: {
            line: 308,
            column: 27
          },
          end: {
            line: 313,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 308,
            column: 39
          },
          end: {
            line: 313,
            column: 17
          }
        }, {
          start: {
            line: 313,
            column: 20
          },
          end: {
            line: 313,
            column: 24
          }
        }],
        line: 308
      },
      "38": {
        loc: {
          start: {
            line: 333,
            column: 16
          },
          end: {
            line: 333,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 333,
            column: 24
          },
          end: {
            line: 333,
            column: 26
          }
        }],
        line: 333
      },
      "39": {
        loc: {
          start: {
            line: 333,
            column: 28
          },
          end: {
            line: 333,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 333,
            column: 37
          },
          end: {
            line: 333,
            column: 38
          }
        }],
        line: 333
      },
      "40": {
        loc: {
          start: {
            line: 359,
            column: 23
          },
          end: {
            line: 364,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 359,
            column: 23
          },
          end: {
            line: 359,
            column: 31
          }
        }, {
          start: {
            line: 359,
            column: 35
          },
          end: {
            line: 364,
            column: 17
          }
        }],
        line: 359
      },
      "41": {
        loc: {
          start: {
            line: 384,
            column: 16
          },
          end: {
            line: 384,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 384,
            column: 25
          },
          end: {
            line: 384,
            column: 32
          }
        }],
        line: 384
      },
      "42": {
        loc: {
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 388,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 388,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "43": {
        loc: {
          start: {
            line: 391,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 394,
            column: 22
          }
        }, {
          start: {
            line: 395,
            column: 12
          },
          end: {
            line: 397,
            column: 22
          }
        }, {
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 400,
            column: 22
          }
        }, {
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 403,
            column: 22
          }
        }],
        line: 391
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0, 0, 0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0],
      "33": [0, 0],
      "34": [0, 0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0],
      "39": [0],
      "40": [0, 0],
      "41": [0],
      "42": [0, 0],
      "43": [0, 0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a6c32afc15e0e5f4896cb44ee40c70179f03bc1a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_102aggr03m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_102aggr03m();
var __importDefault =
/* istanbul ignore next */
(cov_102aggr03m().s[0]++,
/* istanbul ignore next */
(cov_102aggr03m().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_102aggr03m().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_102aggr03m().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_102aggr03m().f[0]++;
  cov_102aggr03m().s[1]++;
  return /* istanbul ignore next */(cov_102aggr03m().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_102aggr03m().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_102aggr03m().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_102aggr03m().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_102aggr03m().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[4]++, require("express-validator"));
const Game_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[5]++, require("@/models/Game"));
const GameRound_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[6]++, require("@/models/GameRound"));
const GameStake_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[7]++, require("@/models/GameStake"));
const User_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[8]++, require("@/models/User"));
const Transaction_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[9]++, require("@/models/Transaction"));
const GamesEngineService_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[10]++, require("@/services/GamesEngineService"));
const GameImplementations_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[11]++, require("@/services/GameImplementations"));
const auth_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[12]++, require("@/middleware/auth"));
const security_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[13]++, require("@/middleware/security"));
const logger_1 =
/* istanbul ignore next */
(cov_102aggr03m().s[14]++, require("@/config/logger"));
const router =
/* istanbul ignore next */
(cov_102aggr03m().s[15]++, express_1.default.Router());
/**
 * Get all available games
 */
/* istanbul ignore next */
cov_102aggr03m().s[16]++;
router.get('/list', async (req, res) => {
  /* istanbul ignore next */
  cov_102aggr03m().f[1]++;
  cov_102aggr03m().s[17]++;
  try {
    const games =
    /* istanbul ignore next */
    (cov_102aggr03m().s[18]++, await Game_1.Game.find({
      isActive: true
    }).select('name code description type category minStake maxStake roundDuration config').sort({
      'metadata.totalPlayed': -1
    }));
    /* istanbul ignore next */
    cov_102aggr03m().s[19]++;
    res.json({
      success: true,
      data: {
        games
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_102aggr03m().s[20]++;
    logger_1.logger.error('Failed to get games list:', error);
    /* istanbul ignore next */
    cov_102aggr03m().s[21]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get games'
    });
  }
});
/**
 * Get current round for a game
 */
/* istanbul ignore next */
cov_102aggr03m().s[22]++;
router.get('/:gameCode/current-round', async (req, res) => {
  /* istanbul ignore next */
  cov_102aggr03m().f[2]++;
  cov_102aggr03m().s[23]++;
  try {
    const {
      gameCode
    } =
    /* istanbul ignore next */
    (cov_102aggr03m().s[24]++, req.params);
    const game =
    /* istanbul ignore next */
    (cov_102aggr03m().s[25]++, await Game_1.Game.findOne({
      code: gameCode,
      isActive: true
    }));
    /* istanbul ignore next */
    cov_102aggr03m().s[26]++;
    if (!game) {
      /* istanbul ignore next */
      cov_102aggr03m().b[3][0]++;
      cov_102aggr03m().s[27]++;
      return res.status(404).json({
        success: false,
        error: 'Game not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[3][1]++;
    }
    const round =
    /* istanbul ignore next */
    (cov_102aggr03m().s[28]++, await GamesEngineService_1.gamesEngineService.getOrCreateRound(game._id.toString(),
    /* istanbul ignore next */
    (cov_102aggr03m().b[4][0]++, game.roundDuration) ||
    /* istanbul ignore next */
    (cov_102aggr03m().b[4][1]++, 30),
    /* istanbul ignore next */
    (cov_102aggr03m().b[5][0]++, game.config?.options) ||
    /* istanbul ignore next */
    (cov_102aggr03m().b[5][1]++, 2)));
    // Calculate time remaining
    const now =
    /* istanbul ignore next */
    (cov_102aggr03m().s[29]++, new Date());
    const timeRemaining =
    /* istanbul ignore next */
    (cov_102aggr03m().s[30]++, Math.max(0, Math.floor((round.endAt.getTime() - now.getTime()) / 1000)));
    /* istanbul ignore next */
    cov_102aggr03m().s[31]++;
    res.json({
      success: true,
      data: {
        roundId: round.roundId,
        startAt: round.startAt,
        endAt: round.endAt,
        timeRemaining,
        totalStake: round.totalStake,
        status: round.status,
        optionsCount: round.optionsCount
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_102aggr03m().s[32]++;
    logger_1.logger.error('Failed to get current round:', error);
    /* istanbul ignore next */
    cov_102aggr03m().s[33]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get current round'
    });
  }
});
/**
 * Place a stake on a game
 */
/* istanbul ignore next */
cov_102aggr03m().s[34]++;
router.post('/:gameCode/stake', auth_1.authMiddleware, security_1.globalLimiter, [(0, express_validator_1.body)('amount').isInt({
  min: 1,
  max: 100000
}).withMessage('Invalid stake amount'), (0, express_validator_1.body)('selectedOption').optional().isInt({
  min: 0
}).withMessage('Invalid option selection')], async (req, res) => {
  /* istanbul ignore next */
  cov_102aggr03m().f[3]++;
  cov_102aggr03m().s[35]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_102aggr03m().s[36]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_102aggr03m().s[37]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_102aggr03m().b[6][0]++;
      cov_102aggr03m().s[38]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[6][1]++;
    }
    const {
      gameCode
    } =
    /* istanbul ignore next */
    (cov_102aggr03m().s[39]++, req.params);
    const {
      amount,
      selectedOption,
      metadata
    } =
    /* istanbul ignore next */
    (cov_102aggr03m().s[40]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_102aggr03m().s[41]++, req.user?.userId);
    /* istanbul ignore next */
    cov_102aggr03m().s[42]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_102aggr03m().b[7][0]++;
      cov_102aggr03m().s[43]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[7][1]++;
    }
    // Get game
    const game =
    /* istanbul ignore next */
    (cov_102aggr03m().s[44]++, await Game_1.Game.findOne({
      code: gameCode,
      isActive: true
    }));
    /* istanbul ignore next */
    cov_102aggr03m().s[45]++;
    if (!game) {
      /* istanbul ignore next */
      cov_102aggr03m().b[8][0]++;
      cov_102aggr03m().s[46]++;
      return res.status(404).json({
        success: false,
        error: 'Game not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[8][1]++;
    }
    // Validate stake amount
    cov_102aggr03m().s[47]++;
    if (
    /* istanbul ignore next */
    (cov_102aggr03m().b[10][0]++, amount < game.minStake) ||
    /* istanbul ignore next */
    (cov_102aggr03m().b[10][1]++, amount > game.maxStake)) {
      /* istanbul ignore next */
      cov_102aggr03m().b[9][0]++;
      cov_102aggr03m().s[48]++;
      return res.status(400).json({
        success: false,
        error: `Stake must be between ${game.minStake} and ${game.maxStake} coins`
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[9][1]++;
    }
    // Check user balance
    const user =
    /* istanbul ignore next */
    (cov_102aggr03m().s[49]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_102aggr03m().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_102aggr03m().b[12][0]++, !user) ||
    /* istanbul ignore next */
    (cov_102aggr03m().b[12][1]++, !user.coins) ||
    /* istanbul ignore next */
    (cov_102aggr03m().b[12][2]++, user.coins.balance < amount)) {
      /* istanbul ignore next */
      cov_102aggr03m().b[11][0]++;
      cov_102aggr03m().s[51]++;
      return res.status(400).json({
        success: false,
        error: 'Insufficient balance'
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[11][1]++;
    }
    // Get or create current round
    const round =
    /* istanbul ignore next */
    (cov_102aggr03m().s[52]++, await GamesEngineService_1.gamesEngineService.getOrCreateRound(game._id.toString(),
    /* istanbul ignore next */
    (cov_102aggr03m().b[13][0]++, game.roundDuration) ||
    /* istanbul ignore next */
    (cov_102aggr03m().b[13][1]++, 30),
    /* istanbul ignore next */
    (cov_102aggr03m().b[14][0]++, game.config?.options) ||
    /* istanbul ignore next */
    (cov_102aggr03m().b[14][1]++, 2)));
    // Check if round is still open
    const now =
    /* istanbul ignore next */
    (cov_102aggr03m().s[53]++, new Date());
    /* istanbul ignore next */
    cov_102aggr03m().s[54]++;
    if (now >= round.endAt) {
      /* istanbul ignore next */
      cov_102aggr03m().b[15][0]++;
      cov_102aggr03m().s[55]++;
      return res.status(400).json({
        success: false,
        error: 'Round has ended'
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[15][1]++;
    }
    // Check if user already staked in this round
    const existingStake =
    /* istanbul ignore next */
    (cov_102aggr03m().s[56]++, await GameStake_1.GameStake.findOne({
      userId,
      roundId: round.roundId
    }));
    /* istanbul ignore next */
    cov_102aggr03m().s[57]++;
    if (existingStake) {
      /* istanbul ignore next */
      cov_102aggr03m().b[16][0]++;
      cov_102aggr03m().s[58]++;
      return res.status(400).json({
        success: false,
        error: 'Already staked in this round'
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[16][1]++;
    }
    // Deduct stake from user balance
    cov_102aggr03m().s[59]++;
    await User_1.User.findByIdAndUpdate(userId, {
      $inc: {
        'coins.balance': -amount,
        'coins.totalSpent': amount
      }
    });
    // Create stake record
    const stake =
    /* istanbul ignore next */
    (cov_102aggr03m().s[60]++, await GameStake_1.GameStake.create({
      userId,
      gameId: game._id,
      roundId: round.roundId,
      stakeAmount: amount,
      selectedOption,
      result: 'pending',
      winAmount: 0,
      payoutStatus: 'pending',
      metadata
    }));
    // Update round total stake
    /* istanbul ignore next */
    cov_102aggr03m().s[61]++;
    await GameRound_1.GameRound.findByIdAndUpdate(round._id, {
      $inc: {
        totalStake: amount
      }
    });
    // Create transaction record
    /* istanbul ignore next */
    cov_102aggr03m().s[62]++;
    await Transaction_1.Transaction.create({
      userId,
      type: 'game_stake',
      amount: -amount,
      currency: 'coins',
      status: 'completed',
      description: `Staked on ${game.name}`,
      metadata: {
        gameId: game._id,
        gameCode: game.code,
        roundId: round.roundId,
        stakeId: stake._id
      }
    });
    /* istanbul ignore next */
    cov_102aggr03m().s[63]++;
    res.json({
      success: true,
      message: 'Stake placed successfully',
      data: {
        stakeId: stake._id,
        roundId: round.roundId,
        amount,
        selectedOption,
        roundEndsAt: round.endAt
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_102aggr03m().s[64]++;
    logger_1.logger.error('Failed to place stake:', error);
    /* istanbul ignore next */
    cov_102aggr03m().s[65]++;
    res.status(500).json({
      success: false,
      error: 'Failed to place stake'
    });
  }
});
/**
 * Get round result and process payouts
 */
/* istanbul ignore next */
cov_102aggr03m().s[66]++;
router.get('/:gameCode/round/:roundId/result', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_102aggr03m().f[4]++;
  cov_102aggr03m().s[67]++;
  try {
    const {
      gameCode,
      roundId
    } =
    /* istanbul ignore next */
    (cov_102aggr03m().s[68]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_102aggr03m().s[69]++, req.user?.userId);
    const game =
    /* istanbul ignore next */
    (cov_102aggr03m().s[70]++, await Game_1.Game.findOne({
      code: gameCode
    }));
    /* istanbul ignore next */
    cov_102aggr03m().s[71]++;
    if (!game) {
      /* istanbul ignore next */
      cov_102aggr03m().b[17][0]++;
      cov_102aggr03m().s[72]++;
      return res.status(404).json({
        success: false,
        error: 'Game not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[17][1]++;
    }
    const round =
    /* istanbul ignore next */
    (cov_102aggr03m().s[73]++, await GameRound_1.GameRound.findOne({
      roundId
    }));
    /* istanbul ignore next */
    cov_102aggr03m().s[74]++;
    if (!round) {
      /* istanbul ignore next */
      cov_102aggr03m().b[18][0]++;
      cov_102aggr03m().s[75]++;
      return res.status(404).json({
        success: false,
        error: 'Round not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[18][1]++;
    }
    // Check if round has ended
    const now =
    /* istanbul ignore next */
    (cov_102aggr03m().s[76]++, new Date());
    /* istanbul ignore next */
    cov_102aggr03m().s[77]++;
    if (now < round.endAt) {
      /* istanbul ignore next */
      cov_102aggr03m().b[19][0]++;
      cov_102aggr03m().s[78]++;
      return res.status(400).json({
        success: false,
        error: 'Round still in progress'
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[19][1]++;
    }
    // Get user's stake
    const userStake =
    /* istanbul ignore next */
    (cov_102aggr03m().s[79]++, await GameStake_1.GameStake.findOne({
      userId,
      roundId
    }));
    // Calculate game result based on game type
    let gameResult;
    let userWon =
    /* istanbul ignore next */
    (cov_102aggr03m().s[80]++, false);
    let winAmount =
    /* istanbul ignore next */
    (cov_102aggr03m().s[81]++, 0);
    /* istanbul ignore next */
    cov_102aggr03m().s[82]++;
    switch (game.category) {
      case 'coin-flip':
        /* istanbul ignore next */
        cov_102aggr03m().b[20][0]++;
        cov_102aggr03m().s[83]++;
        if (userStake?.selectedOption !== undefined) {
          /* istanbul ignore next */
          cov_102aggr03m().b[21][0]++;
          cov_102aggr03m().s[84]++;
          gameResult = GameImplementations_1.gameImplementations.coinFlip(round.seedHash, userStake.selectedOption);
          /* istanbul ignore next */
          cov_102aggr03m().s[85]++;
          userWon = gameResult.multiplier > 0;
          /* istanbul ignore next */
          cov_102aggr03m().s[86]++;
          winAmount = Math.floor(userStake.stakeAmount * gameResult.multiplier);
        } else
        /* istanbul ignore next */
        {
          cov_102aggr03m().b[21][1]++;
        }
        cov_102aggr03m().s[87]++;
        break;
      case 'dice':
        /* istanbul ignore next */
        cov_102aggr03m().b[20][1]++;
        const totalPlayers =
        /* istanbul ignore next */
        (cov_102aggr03m().s[88]++, await GameStake_1.GameStake.countDocuments({
          roundId
        }));
        /* istanbul ignore next */
        cov_102aggr03m().s[89]++;
        gameResult = GameImplementations_1.gameImplementations.luckyDice(round.seedHash, totalPlayers);
        /* istanbul ignore next */
        cov_102aggr03m().s[90]++;
        if (userStake) {
          /* istanbul ignore next */
          cov_102aggr03m().b[22][0]++;
          // Check if user is the winner based on stake order
          const stakes =
          /* istanbul ignore next */
          (cov_102aggr03m().s[91]++, await GameStake_1.GameStake.find({
            roundId
          }).sort({
            createdAt: 1
          }));
          const userIndex =
          /* istanbul ignore next */
          (cov_102aggr03m().s[92]++, stakes.findIndex(s => {
            /* istanbul ignore next */
            cov_102aggr03m().f[5]++;
            cov_102aggr03m().s[93]++;
            return s.userId.toString() === userId;
          }));
          /* istanbul ignore next */
          cov_102aggr03m().s[94]++;
          userWon = userIndex === gameResult.winnerOption;
          /* istanbul ignore next */
          cov_102aggr03m().s[95]++;
          if (userWon) {
            /* istanbul ignore next */
            cov_102aggr03m().b[23][0]++;
            cov_102aggr03m().s[96]++;
            winAmount = Math.floor(round.totalStake * 0.6); // 60% to winner
          } else
          /* istanbul ignore next */
          {
            cov_102aggr03m().b[23][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_102aggr03m().b[22][1]++;
        }
        cov_102aggr03m().s[97]++;
        break;
      case 'wheel':
        /* istanbul ignore next */
        cov_102aggr03m().b[20][2]++;
        cov_102aggr03m().s[98]++;
        gameResult = GameImplementations_1.gameImplementations.wheelOfFortune(round.seedHash);
        /* istanbul ignore next */
        cov_102aggr03m().s[99]++;
        if (userStake) {
          /* istanbul ignore next */
          cov_102aggr03m().b[24][0]++;
          cov_102aggr03m().s[100]++;
          winAmount = Math.floor(userStake.stakeAmount * gameResult.multiplier);
          /* istanbul ignore next */
          cov_102aggr03m().s[101]++;
          userWon = gameResult.multiplier > 0;
        } else
        /* istanbul ignore next */
        {
          cov_102aggr03m().b[24][1]++;
        }
        cov_102aggr03m().s[102]++;
        break;
      case 'predictor':
        /* istanbul ignore next */
        cov_102aggr03m().b[20][3]++;
        cov_102aggr03m().s[103]++;
        if (
        /* istanbul ignore next */
        (cov_102aggr03m().b[26][0]++, userStake?.metadata?.currentNumber) &&
        /* istanbul ignore next */
        (cov_102aggr03m().b[26][1]++, userStake?.metadata?.guess)) {
          /* istanbul ignore next */
          cov_102aggr03m().b[25][0]++;
          cov_102aggr03m().s[104]++;
          gameResult = GameImplementations_1.gameImplementations.numberPredictor(round.seedHash, userStake.metadata.currentNumber, userStake.metadata.guess);
          /* istanbul ignore next */
          cov_102aggr03m().s[105]++;
          userWon = gameResult.multiplier > 0;
          /* istanbul ignore next */
          cov_102aggr03m().s[106]++;
          winAmount = Math.floor(userStake.stakeAmount * gameResult.multiplier);
        } else
        /* istanbul ignore next */
        {
          cov_102aggr03m().b[25][1]++;
        }
        cov_102aggr03m().s[107]++;
        break;
      case 'color':
        /* istanbul ignore next */
        cov_102aggr03m().b[20][4]++;
        cov_102aggr03m().s[108]++;
        if (userStake?.selectedOption !== undefined) {
          /* istanbul ignore next */
          cov_102aggr03m().b[27][0]++;
          cov_102aggr03m().s[109]++;
          gameResult = GameImplementations_1.gameImplementations.colorRush(round.seedHash, userStake.selectedOption);
          /* istanbul ignore next */
          cov_102aggr03m().s[110]++;
          userWon = gameResult.multiplier > 0;
          /* istanbul ignore next */
          cov_102aggr03m().s[111]++;
          winAmount = Math.floor(userStake.stakeAmount * gameResult.multiplier);
        } else
        /* istanbul ignore next */
        {
          cov_102aggr03m().b[27][1]++;
        }
        cov_102aggr03m().s[112]++;
        break;
      case 'rps':
        /* istanbul ignore next */
        cov_102aggr03m().b[20][5]++;
        cov_102aggr03m().s[113]++;
        if (userStake?.selectedOption !== undefined) {
          /* istanbul ignore next */
          cov_102aggr03m().b[28][0]++;
          cov_102aggr03m().s[114]++;
          gameResult = GameImplementations_1.gameImplementations.rockPaperScissors(round.seedHash, userStake.selectedOption);
          /* istanbul ignore next */
          cov_102aggr03m().s[115]++;
          userWon = gameResult.multiplier > 0;
          /* istanbul ignore next */
          cov_102aggr03m().s[116]++;
          winAmount = Math.floor(userStake.stakeAmount * gameResult.multiplier);
        } else
        /* istanbul ignore next */
        {
          cov_102aggr03m().b[28][1]++;
        }
        cov_102aggr03m().s[117]++;
        break;
      case 'treasure':
        /* istanbul ignore next */
        cov_102aggr03m().b[20][6]++;
        cov_102aggr03m().s[118]++;
        if (userStake?.metadata?.boxesPicked) {
          /* istanbul ignore next */
          cov_102aggr03m().b[29][0]++;
          cov_102aggr03m().s[119]++;
          gameResult = GameImplementations_1.gameImplementations.treasureHunt(round.seedHash, userStake.metadata.boxesPicked);
          /* istanbul ignore next */
          cov_102aggr03m().s[120]++;
          userWon = gameResult.multiplier > 0;
          /* istanbul ignore next */
          cov_102aggr03m().s[121]++;
          winAmount = Math.floor(userStake.stakeAmount * gameResult.multiplier);
        } else
        /* istanbul ignore next */
        {
          cov_102aggr03m().b[29][1]++;
        }
        cov_102aggr03m().s[122]++;
        break;
      case 'clicker':
        /* istanbul ignore next */
        cov_102aggr03m().b[20][7]++;
        cov_102aggr03m().s[123]++;
        if (userStake?.metadata?.clickCount) {
          /* istanbul ignore next */
          cov_102aggr03m().b[30][0]++;
          cov_102aggr03m().s[124]++;
          gameResult = GameImplementations_1.gameImplementations.speedClicker(round.seedHash, userStake.metadata.clickCount, game.duration);
          /* istanbul ignore next */
          cov_102aggr03m().s[125]++;
          userWon = gameResult.multiplier > 0;
          /* istanbul ignore next */
          cov_102aggr03m().s[126]++;
          winAmount = Math.floor(userStake.stakeAmount * gameResult.multiplier);
        } else
        /* istanbul ignore next */
        {
          cov_102aggr03m().b[30][1]++;
        }
        cov_102aggr03m().s[127]++;
        break;
    }
    // Process payout if user won and hasn't been paid yet
    /* istanbul ignore next */
    cov_102aggr03m().s[128]++;
    if (
    /* istanbul ignore next */
    (cov_102aggr03m().b[32][0]++, userStake) &&
    /* istanbul ignore next */
    (cov_102aggr03m().b[32][1]++, userWon) &&
    /* istanbul ignore next */
    (cov_102aggr03m().b[32][2]++, userStake.payoutStatus === 'pending')) {
      /* istanbul ignore next */
      cov_102aggr03m().b[31][0]++;
      cov_102aggr03m().s[129]++;
      // Update user balance
      await User_1.User.findByIdAndUpdate(userId, {
        $inc: {
          'coins.balance': winAmount,
          'coins.totalEarned': winAmount
        }
      });
      // Update stake record
      /* istanbul ignore next */
      cov_102aggr03m().s[130]++;
      userStake.result = 'won';
      /* istanbul ignore next */
      cov_102aggr03m().s[131]++;
      userStake.winAmount = winAmount;
      /* istanbul ignore next */
      cov_102aggr03m().s[132]++;
      userStake.payoutStatus = 'paid';
      /* istanbul ignore next */
      cov_102aggr03m().s[133]++;
      await userStake.save();
      // Create payout transaction
      /* istanbul ignore next */
      cov_102aggr03m().s[134]++;
      await Transaction_1.Transaction.create({
        userId,
        type: 'game_won',
        amount: winAmount,
        currency: 'coins',
        status: 'completed',
        description: `Won ${game.name}`,
        metadata: {
          gameId: game._id,
          gameCode: game.code,
          roundId,
          stakeAmount: userStake.stakeAmount,
          multiplier: gameResult?.multiplier
        }
      });
    } else {
      /* istanbul ignore next */
      cov_102aggr03m().b[31][1]++;
      cov_102aggr03m().s[135]++;
      if (
      /* istanbul ignore next */
      (cov_102aggr03m().b[34][0]++, userStake) &&
      /* istanbul ignore next */
      (cov_102aggr03m().b[34][1]++, !userWon) &&
      /* istanbul ignore next */
      (cov_102aggr03m().b[34][2]++, userStake.result === 'pending')) {
        /* istanbul ignore next */
        cov_102aggr03m().b[33][0]++;
        cov_102aggr03m().s[136]++;
        userStake.result = 'lost';
        /* istanbul ignore next */
        cov_102aggr03m().s[137]++;
        await userStake.save();
      } else
      /* istanbul ignore next */
      {
        cov_102aggr03m().b[33][1]++;
      }
    }
    // Update round status if needed
    /* istanbul ignore next */
    cov_102aggr03m().s[138]++;
    if (
    /* istanbul ignore next */
    (cov_102aggr03m().b[36][0]++, round.status === 'open') &&
    /* istanbul ignore next */
    (cov_102aggr03m().b[36][1]++, now >= round.endAt)) {
      /* istanbul ignore next */
      cov_102aggr03m().b[35][0]++;
      cov_102aggr03m().s[139]++;
      await GamesEngineService_1.gamesEngineService.settleRound(roundId);
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[35][1]++;
    }
    cov_102aggr03m().s[140]++;
    res.json({
      success: true,
      data: {
        roundId,
        gameResult,
        userStake: userStake ?
        /* istanbul ignore next */
        (cov_102aggr03m().b[37][0]++, {
          stakeAmount: userStake.stakeAmount,
          result: userStake.result,
          winAmount: userStake.winAmount,
          payoutStatus: userStake.payoutStatus
        }) :
        /* istanbul ignore next */
        (cov_102aggr03m().b[37][1]++, null),
        roundStats: {
          totalStake: round.totalStake,
          totalPlayers: await GameStake_1.GameStake.countDocuments({
            roundId
          }),
          houseTake: Math.floor(round.totalStake * 0.4) // 40% house edge
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_102aggr03m().s[141]++;
    logger_1.logger.error('Failed to get round result:', error);
    /* istanbul ignore next */
    cov_102aggr03m().s[142]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get round result'
    });
  }
});
/**
 * Get user's game history
 */
/* istanbul ignore next */
cov_102aggr03m().s[143]++;
router.get('/history', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_102aggr03m().f[6]++;
  cov_102aggr03m().s[144]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_102aggr03m().s[145]++, req.user?.userId);
    const {
      limit =
      /* istanbul ignore next */
      (cov_102aggr03m().b[38][0]++, 20),
      offset =
      /* istanbul ignore next */
      (cov_102aggr03m().b[39][0]++, 0)
    } =
    /* istanbul ignore next */
    (cov_102aggr03m().s[146]++, req.query);
    const stakes =
    /* istanbul ignore next */
    (cov_102aggr03m().s[147]++, await GameStake_1.GameStake.find({
      userId
    }).populate('gameId', 'name code category').sort({
      createdAt: -1
    }).limit(Number(limit)).skip(Number(offset)));
    const total =
    /* istanbul ignore next */
    (cov_102aggr03m().s[148]++, await GameStake_1.GameStake.countDocuments({
      userId
    }));
    // Calculate statistics
    const stats =
    /* istanbul ignore next */
    (cov_102aggr03m().s[149]++, await GameStake_1.GameStake.aggregate([{
      $match: {
        userId: new (require('mongoose').Types.ObjectId)(userId)
      }
    }, {
      $group: {
        _id: null,
        totalStaked: {
          $sum: '$stakeAmount'
        },
        totalWon: {
          $sum: '$winAmount'
        },
        gamesPlayed: {
          $sum: 1
        },
        gamesWon: {
          $sum: {
            $cond: [{
              $eq: ['$result', 'won']
            }, 1, 0]
          }
        }
      }
    }]));
    /* istanbul ignore next */
    cov_102aggr03m().s[150]++;
    res.json({
      success: true,
      data: {
        history: stakes,
        stats:
        /* istanbul ignore next */
        (cov_102aggr03m().b[40][0]++, stats[0]) ||
        /* istanbul ignore next */
        (cov_102aggr03m().b[40][1]++, {
          totalStaked: 0,
          totalWon: 0,
          gamesPlayed: 0,
          gamesWon: 0
        }),
        pagination: {
          total,
          limit: Number(limit),
          offset: Number(offset)
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_102aggr03m().s[151]++;
    logger_1.logger.error('Failed to get game history:', error);
    /* istanbul ignore next */
    cov_102aggr03m().s[152]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get game history'
    });
  }
});
/**
 * Get leaderboard for a specific game
 */
/* istanbul ignore next */
cov_102aggr03m().s[153]++;
router.get('/:gameCode/leaderboard', async (req, res) => {
  /* istanbul ignore next */
  cov_102aggr03m().f[7]++;
  cov_102aggr03m().s[154]++;
  try {
    const {
      gameCode
    } =
    /* istanbul ignore next */
    (cov_102aggr03m().s[155]++, req.params);
    const {
      period =
      /* istanbul ignore next */
      (cov_102aggr03m().b[41][0]++, 'daily')
    } =
    /* istanbul ignore next */
    (cov_102aggr03m().s[156]++, req.query);
    const game =
    /* istanbul ignore next */
    (cov_102aggr03m().s[157]++, await Game_1.Game.findOne({
      code: gameCode
    }));
    /* istanbul ignore next */
    cov_102aggr03m().s[158]++;
    if (!game) {
      /* istanbul ignore next */
      cov_102aggr03m().b[42][0]++;
      cov_102aggr03m().s[159]++;
      return res.status(404).json({
        success: false,
        error: 'Game not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_102aggr03m().b[42][1]++;
    }
    // Calculate date range
    let startDate =
    /* istanbul ignore next */
    (cov_102aggr03m().s[160]++, new Date());
    /* istanbul ignore next */
    cov_102aggr03m().s[161]++;
    switch (period) {
      case 'daily':
        /* istanbul ignore next */
        cov_102aggr03m().b[43][0]++;
        cov_102aggr03m().s[162]++;
        startDate.setHours(0, 0, 0, 0);
        /* istanbul ignore next */
        cov_102aggr03m().s[163]++;
        break;
      case 'weekly':
        /* istanbul ignore next */
        cov_102aggr03m().b[43][1]++;
        cov_102aggr03m().s[164]++;
        startDate.setDate(startDate.getDate() - 7);
        /* istanbul ignore next */
        cov_102aggr03m().s[165]++;
        break;
      case 'monthly':
        /* istanbul ignore next */
        cov_102aggr03m().b[43][2]++;
        cov_102aggr03m().s[166]++;
        startDate.setMonth(startDate.getMonth() - 1);
        /* istanbul ignore next */
        cov_102aggr03m().s[167]++;
        break;
      case 'all-time':
        /* istanbul ignore next */
        cov_102aggr03m().b[43][3]++;
        cov_102aggr03m().s[168]++;
        startDate = new Date(0);
        /* istanbul ignore next */
        cov_102aggr03m().s[169]++;
        break;
    }
    const leaderboard =
    /* istanbul ignore next */
    (cov_102aggr03m().s[170]++, await GameStake_1.GameStake.aggregate([{
      $match: {
        gameId: game._id,
        createdAt: {
          $gte: startDate
        },
        result: 'won'
      }
    }, {
      $group: {
        _id: '$userId',
        totalWinnings: {
          $sum: '$winAmount'
        },
        gamesWon: {
          $sum: 1
        },
        biggestWin: {
          $max: '$winAmount'
        }
      }
    }, {
      $sort: {
        totalWinnings: -1
      }
    }, {
      $limit: 100
    }, {
      $lookup: {
        from: 'users',
        localField: '_id',
        foreignField: '_id',
        as: 'user'
      }
    }, {
      $unwind: '$user'
    }, {
      $project: {
        userId: '$_id',
        username: '$user.username',
        avatar: '$user.profilePicture',
        totalWinnings: 1,
        gamesWon: 1,
        biggestWin: 1
      }
    }]));
    /* istanbul ignore next */
    cov_102aggr03m().s[171]++;
    res.json({
      success: true,
      data: {
        gameCode,
        period,
        leaderboard
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_102aggr03m().s[172]++;
    logger_1.logger.error('Failed to get leaderboard:', error);
    /* istanbul ignore next */
    cov_102aggr03m().s[173]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get leaderboard'
    });
  }
});
/* istanbul ignore next */
cov_102aggr03m().s[174]++;
exports.default = router;