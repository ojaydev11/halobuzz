16518008723303572d3284f25855fe20
"use strict";

/* istanbul ignore next */
function cov_c2f4kt1ts() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\reels.ts";
  var hash = "9cf80a31502360b69493ab58e5899bd41c6476da";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\reels.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 40
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 68
        }
      },
      "8": {
        start: {
          line: 11,
          column: 26
        },
        end: {
          line: 11,
          column: 64
        }
      },
      "9": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "10": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 44
        }
      },
      "11": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 57
        }
      },
      "12": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 52
        }
      },
      "13": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "14": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 90,
          column: 3
        }
      },
      "15": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "16": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 69
        }
      },
      "17": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "18": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 40,
          column: 15
        }
      },
      "19": {
        start: {
          line: 42,
          column: 49
        },
        end: {
          line: 42,
          column: 57
        }
      },
      "20": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "21": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "22": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "23": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 51,
          column: 55
        }
      },
      "24": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "25": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "26": {
        start: {
          line: 59,
          column: 37
        },
        end: {
          line: 59,
          column: 126
        }
      },
      "27": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "28": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "29": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 67,
          column: 97
        }
      },
      "30": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 57
        }
      },
      "31": {
        start: {
          line: 70,
          column: 29
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "32": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "33": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 71
        }
      },
      "34": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "35": {
        start: {
          line: 92,
          column: 0
        },
        end: {
          line: 210,
          column: 3
        }
      },
      "36": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "37": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 69
        }
      },
      "38": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "39": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 130,
          column: 15
        }
      },
      "40": {
        start: {
          line: 132,
          column: 96
        },
        end: {
          line: 132,
          column: 104
        }
      },
      "41": {
        start: {
          line: 133,
          column: 23
        },
        end: {
          line: 133,
          column: 39
        }
      },
      "42": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "43": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "44": {
        start: {
          line: 141,
          column: 21
        },
        end: {
          line: 141,
          column: 55
        }
      },
      "45": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "46": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 146,
          column: 15
        }
      },
      "47": {
        start: {
          line: 149,
          column: 27
        },
        end: {
          line: 149,
          column: 74
        }
      },
      "48": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "49": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 154,
          column: 15
        }
      },
      "50": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 157,
          column: 92
        }
      },
      "51": {
        start: {
          line: 159,
          column: 21
        },
        end: {
          line: 173,
          column: 10
        }
      },
      "52": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 26
        }
      },
      "53": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 181,
          column: 11
        }
      },
      "54": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "55": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 201,
          column: 11
        }
      },
      "56": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 60
        }
      },
      "57": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "58": {
        start: {
          line: 212,
          column: 0
        },
        end: {
          line: 265,
          column: 3
        }
      },
      "59": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 264,
          column: 5
        }
      },
      "60": {
        start: {
          line: 214,
          column: 73
        },
        end: {
          line: 214,
          column: 82
        }
      },
      "61": {
        start: {
          line: 216,
          column: 23
        },
        end: {
          line: 216,
          column: 41
        }
      },
      "62": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 218,
          column: 39
        }
      },
      "63": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 39
        }
      },
      "64": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 220,
          column: 41
        }
      },
      "65": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 41
        }
      },
      "66": {
        start: {
          line: 222,
          column: 22
        },
        end: {
          line: 226,
          column: 58
        }
      },
      "67": {
        start: {
          line: 227,
          column: 22
        },
        end: {
          line: 227,
          column: 62
        }
      },
      "68": {
        start: {
          line: 229,
          column: 30
        },
        end: {
          line: 244,
          column: 11
        }
      },
      "69": {
        start: {
          line: 230,
          column: 28
        },
        end: {
          line: 230,
          column: 101
        }
      },
      "70": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 243,
          column: 14
        }
      },
      "71": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 256,
          column: 11
        }
      },
      "72": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 58
        }
      },
      "73": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 263,
          column: 11
        }
      },
      "74": {
        start: {
          line: 267,
          column: 0
        },
        end: {
          line: 309,
          column: 3
        }
      },
      "75": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 308,
          column: 5
        }
      },
      "76": {
        start: {
          line: 269,
          column: 31
        },
        end: {
          line: 269,
          column: 40
        }
      },
      "77": {
        start: {
          line: 271,
          column: 30
        },
        end: {
          line: 277,
          column: 58
        }
      },
      "78": {
        start: {
          line: 279,
          column: 30
        },
        end: {
          line: 294,
          column: 11
        }
      },
      "79": {
        start: {
          line: 280,
          column: 28
        },
        end: {
          line: 280,
          column: 101
        }
      },
      "80": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 293,
          column: 14
        }
      },
      "81": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 300,
          column: 11
        }
      },
      "82": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 67
        }
      },
      "83": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 307,
          column: 11
        }
      },
      "84": {
        start: {
          line: 311,
          column: 0
        },
        end: {
          line: 353,
          column: 3
        }
      },
      "85": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 352,
          column: 5
        }
      },
      "86": {
        start: {
          line: 313,
          column: 23
        },
        end: {
          line: 313,
          column: 33
        }
      },
      "87": {
        start: {
          line: 314,
          column: 21
        },
        end: {
          line: 315,
          column: 58
        }
      },
      "88": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 321,
          column: 9
        }
      },
      "89": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 320,
          column: 15
        }
      },
      "90": {
        start: {
          line: 323,
          column: 24
        },
        end: {
          line: 323,
          column: 97
        }
      },
      "91": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 35
        }
      },
      "92": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 344,
          column: 11
        }
      },
      "93": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 57
        }
      },
      "94": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 351,
          column: 11
        }
      },
      "95": {
        start: {
          line: 355,
          column: 0
        },
        end: {
          line: 407,
          column: 3
        }
      },
      "96": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 406,
          column: 5
        }
      },
      "97": {
        start: {
          line: 357,
          column: 27
        },
        end: {
          line: 357,
          column: 37
        }
      },
      "98": {
        start: {
          line: 358,
          column: 41
        },
        end: {
          line: 358,
          column: 50
        }
      },
      "99": {
        start: {
          line: 360,
          column: 21
        },
        end: {
          line: 360,
          column: 55
        }
      },
      "100": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "101": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 365,
          column: 15
        }
      },
      "102": {
        start: {
          line: 368,
          column: 22
        },
        end: {
          line: 371,
          column: 57
        }
      },
      "103": {
        start: {
          line: 372,
          column: 22
        },
        end: {
          line: 372,
          column: 66
        }
      },
      "104": {
        start: {
          line: 374,
          column: 30
        },
        end: {
          line: 386,
          column: 11
        }
      },
      "105": {
        start: {
          line: 375,
          column: 28
        },
        end: {
          line: 375,
          column: 101
        }
      },
      "106": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 385,
          column: 14
        }
      },
      "107": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 398,
          column: 11
        }
      },
      "108": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 401,
          column: 63
        }
      },
      "109": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 405,
          column: 11
        }
      },
      "110": {
        start: {
          line: 408,
          column: 0
        },
        end: {
          line: 408,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 3
          },
          end: {
            line: 33,
            column: 4
          }
        },
        loc: {
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 123,
            column: 3
          },
          end: {
            line: 123,
            column: 4
          }
        },
        loc: {
          start: {
            line: 123,
            column: 23
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 123
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 212,
            column: 16
          },
          end: {
            line: 212,
            column: 17
          }
        },
        loc: {
          start: {
            line: 212,
            column: 36
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 212
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 229,
            column: 58
          },
          end: {
            line: 229,
            column: 59
          }
        },
        loc: {
          start: {
            line: 229,
            column: 74
          },
          end: {
            line: 244,
            column: 9
          }
        },
        line: 229
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 267,
            column: 24
          },
          end: {
            line: 267,
            column: 25
          }
        },
        loc: {
          start: {
            line: 267,
            column: 44
          },
          end: {
            line: 309,
            column: 1
          }
        },
        line: 267
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 279,
            column: 66
          },
          end: {
            line: 279,
            column: 67
          }
        },
        loc: {
          start: {
            line: 279,
            column: 82
          },
          end: {
            line: 294,
            column: 9
          }
        },
        line: 279
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 311,
            column: 19
          },
          end: {
            line: 311,
            column: 20
          }
        },
        loc: {
          start: {
            line: 311,
            column: 39
          },
          end: {
            line: 353,
            column: 1
          }
        },
        line: 311
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 355,
            column: 28
          },
          end: {
            line: 355,
            column: 29
          }
        },
        loc: {
          start: {
            line: 355,
            column: 48
          },
          end: {
            line: 407,
            column: 1
          }
        },
        line: 355
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 374,
            column: 58
          },
          end: {
            line: 374,
            column: 59
          }
        },
        loc: {
          start: {
            line: 374,
            column: 74
          },
          end: {
            line: 386,
            column: 9
          }
        },
        line: 374
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "8": {
        loc: {
          start: {
            line: 132,
            column: 45
          },
          end: {
            line: 132,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 132,
            column: 52
          },
          end: {
            line: 132,
            column: 54
          }
        }],
        line: 132
      },
      "9": {
        loc: {
          start: {
            line: 132,
            column: 56
          },
          end: {
            line: 132,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 132,
            column: 67
          },
          end: {
            line: 132,
            column: 74
          }
        }],
        line: 132
      },
      "10": {
        loc: {
          start: {
            line: 132,
            column: 76
          },
          end: {
            line: 132,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 132,
            column: 87
          },
          end: {
            line: 132,
            column: 91
          }
        }],
        line: 132
      },
      "11": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "12": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "13": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "14": {
        loc: {
          start: {
            line: 214,
            column: 16
          },
          end: {
            line: 214,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 214,
            column: 23
          },
          end: {
            line: 214,
            column: 24
          }
        }],
        line: 214
      },
      "15": {
        loc: {
          start: {
            line: 214,
            column: 26
          },
          end: {
            line: 214,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 214,
            column: 34
          },
          end: {
            line: 214,
            column: 36
          }
        }],
        line: 214
      },
      "16": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 218,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 218,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "17": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 220,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 220,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "18": {
        loc: {
          start: {
            line: 269,
            column: 16
          },
          end: {
            line: 269,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 269,
            column: 24
          },
          end: {
            line: 269,
            column: 26
          }
        }],
        line: 269
      },
      "19": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "20": {
        loc: {
          start: {
            line: 358,
            column: 16
          },
          end: {
            line: 358,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 358,
            column: 23
          },
          end: {
            line: 358,
            column: 24
          }
        }],
        line: 358
      },
      "21": {
        loc: {
          start: {
            line: 358,
            column: 26
          },
          end: {
            line: 358,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 358,
            column: 34
          },
          end: {
            line: 358,
            column: 36
          }
        }],
        line: 358
      },
      "22": {
        loc: {
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0],
      "21": [0],
      "22": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9cf80a31502360b69493ab58e5899bd41c6476da"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_c2f4kt1ts = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_c2f4kt1ts();
var __importDefault =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[0]++,
/* istanbul ignore next */
(cov_c2f4kt1ts().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_c2f4kt1ts().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_c2f4kt1ts().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_c2f4kt1ts().f[0]++;
  cov_c2f4kt1ts().s[1]++;
  return /* istanbul ignore next */(cov_c2f4kt1ts().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_c2f4kt1ts().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_c2f4kt1ts().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_c2f4kt1ts().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_c2f4kt1ts().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[4]++, require("express-validator"));
const User_1 =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[5]++, require("../models/User"));
const Reel_1 =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[6]++, require("../models/Reel"));
const ReputationService_1 =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[7]++, require("../services/ReputationService"));
const ModerationQueue_1 =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[8]++, require("../services/ModerationQueue"));
const s3Service_1 =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[9]++, require("../services/s3Service"));
const logger_1 =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[10]++, require("../config/logger"));
const fileValidator_1 =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[11]++, require("../utils/fileValidator"));
const security_1 =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[12]++, require("../middleware/security"));
const router =
/* istanbul ignore next */
(cov_c2f4kt1ts().s[13]++, express_1.default.Router());
// Get presigned URL for reel upload
/* istanbul ignore next */
cov_c2f4kt1ts().s[14]++;
router.post('/upload/presign', [security_1.uploadLimiter, (0, express_validator_1.body)('fileName').isString().trim().isLength({
  min: 1,
  max: 255
}).withMessage('Valid file name is required'), (0, express_validator_1.body)('fileType').isString().trim().matches(/^video\/(mp4|mov|avi|mkv|webm|quicktime)$/).withMessage('Valid video file type is required'), (0, express_validator_1.body)('fileSize').isInt({
  min: 1024,
  max: 100 * 1024 * 1024
}) // 1KB to 100MB
.withMessage('File size must be between 1KB and 100MB')], async (req, res) => {
  /* istanbul ignore next */
  cov_c2f4kt1ts().f[1]++;
  cov_c2f4kt1ts().s[15]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[16]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[17]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[3][0]++;
      cov_c2f4kt1ts().s[18]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[3][1]++;
    }
    const {
      fileName,
      fileType,
      fileSize
    } =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[19]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[20]++, req.user?.userId);
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[21]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[4][0]++;
      cov_c2f4kt1ts().s[22]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[4][1]++;
    }
    // Validate user
    const user =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[23]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[24]++;
    if (!user) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[5][0]++;
      cov_c2f4kt1ts().s[25]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[5][1]++;
    }
    // Validate file metadata
    const fileValidationResult =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[26]++, fileValidator_1.FileValidator.validateFileMetadata(fileName, fileType, fileSize, 'video'));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[27]++;
    if (!fileValidationResult.isValid) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[6][0]++;
      cov_c2f4kt1ts().s[28]++;
      return res.status(400).json({
        success: false,
        error: fileValidationResult.error
      });
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[6][1]++;
    }
    // Generate safe filename
    const safeFileName =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[29]++, fileValidator_1.FileValidator.generateSafeFilename(fileName, userId));
    const fileKey =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[30]++, `reels/${userId}/${safeFileName}`);
    // Create presigned URL for upload using S3 service
    const presignedUrl =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[31]++, await s3Service_1.s3Service.generatePresignedUploadUrl(fileKey, fileType, {
      userId: userId,
      originalName: fileName
    }));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[32]++;
    res.json({
      success: true,
      data: {
        uploadUrl: presignedUrl,
        fileKey,
        expiresIn: 3600
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[33]++;
    logger_1.logger.error('Generate presigned URL failed:', error);
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[34]++;
    res.status(500).json({
      success: false,
      error: 'Failed to generate upload URL'
    });
  }
});
// Create reel after upload
/* istanbul ignore next */
cov_c2f4kt1ts().s[35]++;
router.post('/', [(0, express_validator_1.body)('fileKey').isString().trim().isLength({
  min: 1
}).withMessage('Valid file key is required'), (0, express_validator_1.body)('title').isString().trim().isLength({
  min: 1,
  max: 100
}).withMessage('Title must be 1-100 characters'), (0, express_validator_1.body)('description').optional().isString().trim().isLength({
  max: 500
}).withMessage('Description must be less than 500 characters'), (0, express_validator_1.body)('tags').optional().isArray().withMessage('Tags must be an array'), (0, express_validator_1.body)('category').optional().isString().trim().isLength({
  min: 1,
  max: 50
}).withMessage('Valid category is required'), (0, express_validator_1.body)('isPublic').optional().isBoolean().withMessage('isPublic must be a boolean')], async (req, res) => {
  /* istanbul ignore next */
  cov_c2f4kt1ts().f[2]++;
  cov_c2f4kt1ts().s[36]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[37]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[38]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[7][0]++;
      cov_c2f4kt1ts().s[39]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[7][1]++;
    }
    const {
      fileKey,
      title,
      description,
      tags =
      /* istanbul ignore next */
      (cov_c2f4kt1ts().b[8][0]++, []),
      category =
      /* istanbul ignore next */
      (cov_c2f4kt1ts().b[9][0]++, 'other'),
      isPublic =
      /* istanbul ignore next */
      (cov_c2f4kt1ts().b[10][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[40]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[41]++, req.user?.userId);
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[42]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[11][0]++;
      cov_c2f4kt1ts().s[43]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[11][1]++;
    }
    // Validate user
    const user =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[44]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[45]++;
    if (!user) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[12][0]++;
      cov_c2f4kt1ts().s[46]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[12][1]++;
    }
    // Verify file exists in S3
    const fileExists =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[47]++, await s3Service_1.s3Service.fileExists(fileKey));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[48]++;
    if (!fileExists) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[13][0]++;
      cov_c2f4kt1ts().s[49]++;
      return res.status(400).json({
        success: false,
        error: 'File not found in storage'
      });
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[13][1]++;
    }
    // Generate presigned URL for viewing
    const viewUrl =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[50]++, await s3Service_1.s3Service.generatePresignedViewUrl(fileKey, 86400)); // 24 hours
    // Create reel record
    const reel =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[51]++, new Reel_1.Reel({
      userId,
      username: user.username,
      avatar: user.avatar,
      fileKey,
      title,
      description,
      tags,
      category,
      isPublic,
      metadata: {
        originalFileKey: fileKey,
        viewUrl: viewUrl
      }
    }));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[52]++;
    await reel.save();
    // Add to moderation queue for content review
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[53]++;
    await ModerationQueue_1.moderationQueue.addContentForReview({
      contentType: 'reel',
      contentId: reel._id.toString(),
      userId,
      content: JSON.stringify({
        title,
        description,
        tags
      })
    });
    // Award reputation points for content creation
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[54]++;
    await ReputationService_1.reputationService.awardPoints(userId, 'content_creation', {
      contentType: 'reel',
      contentId: reel._id.toString()
    });
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[55]++;
    res.status(201).json({
      success: true,
      message: 'Reel created successfully',
      data: {
        reel: {
          id: reel._id,
          title: reel.title,
          description: reel.description,
          category: reel.category,
          tags: reel.tags,
          viewUrl,
          createdAt: reel.createdAt
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[56]++;
    logger_1.logger.error('Create reel failed:', error);
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[57]++;
    res.status(500).json({
      success: false,
      error: 'Failed to create reel'
    });
  }
});
// Get reels list
/* istanbul ignore next */
cov_c2f4kt1ts().s[58]++;
router.get('/', async (req, res) => {
  /* istanbul ignore next */
  cov_c2f4kt1ts().f[3]++;
  cov_c2f4kt1ts().s[59]++;
  try {
    const {
      page =
      /* istanbul ignore next */
      (cov_c2f4kt1ts().b[14][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_c2f4kt1ts().b[15][0]++, 20),
      category,
      userId: filterUserId
    } =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[60]++, req.query);
    // Build filter
    const filter =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[61]++, {
      isPublic: true
    });
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[62]++;
    if (category) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[16][0]++;
      cov_c2f4kt1ts().s[63]++;
      filter.category = category;
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[16][1]++;
    }
    cov_c2f4kt1ts().s[64]++;
    if (filterUserId) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[17][0]++;
      cov_c2f4kt1ts().s[65]++;
      filter.userId = filterUserId;
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[17][1]++;
    }
    // Get reels with pagination
    const reels =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[66]++, await Reel_1.Reel.find(filter).sort({
      createdAt: -1
    }).limit(parseInt(limit) * 1).skip((parseInt(page) - 1) * parseInt(limit)).populate('userId', 'username avatar ogLevel'));
    const total =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[67]++, await Reel_1.Reel.countDocuments(filter));
    // Generate fresh view URLs for each reel
    const reelsWithUrls =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[68]++, await Promise.all(reels.map(async reel => {
      /* istanbul ignore next */
      cov_c2f4kt1ts().f[4]++;
      const viewUrl =
      /* istanbul ignore next */
      (cov_c2f4kt1ts().s[69]++, await s3Service_1.s3Service.generatePresignedViewUrl(reel.fileKey, 86400));
      /* istanbul ignore next */
      cov_c2f4kt1ts().s[70]++;
      return {
        id: reel._id,
        userId: reel.userId,
        username: reel.username,
        avatar: reel.avatar,
        title: reel.title,
        description: reel.description,
        category: reel.category,
        tags: reel.tags,
        viewUrl,
        metadata: reel.metadata,
        createdAt: reel.createdAt
      };
    })));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[71]++;
    res.json({
      success: true,
      data: {
        reels: reelsWithUrls,
        pagination: {
          page: parseInt(page),
          limit: parseInt(limit),
          total,
          pages: Math.ceil(total / parseInt(limit))
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[72]++;
    logger_1.logger.error('Get reels failed:', error);
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[73]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get reels'
    });
  }
});
// Get trending reels
/* istanbul ignore next */
cov_c2f4kt1ts().s[74]++;
router.get('/trending', async (req, res) => {
  /* istanbul ignore next */
  cov_c2f4kt1ts().f[5]++;
  cov_c2f4kt1ts().s[75]++;
  try {
    const {
      limit =
      /* istanbul ignore next */
      (cov_c2f4kt1ts().b[18][0]++, 10)
    } =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[76]++, req.query);
    // Get trending reels based on views and recent activity
    const trendingReels =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[77]++, await Reel_1.Reel.find({
      isPublic: true
    }).sort({
      viewCount: -1,
      createdAt: -1
    }).limit(parseInt(limit) * 1).populate('userId', 'username avatar ogLevel'));
    // Generate fresh view URLs
    const reelsWithUrls =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[78]++, await Promise.all(trendingReels.map(async reel => {
      /* istanbul ignore next */
      cov_c2f4kt1ts().f[6]++;
      const viewUrl =
      /* istanbul ignore next */
      (cov_c2f4kt1ts().s[79]++, await s3Service_1.s3Service.generatePresignedViewUrl(reel.fileKey, 86400));
      /* istanbul ignore next */
      cov_c2f4kt1ts().s[80]++;
      return {
        id: reel._id,
        userId: reel.userId,
        username: reel.username,
        avatar: reel.avatar,
        title: reel.title,
        description: reel.description,
        category: reel.category,
        tags: reel.tags,
        viewUrl,
        viewCount: reel.metadata.views,
        createdAt: reel.createdAt
      };
    })));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[81]++;
    res.json({
      success: true,
      data: {
        reels: reelsWithUrls
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[82]++;
    logger_1.logger.error('Get trending reels failed:', error);
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[83]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get trending reels'
    });
  }
});
// Get reel by ID
/* istanbul ignore next */
cov_c2f4kt1ts().s[84]++;
router.get('/:id', async (req, res) => {
  /* istanbul ignore next */
  cov_c2f4kt1ts().f[7]++;
  cov_c2f4kt1ts().s[85]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[86]++, req.params);
    const reel =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[87]++, await Reel_1.Reel.findById(id).populate('userId', 'username avatar ogLevel'));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[88]++;
    if (!reel) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[19][0]++;
      cov_c2f4kt1ts().s[89]++;
      return res.status(404).json({
        success: false,
        error: 'Reel not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[19][1]++;
    }
    // Generate fresh view URL
    const viewUrl =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[90]++, await s3Service_1.s3Service.generatePresignedViewUrl(reel.fileKey, 86400));
    // Increment view count
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[91]++;
    await reel.incrementView();
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[92]++;
    res.json({
      success: true,
      data: {
        reel: {
          id: reel._id,
          userId: reel.userId,
          username: reel.username,
          avatar: reel.avatar,
          title: reel.title,
          description: reel.description,
          category: reel.category,
          tags: reel.tags,
          viewUrl,
          viewCount: reel.metadata.views,
          metadata: reel.metadata,
          createdAt: reel.createdAt
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[93]++;
    logger_1.logger.error('Get reel failed:', error);
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[94]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get reel'
    });
  }
});
// Get user's reels
/* istanbul ignore next */
cov_c2f4kt1ts().s[95]++;
router.get('/user/:userId', async (req, res) => {
  /* istanbul ignore next */
  cov_c2f4kt1ts().f[8]++;
  cov_c2f4kt1ts().s[96]++;
  try {
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[97]++, req.params);
    const {
      page =
      /* istanbul ignore next */
      (cov_c2f4kt1ts().b[20][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_c2f4kt1ts().b[21][0]++, 20)
    } =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[98]++, req.query);
    // Check if user exists
    const user =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[99]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[100]++;
    if (!user) {
      /* istanbul ignore next */
      cov_c2f4kt1ts().b[22][0]++;
      cov_c2f4kt1ts().s[101]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_c2f4kt1ts().b[22][1]++;
    }
    // Get user's reels
    const reels =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[102]++, await Reel_1.Reel.find({
      userId
    }).sort({
      createdAt: -1
    }).limit(parseInt(limit) * 1).skip((parseInt(page) - 1) * parseInt(limit)));
    const total =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[103]++, await Reel_1.Reel.countDocuments({
      userId
    }));
    // Generate fresh view URLs
    const reelsWithUrls =
    /* istanbul ignore next */
    (cov_c2f4kt1ts().s[104]++, await Promise.all(reels.map(async reel => {
      /* istanbul ignore next */
      cov_c2f4kt1ts().f[9]++;
      const viewUrl =
      /* istanbul ignore next */
      (cov_c2f4kt1ts().s[105]++, await s3Service_1.s3Service.generatePresignedViewUrl(reel.fileKey, 86400));
      /* istanbul ignore next */
      cov_c2f4kt1ts().s[106]++;
      return {
        id: reel._id,
        title: reel.title,
        description: reel.description,
        category: reel.category,
        tags: reel.tags,
        viewUrl,
        viewCount: reel.metadata.views,
        createdAt: reel.createdAt
      };
    })));
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[107]++;
    res.json({
      success: true,
      data: {
        reels: reelsWithUrls,
        pagination: {
          page: parseInt(page),
          limit: parseInt(limit),
          total,
          pages: Math.ceil(total / parseInt(limit))
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[108]++;
    logger_1.logger.error('Get user reels failed:', error);
    /* istanbul ignore next */
    cov_c2f4kt1ts().s[109]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get user reels'
    });
  }
});
/* istanbul ignore next */
cov_c2f4kt1ts().s[110]++;
exports.default = router;