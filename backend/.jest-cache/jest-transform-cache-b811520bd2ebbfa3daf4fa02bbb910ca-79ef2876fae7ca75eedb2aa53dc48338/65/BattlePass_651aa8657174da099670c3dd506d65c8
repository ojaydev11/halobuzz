d19f660d8ea24a63da919967b54c096d
"use strict";

/* istanbul ignore next */
function cov_1644ndcjzo() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\models\\BattlePass.ts";
  var hash = "e8bb9ffb5162b962251a34f07d0e4ded5d53b31f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\models\\BattlePass.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 55
        }
      },
      "37": {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 37,
          column: 52
        }
      },
      "38": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 150,
          column: 2
        }
      },
      "39": {
        start: {
          line: 152,
          column: 0
        },
        end: {
          line: 152,
          column: 58
        }
      },
      "40": {
        start: {
          line: 153,
          column: 0
        },
        end: {
          line: 153,
          column: 63
        }
      },
      "41": {
        start: {
          line: 155,
          column: 0
        },
        end: {
          line: 163,
          column: 3
        }
      },
      "42": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 138
        }
      },
      "43": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "44": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 95
        }
      },
      "45": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 11
        }
      },
      "46": {
        start: {
          line: 165,
          column: 0
        },
        end: {
          line: 182,
          column: 2
        }
      },
      "47": {
        start: {
          line: 166,
          column: 13
        },
        end: {
          line: 166,
          column: 41
        }
      },
      "48": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "49": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 37
        }
      },
      "50": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "51": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 42
        }
      },
      "52": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 77
        }
      },
      "53": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "54": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 39
        }
      },
      "55": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 14
        }
      },
      "56": {
        start: {
          line: 184,
          column: 0
        },
        end: {
          line: 191,
          column: 2
        }
      },
      "57": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "58": {
        start: {
          line: 185,
          column: 17
        },
        end: {
          line: 185,
          column: 38
        }
      },
      "59": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "60": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 39
        }
      },
      "61": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "62": {
        start: {
          line: 193,
          column: 0
        },
        end: {
          line: 199,
          column: 2
        }
      },
      "63": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 198,
          column: 7
        }
      },
      "64": {
        start: {
          line: 200,
          column: 0
        },
        end: {
          line: 200,
          column: 78
        }
      },
      "65": {
        start: {
          line: 201,
          column: 31
        },
        end: {
          line: 267,
          column: 2
        }
      },
      "66": {
        start: {
          line: 269,
          column: 0
        },
        end: {
          line: 269,
          column: 75
        }
      },
      "67": {
        start: {
          line: 270,
          column: 0
        },
        end: {
          line: 270,
          column: 64
        }
      },
      "68": {
        start: {
          line: 272,
          column: 0
        },
        end: {
          line: 294,
          column: 2
        }
      },
      "69": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 29
        }
      },
      "70": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 274,
          column: 41
        }
      },
      "71": {
        start: {
          line: 276,
          column: 21
        },
        end: {
          line: 276,
          column: 58
        }
      },
      "72": {
        start: {
          line: 277,
          column: 25
        },
        end: {
          line: 277,
          column: 53
        }
      },
      "73": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 290,
          column: 5
        }
      },
      "74": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 37
        }
      },
      "75": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "76": {
        start: {
          line: 282,
          column: 29
        },
        end: {
          line: 282,
          column: 81
        }
      },
      "77": {
        start: {
          line: 282,
          column: 56
        },
        end: {
          line: 282,
          column: 80
        }
      },
      "78": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "79": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 72
        }
      },
      "80": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 35
        }
      },
      "81": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 291,
          column: 41
        }
      },
      "82": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 292,
          column: 22
        }
      },
      "83": {
        start: {
          line: 293,
          column: 4
        },
        end: {
          line: 293,
          column: 24
        }
      },
      "84": {
        start: {
          line: 296,
          column: 0
        },
        end: {
          line: 316,
          column: 2
        }
      },
      "85": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "86": {
        start: {
          line: 298,
          column: 38
        },
        end: {
          line: 298,
          column: 86
        }
      },
      "87": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 21
        }
      },
      "88": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 304,
          column: 5
        }
      },
      "89": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 21
        }
      },
      "90": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 308,
          column: 5
        }
      },
      "91": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 21
        }
      },
      "92": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 314,
          column: 7
        }
      },
      "93": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 315,
          column: 16
        }
      },
      "94": {
        start: {
          line: 318,
          column: 0
        },
        end: {
          line: 326,
          column: 2
        }
      },
      "95": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 319,
          column: 27
        }
      },
      "96": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 323,
          column: 5
        }
      },
      "97": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 35
        }
      },
      "98": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 66
        }
      },
      "99": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 324,
          column: 34
        }
      },
      "100": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 325,
          column: 31
        }
      },
      "101": {
        start: {
          line: 327,
          column: 0
        },
        end: {
          line: 327,
          column: 96
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 155,
            column: 29
          },
          end: {
            line: 155,
            column: 30
          }
        },
        loc: {
          start: {
            line: 155,
            column: 45
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 155
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 165,
            column: 44
          },
          end: {
            line: 165,
            column: 45
          }
        },
        loc: {
          start: {
            line: 165,
            column: 103
          },
          end: {
            line: 182,
            column: 1
          }
        },
        line: 165
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 184,
            column: 40
          },
          end: {
            line: 184,
            column: 41
          }
        },
        loc: {
          start: {
            line: 184,
            column: 59
          },
          end: {
            line: 191,
            column: 1
          }
        },
        line: 184
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 193,
            column: 37
          },
          end: {
            line: 193,
            column: 38
          }
        },
        loc: {
          start: {
            line: 193,
            column: 49
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 193
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 272,
            column: 39
          },
          end: {
            line: 272,
            column: 40
          }
        },
        loc: {
          start: {
            line: 272,
            column: 77
          },
          end: {
            line: 294,
            column: 1
          }
        },
        line: 272
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 282,
            column: 51
          },
          end: {
            line: 282,
            column: 52
          }
        },
        loc: {
          start: {
            line: 282,
            column: 56
          },
          end: {
            line: 282,
            column: 80
          }
        },
        line: 282
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 296,
            column: 45
          },
          end: {
            line: 296,
            column: 46
          }
        },
        loc: {
          start: {
            line: 296,
            column: 74
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 296
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 298,
            column: 33
          },
          end: {
            line: 298,
            column: 34
          }
        },
        loc: {
          start: {
            line: 298,
            column: 38
          },
          end: {
            line: 298,
            column: 86
          }
        },
        line: 298
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 318,
            column: 49
          },
          end: {
            line: 318,
            column: 50
          }
        },
        loc: {
          start: {
            line: 318,
            column: 71
          },
          end: {
            line: 326,
            column: 1
          }
        },
        line: 318
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "18": {
        loc: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "19": {
        loc: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "20": {
        loc: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "21": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "22": {
        loc: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "23": {
        loc: {
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: 287,
            column: 13
          },
          end: {
            line: 289,
            column: 9
          }
        }],
        line: 281
      },
      "24": {
        loc: {
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "25": {
        loc: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "26": {
        loc: {
          start: {
            line: 298,
            column: 38
          },
          end: {
            line: 298,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 38
          },
          end: {
            line: 298,
            column: 55
          }
        }, {
          start: {
            line: 298,
            column: 59
          },
          end: {
            line: 298,
            column: 86
          }
        }],
        line: 298
      },
      "27": {
        loc: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "28": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 302,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 302,
            column: 32
          }
        }, {
          start: {
            line: 302,
            column: 36
          },
          end: {
            line: 302,
            column: 52
          }
        }],
        line: 302
      },
      "29": {
        loc: {
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "30": {
        loc: {
          start: {
            line: 320,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e8bb9ffb5162b962251a34f07d0e4ded5d53b31f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1644ndcjzo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1644ndcjzo();
var __createBinding =
/* istanbul ignore next */
(cov_1644ndcjzo().s[0]++,
/* istanbul ignore next */
(cov_1644ndcjzo().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1644ndcjzo().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1644ndcjzo().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1644ndcjzo().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[0]++;
  cov_1644ndcjzo().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[2][0]++;
    cov_1644ndcjzo().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1644ndcjzo().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1644ndcjzo().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1644ndcjzo().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1644ndcjzo().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1644ndcjzo().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1644ndcjzo().b[5][1]++,
  /* istanbul ignore next */
  (cov_1644ndcjzo().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1644ndcjzo().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[3][0]++;
    cov_1644ndcjzo().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1644ndcjzo().f[1]++;
        cov_1644ndcjzo().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[3][1]++;
  }
  cov_1644ndcjzo().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1644ndcjzo().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[2]++;
  cov_1644ndcjzo().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[7][0]++;
    cov_1644ndcjzo().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[7][1]++;
  }
  cov_1644ndcjzo().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1644ndcjzo().s[11]++,
/* istanbul ignore next */
(cov_1644ndcjzo().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1644ndcjzo().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1644ndcjzo().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1644ndcjzo().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[3]++;
  cov_1644ndcjzo().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1644ndcjzo().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[4]++;
  cov_1644ndcjzo().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1644ndcjzo().s[14]++,
/* istanbul ignore next */
(cov_1644ndcjzo().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1644ndcjzo().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1644ndcjzo().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[5]++;
  cov_1644ndcjzo().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1644ndcjzo().f[6]++;
    cov_1644ndcjzo().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1644ndcjzo().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1644ndcjzo().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1644ndcjzo().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1644ndcjzo().s[17]++, []);
      /* istanbul ignore next */
      cov_1644ndcjzo().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1644ndcjzo().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1644ndcjzo().b[12][0]++;
          cov_1644ndcjzo().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1644ndcjzo().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1644ndcjzo().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1644ndcjzo().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1644ndcjzo().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1644ndcjzo().f[8]++;
    cov_1644ndcjzo().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1644ndcjzo().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1644ndcjzo().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1644ndcjzo().b[13][0]++;
      cov_1644ndcjzo().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1644ndcjzo().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1644ndcjzo().s[26]++, {});
    /* istanbul ignore next */
    cov_1644ndcjzo().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1644ndcjzo().b[15][0]++;
      cov_1644ndcjzo().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1644ndcjzo().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1644ndcjzo().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1644ndcjzo().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1644ndcjzo().b[16][0]++;
          cov_1644ndcjzo().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1644ndcjzo().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1644ndcjzo().b[15][1]++;
    }
    cov_1644ndcjzo().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1644ndcjzo().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_1644ndcjzo().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1644ndcjzo().s[36]++;
exports.PlayerBattlePass = exports.BattlePass = void 0;
const mongoose_1 =
/* istanbul ignore next */
(cov_1644ndcjzo().s[37]++, __importStar(require("mongoose")));
const battlePassSchema =
/* istanbul ignore next */
(cov_1644ndcjzo().s[38]++, new mongoose_1.Schema({
  seasonId: {
    type: String,
    required: true,
    unique: true,
    index: true
  },
  name: {
    type: String,
    required: true,
    trim: true
  },
  description: {
    type: String,
    required: true,
    maxlength: 500
  },
  theme: {
    type: String,
    required: true
  },
  schedule: {
    startDate: {
      type: Date,
      required: true
    },
    endDate: {
      type: Date,
      required: true
    },
    durationDays: Number
  },
  tiers: [{
    level: {
      type: Number,
      required: true
    },
    xpRequired: {
      type: Number,
      required: true
    },
    freeRewards: [{
      type: {
        type: String,
        enum: ['coins', 'skin', 'emote', 'banner', 'title', 'avatar', 'xp-boost']
      },
      itemId: String,
      quantity: {
        type: Number,
        default: 1
      },
      name: String,
      rarity: {
        type: String,
        enum: ['common', 'rare', 'epic', 'legendary', 'mythic']
      }
    }],
    premiumRewards: [{
      type: {
        type: String,
        enum: ['coins', 'skin', 'emote', 'banner', 'title', 'avatar', 'xp-boost']
      },
      itemId: String,
      quantity: {
        type: Number,
        default: 1
      },
      name: String,
      rarity: {
        type: String,
        enum: ['common', 'rare', 'epic', 'legendary', 'mythic']
      }
    }]
  }],
  pricing: {
    premiumCost: {
      type: Number,
      default: 10000
    },
    // 10,000 coins (~$10)
    premiumPlusCost: {
      type: Number,
      default: 25000
    },
    // 25,000 coins (~$25)
    bundleCost: {
      type: Number,
      default: 35000
    } // 35,000 coins (~$35)
  },
  xpConfig: {
    baseXPPerMatch: {
      type: Number,
      default: 100
    },
    winBonus: {
      type: Number,
      default: 50
    },
    firstWinOfDay: {
      type: Number,
      default: 200
    },
    performanceMultiplier: {
      type: Number,
      default: 1.5
    },
    partyBonus: {
      type: Number,
      default: 25
    },
    dailyQuestXP: {
      type: Number,
      default: 500
    },
    weeklyQuestXP: {
      type: Number,
      default: 2000
    }
  },
  dailyChallenges: [{
    challengeId: {
      type: String,
      required: true
    },
    name: String,
    description: String,
    requirement: {
      type: {
        type: String,
        enum: ['wins', 'kills', 'damage', 'healing', 'objectives', 'playtime']
      },
      target: Number,
      gameMode: String
    },
    xpReward: Number,
    coinReward: Number,
    expiresAt: Date,
    active: {
      type: Boolean,
      default: true
    }
  }],
  weeklyChallenges: [{
    challengeId: {
      type: String,
      required: true
    },
    name: String,
    description: String,
    requirement: {
      type: {
        type: String,
        enum: ['wins', 'kills', 'damage', 'healing', 'objectives', 'playtime']
      },
      target: Number,
      gameMode: String
    },
    xpReward: Number,
    coinReward: Number,
    expiresAt: Date,
    active: {
      type: Boolean,
      default: true
    }
  }],
  milestones: [{
    level: Number,
    name: String,
    description: String,
    specialReward: String
  }],
  stats: {
    totalPlayers: {
      type: Number,
      default: 0
    },
    premiumOwners: {
      type: Number,
      default: 0
    },
    averageLevel: {
      type: Number,
      default: 0
    },
    maxLevelReached: {
      type: Number,
      default: 0
    },
    totalXPEarned: {
      type: Number,
      default: 0
    },
    conversionRate: {
      type: Number,
      default: 0
    }
  },
  featured: {
    showcaseSkin: String,
    showcaseVideo: String,
    highlightTiers: [Number]
  },
  status: {
    type: String,
    enum: ['draft', 'active', 'ended'],
    default: 'draft'
  }
}, {
  timestamps: true
}));
// Indexes
/* istanbul ignore next */
cov_1644ndcjzo().s[39]++;
battlePassSchema.index({
  seasonId: 1
}, {
  unique: true
});
/* istanbul ignore next */
cov_1644ndcjzo().s[40]++;
battlePassSchema.index({
  status: 1,
  'schedule.startDate': 1
});
// Pre-save middleware
/* istanbul ignore next */
cov_1644ndcjzo().s[41]++;
battlePassSchema.pre('save', function (next) {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[9]++;
  cov_1644ndcjzo().s[42]++;
  // Calculate duration
  this.schedule.durationDays = Math.ceil((this.schedule.endDate.getTime() - this.schedule.startDate.getTime()) / (1000 * 60 * 60 * 24));
  // Calculate conversion rate
  /* istanbul ignore next */
  cov_1644ndcjzo().s[43]++;
  if (this.stats.totalPlayers > 0) {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[17][0]++;
    cov_1644ndcjzo().s[44]++;
    this.stats.conversionRate = this.stats.premiumOwners / this.stats.totalPlayers * 100;
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[17][1]++;
  }
  cov_1644ndcjzo().s[45]++;
  next();
});
// Method to calculate XP for match
/* istanbul ignore next */
cov_1644ndcjzo().s[46]++;
battlePassSchema.methods.calculateMatchXP = function (result, performanceScore, isFirstWin, isInParty) {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[10]++;
  let xp =
  /* istanbul ignore next */
  (cov_1644ndcjzo().s[47]++, this.xpConfig.baseXPPerMatch);
  // Win bonus
  /* istanbul ignore next */
  cov_1644ndcjzo().s[48]++;
  if (result === 'win') {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[18][0]++;
    cov_1644ndcjzo().s[49]++;
    xp += this.xpConfig.winBonus;
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[18][1]++;
  }
  // First win of the day
  cov_1644ndcjzo().s[50]++;
  if (isFirstWin) {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[19][0]++;
    cov_1644ndcjzo().s[51]++;
    xp += this.xpConfig.firstWinOfDay;
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[19][1]++;
  }
  // Performance multiplier
  cov_1644ndcjzo().s[52]++;
  xp += Math.floor(performanceScore * this.xpConfig.performanceMultiplier);
  // Party bonus
  /* istanbul ignore next */
  cov_1644ndcjzo().s[53]++;
  if (isInParty) {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[20][0]++;
    cov_1644ndcjzo().s[54]++;
    xp += this.xpConfig.partyBonus;
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[20][1]++;
  }
  cov_1644ndcjzo().s[55]++;
  return xp;
};
// Method to get tier for XP amount
/* istanbul ignore next */
cov_1644ndcjzo().s[56]++;
battlePassSchema.methods.getTierForXP = function (totalXP) {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[11]++;
  cov_1644ndcjzo().s[57]++;
  for (let i =
  /* istanbul ignore next */
  (cov_1644ndcjzo().s[58]++, this.tiers.length - 1); i >= 0; i--) {
    /* istanbul ignore next */
    cov_1644ndcjzo().s[59]++;
    if (totalXP >= this.tiers[i].xpRequired) {
      /* istanbul ignore next */
      cov_1644ndcjzo().b[21][0]++;
      cov_1644ndcjzo().s[60]++;
      return this.tiers[i].level;
    } else
    /* istanbul ignore next */
    {
      cov_1644ndcjzo().b[21][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1644ndcjzo().s[61]++;
  return 1;
};
// Static method to get active battle pass
/* istanbul ignore next */
cov_1644ndcjzo().s[62]++;
battlePassSchema.statics.getActive = function () {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[12]++;
  cov_1644ndcjzo().s[63]++;
  return this.findOne({
    status: 'active',
    'schedule.startDate': {
      $lte: new Date()
    },
    'schedule.endDate': {
      $gte: new Date()
    }
  });
};
/* istanbul ignore next */
cov_1644ndcjzo().s[64]++;
exports.BattlePass = mongoose_1.default.model('BattlePass', battlePassSchema);
const playerBattlePassSchema =
/* istanbul ignore next */
(cov_1644ndcjzo().s[65]++, new mongoose_1.Schema({
  userId: {
    type: String,
    required: true,
    index: true
  },
  seasonId: {
    type: String,
    required: true,
    index: true
  },
  currentLevel: {
    type: Number,
    default: 1,
    min: 1,
    max: 100
  },
  totalXP: {
    type: Number,
    default: 0,
    min: 0
  },
  xpToNextLevel: {
    type: Number,
    default: 1000
  },
  hasPremium: {
    type: Boolean,
    default: false
  },
  hasPremiumPlus: {
    type: Boolean,
    default: false
  },
  purchasedAt: Date,
  purchaseAmount: {
    type: Number,
    default: 0
  },
  claimedRewards: [{
    level: Number,
    rewardType: {
      type: String,
      enum: ['free', 'premium']
    },
    itemId: String,
    claimedAt: Date
  }],
  dailyChallengeProgress: [{
    challengeId: String,
    progress: {
      type: Number,
      default: 0
    },
    completed: {
      type: Boolean,
      default: false
    },
    claimedAt: Date
  }],
  weeklyChallengeProgress: [{
    challengeId: String,
    progress: {
      type: Number,
      default: 0
    },
    completed: {
      type: Boolean,
      default: false
    },
    claimedAt: Date
  }],
  stats: {
    matchesPlayed: {
      type: Number,
      default: 0
    },
    totalXPEarned: {
      type: Number,
      default: 0
    },
    challengesCompleted: {
      type: Number,
      default: 0
    },
    firstWinsCollected: {
      type: Number,
      default: 0
    },
    lastPlayedAt: Date
  }
}, {
  timestamps: true
}));
// Compound index
/* istanbul ignore next */
cov_1644ndcjzo().s[66]++;
playerBattlePassSchema.index({
  userId: 1,
  seasonId: 1
}, {
  unique: true
});
/* istanbul ignore next */
cov_1644ndcjzo().s[67]++;
playerBattlePassSchema.index({
  seasonId: 1,
  currentLevel: -1
}); // Leaderboard
// Method to add XP
/* istanbul ignore next */
cov_1644ndcjzo().s[68]++;
playerBattlePassSchema.methods.addXP = async function (xpAmount, battlePass) {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[13]++;
  cov_1644ndcjzo().s[69]++;
  this.totalXP += xpAmount;
  /* istanbul ignore next */
  cov_1644ndcjzo().s[70]++;
  this.stats.totalXPEarned += xpAmount;
  // Calculate new level
  const newLevel =
  /* istanbul ignore next */
  (cov_1644ndcjzo().s[71]++, battlePass.getTierForXP(this.totalXP));
  const levelsGained =
  /* istanbul ignore next */
  (cov_1644ndcjzo().s[72]++, newLevel - this.currentLevel);
  /* istanbul ignore next */
  cov_1644ndcjzo().s[73]++;
  if (levelsGained > 0) {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[22][0]++;
    cov_1644ndcjzo().s[74]++;
    this.currentLevel = newLevel;
    // Calculate XP to next level
    /* istanbul ignore next */
    cov_1644ndcjzo().s[75]++;
    if (newLevel < battlePass.tiers.length) {
      /* istanbul ignore next */
      cov_1644ndcjzo().b[23][0]++;
      const nextTier =
      /* istanbul ignore next */
      (cov_1644ndcjzo().s[76]++, battlePass.tiers.find(t => {
        /* istanbul ignore next */
        cov_1644ndcjzo().f[14]++;
        cov_1644ndcjzo().s[77]++;
        return t.level === newLevel + 1;
      }));
      /* istanbul ignore next */
      cov_1644ndcjzo().s[78]++;
      if (nextTier) {
        /* istanbul ignore next */
        cov_1644ndcjzo().b[24][0]++;
        cov_1644ndcjzo().s[79]++;
        this.xpToNextLevel = nextTier.xpRequired - this.totalXP;
      } else
      /* istanbul ignore next */
      {
        cov_1644ndcjzo().b[24][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_1644ndcjzo().b[23][1]++;
      cov_1644ndcjzo().s[80]++;
      this.xpToNextLevel = 0; // Max level reached
    }
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[22][1]++;
  }
  cov_1644ndcjzo().s[81]++;
  this.stats.lastPlayedAt = new Date();
  /* istanbul ignore next */
  cov_1644ndcjzo().s[82]++;
  await this.save();
  /* istanbul ignore next */
  cov_1644ndcjzo().s[83]++;
  return levelsGained;
};
// Method to claim reward
/* istanbul ignore next */
cov_1644ndcjzo().s[84]++;
playerBattlePassSchema.methods.claimReward = function (level, rewardType) {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[15]++;
  cov_1644ndcjzo().s[85]++;
  // Check if already claimed
  if (this.claimedRewards.some(r => {
    /* istanbul ignore next */
    cov_1644ndcjzo().f[16]++;
    cov_1644ndcjzo().s[86]++;
    return /* istanbul ignore next */(cov_1644ndcjzo().b[26][0]++, r.level === level) &&
    /* istanbul ignore next */
    (cov_1644ndcjzo().b[26][1]++, r.rewardType === rewardType);
  })) {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[25][0]++;
    cov_1644ndcjzo().s[87]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[25][1]++;
  }
  // Check if premium reward and user doesn't have premium
  cov_1644ndcjzo().s[88]++;
  if (
  /* istanbul ignore next */
  (cov_1644ndcjzo().b[28][0]++, rewardType === 'premium') &&
  /* istanbul ignore next */
  (cov_1644ndcjzo().b[28][1]++, !this.hasPremium)) {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[27][0]++;
    cov_1644ndcjzo().s[89]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[27][1]++;
  }
  // Check if level is unlocked
  cov_1644ndcjzo().s[90]++;
  if (level > this.currentLevel) {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[29][0]++;
    cov_1644ndcjzo().s[91]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[29][1]++;
  }
  cov_1644ndcjzo().s[92]++;
  this.claimedRewards.push({
    level,
    rewardType,
    itemId: `tier-${level}-${rewardType}`,
    claimedAt: new Date()
  });
  /* istanbul ignore next */
  cov_1644ndcjzo().s[93]++;
  return true;
};
// Method to purchase premium
/* istanbul ignore next */
cov_1644ndcjzo().s[94]++;
playerBattlePassSchema.methods.purchasePremium = function (tier, cost) {
  /* istanbul ignore next */
  cov_1644ndcjzo().f[17]++;
  cov_1644ndcjzo().s[95]++;
  this.hasPremium = true;
  /* istanbul ignore next */
  cov_1644ndcjzo().s[96]++;
  if (tier === 'premium-plus') {
    /* istanbul ignore next */
    cov_1644ndcjzo().b[30][0]++;
    cov_1644ndcjzo().s[97]++;
    this.hasPremiumPlus = true;
    /* istanbul ignore next */
    cov_1644ndcjzo().s[98]++;
    this.currentLevel = Math.min(this.currentLevel + 25, 100);
  } else
  /* istanbul ignore next */
  {
    cov_1644ndcjzo().b[30][1]++;
  }
  cov_1644ndcjzo().s[99]++;
  this.purchasedAt = new Date();
  /* istanbul ignore next */
  cov_1644ndcjzo().s[100]++;
  this.purchaseAmount = cost;
};
/* istanbul ignore next */
cov_1644ndcjzo().s[101]++;
exports.PlayerBattlePass = mongoose_1.default.model('PlayerBattlePass', playerBattlePassSchema);