62050106a34c5a885adacdf46d08c1cc
"use strict";

/* istanbul ignore next */
function cov_35l5jjr9x() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\aiContentStudio.ts";
  var hash = "e479fe0dc61e12a87e3657739b8ebdcb46c15eb9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\aiContentStudio.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 49
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 44
        }
      },
      "7": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 60
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "9": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 85,
          column: 3
        }
      },
      "10": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "11": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 69
        }
      },
      "12": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "13": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 30,
          column: 15
        }
      },
      "14": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "16": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 43,
          column: 11
        }
      },
      "18": {
        start: {
          line: 45,
          column: 27
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "19": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "20": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 65,
          column: 15
        }
      },
      "21": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 71,
          column: 15
        }
      },
      "22": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "23": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "24": {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 154,
          column: 3
        }
      },
      "25": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "26": {
        start: {
          line: 96,
          column: 23
        },
        end: {
          line: 96,
          column: 69
        }
      },
      "27": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "28": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 102,
          column: 15
        }
      },
      "29": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 35
        }
      },
      "30": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "31": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 109,
          column: 15
        }
      },
      "32": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "33": {
        start: {
          line: 116,
          column: 27
        },
        end: {
          line: 125,
          column: 10
        }
      },
      "34": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "35": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 134,
          column: 15
        }
      },
      "36": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 140,
          column: 15
        }
      },
      "37": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 148,
          column: 11
        }
      },
      "38": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 152,
          column: 11
        }
      },
      "39": {
        start: {
          line: 160,
          column: 0
        },
        end: {
          line: 228,
          column: 3
        }
      },
      "40": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "41": {
        start: {
          line: 167,
          column: 23
        },
        end: {
          line: 167,
          column: 69
        }
      },
      "42": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "43": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 173,
          column: 15
        }
      },
      "44": {
        start: {
          line: 175,
          column: 23
        },
        end: {
          line: 175,
          column: 35
        }
      },
      "45": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "46": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "47": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "48": {
        start: {
          line: 188,
          column: 27
        },
        end: {
          line: 199,
          column: 10
        }
      },
      "49": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "50": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 208,
          column: 15
        }
      },
      "51": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 214,
          column: 15
        }
      },
      "52": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 222,
          column: 11
        }
      },
      "53": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 226,
          column: 11
        }
      },
      "54": {
        start: {
          line: 234,
          column: 0
        },
        end: {
          line: 302,
          column: 3
        }
      },
      "55": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "56": {
        start: {
          line: 241,
          column: 23
        },
        end: {
          line: 241,
          column: 69
        }
      },
      "57": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "58": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 247,
          column: 15
        }
      },
      "59": {
        start: {
          line: 249,
          column: 23
        },
        end: {
          line: 249,
          column: 35
        }
      },
      "60": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "61": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 254,
          column: 15
        }
      },
      "62": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 260,
          column: 11
        }
      },
      "63": {
        start: {
          line: 262,
          column: 27
        },
        end: {
          line: 273,
          column: 10
        }
      },
      "64": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "65": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 282,
          column: 15
        }
      },
      "66": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 288,
          column: 15
        }
      },
      "67": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 296,
          column: 11
        }
      },
      "68": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 300,
          column: 11
        }
      },
      "69": {
        start: {
          line: 308,
          column: 0
        },
        end: {
          line: 367,
          column: 3
        }
      },
      "70": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 366,
          column: 5
        }
      },
      "71": {
        start: {
          line: 310,
          column: 26
        },
        end: {
          line: 351,
          column: 9
        }
      },
      "72": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 355,
          column: 11
        }
      },
      "73": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 361,
          column: 11
        }
      },
      "74": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 365,
          column: 11
        }
      },
      "75": {
        start: {
          line: 373,
          column: 0
        },
        end: {
          line: 399,
          column: 3
        }
      },
      "76": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 398,
          column: 5
        }
      },
      "77": {
        start: {
          line: 375,
          column: 23
        },
        end: {
          line: 375,
          column: 35
        }
      },
      "78": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "79": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 380,
          column: 15
        }
      },
      "80": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 387,
          column: 11
        }
      },
      "81": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 393,
          column: 11
        }
      },
      "82": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 397,
          column: 11
        }
      },
      "83": {
        start: {
          line: 400,
          column: 0
        },
        end: {
          line: 400,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 3
          },
          end: {
            line: 22,
            column: 4
          }
        },
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 94,
            column: 3
          },
          end: {
            line: 94,
            column: 4
          }
        },
        loc: {
          start: {
            line: 94,
            column: 23
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 94
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 165,
            column: 3
          },
          end: {
            line: 165,
            column: 4
          }
        },
        loc: {
          start: {
            line: 165,
            column: 23
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 165
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 239,
            column: 3
          },
          end: {
            line: 239,
            column: 4
          }
        },
        loc: {
          start: {
            line: 239,
            column: 23
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 239
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 308,
            column: 48
          },
          end: {
            line: 308,
            column: 49
          }
        },
        loc: {
          start: {
            line: 308,
            column: 68
          },
          end: {
            line: 367,
            column: 1
          }
        },
        line: 308
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 373,
            column: 46
          },
          end: {
            line: 373,
            column: 47
          }
        },
        loc: {
          start: {
            line: 373,
            column: 66
          },
          end: {
            line: 399,
            column: 1
          }
        },
        line: 373
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 22
          },
          end: {
            line: 48,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 22
          },
          end: {
            line: 48,
            column: 39
          }
        }, {
          start: {
            line: 48,
            column: 43
          },
          end: {
            line: 48,
            column: 45
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 31
          },
          end: {
            line: 53,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 31
          },
          end: {
            line: 53,
            column: 60
          }
        }, {
          start: {
            line: 53,
            column: 64
          },
          end: {
            line: 53,
            column: 92
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 72,
            column: 9
          }
        }],
        line: 57
      },
      "8": {
        loc: {
          start: {
            line: 70,
            column: 23
          },
          end: {
            line: 70,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 23
          },
          end: {
            line: 70,
            column: 44
          }
        }, {
          start: {
            line: 70,
            column: 48
          },
          end: {
            line: 70,
            column: 70
          }
        }],
        line: 70
      },
      "9": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "10": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "11": {
        loc: {
          start: {
            line: 122,
            column: 31
          },
          end: {
            line: 122,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 31
          },
          end: {
            line: 122,
            column: 60
          }
        }, {
          start: {
            line: 122,
            column: 64
          },
          end: {
            line: 122,
            column: 92
          }
        }],
        line: 122
      },
      "12": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: 136,
            column: 13
          },
          end: {
            line: 141,
            column: 9
          }
        }],
        line: 126
      },
      "13": {
        loc: {
          start: {
            line: 139,
            column: 23
          },
          end: {
            line: 139,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 23
          },
          end: {
            line: 139,
            column: 44
          }
        }, {
          start: {
            line: 139,
            column: 48
          },
          end: {
            line: 139,
            column: 70
          }
        }],
        line: 139
      },
      "14": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "15": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "16": {
        loc: {
          start: {
            line: 191,
            column: 22
          },
          end: {
            line: 191,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 22
          },
          end: {
            line: 191,
            column: 39
          }
        }, {
          start: {
            line: 191,
            column: 43
          },
          end: {
            line: 191,
            column: 45
          }
        }],
        line: 191
      },
      "17": {
        loc: {
          start: {
            line: 196,
            column: 31
          },
          end: {
            line: 196,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 31
          },
          end: {
            line: 196,
            column: 60
          }
        }, {
          start: {
            line: 196,
            column: 64
          },
          end: {
            line: 196,
            column: 92
          }
        }],
        line: 196
      },
      "18": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: 210,
            column: 13
          },
          end: {
            line: 215,
            column: 9
          }
        }],
        line: 200
      },
      "19": {
        loc: {
          start: {
            line: 213,
            column: 23
          },
          end: {
            line: 213,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 23
          },
          end: {
            line: 213,
            column: 44
          }
        }, {
          start: {
            line: 213,
            column: 48
          },
          end: {
            line: 213,
            column: 70
          }
        }],
        line: 213
      },
      "20": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "21": {
        loc: {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "22": {
        loc: {
          start: {
            line: 265,
            column: 22
          },
          end: {
            line: 265,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 22
          },
          end: {
            line: 265,
            column: 39
          }
        }, {
          start: {
            line: 265,
            column: 43
          },
          end: {
            line: 265,
            column: 45
          }
        }],
        line: 265
      },
      "23": {
        loc: {
          start: {
            line: 270,
            column: 31
          },
          end: {
            line: 270,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 31
          },
          end: {
            line: 270,
            column: 60
          }
        }, {
          start: {
            line: 270,
            column: 64
          },
          end: {
            line: 270,
            column: 92
          }
        }],
        line: 270
      },
      "24": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: 284,
            column: 13
          },
          end: {
            line: 289,
            column: 9
          }
        }],
        line: 274
      },
      "25": {
        loc: {
          start: {
            line: 287,
            column: 23
          },
          end: {
            line: 287,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 23
          },
          end: {
            line: 287,
            column: 44
          }
        }, {
          start: {
            line: 287,
            column: 48
          },
          end: {
            line: 287,
            column: 70
          }
        }],
        line: 287
      },
      "26": {
        loc: {
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e479fe0dc61e12a87e3657739b8ebdcb46c15eb9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_35l5jjr9x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_35l5jjr9x();
var __importDefault =
/* istanbul ignore next */
(cov_35l5jjr9x().s[0]++,
/* istanbul ignore next */
(cov_35l5jjr9x().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_35l5jjr9x().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_35l5jjr9x().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_35l5jjr9x().f[0]++;
  cov_35l5jjr9x().s[1]++;
  return /* istanbul ignore next */(cov_35l5jjr9x().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_35l5jjr9x().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_35l5jjr9x().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_35l5jjr9x().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_35l5jjr9x().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_35l5jjr9x().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_35l5jjr9x().s[4]++, require("express-validator"));
const axios_1 =
/* istanbul ignore next */
(cov_35l5jjr9x().s[5]++, __importDefault(require("axios")));
const auth_1 =
/* istanbul ignore next */
(cov_35l5jjr9x().s[6]++, require("../middleware/auth"));
const logger_1 =
/* istanbul ignore next */
(cov_35l5jjr9x().s[7]++, __importDefault(require("../utils/logger")));
const router =
/* istanbul ignore next */
(cov_35l5jjr9x().s[8]++, express_1.default.Router());
/**
 * @route POST /api/v1/ai-content-studio/generate-video
 * @desc Generate AI video content for creators
 * @access Private
 */
/* istanbul ignore next */
cov_35l5jjr9x().s[9]++;
router.post('/generate-video', auth_1.authMiddleware, [(0, express_validator_1.body)('prompt').notEmpty().withMessage('Prompt is required'), (0, express_validator_1.body)('duration').optional().isInt({
  min: 10,
  max: 300
}).withMessage('Duration must be between 10-300 seconds'), (0, express_validator_1.body)('style').optional().isString().withMessage('Style must be a string'), (0, express_validator_1.body)('mood').optional().isString().withMessage('Mood must be a string')], async (req, res) => {
  /* istanbul ignore next */
  cov_35l5jjr9x().f[1]++;
  cov_35l5jjr9x().s[10]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[11]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_35l5jjr9x().s[12]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[3][0]++;
      cov_35l5jjr9x().s[13]++;
      return res.status(400).json({
        success: false,
        error: 'Validation failed',
        details: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_35l5jjr9x().b[3][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[14]++, req.user?.id);
    /* istanbul ignore next */
    cov_35l5jjr9x().s[15]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[4][0]++;
      cov_35l5jjr9x().s[16]++;
      return res.status(401).json({
        success: false,
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_35l5jjr9x().b[4][1]++;
    }
    cov_35l5jjr9x().s[17]++;
    logger_1.default.info('AI video generation request', {
      userId,
      prompt: req.body.prompt,
      duration: req.body.duration
    });
    // Call AI Engine service
    const aiResponse =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[18]++, await axios_1.default.post(`${process.env.AI_ENGINE_URL}/api/ai/content-generation/text-to-video`, {
      prompt: req.body.prompt,
      userId,
      duration:
      /* istanbul ignore next */
      (cov_35l5jjr9x().b[5][0]++, req.body.duration) ||
      /* istanbul ignore next */
      (cov_35l5jjr9x().b[5][1]++, 30),
      style: req.body.style,
      mood: req.body.mood
    }, {
      headers: {
        'x-ai-secret':
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[6][0]++, process.env.AI_SERVICE_SECRET) ||
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[6][1]++, process.env.AI_ENGINE_SECRET),
        'Content-Type': 'application/json'
      }
    }));
    /* istanbul ignore next */
    cov_35l5jjr9x().s[19]++;
    if (aiResponse.data.success) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[7][0]++;
      cov_35l5jjr9x().s[20]++;
      res.status(200).json({
        success: true,
        data: {
          contentId: aiResponse.data.data.contentId,
          url: aiResponse.data.data.url,
          metadata: aiResponse.data.data.metadata
        }
      });
    } else {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[7][1]++;
      cov_35l5jjr9x().s[21]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[8][0]++, aiResponse.data.error) ||
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[8][1]++, 'AI generation failed')
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_35l5jjr9x().s[22]++;
    logger_1.default.error('AI video generation endpoint error', {
      error: error.message,
      userId: req.user?.id,
      stack: error.stack
    });
    /* istanbul ignore next */
    cov_35l5jjr9x().s[23]++;
    res.status(500).json({
      success: false,
      error: 'Internal server error'
    });
  }
});
/**
 * @route POST /api/v1/ai-content-studio/generate-thumbnail
 * @desc Generate AI thumbnail for creators
 * @access Private
 */
/* istanbul ignore next */
cov_35l5jjr9x().s[24]++;
router.post('/generate-thumbnail', auth_1.authMiddleware, [(0, express_validator_1.body)('prompt').notEmpty().withMessage('Prompt is required'), (0, express_validator_1.body)('style').optional().isString().withMessage('Style must be a string')], async (req, res) => {
  /* istanbul ignore next */
  cov_35l5jjr9x().f[2]++;
  cov_35l5jjr9x().s[25]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[26]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_35l5jjr9x().s[27]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[9][0]++;
      cov_35l5jjr9x().s[28]++;
      return res.status(400).json({
        success: false,
        error: 'Validation failed',
        details: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_35l5jjr9x().b[9][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[29]++, req.user?.id);
    /* istanbul ignore next */
    cov_35l5jjr9x().s[30]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[10][0]++;
      cov_35l5jjr9x().s[31]++;
      return res.status(401).json({
        success: false,
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_35l5jjr9x().b[10][1]++;
    }
    cov_35l5jjr9x().s[32]++;
    logger_1.default.info('AI thumbnail generation request', {
      userId,
      prompt: req.body.prompt
    });
    // Call AI Engine service
    const aiResponse =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[33]++, await axios_1.default.post(`${process.env.AI_ENGINE_URL}/api/ai/content-generation/thumbnail`, {
      prompt: req.body.prompt,
      userId,
      style: req.body.style
    }, {
      headers: {
        'x-ai-secret':
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[11][0]++, process.env.AI_SERVICE_SECRET) ||
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[11][1]++, process.env.AI_ENGINE_SECRET),
        'Content-Type': 'application/json'
      }
    }));
    /* istanbul ignore next */
    cov_35l5jjr9x().s[34]++;
    if (aiResponse.data.success) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[12][0]++;
      cov_35l5jjr9x().s[35]++;
      res.status(200).json({
        success: true,
        data: {
          contentId: aiResponse.data.data.contentId,
          url: aiResponse.data.data.url,
          metadata: aiResponse.data.data.metadata
        }
      });
    } else {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[12][1]++;
      cov_35l5jjr9x().s[36]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[13][0]++, aiResponse.data.error) ||
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[13][1]++, 'AI generation failed')
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_35l5jjr9x().s[37]++;
    logger_1.default.error('AI thumbnail generation endpoint error', {
      error: error.message,
      userId: req.user?.id,
      stack: error.stack
    });
    /* istanbul ignore next */
    cov_35l5jjr9x().s[38]++;
    res.status(500).json({
      success: false,
      error: 'Internal server error'
    });
  }
});
/**
 * @route POST /api/v1/ai-content-studio/generate-music
 * @desc Generate AI background music for creators
 * @access Private
 */
/* istanbul ignore next */
cov_35l5jjr9x().s[39]++;
router.post('/generate-music', auth_1.authMiddleware, [(0, express_validator_1.body)('prompt').notEmpty().withMessage('Prompt is required'), (0, express_validator_1.body)('duration').optional().isInt({
  min: 10,
  max: 300
}).withMessage('Duration must be between 10-300 seconds'), (0, express_validator_1.body)('style').optional().isString().withMessage('Style must be a string'), (0, express_validator_1.body)('mood').optional().isString().withMessage('Mood must be a string')], async (req, res) => {
  /* istanbul ignore next */
  cov_35l5jjr9x().f[3]++;
  cov_35l5jjr9x().s[40]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[41]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_35l5jjr9x().s[42]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[14][0]++;
      cov_35l5jjr9x().s[43]++;
      return res.status(400).json({
        success: false,
        error: 'Validation failed',
        details: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_35l5jjr9x().b[14][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[44]++, req.user?.id);
    /* istanbul ignore next */
    cov_35l5jjr9x().s[45]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[15][0]++;
      cov_35l5jjr9x().s[46]++;
      return res.status(401).json({
        success: false,
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_35l5jjr9x().b[15][1]++;
    }
    cov_35l5jjr9x().s[47]++;
    logger_1.default.info('AI music generation request', {
      userId,
      prompt: req.body.prompt,
      duration: req.body.duration
    });
    // Call AI Engine service
    const aiResponse =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[48]++, await axios_1.default.post(`${process.env.AI_ENGINE_URL}/api/ai/content-generation/background-music`, {
      prompt: req.body.prompt,
      userId,
      duration:
      /* istanbul ignore next */
      (cov_35l5jjr9x().b[16][0]++, req.body.duration) ||
      /* istanbul ignore next */
      (cov_35l5jjr9x().b[16][1]++, 30),
      style: req.body.style,
      mood: req.body.mood
    }, {
      headers: {
        'x-ai-secret':
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[17][0]++, process.env.AI_SERVICE_SECRET) ||
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[17][1]++, process.env.AI_ENGINE_SECRET),
        'Content-Type': 'application/json'
      }
    }));
    /* istanbul ignore next */
    cov_35l5jjr9x().s[49]++;
    if (aiResponse.data.success) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[18][0]++;
      cov_35l5jjr9x().s[50]++;
      res.status(200).json({
        success: true,
        data: {
          contentId: aiResponse.data.data.contentId,
          url: aiResponse.data.data.url,
          metadata: aiResponse.data.data.metadata
        }
      });
    } else {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[18][1]++;
      cov_35l5jjr9x().s[51]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[19][0]++, aiResponse.data.error) ||
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[19][1]++, 'AI generation failed')
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_35l5jjr9x().s[52]++;
    logger_1.default.error('AI music generation endpoint error', {
      error: error.message,
      userId: req.user?.id,
      stack: error.stack
    });
    /* istanbul ignore next */
    cov_35l5jjr9x().s[53]++;
    res.status(500).json({
      success: false,
      error: 'Internal server error'
    });
  }
});
/**
 * @route POST /api/v1/ai-content-studio/generate-package
 * @desc Generate complete AI content package (video + thumbnail + music)
 * @access Private
 */
/* istanbul ignore next */
cov_35l5jjr9x().s[54]++;
router.post('/generate-package', auth_1.authMiddleware, [(0, express_validator_1.body)('prompt').notEmpty().withMessage('Prompt is required'), (0, express_validator_1.body)('duration').optional().isInt({
  min: 10,
  max: 300
}).withMessage('Duration must be between 10-300 seconds'), (0, express_validator_1.body)('style').optional().isString().withMessage('Style must be a string'), (0, express_validator_1.body)('mood').optional().isString().withMessage('Mood must be a string')], async (req, res) => {
  /* istanbul ignore next */
  cov_35l5jjr9x().f[4]++;
  cov_35l5jjr9x().s[55]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[56]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_35l5jjr9x().s[57]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[20][0]++;
      cov_35l5jjr9x().s[58]++;
      return res.status(400).json({
        success: false,
        error: 'Validation failed',
        details: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_35l5jjr9x().b[20][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[59]++, req.user?.id);
    /* istanbul ignore next */
    cov_35l5jjr9x().s[60]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[21][0]++;
      cov_35l5jjr9x().s[61]++;
      return res.status(401).json({
        success: false,
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_35l5jjr9x().b[21][1]++;
    }
    cov_35l5jjr9x().s[62]++;
    logger_1.default.info('AI content package generation request', {
      userId,
      prompt: req.body.prompt,
      duration: req.body.duration
    });
    // Call AI Engine service
    const aiResponse =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[63]++, await axios_1.default.post(`${process.env.AI_ENGINE_URL}/api/ai/content-generation/package`, {
      prompt: req.body.prompt,
      userId,
      duration:
      /* istanbul ignore next */
      (cov_35l5jjr9x().b[22][0]++, req.body.duration) ||
      /* istanbul ignore next */
      (cov_35l5jjr9x().b[22][1]++, 30),
      style: req.body.style,
      mood: req.body.mood
    }, {
      headers: {
        'x-ai-secret':
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[23][0]++, process.env.AI_SERVICE_SECRET) ||
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[23][1]++, process.env.AI_ENGINE_SECRET),
        'Content-Type': 'application/json'
      }
    }));
    /* istanbul ignore next */
    cov_35l5jjr9x().s[64]++;
    if (aiResponse.data.success) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[24][0]++;
      cov_35l5jjr9x().s[65]++;
      res.status(200).json({
        success: true,
        data: {
          video: aiResponse.data.data.video,
          thumbnail: aiResponse.data.data.thumbnail,
          music: aiResponse.data.data.music
        }
      });
    } else {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[24][1]++;
      cov_35l5jjr9x().s[66]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[25][0]++, aiResponse.data.error) ||
        /* istanbul ignore next */
        (cov_35l5jjr9x().b[25][1]++, 'AI generation failed')
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_35l5jjr9x().s[67]++;
    logger_1.default.error('AI content package generation endpoint error', {
      error: error.message,
      userId: req.user?.id,
      stack: error.stack
    });
    /* istanbul ignore next */
    cov_35l5jjr9x().s[68]++;
    res.status(500).json({
      success: false,
      error: 'Internal server error'
    });
  }
});
/**
 * @route GET /api/v1/ai-content-studio/templates
 * @desc Get AI content generation templates
 * @access Private
 */
/* istanbul ignore next */
cov_35l5jjr9x().s[69]++;
router.get('/templates', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_35l5jjr9x().f[5]++;
  cov_35l5jjr9x().s[70]++;
  try {
    const templates =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[71]++, [{
      id: 'viral-trending',
      name: 'Viral Trending',
      description: 'Create content that follows current viral trends',
      prompt: 'Create a viral trending video about {topic}',
      style: 'trendy and engaging',
      mood: 'energetic and fun'
    }, {
      id: 'educational',
      name: 'Educational',
      description: 'Create educational content with clear explanations',
      prompt: 'Create an educational video explaining {topic}',
      style: 'professional and clear',
      mood: 'informative and engaging'
    }, {
      id: 'entertainment',
      name: 'Entertainment',
      description: 'Create entertaining and humorous content',
      prompt: 'Create an entertaining video about {topic}',
      style: 'fun and creative',
      mood: 'humorous and light'
    }, {
      id: 'lifestyle',
      name: 'Lifestyle',
      description: 'Create lifestyle and wellness content',
      prompt: 'Create a lifestyle video about {topic}',
      style: 'relaxed and inspiring',
      mood: 'calm and positive'
    }, {
      id: 'gaming',
      name: 'Gaming',
      description: 'Create gaming and esports content',
      prompt: 'Create a gaming video about {topic}',
      style: 'dynamic and exciting',
      mood: 'competitive and thrilling'
    }]);
    /* istanbul ignore next */
    cov_35l5jjr9x().s[72]++;
    res.status(200).json({
      success: true,
      data: templates
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_35l5jjr9x().s[73]++;
    logger_1.default.error('AI content templates endpoint error', {
      error: error.message,
      userId: req.user?.id
    });
    /* istanbul ignore next */
    cov_35l5jjr9x().s[74]++;
    res.status(500).json({
      success: false,
      error: 'Internal server error'
    });
  }
});
/**
 * @route GET /api/v1/ai-content-studio/history
 * @desc Get user's AI content generation history
 * @access Private
 */
/* istanbul ignore next */
cov_35l5jjr9x().s[75]++;
router.get('/history', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_35l5jjr9x().f[6]++;
  cov_35l5jjr9x().s[76]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_35l5jjr9x().s[77]++, req.user?.id);
    /* istanbul ignore next */
    cov_35l5jjr9x().s[78]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_35l5jjr9x().b[26][0]++;
      cov_35l5jjr9x().s[79]++;
      return res.status(401).json({
        success: false,
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_35l5jjr9x().b[26][1]++;
    }
    // In a real implementation, this would fetch from database
    // For now, return empty array
    cov_35l5jjr9x().s[80]++;
    res.status(200).json({
      success: true,
      data: []
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_35l5jjr9x().s[81]++;
    logger_1.default.error('AI content history endpoint error', {
      error: error.message,
      userId: req.user?.id
    });
    /* istanbul ignore next */
    cov_35l5jjr9x().s[82]++;
    res.status(500).json({
      success: false,
      error: 'Internal server error'
    });
  }
});
/* istanbul ignore next */
cov_35l5jjr9x().s[83]++;
exports.default = router;