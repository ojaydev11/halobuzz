4ee2c8f5665122af41e893a0dcc48d66
"use strict";

/* istanbul ignore next */
function cov_2p4mnuj8m5() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\wellbeing.ts";
  var hash = "eddb709653a3179d3e787b97616299e9d0aa06a1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\wellbeing.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 30
        },
        end: {
          line: 4,
          column: 81
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 51
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "7": {
        start: {
          line: 9,
          column: 28
        },
        end: {
          line: 9,
          column: 83
        }
      },
      "8": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "9": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 37
        }
      },
      "10": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "11": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "12": {
        start: {
          line: 19,
          column: 86
        },
        end: {
          line: 19,
          column: 94
        }
      },
      "13": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "14": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "15": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 77
        }
      },
      "16": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "17": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 103
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 78
        }
      },
      "20": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 64,
          column: 3
        }
      },
      "21": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "22": {
        start: {
          line: 46,
          column: 36
        },
        end: {
          line: 46,
          column: 44
        }
      },
      "23": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "24": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "25": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 77
        }
      },
      "26": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "27": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 86
        }
      },
      "28": {
        start: {
          line: 54,
          column: 22
        },
        end: {
          line: 54,
          column: 95
        }
      },
      "29": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "30": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 103
        }
      },
      "31": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 78
        }
      },
      "32": {
        start: {
          line: 69,
          column: 0
        },
        end: {
          line: 89,
          column: 3
        }
      },
      "33": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "34": {
        start: {
          line: 71,
          column: 74
        },
        end: {
          line: 71,
          column: 82
        }
      },
      "35": {
        start: {
          line: 72,
          column: 23
        },
        end: {
          line: 72,
          column: 39
        }
      },
      "36": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "37": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 77
        }
      },
      "38": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "39": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 78
        }
      },
      "40": {
        start: {
          line: 79,
          column: 29
        },
        end: {
          line: 79,
          column: 170
        }
      },
      "41": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "42": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 108
        }
      },
      "43": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 73
        }
      },
      "44": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 114,
          column: 3
        }
      },
      "45": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "46": {
        start: {
          line: 96,
          column: 39
        },
        end: {
          line: 96,
          column: 47
        }
      },
      "47": {
        start: {
          line: 97,
          column: 23
        },
        end: {
          line: 97,
          column: 39
        }
      },
      "48": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "49": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 77
        }
      },
      "50": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "51": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 89
        }
      },
      "52": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 78
        }
      },
      "53": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      },
      "54": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 97
        }
      },
      "55": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 71
        }
      },
      "56": {
        start: {
          line: 119,
          column: 0
        },
        end: {
          line: 136,
          column: 3
        }
      },
      "57": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "58": {
        start: {
          line: 121,
          column: 27
        },
        end: {
          line: 121,
          column: 36
        }
      },
      "59": {
        start: {
          line: 122,
          column: 23
        },
        end: {
          line: 122,
          column: 39
        }
      },
      "60": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "61": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 77
        }
      },
      "62": {
        start: {
          line: 126,
          column: 26
        },
        end: {
          line: 126,
          column: 101
        }
      },
      "63": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 130,
          column: 11
        }
      },
      "64": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 104
        }
      },
      "65": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 77
        }
      },
      "66": {
        start: {
          line: 141,
          column: 0
        },
        end: {
          line: 158,
          column: 3
        }
      },
      "67": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "68": {
        start: {
          line: 143,
          column: 41
        },
        end: {
          line: 143,
          column: 50
        }
      },
      "69": {
        start: {
          line: 144,
          column: 23
        },
        end: {
          line: 144,
          column: 39
        }
      },
      "70": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "71": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 77
        }
      },
      "72": {
        start: {
          line: 148,
          column: 26
        },
        end: {
          line: 148,
          column: 95
        }
      },
      "73": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 152,
          column: 11
        }
      },
      "74": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 104
        }
      },
      "75": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 77
        }
      },
      "76": {
        start: {
          line: 159,
          column: 0
        },
        end: {
          line: 159,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 25
          }
        },
        loc: {
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 44,
            column: 22
          },
          end: {
            line: 44,
            column: 23
          }
        },
        loc: {
          start: {
            line: 44,
            column: 42
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 44
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 69,
            column: 29
          },
          end: {
            line: 69,
            column: 30
          }
        },
        loc: {
          start: {
            line: 69,
            column: 49
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 69
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 94,
            column: 34
          },
          end: {
            line: 94,
            column: 35
          }
        },
        loc: {
          start: {
            line: 94,
            column: 54
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 94
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 119,
            column: 25
          },
          end: {
            line: 119,
            column: 26
          }
        },
        loc: {
          start: {
            line: 119,
            column: 45
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 119
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 141,
            column: 25
          },
          end: {
            line: 141,
            column: 26
          }
        },
        loc: {
          start: {
            line: 141,
            column: 45
          },
          end: {
            line: 158,
            column: 1
          }
        },
        line: 141
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 17
          }
        }, {
          start: {
            line: 51,
            column: 21
          },
          end: {
            line: 51,
            column: 31
          }
        }, {
          start: {
            line: 51,
            column: 35
          },
          end: {
            line: 51,
            column: 60
          }
        }],
        line: 51
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "6": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 17
          }
        }, {
          start: {
            line: 76,
            column: 21
          },
          end: {
            line: 76,
            column: 27
          }
        }, {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 43
          }
        }, {
          start: {
            line: 76,
            column: 47
          },
          end: {
            line: 76,
            column: 54
          }
        }],
        line: 76
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 126
          },
          end: {
            line: 79,
            column: 169
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 138
          },
          end: {
            line: 79,
            column: 157
          }
        }, {
          start: {
            line: 79,
            column: 160
          },
          end: {
            line: 79,
            column: 169
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "9": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "10": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 21
          }
        }, {
          start: {
            line: 101,
            column: 25
          },
          end: {
            line: 101,
            column: 34
          }
        }],
        line: 101
      },
      "11": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "12": {
        loc: {
          start: {
            line: 126,
            column: 83
          },
          end: {
            line: 126,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 83
          },
          end: {
            line: 126,
            column: 89
          }
        }, {
          start: {
            line: 126,
            column: 93
          },
          end: {
            line: 126,
            column: 99
          }
        }],
        line: 126
      },
      "13": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eddb709653a3179d3e787b97616299e9d0aa06a1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2p4mnuj8m5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2p4mnuj8m5();
cov_2p4mnuj8m5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2p4mnuj8m5().s[1]++, require("express"));
const MentalHealthService_1 =
/* istanbul ignore next */
(cov_2p4mnuj8m5().s[2]++, require("@/services/wellbeing/MentalHealthService"));
const auth_1 =
/* istanbul ignore next */
(cov_2p4mnuj8m5().s[3]++, require("@/middleware/auth"));
const security_1 =
/* istanbul ignore next */
(cov_2p4mnuj8m5().s[4]++, require("@/middleware/security"));
const logger_1 =
/* istanbul ignore next */
(cov_2p4mnuj8m5().s[5]++, require("@/config/logger"));
const router =
/* istanbul ignore next */
(cov_2p4mnuj8m5().s[6]++, (0, express_1.Router)());
const mentalHealthService =
/* istanbul ignore next */
(cov_2p4mnuj8m5().s[7]++, MentalHealthService_1.MentalHealthService.getInstance());
// Apply authentication and rate limiting to all routes
/* istanbul ignore next */
cov_2p4mnuj8m5().s[8]++;
router.use(auth_1.authMiddleware);
/* istanbul ignore next */
cov_2p4mnuj8m5().s[9]++;
router.use(security_1.socialLimiter);
/**
 * @route POST /api/v1/wellbeing/profile
 * @desc Create or update wellbeing profile
 */
/* istanbul ignore next */
cov_2p4mnuj8m5().s[10]++;
router.post('/profile', async (req, res) => {
  /* istanbul ignore next */
  cov_2p4mnuj8m5().f[0]++;
  cov_2p4mnuj8m5().s[11]++;
  try {
    const {
      mentalHealthScore,
      stressLevel,
      wellbeingFactors,
      privacySettings
    } =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[12]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[13]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[14]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2p4mnuj8m5().b[0][0]++;
      cov_2p4mnuj8m5().s[15]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p4mnuj8m5().b[0][1]++;
    }
    const profile =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[16]++, await mentalHealthService.createWellbeingProfile(userId, {
      mentalHealthScore,
      stressLevel,
      wellbeingFactors,
      privacySettings
    }));
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[17]++;
    res.status(201).json({
      success: true,
      data: profile
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[18]++;
    logger_1.logger.error('Error creating wellbeing profile', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[19]++;
    res.status(500).json({
      error: 'Failed to create wellbeing profile'
    });
  }
});
/**
 * @route POST /api/v1/wellbeing/check
 * @desc Complete wellbeing check
 */
/* istanbul ignore next */
cov_2p4mnuj8m5().s[20]++;
router.post('/check', async (req, res) => {
  /* istanbul ignore next */
  cov_2p4mnuj8m5().f[1]++;
  cov_2p4mnuj8m5().s[21]++;
  try {
    const {
      type,
      responses
    } =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[22]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[23]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[24]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2p4mnuj8m5().b[1][0]++;
      cov_2p4mnuj8m5().s[25]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p4mnuj8m5().b[1][1]++;
    }
    cov_2p4mnuj8m5().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[3][0]++, !type) ||
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[3][1]++, !responses) ||
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[3][2]++, !Array.isArray(responses))) {
      /* istanbul ignore next */
      cov_2p4mnuj8m5().b[2][0]++;
      cov_2p4mnuj8m5().s[27]++;
      return res.status(400).json({
        error: 'Type and responses are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p4mnuj8m5().b[2][1]++;
    }
    const check =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[28]++, await mentalHealthService.completeWellbeingCheck(userId, type, responses));
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[29]++;
    res.status(200).json({
      success: true,
      data: check
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[30]++;
    logger_1.logger.error('Error completing wellbeing check', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[31]++;
    res.status(500).json({
      error: 'Failed to complete wellbeing check'
    });
  }
});
/**
 * @route POST /api/v1/wellbeing/intervention
 * @desc Create wellbeing intervention
 */
/* istanbul ignore next */
cov_2p4mnuj8m5().s[32]++;
router.post('/intervention', async (req, res) => {
  /* istanbul ignore next */
  cov_2p4mnuj8m5().f[2]++;
  cov_2p4mnuj8m5().s[33]++;
  try {
    const {
      type,
      title,
      description,
      action,
      priority,
      expiresAt
    } =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[34]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[35]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[36]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2p4mnuj8m5().b[4][0]++;
      cov_2p4mnuj8m5().s[37]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p4mnuj8m5().b[4][1]++;
    }
    cov_2p4mnuj8m5().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[6][0]++, !type) ||
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[6][1]++, !title) ||
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[6][2]++, !description) ||
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[6][3]++, !action)) {
      /* istanbul ignore next */
      cov_2p4mnuj8m5().b[5][0]++;
      cov_2p4mnuj8m5().s[39]++;
      return res.status(400).json({
        error: 'Missing required fields'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p4mnuj8m5().b[5][1]++;
    }
    const intervention =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[40]++, await mentalHealthService.createIntervention(userId, type, title, description, action, priority, expiresAt ?
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[7][0]++, new Date(expiresAt)) :
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[7][1]++, undefined)));
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[41]++;
    res.status(201).json({
      success: true,
      data: intervention
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[42]++;
    logger_1.logger.error('Error creating wellbeing intervention', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[43]++;
    res.status(500).json({
      error: 'Failed to create intervention'
    });
  }
});
/**
 * @route POST /api/v1/wellbeing/screen-time/track
 * @desc Track screen time
 */
/* istanbul ignore next */
cov_2p4mnuj8m5().s[44]++;
router.post('/screen-time/track', async (req, res) => {
  /* istanbul ignore next */
  cov_2p4mnuj8m5().f[3]++;
  cov_2p4mnuj8m5().s[45]++;
  try {
    const {
      duration,
      category
    } =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[46]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[47]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[48]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2p4mnuj8m5().b[8][0]++;
      cov_2p4mnuj8m5().s[49]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p4mnuj8m5().b[8][1]++;
    }
    cov_2p4mnuj8m5().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[10][0]++, !duration) ||
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[10][1]++, !category)) {
      /* istanbul ignore next */
      cov_2p4mnuj8m5().b[9][0]++;
      cov_2p4mnuj8m5().s[51]++;
      return res.status(400).json({
        error: 'Duration and category are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p4mnuj8m5().b[9][1]++;
    }
    cov_2p4mnuj8m5().s[52]++;
    await mentalHealthService.trackScreenTime(userId, duration, category);
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[53]++;
    res.status(200).json({
      success: true,
      message: 'Screen time tracked successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[54]++;
    logger_1.logger.error('Error tracking screen time', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[55]++;
    res.status(500).json({
      error: 'Failed to track screen time'
    });
  }
});
/**
 * @route GET /api/v1/wellbeing/analytics
 * @desc Get wellbeing analytics
 */
/* istanbul ignore next */
cov_2p4mnuj8m5().s[56]++;
router.get('/analytics', async (req, res) => {
  /* istanbul ignore next */
  cov_2p4mnuj8m5().f[4]++;
  cov_2p4mnuj8m5().s[57]++;
  try {
    const {
      period
    } =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[58]++, req.query);
    const userId =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[59]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[60]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2p4mnuj8m5().b[11][0]++;
      cov_2p4mnuj8m5().s[61]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p4mnuj8m5().b[11][1]++;
    }
    const analytics =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[62]++, await mentalHealthService.getWellbeingAnalytics(userId,
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[12][0]++, period) ||
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().b[12][1]++, 'week')));
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[63]++;
    res.status(200).json({
      success: true,
      data: analytics
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[64]++;
    logger_1.logger.error('Error getting wellbeing analytics', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[65]++;
    res.status(500).json({
      error: 'Failed to get wellbeing analytics'
    });
  }
});
/**
 * @route GET /api/v1/wellbeing/resources
 * @desc Get wellbeing resources
 */
/* istanbul ignore next */
cov_2p4mnuj8m5().s[66]++;
router.get('/resources', async (req, res) => {
  /* istanbul ignore next */
  cov_2p4mnuj8m5().f[5]++;
  cov_2p4mnuj8m5().s[67]++;
  try {
    const {
      category,
      difficulty
    } =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[68]++, req.query);
    const userId =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[69]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[70]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2p4mnuj8m5().b[13][0]++;
      cov_2p4mnuj8m5().s[71]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p4mnuj8m5().b[13][1]++;
    }
    const resources =
    /* istanbul ignore next */
    (cov_2p4mnuj8m5().s[72]++, await mentalHealthService.getWellbeingResources(category, difficulty));
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[73]++;
    res.status(200).json({
      success: true,
      data: resources
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[74]++;
    logger_1.logger.error('Error getting wellbeing resources', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2p4mnuj8m5().s[75]++;
    res.status(500).json({
      error: 'Failed to get wellbeing resources'
    });
  }
});
/* istanbul ignore next */
cov_2p4mnuj8m5().s[76]++;
exports.default = router;