a6ade3b32d9dd00b8c5e9387574fdc9c
"use strict";

/* istanbul ignore next */
function cov_b9431avi7() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\SocialService.ts";
  var hash = "fe1fb3f4561aa744ce422b09602406d2e8ef667a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\SocialService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 55
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 34
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 23
        }
      },
      "5": {
        start: {
          line: 13,
          column: 13
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 25
        }
      },
      "7": {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 27
        }
      },
      "8": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "9": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 16
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 34
        }
      },
      "13": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "14": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "15": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "16": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 32
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "18": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 74
        }
      },
      "19": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 52
        }
      },
      "20": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "21": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 43
        }
      },
      "22": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 72
        }
      },
      "23": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 48
        }
      },
      "24": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "25": {
        start: {
          line: 55,
          column: 31
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "26": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "27": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 52
        }
      },
      "28": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "29": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 54
        }
      },
      "30": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 63
        }
      },
      "31": {
        start: {
          line: 77,
          column: 37
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "32": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 69
        }
      },
      "33": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 59
        }
      },
      "34": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 98
        }
      },
      "35": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 24
        }
      },
      "36": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 65
        }
      },
      "37": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 25
        }
      },
      "38": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "39": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 55
        }
      },
      "40": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 55
        }
      },
      "41": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 61
        }
      },
      "42": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 98
        }
      },
      "43": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 24
        }
      },
      "44": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 67
        }
      },
      "45": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 25
        }
      },
      "46": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 74
        }
      },
      "47": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "48": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "49": {
        start: {
          line: 116,
          column: 31
        },
        end: {
          line: 116,
          column: 53
        }
      },
      "50": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 39
        }
      },
      "51": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 45
        }
      },
      "52": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 50
        }
      },
      "53": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 69
        }
      },
      "54": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 48
        }
      },
      "55": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 91
        }
      },
      "56": {
        start: {
          line: 134,
          column: 64
        },
        end: {
          line: 134,
          column: 89
        }
      },
      "57": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "58": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 141,
          column: 50
        }
      },
      "59": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "60": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 70
        }
      },
      "61": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "62": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 108
        }
      },
      "63": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "64": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 133
        }
      },
      "65": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "66": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 68
        }
      },
      "67": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "68": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 85
        }
      },
      "69": {
        start: {
          line: 159,
          column: 30
        },
        end: {
          line: 166,
          column: 13
        }
      },
      "70": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 49
        }
      },
      "71": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 35
        }
      },
      "72": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 65
        }
      },
      "73": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 75
        }
      },
      "74": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 37
        }
      },
      "75": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 65
        }
      },
      "76": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 71
        }
      },
      "77": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "78": {
        start: {
          line: 183,
          column: 26
        },
        end: {
          line: 183,
          column: 50
        }
      },
      "79": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "80": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 29
        }
      },
      "81": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 41
        }
      },
      "82": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 35
        }
      },
      "83": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 56
        }
      },
      "84": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 73
        }
      },
      "85": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 24
        }
      },
      "86": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 65
        }
      },
      "87": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 25
        }
      },
      "88": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "89": {
        start: {
          line: 203,
          column: 25
        },
        end: {
          line: 203,
          column: 51
        }
      },
      "90": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 206,
          column: 13
        }
      },
      "91": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 55
        }
      },
      "92": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 209,
          column: 13
        }
      },
      "93": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 57
        }
      },
      "94": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 222,
          column: 13
        }
      },
      "95": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 40
        }
      },
      "96": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 43
        }
      },
      "97": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "98": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 59
        }
      },
      "99": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 62
        }
      },
      "100": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 87
        }
      },
      "101": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 27
        }
      },
      "102": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 67
        }
      },
      "103": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 24
        }
      },
      "104": {
        start: {
          line: 242,
          column: 21
        },
        end: {
          line: 242,
          column: 47
        }
      },
      "105": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 244,
          column: 22
        }
      },
      "106": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 22
        }
      },
      "107": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 248,
          column: 23
        }
      },
      "108": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "109": {
        start: {
          line: 255,
          column: 29
        },
        end: {
          line: 255,
          column: 94
        }
      },
      "110": {
        start: {
          line: 256,
          column: 27
        },
        end: {
          line: 267,
          column: 13
        }
      },
      "111": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 51
        }
      },
      "112": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 52
        }
      },
      "113": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 103
        }
      },
      "114": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 28
        }
      },
      "115": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 71
        }
      },
      "116": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 24
        }
      },
      "117": {
        start: {
          line: 282,
          column: 20
        },
        end: {
          line: 282,
          column: 30
        }
      },
      "118": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 285,
          column: 36
        }
      },
      "119": {
        start: {
          line: 283,
          column: 70
        },
        end: {
          line: 285,
          column: 34
        }
      },
      "120": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "121": {
        start: {
          line: 292,
          column: 27
        },
        end: {
          line: 292,
          column: 57
        }
      },
      "122": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 295,
          column: 13
        }
      },
      "123": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 294,
          column: 42
        }
      },
      "124": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "125": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 42
        }
      },
      "126": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 39
        }
      },
      "127": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 56
        }
      },
      "128": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 69
        }
      },
      "129": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 45
        }
      },
      "130": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 73
        }
      },
      "131": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 38
        }
      },
      "132": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "133": {
        start: {
          line: 314,
          column: 27
        },
        end: {
          line: 314,
          column: 57
        }
      },
      "134": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 316,
          column: 29
        }
      },
      "135": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 316,
          column: 29
        }
      },
      "136": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 39
        }
      },
      "137": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 56
        }
      },
      "138": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 69
        }
      },
      "139": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 24
        }
      },
      "140": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 73
        }
      },
      "141": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 25
        }
      },
      "142": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "143": {
        start: {
          line: 332,
          column: 35
        },
        end: {
          line: 337,
          column: 13
        }
      },
      "144": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 340,
          column: 13
        }
      },
      "145": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 50
        }
      },
      "146": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 63
        }
      },
      "147": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 86
        }
      },
      "148": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 97
        }
      },
      "149": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 70
        }
      },
      "150": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 51
        }
      },
      "151": {
        start: {
          line: 359,
          column: 28
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "152": {
        start: {
          line: 405,
          column: 31
        },
        end: {
          line: 405,
          column: 40
        }
      },
      "153": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 408,
          column: 11
        }
      },
      "154": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 50
        }
      },
      "155": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 409,
          column: 49
        }
      },
      "156": {
        start: {
          line: 415,
          column: 27
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "157": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 487,
          column: 11
        }
      },
      "158": {
        start: {
          line: 470,
          column: 26
        },
        end: {
          line: 473,
          column: 13
        }
      },
      "159": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 485,
          column: 13
        }
      },
      "160": {
        start: {
          line: 475,
          column: 25
        },
        end: {
          line: 475,
          column: 26
        }
      },
      "161": {
        start: {
          line: 476,
          column: 31
        },
        end: {
          line: 483,
          column: 17
        }
      },
      "162": {
        start: {
          line: 484,
          column: 16
        },
        end: {
          line: 484,
          column: 57
        }
      },
      "163": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 486,
          column: 45
        }
      },
      "164": {
        start: {
          line: 493,
          column: 27
        },
        end: {
          line: 528,
          column: 9
        }
      },
      "165": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 529,
          column: 49
        }
      },
      "166": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 538,
          column: 26
        }
      },
      "167": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 537,
          column: 41
        }
      },
      "168": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 542,
          column: 22
        }
      },
      "169": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 40
        }
      },
      "170": {
        start: {
          line: 548,
          column: 20
        },
        end: {
          line: 548,
          column: 30
        }
      },
      "171": {
        start: {
          line: 549,
          column: 31
        },
        end: {
          line: 549,
          column: 33
        }
      },
      "172": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 555,
          column: 9
        }
      },
      "173": {
        start: {
          line: 551,
          column: 12
        },
        end: {
          line: 554,
          column: 13
        }
      },
      "174": {
        start: {
          line: 552,
          column: 16
        },
        end: {
          line: 552,
          column: 42
        }
      },
      "175": {
        start: {
          line: 553,
          column: 16
        },
        end: {
          line: 553,
          column: 46
        }
      },
      "176": {
        start: {
          line: 556,
          column: 8
        },
        end: {
          line: 560,
          column: 11
        }
      },
      "177": {
        start: {
          line: 557,
          column: 12
        },
        end: {
          line: 559,
          column: 36
        }
      },
      "178": {
        start: {
          line: 558,
          column: 16
        },
        end: {
          line: 558,
          column: 50
        }
      },
      "179": {
        start: {
          line: 561,
          column: 8
        },
        end: {
          line: 563,
          column: 9
        }
      },
      "180": {
        start: {
          line: 562,
          column: 12
        },
        end: {
          line: 562,
          column: 93
        }
      },
      "181": {
        start: {
          line: 569,
          column: 20
        },
        end: {
          line: 569,
          column: 30
        }
      },
      "182": {
        start: {
          line: 570,
          column: 34
        },
        end: {
          line: 570,
          column: 47
        }
      },
      "183": {
        start: {
          line: 571,
          column: 8
        },
        end: {
          line: 576,
          column: 9
        }
      },
      "184": {
        start: {
          line: 572,
          column: 12
        },
        end: {
          line: 575,
          column: 13
        }
      },
      "185": {
        start: {
          line: 574,
          column: 16
        },
        end: {
          line: 574,
          column: 54
        }
      },
      "186": {
        start: {
          line: 582,
          column: 24
        },
        end: {
          line: 582,
          column: 113
        }
      },
      "187": {
        start: {
          line: 583,
          column: 8
        },
        end: {
          line: 583,
          column: 67
        }
      },
      "188": {
        start: {
          line: 586,
          column: 0
        },
        end: {
          line: 586,
          column: 38
        }
      },
      "189": {
        start: {
          line: 587,
          column: 0
        },
        end: {
          line: 587,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 40
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 38
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 95
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 47
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 111
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 25
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 127
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 133
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 134,
            column: 55
          },
          end: {
            line: 134,
            column: 56
          }
        },
        loc: {
          start: {
            line: 134,
            column: 64
          },
          end: {
            line: 134,
            column: 89
          }
        },
        line: 134
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 61
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 139
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 38
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 181
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 78
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 201
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 52
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 241
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 83
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 253
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        },
        loc: {
          start: {
            line: 281,
            column: 31
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 281
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 283,
            column: 60
          },
          end: {
            line: 283,
            column: 61
          }
        },
        loc: {
          start: {
            line: 283,
            column: 70
          },
          end: {
            line: 285,
            column: 34
          }
        },
        line: 283
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        loc: {
          start: {
            line: 290,
            column: 37
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 290
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        loc: {
          start: {
            line: 312,
            column: 38
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 312
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 46
          },
          end: {
            line: 348,
            column: 5
          }
        },
        line: 330
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        loc: {
          start: {
            line: 352,
            column: 32
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 352
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 30
          },
          end: {
            line: 410,
            column: 5
          }
        },
        line: 358
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 406,
            column: 28
          },
          end: {
            line: 406,
            column: 29
          }
        },
        loc: {
          start: {
            line: 406,
            column: 38
          },
          end: {
            line: 408,
            column: 9
          }
        },
        line: 406
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 414,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        },
        loc: {
          start: {
            line: 414,
            column: 23
          },
          end: {
            line: 488,
            column: 5
          }
        },
        line: 414
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 469,
            column: 27
          },
          end: {
            line: 469,
            column: 28
          }
        },
        loc: {
          start: {
            line: 469,
            column: 40
          },
          end: {
            line: 487,
            column: 9
          }
        },
        line: 469
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 492,
            column: 4
          },
          end: {
            line: 492,
            column: 5
          }
        },
        loc: {
          start: {
            line: 492,
            column: 26
          },
          end: {
            line: 530,
            column: 5
          }
        },
        line: 492
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 534,
            column: 5
          }
        },
        loc: {
          start: {
            line: 534,
            column: 25
          },
          end: {
            line: 543,
            column: 5
          }
        },
        line: 534
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 536,
            column: 20
          },
          end: {
            line: 536,
            column: 21
          }
        },
        loc: {
          start: {
            line: 536,
            column: 26
          },
          end: {
            line: 538,
            column: 9
          }
        },
        line: 536
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 540,
            column: 20
          },
          end: {
            line: 540,
            column: 21
          }
        },
        loc: {
          start: {
            line: 540,
            column: 26
          },
          end: {
            line: 542,
            column: 9
          }
        },
        line: 540
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 547,
            column: 4
          },
          end: {
            line: 547,
            column: 5
          }
        },
        loc: {
          start: {
            line: 547,
            column: 28
          },
          end: {
            line: 564,
            column: 5
          }
        },
        line: 547
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 556,
            column: 31
          },
          end: {
            line: 556,
            column: 32
          }
        },
        loc: {
          start: {
            line: 556,
            column: 43
          },
          end: {
            line: 560,
            column: 9
          }
        },
        line: 556
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 557,
            column: 23
          },
          end: {
            line: 557,
            column: 24
          }
        },
        loc: {
          start: {
            line: 557,
            column: 29
          },
          end: {
            line: 559,
            column: 13
          }
        },
        line: 557
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 568,
            column: 4
          },
          end: {
            line: 568,
            column: 5
          }
        },
        loc: {
          start: {
            line: 568,
            column: 27
          },
          end: {
            line: 577,
            column: 5
          }
        },
        line: 568
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 581,
            column: 4
          },
          end: {
            line: 581,
            column: 5
          }
        },
        loc: {
          start: {
            line: 581,
            column: 22
          },
          end: {
            line: 584,
            column: 5
          }
        },
        line: 581
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 30
          },
          end: {
            line: 45,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 30
          },
          end: {
            line: 45,
            column: 64
          }
        }, {
          start: {
            line: 45,
            column: 68
          },
          end: {
            line: 45,
            column: 70
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "4": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "5": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "6": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "7": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "8": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "9": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 149,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 149,
            column: 45
          }
        }, {
          start: {
            line: 149,
            column: 49
          },
          end: {
            line: 149,
            column: 92
          }
        }],
        line: 149
      },
      "10": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "11": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "12": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "13": {
        loc: {
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 184,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 184,
            column: 22
          }
        }, {
          start: {
            line: 184,
            column: 26
          },
          end: {
            line: 184,
            column: 52
          }
        }],
        line: 184
      },
      "14": {
        loc: {
          start: {
            line: 201,
            column: 53
          },
          end: {
            line: 201,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 201,
            column: 60
          },
          end: {
            line: 201,
            column: 66
          }
        }],
        line: 201
      },
      "15": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "16": {
        loc: {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "17": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "18": {
        loc: {
          start: {
            line: 241,
            column: 28
          },
          end: {
            line: 241,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 241,
            column: 36
          },
          end: {
            line: 241,
            column: 38
          }
        }],
        line: 241
      },
      "19": {
        loc: {
          start: {
            line: 241,
            column: 40
          },
          end: {
            line: 241,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 241,
            column: 49
          },
          end: {
            line: 241,
            column: 50
          }
        }],
        line: 241
      },
      "20": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 244,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 244,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "21": {
        loc: {
          start: {
            line: 283,
            column: 70
          },
          end: {
            line: 285,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 70
          },
          end: {
            line: 283,
            column: 96
          }
        }, {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 284,
            column: 39
          }
        }, {
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 285,
            column: 34
          }
        }],
        line: 283
      },
      "22": {
        loc: {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 295,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 295,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "23": {
        loc: {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "24": {
        loc: {
          start: {
            line: 296,
            column: 16
          },
          end: {
            line: 296,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 296,
            column: 16
          },
          end: {
            line: 296,
            column: 43
          }
        }, {
          start: {
            line: 296,
            column: 47
          },
          end: {
            line: 296,
            column: 76
          }
        }],
        line: 296
      },
      "25": {
        loc: {
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 316,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 316,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "26": {
        loc: {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "27": {
        loc: {
          start: {
            line: 353,
            column: 15
          },
          end: {
            line: 353,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 15
          },
          end: {
            line: 353,
            column: 44
          }
        }, {
          start: {
            line: 353,
            column: 48
          },
          end: {
            line: 353,
            column: 50
          }
        }],
        line: 353
      },
      "28": {
        loc: {
          start: {
            line: 479,
            column: 26
          },
          end: {
            line: 479,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 479,
            column: 36
          },
          end: {
            line: 479,
            column: 44
          }
        }, {
          start: {
            line: 479,
            column: 47
          },
          end: {
            line: 479,
            column: 75
          }
        }],
        line: 479
      },
      "29": {
        loc: {
          start: {
            line: 479,
            column: 47
          },
          end: {
            line: 479,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 479,
            column: 55
          },
          end: {
            line: 479,
            column: 64
          }
        }, {
          start: {
            line: 479,
            column: 67
          },
          end: {
            line: 479,
            column: 75
          }
        }],
        line: 479
      },
      "30": {
        loc: {
          start: {
            line: 551,
            column: 12
          },
          end: {
            line: 554,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 551,
            column: 12
          },
          end: {
            line: 554,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 551
      },
      "31": {
        loc: {
          start: {
            line: 551,
            column: 16
          },
          end: {
            line: 551,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 551,
            column: 16
          },
          end: {
            line: 551,
            column: 38
          }
        }, {
          start: {
            line: 551,
            column: 42
          },
          end: {
            line: 551,
            column: 69
          }
        }],
        line: 551
      },
      "32": {
        loc: {
          start: {
            line: 561,
            column: 8
          },
          end: {
            line: 563,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 561,
            column: 8
          },
          end: {
            line: 563,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 561
      },
      "33": {
        loc: {
          start: {
            line: 572,
            column: 12
          },
          end: {
            line: 575,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 572,
            column: 12
          },
          end: {
            line: 575,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 572
      },
      "34": {
        loc: {
          start: {
            line: 572,
            column: 16
          },
          end: {
            line: 573,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 572,
            column: 16
          },
          end: {
            line: 572,
            column: 46
          }
        }, {
          start: {
            line: 573,
            column: 16
          },
          end: {
            line: 573,
            column: 83
          }
        }],
        line: 572
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fe1fb3f4561aa744ce422b09602406d2e8ef667a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b9431avi7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b9431avi7();
cov_b9431avi7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_b9431avi7().s[1]++;
exports.socialService = exports.SocialService = void 0;
const events_1 =
/* istanbul ignore next */
(cov_b9431avi7().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_b9431avi7().s[3]++, require("@/config/logger"));
/**
 * Social Service
 * Manages friends, guilds, chat, and social interactions
 */
class SocialService extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  static instance;
  friends =
  /* istanbul ignore next */
  (cov_b9431avi7().s[4]++, new Map());
  guilds =
  /* istanbul ignore next */
  (cov_b9431avi7().s[5]++, new Map());
  chatRooms =
  /* istanbul ignore next */
  (cov_b9431avi7().s[6]++, new Map());
  gameInvites =
  /* istanbul ignore next */
  (cov_b9431avi7().s[7]++, new Map());
  achievements =
  /* istanbul ignore next */
  (cov_b9431avi7().s[8]++, new Map());
  userStatuses =
  /* istanbul ignore next */
  (cov_b9431avi7().s[9]++, new Map());
  constructor() {
    /* istanbul ignore next */
    cov_b9431avi7().f[0]++;
    cov_b9431avi7().s[10]++;
    super();
    /* istanbul ignore next */
    cov_b9431avi7().s[11]++;
    this.initializeMockData();
    /* istanbul ignore next */
    cov_b9431avi7().s[12]++;
    this.startPeriodicTasks();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_b9431avi7().f[1]++;
    cov_b9431avi7().s[13]++;
    if (!SocialService.instance) {
      /* istanbul ignore next */
      cov_b9431avi7().b[0][0]++;
      cov_b9431avi7().s[14]++;
      SocialService.instance = new SocialService();
    } else
    /* istanbul ignore next */
    {
      cov_b9431avi7().b[0][1]++;
    }
    cov_b9431avi7().s[15]++;
    return SocialService.instance;
  }
  /**
   * Initialize mock social data
   */
  initializeMockData() {
    /* istanbul ignore next */
    cov_b9431avi7().f[2]++;
    cov_b9431avi7().s[16]++;
    this.createMockGuilds();
    /* istanbul ignore next */
    cov_b9431avi7().s[17]++;
    this.createMockChatRooms();
    /* istanbul ignore next */
    cov_b9431avi7().s[18]++;
    logger_1.logger.info('Social service initialized with mock data');
  }
  /**
   * Get user's friends list
   */
  getUserFriends(userId) {
    /* istanbul ignore next */
    cov_b9431avi7().f[3]++;
    const userFriends =
    /* istanbul ignore next */
    (cov_b9431avi7().s[19]++, this.friends.get(userId));
    /* istanbul ignore next */
    cov_b9431avi7().s[20]++;
    if (!userFriends) {
      /* istanbul ignore next */
      cov_b9431avi7().b[1][0]++;
      cov_b9431avi7().s[21]++;
      // Create mock friends for new users
      this.createMockFriends(userId);
      /* istanbul ignore next */
      cov_b9431avi7().s[22]++;
      return Array.from(
      /* istanbul ignore next */
      (cov_b9431avi7().b[2][0]++, this.friends.get(userId)?.values()) ||
      /* istanbul ignore next */
      (cov_b9431avi7().b[2][1]++, []));
    } else
    /* istanbul ignore next */
    {
      cov_b9431avi7().b[1][1]++;
    }
    cov_b9431avi7().s[23]++;
    return Array.from(userFriends.values());
  }
  /**
   * Add friend relationship
   */
  async addFriend(userId, friendId) {
    /* istanbul ignore next */
    cov_b9431avi7().f[4]++;
    cov_b9431avi7().s[24]++;
    try {
      // In production, this would check if users exist and handle friend requests
      const mockFriend =
      /* istanbul ignore next */
      (cov_b9431avi7().s[25]++, {
        id: friendId,
        username: `Player_${friendId}`,
        avatar: this.getRandomAvatar(),
        level: Math.floor(Math.random() * 50) + 1,
        status: 'offline',
        lastSeen: new Date(),
        winRate: Math.random() * 0.5 + 0.3,
        totalGames: Math.floor(Math.random() * 200) + 10,
        favoriteGame: 'Battle Royale',
        mutualFriends: Math.floor(Math.random() * 10),
        friendshipDate: new Date(),
        socialScore: Math.floor(Math.random() * 1000) + 100
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[26]++;
      if (!this.friends.has(userId)) {
        /* istanbul ignore next */
        cov_b9431avi7().b[3][0]++;
        cov_b9431avi7().s[27]++;
        this.friends.set(userId, new Map());
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[3][1]++;
      }
      cov_b9431avi7().s[28]++;
      if (!this.friends.has(friendId)) {
        /* istanbul ignore next */
        cov_b9431avi7().b[4][0]++;
        cov_b9431avi7().s[29]++;
        this.friends.set(friendId, new Map());
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[4][1]++;
      }
      cov_b9431avi7().s[30]++;
      this.friends.get(userId).set(friendId, mockFriend);
      // Reciprocal relationship
      const reciprocalFriend =
      /* istanbul ignore next */
      (cov_b9431avi7().s[31]++, {
        ...mockFriend,
        id: userId,
        username: `Player_${userId}`
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[32]++;
      this.friends.get(friendId).set(userId, reciprocalFriend);
      /* istanbul ignore next */
      cov_b9431avi7().s[33]++;
      this.emit('friendAdded', {
        userId,
        friendId
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[34]++;
      logger_1.logger.info(`Friend relationship created between ${userId} and ${friendId}`);
      /* istanbul ignore next */
      cov_b9431avi7().s[35]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_b9431avi7().s[36]++;
      logger_1.logger.error('Error adding friend:', error);
      /* istanbul ignore next */
      cov_b9431avi7().s[37]++;
      return false;
    }
  }
  /**
   * Remove friend relationship
   */
  async removeFriend(userId, friendId) {
    /* istanbul ignore next */
    cov_b9431avi7().f[5]++;
    cov_b9431avi7().s[38]++;
    try {
      /* istanbul ignore next */
      cov_b9431avi7().s[39]++;
      this.friends.get(userId)?.delete(friendId);
      /* istanbul ignore next */
      cov_b9431avi7().s[40]++;
      this.friends.get(friendId)?.delete(userId);
      /* istanbul ignore next */
      cov_b9431avi7().s[41]++;
      this.emit('friendRemoved', {
        userId,
        friendId
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[42]++;
      logger_1.logger.info(`Friend relationship removed between ${userId} and ${friendId}`);
      /* istanbul ignore next */
      cov_b9431avi7().s[43]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_b9431avi7().s[44]++;
      logger_1.logger.error('Error removing friend:', error);
      /* istanbul ignore next */
      cov_b9431avi7().s[45]++;
      return false;
    }
  }
  /**
   * Update user status
   */
  updateUserStatus(userId, status, gameCode) {
    /* istanbul ignore next */
    cov_b9431avi7().f[6]++;
    cov_b9431avi7().s[46]++;
    this.userStatuses.set(userId, {
      status,
      lastUpdate: new Date()
    });
    // Update status in friends lists
    /* istanbul ignore next */
    cov_b9431avi7().s[47]++;
    for (const [friendsMapKey, friendsMap] of this.friends.entries()) {
      /* istanbul ignore next */
      cov_b9431avi7().s[48]++;
      if (friendsMap.has(userId)) {
        /* istanbul ignore next */
        cov_b9431avi7().b[5][0]++;
        const friend =
        /* istanbul ignore next */
        (cov_b9431avi7().s[49]++, friendsMap.get(userId));
        /* istanbul ignore next */
        cov_b9431avi7().s[50]++;
        friend.status = status;
        /* istanbul ignore next */
        cov_b9431avi7().s[51]++;
        friend.lastSeen = new Date();
        /* istanbul ignore next */
        cov_b9431avi7().s[52]++;
        friend.currentGameCode = gameCode;
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[5][1]++;
      }
    }
    /* istanbul ignore next */
    cov_b9431avi7().s[53]++;
    this.emit('userStatusUpdated', {
      userId,
      status,
      gameCode
    });
  }
  /**
   * Get available guilds
   */
  getAvailableGuilds() {
    /* istanbul ignore next */
    cov_b9431avi7().f[7]++;
    cov_b9431avi7().s[54]++;
    return Array.from(this.guilds.values());
  }
  /**
   * Get user's guild memberships
   */
  getUserGuilds(userId) {
    /* istanbul ignore next */
    cov_b9431avi7().f[8]++;
    cov_b9431avi7().s[55]++;
    return Array.from(this.guilds.values()).filter(guild => {
      /* istanbul ignore next */
      cov_b9431avi7().f[9]++;
      cov_b9431avi7().s[56]++;
      return guild.members.has(userId);
    });
  }
  /**
   * Join guild
   */
  async joinGuild(userId, guildId, userLevel, userWinRate) {
    /* istanbul ignore next */
    cov_b9431avi7().f[10]++;
    cov_b9431avi7().s[57]++;
    try {
      const guild =
      /* istanbul ignore next */
      (cov_b9431avi7().s[58]++, this.guilds.get(guildId));
      /* istanbul ignore next */
      cov_b9431avi7().s[59]++;
      if (!guild) {
        /* istanbul ignore next */
        cov_b9431avi7().b[6][0]++;
        cov_b9431avi7().s[60]++;
        return {
          success: false,
          message: 'Guild not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[6][1]++;
      }
      // Check requirements
      cov_b9431avi7().s[61]++;
      if (userLevel < guild.requirements.minLevel) {
        /* istanbul ignore next */
        cov_b9431avi7().b[7][0]++;
        cov_b9431avi7().s[62]++;
        return {
          success: false,
          message: `Minimum level ${guild.requirements.minLevel} required`
        };
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[7][1]++;
      }
      cov_b9431avi7().s[63]++;
      if (
      /* istanbul ignore next */
      (cov_b9431avi7().b[9][0]++, guild.requirements.minWinRate) &&
      /* istanbul ignore next */
      (cov_b9431avi7().b[9][1]++, userWinRate < guild.requirements.minWinRate)) {
        /* istanbul ignore next */
        cov_b9431avi7().b[8][0]++;
        cov_b9431avi7().s[64]++;
        return {
          success: false,
          message: `Minimum win rate ${(guild.requirements.minWinRate * 100).toFixed(0)}% required`
        };
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[8][1]++;
      }
      cov_b9431avi7().s[65]++;
      if (guild.memberCount >= guild.maxMembers) {
        /* istanbul ignore next */
        cov_b9431avi7().b[10][0]++;
        cov_b9431avi7().s[66]++;
        return {
          success: false,
          message: 'Guild is full'
        };
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[10][1]++;
      }
      cov_b9431avi7().s[67]++;
      if (guild.members.has(userId)) {
        /* istanbul ignore next */
        cov_b9431avi7().b[11][0]++;
        cov_b9431avi7().s[68]++;
        return {
          success: false,
          message: 'Already a member of this guild'
        };
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[11][1]++;
      }
      // Add member
      const newMember =
      /* istanbul ignore next */
      (cov_b9431avi7().s[69]++, {
        userId,
        username: `Player_${userId}`,
        role: 'member',
        joinedAt: new Date(),
        contribution: 0,
        lastActive: new Date()
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[70]++;
      guild.members.set(userId, newMember);
      /* istanbul ignore next */
      cov_b9431avi7().s[71]++;
      guild.memberCount += 1;
      /* istanbul ignore next */
      cov_b9431avi7().s[72]++;
      this.emit('guildJoined', {
        userId,
        guildId,
        guild
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[73]++;
      logger_1.logger.info(`User ${userId} joined guild ${guildId}`);
      /* istanbul ignore next */
      cov_b9431avi7().s[74]++;
      return {
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_b9431avi7().s[75]++;
      logger_1.logger.error('Error joining guild:', error);
      /* istanbul ignore next */
      cov_b9431avi7().s[76]++;
      return {
        success: false,
        message: 'Failed to join guild'
      };
    }
  }
  /**
   * Leave guild
   */
  async leaveGuild(userId, guildId) {
    /* istanbul ignore next */
    cov_b9431avi7().f[11]++;
    cov_b9431avi7().s[77]++;
    try {
      const guild =
      /* istanbul ignore next */
      (cov_b9431avi7().s[78]++, this.guilds.get(guildId));
      /* istanbul ignore next */
      cov_b9431avi7().s[79]++;
      if (
      /* istanbul ignore next */
      (cov_b9431avi7().b[13][0]++, !guild) ||
      /* istanbul ignore next */
      (cov_b9431avi7().b[13][1]++, !guild.members.has(userId))) {
        /* istanbul ignore next */
        cov_b9431avi7().b[12][0]++;
        cov_b9431avi7().s[80]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[12][1]++;
      }
      cov_b9431avi7().s[81]++;
      guild.members.delete(userId);
      /* istanbul ignore next */
      cov_b9431avi7().s[82]++;
      guild.memberCount -= 1;
      /* istanbul ignore next */
      cov_b9431avi7().s[83]++;
      this.emit('guildLeft', {
        userId,
        guildId
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[84]++;
      logger_1.logger.info(`User ${userId} left guild ${guildId}`);
      /* istanbul ignore next */
      cov_b9431avi7().s[85]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_b9431avi7().s[86]++;
      logger_1.logger.error('Error leaving guild:', error);
      /* istanbul ignore next */
      cov_b9431avi7().s[87]++;
      return false;
    }
  }
  /**
   * Send chat message
   */
  async sendChatMessage(senderId, roomId, content, type =
  /* istanbul ignore next */
  (cov_b9431avi7().b[14][0]++, 'text'), metadata) {
    /* istanbul ignore next */
    cov_b9431avi7().f[12]++;
    cov_b9431avi7().s[88]++;
    try {
      const room =
      /* istanbul ignore next */
      (cov_b9431avi7().s[89]++, this.chatRooms.get(roomId));
      /* istanbul ignore next */
      cov_b9431avi7().s[90]++;
      if (!room) {
        /* istanbul ignore next */
        cov_b9431avi7().b[15][0]++;
        cov_b9431avi7().s[91]++;
        throw new Error('Chat room not found');
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[15][1]++;
      }
      cov_b9431avi7().s[92]++;
      if (!room.participants.includes(senderId)) {
        /* istanbul ignore next */
        cov_b9431avi7().b[16][0]++;
        cov_b9431avi7().s[93]++;
        throw new Error('User not in chat room');
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[16][1]++;
      }
      const message =
      /* istanbul ignore next */
      (cov_b9431avi7().s[94]++, {
        id: `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
        senderId,
        senderName: `Player_${senderId}`,
        senderAvatar: this.getRandomAvatar(),
        roomId,
        content: content.trim(),
        type,
        timestamp: new Date(),
        metadata,
        reactions: new Map(),
        isEdited: false
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[95]++;
      room.messages.push(message);
      /* istanbul ignore next */
      cov_b9431avi7().s[96]++;
      room.lastActivity = new Date();
      // Keep only last 1000 messages per room
      /* istanbul ignore next */
      cov_b9431avi7().s[97]++;
      if (room.messages.length > 1000) {
        /* istanbul ignore next */
        cov_b9431avi7().b[17][0]++;
        cov_b9431avi7().s[98]++;
        room.messages = room.messages.slice(-1000);
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[17][1]++;
      }
      cov_b9431avi7().s[99]++;
      this.emit('messageReceived', {
        roomId,
        message
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[100]++;
      logger_1.logger.info(`Message sent in room ${roomId} by user ${senderId}`);
      /* istanbul ignore next */
      cov_b9431avi7().s[101]++;
      return message;
    } catch (error) {
      /* istanbul ignore next */
      cov_b9431avi7().s[102]++;
      logger_1.logger.error('Error sending message:', error);
      /* istanbul ignore next */
      cov_b9431avi7().s[103]++;
      return null;
    }
  }
  /**
   * Get chat messages for a room
   */
  getChatMessages(roomId, limit =
  /* istanbul ignore next */
  (cov_b9431avi7().b[18][0]++, 50), offset =
  /* istanbul ignore next */
  (cov_b9431avi7().b[19][0]++, 0)) {
    /* istanbul ignore next */
    cov_b9431avi7().f[13]++;
    const room =
    /* istanbul ignore next */
    (cov_b9431avi7().s[104]++, this.chatRooms.get(roomId));
    /* istanbul ignore next */
    cov_b9431avi7().s[105]++;
    if (!room) {
      /* istanbul ignore next */
      cov_b9431avi7().b[20][0]++;
      cov_b9431avi7().s[106]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_b9431avi7().b[20][1]++;
    }
    cov_b9431avi7().s[107]++;
    return room.messages.slice(-(offset + limit)).slice(-limit).reverse();
  }
  /**
   * Send game invite
   */
  async sendGameInvite(fromUserId, toUserId, gameCode, gameName, message, stake) {
    /* istanbul ignore next */
    cov_b9431avi7().f[14]++;
    cov_b9431avi7().s[108]++;
    try {
      const inviteId =
      /* istanbul ignore next */
      (cov_b9431avi7().s[109]++, `invite_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
      const invite =
      /* istanbul ignore next */
      (cov_b9431avi7().s[110]++, {
        id: inviteId,
        fromUserId,
        toUserId,
        gameCode,
        gameName,
        message,
        stake,
        expiresAt: new Date(Date.now() + 15 * 60 * 1000),
        // 15 minutes
        status: 'pending',
        createdAt: new Date()
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[111]++;
      this.gameInvites.set(inviteId, invite);
      /* istanbul ignore next */
      cov_b9431avi7().s[112]++;
      this.emit('gameInviteSent', {
        invite
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[113]++;
      logger_1.logger.info(`Game invite sent from ${fromUserId} to ${toUserId} for ${gameCode}`);
      /* istanbul ignore next */
      cov_b9431avi7().s[114]++;
      return inviteId;
    } catch (error) {
      /* istanbul ignore next */
      cov_b9431avi7().s[115]++;
      logger_1.logger.error('Error sending game invite:', error);
      /* istanbul ignore next */
      cov_b9431avi7().s[116]++;
      return null;
    }
  }
  /**
   * Get user's pending game invites
   */
  getUserGameInvites(userId) {
    /* istanbul ignore next */
    cov_b9431avi7().f[15]++;
    const now =
    /* istanbul ignore next */
    (cov_b9431avi7().s[117]++, new Date());
    /* istanbul ignore next */
    cov_b9431avi7().s[118]++;
    return Array.from(this.gameInvites.values()).filter(invite => {
      /* istanbul ignore next */
      cov_b9431avi7().f[16]++;
      cov_b9431avi7().s[119]++;
      return /* istanbul ignore next */(cov_b9431avi7().b[21][0]++, invite.toUserId === userId) &&
      /* istanbul ignore next */
      (cov_b9431avi7().b[21][1]++, invite.status === 'pending') &&
      /* istanbul ignore next */
      (cov_b9431avi7().b[21][2]++, invite.expiresAt > now);
    });
  }
  /**
   * Accept game invite
   */
  async acceptGameInvite(inviteId) {
    /* istanbul ignore next */
    cov_b9431avi7().f[17]++;
    cov_b9431avi7().s[120]++;
    try {
      const invite =
      /* istanbul ignore next */
      (cov_b9431avi7().s[121]++, this.gameInvites.get(inviteId));
      /* istanbul ignore next */
      cov_b9431avi7().s[122]++;
      if (!invite) {
        /* istanbul ignore next */
        cov_b9431avi7().b[22][0]++;
        cov_b9431avi7().s[123]++;
        return {
          success: false
        };
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[22][1]++;
      }
      cov_b9431avi7().s[124]++;
      if (
      /* istanbul ignore next */
      (cov_b9431avi7().b[24][0]++, invite.status !== 'pending') ||
      /* istanbul ignore next */
      (cov_b9431avi7().b[24][1]++, invite.expiresAt < new Date())) {
        /* istanbul ignore next */
        cov_b9431avi7().b[23][0]++;
        cov_b9431avi7().s[125]++;
        return {
          success: false
        };
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[23][1]++;
      }
      cov_b9431avi7().s[126]++;
      invite.status = 'accepted';
      /* istanbul ignore next */
      cov_b9431avi7().s[127]++;
      this.emit('gameInviteAccepted', {
        invite
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[128]++;
      logger_1.logger.info(`Game invite ${inviteId} accepted`);
      /* istanbul ignore next */
      cov_b9431avi7().s[129]++;
      return {
        success: true,
        invite
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_b9431avi7().s[130]++;
      logger_1.logger.error('Error accepting game invite:', error);
      /* istanbul ignore next */
      cov_b9431avi7().s[131]++;
      return {
        success: false
      };
    }
  }
  /**
   * Decline game invite
   */
  async declineGameInvite(inviteId) {
    /* istanbul ignore next */
    cov_b9431avi7().f[18]++;
    cov_b9431avi7().s[132]++;
    try {
      const invite =
      /* istanbul ignore next */
      (cov_b9431avi7().s[133]++, this.gameInvites.get(inviteId));
      /* istanbul ignore next */
      cov_b9431avi7().s[134]++;
      if (!invite) {
        /* istanbul ignore next */
        cov_b9431avi7().b[25][0]++;
        cov_b9431avi7().s[135]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[25][1]++;
      }
      cov_b9431avi7().s[136]++;
      invite.status = 'declined';
      /* istanbul ignore next */
      cov_b9431avi7().s[137]++;
      this.emit('gameInviteDeclined', {
        invite
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[138]++;
      logger_1.logger.info(`Game invite ${inviteId} declined`);
      /* istanbul ignore next */
      cov_b9431avi7().s[139]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_b9431avi7().s[140]++;
      logger_1.logger.error('Error declining game invite:', error);
      /* istanbul ignore next */
      cov_b9431avi7().s[141]++;
      return false;
    }
  }
  /**
   * Add achievement for user
   */
  async addAchievement(userId, achievement) {
    /* istanbul ignore next */
    cov_b9431avi7().f[19]++;
    cov_b9431avi7().s[142]++;
    try {
      const newAchievement =
      /* istanbul ignore next */
      (cov_b9431avi7().s[143]++, {
        id: `ach_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
        userId,
        unlockedAt: new Date(),
        ...achievement
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[144]++;
      if (!this.achievements.has(userId)) {
        /* istanbul ignore next */
        cov_b9431avi7().b[26][0]++;
        cov_b9431avi7().s[145]++;
        this.achievements.set(userId, []);
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[26][1]++;
      }
      cov_b9431avi7().s[146]++;
      this.achievements.get(userId).push(newAchievement);
      /* istanbul ignore next */
      cov_b9431avi7().s[147]++;
      this.emit('achievementUnlocked', {
        userId,
        achievement: newAchievement
      });
      /* istanbul ignore next */
      cov_b9431avi7().s[148]++;
      logger_1.logger.info(`Achievement unlocked for user ${userId}: ${achievement.name}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_b9431avi7().s[149]++;
      logger_1.logger.error('Error adding achievement:', error);
    }
  }
  /**
   * Get user achievements
   */
  getUserAchievements(userId) {
    /* istanbul ignore next */
    cov_b9431avi7().f[20]++;
    cov_b9431avi7().s[150]++;
    return /* istanbul ignore next */(cov_b9431avi7().b[27][0]++, this.achievements.get(userId)) ||
    /* istanbul ignore next */
    (cov_b9431avi7().b[27][1]++, []);
  }
  /**
   * Create mock friends for a user
   */
  createMockFriends(userId) {
    /* istanbul ignore next */
    cov_b9431avi7().f[21]++;
    const mockFriends =
    /* istanbul ignore next */
    (cov_b9431avi7().s[151]++, [{
      id: 'friend1',
      username: 'GamerPro',
      avatar: '🎮',
      level: 25,
      status: 'online',
      lastSeen: new Date(Date.now() - 2 * 60 * 1000),
      winRate: 0.75,
      totalGames: 150,
      favoriteGame: 'Battle Royale',
      currentGameCode: 'crypto-battle-royale',
      mutualFriends: 5,
      friendshipDate: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),
      socialScore: 850
    }, {
      id: 'friend2',
      username: 'ChessWizard',
      avatar: '♟️',
      level: 30,
      status: 'in-game',
      lastSeen: new Date(),
      winRate: 0.82,
      totalGames: 200,
      favoriteGame: 'Speed Chess',
      currentGameCode: 'speed-chess',
      mutualFriends: 3,
      friendshipDate: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000),
      socialScore: 920
    }, {
      id: 'friend3',
      username: 'PokerFace',
      avatar: '🃏',
      level: 20,
      status: 'offline',
      lastSeen: new Date(Date.now() - 60 * 60 * 1000),
      winRate: 0.68,
      totalGames: 120,
      favoriteGame: 'AI Poker',
      mutualFriends: 8,
      friendshipDate: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000),
      socialScore: 740
    }]);
    const userFriendsMap =
    /* istanbul ignore next */
    (cov_b9431avi7().s[152]++, new Map());
    /* istanbul ignore next */
    cov_b9431avi7().s[153]++;
    mockFriends.forEach(friend => {
      /* istanbul ignore next */
      cov_b9431avi7().f[22]++;
      cov_b9431avi7().s[154]++;
      userFriendsMap.set(friend.id, friend);
    });
    /* istanbul ignore next */
    cov_b9431avi7().s[155]++;
    this.friends.set(userId, userFriendsMap);
  }
  /**
   * Create mock guilds
   */
  createMockGuilds() {
    /* istanbul ignore next */
    cov_b9431avi7().f[23]++;
    const mockGuilds =
    /* istanbul ignore next */
    (cov_b9431avi7().s[156]++, [{
      id: 'guild1',
      name: 'Elite Gamers',
      tag: 'ELITE',
      description: 'Top-tier competitive gaming guild. Only the best players.',
      memberCount: 45,
      maxMembers: 50,
      level: 15,
      xp: 125000,
      avatar: '⚔️',
      bannerColor: '#FF4444',
      requirements: {
        minLevel: 20,
        minWinRate: 0.70,
        minGamesPlayed: 100
      },
      activities: ['Daily tournaments', 'Strategy sessions', 'Skill training'],
      perks: ['10% bonus XP', 'Exclusive tournaments', 'Priority matchmaking'],
      createdAt: new Date(Date.now() - 180 * 24 * 60 * 60 * 1000),
      ownerId: 'owner1',
      officers: ['officer1', 'officer2'],
      stats: {
        totalGamesPlayed: 5000,
        totalWinnings: 2500000,
        averageWinRate: 0.72
      }
    }, {
      id: 'guild2',
      name: 'Casual Legends',
      tag: 'CASU',
      description: 'Friendly community for casual gamers who love to have fun!',
      memberCount: 38,
      maxMembers: 40,
      level: 8,
      xp: 65000,
      avatar: '🎯',
      bannerColor: '#4CAF50',
      requirements: {
        minLevel: 5
      },
      activities: ['Friendly matches', 'Social events', 'Beginner guides'],
      perks: ['Weekly rewards', 'Mentorship program', 'Social events'],
      createdAt: new Date(Date.now() - 120 * 24 * 60 * 60 * 1000),
      ownerId: 'owner2',
      officers: ['officer3'],
      stats: {
        totalGamesPlayed: 2000,
        totalWinnings: 800000,
        averageWinRate: 0.55
      }
    }]);
    /* istanbul ignore next */
    cov_b9431avi7().s[157]++;
    mockGuilds.forEach(guildData => {
      /* istanbul ignore next */
      cov_b9431avi7().f[24]++;
      const guild =
      /* istanbul ignore next */
      (cov_b9431avi7().s[158]++, {
        ...guildData,
        members: new Map()
      });
      // Add mock members
      /* istanbul ignore next */
      cov_b9431avi7().s[159]++;
      for (let i =
      /* istanbul ignore next */
      (cov_b9431avi7().s[160]++, 0); i < guildData.memberCount; i++) {
        const member =
        /* istanbul ignore next */
        (cov_b9431avi7().s[161]++, {
          userId: `member_${guildData.id}_${i}`,
          username: `Player${i}`,
          role: i === 0 ?
          /* istanbul ignore next */
          (cov_b9431avi7().b[28][0]++, 'leader') :
          /* istanbul ignore next */
          (cov_b9431avi7().b[28][1]++, i < 3 ?
          /* istanbul ignore next */
          (cov_b9431avi7().b[29][0]++, 'officer') :
          /* istanbul ignore next */
          (cov_b9431avi7().b[29][1]++, 'member')),
          joinedAt: new Date(Date.now() - Math.random() * 90 * 24 * 60 * 60 * 1000),
          contribution: Math.floor(Math.random() * 1000),
          lastActive: new Date(Date.now() - Math.random() * 7 * 24 * 60 * 60 * 1000)
        });
        /* istanbul ignore next */
        cov_b9431avi7().s[162]++;
        guild.members.set(member.userId, member);
      }
      /* istanbul ignore next */
      cov_b9431avi7().s[163]++;
      this.guilds.set(guild.id, guild);
    });
  }
  /**
   * Create mock chat rooms
   */
  createMockChatRooms() {
    /* istanbul ignore next */
    cov_b9431avi7().f[25]++;
    const globalRoom =
    /* istanbul ignore next */
    (cov_b9431avi7().s[164]++, {
      id: 'global',
      name: 'Global Chat',
      type: 'global',
      participants: ['user1', 'user2', 'user3', 'user4', 'user5'],
      messages: [{
        id: 'msg1',
        senderId: 'user1',
        senderName: 'GamerPro',
        senderAvatar: '🎮',
        roomId: 'global',
        content: 'Anyone up for a quick battle royale match?',
        type: 'text',
        timestamp: new Date(Date.now() - 5 * 60 * 1000),
        metadata: null,
        reactions: new Map(),
        isEdited: false
      }, {
        id: 'msg2',
        senderId: 'user2',
        senderName: 'ChessWizard',
        senderAvatar: '♟️',
        roomId: 'global',
        content: 'Just won a chess tournament! 🏆',
        type: 'achievement',
        timestamp: new Date(Date.now() - 10 * 60 * 1000),
        metadata: {
          achievement: 'Chess Master',
          game: 'speed-chess'
        },
        reactions: new Map([['🎉', ['user1', 'user3']], ['👏', ['user4']]]),
        isEdited: false
      }],
      isActive: true,
      lastActivity: new Date(Date.now() - 5 * 60 * 1000)
    });
    /* istanbul ignore next */
    cov_b9431avi7().s[165]++;
    this.chatRooms.set('global', globalRoom);
  }
  /**
   * Start periodic maintenance tasks
   */
  startPeriodicTasks() {
    /* istanbul ignore next */
    cov_b9431avi7().f[26]++;
    cov_b9431avi7().s[166]++;
    // Clean up expired invites every 5 minutes
    setInterval(() => {
      /* istanbul ignore next */
      cov_b9431avi7().f[27]++;
      cov_b9431avi7().s[167]++;
      this.cleanupExpiredInvites();
    }, 5 * 60 * 1000);
    // Update user activity status every minute
    /* istanbul ignore next */
    cov_b9431avi7().s[168]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_b9431avi7().f[28]++;
      cov_b9431avi7().s[169]++;
      this.updateUserActivities();
    }, 60 * 1000);
  }
  /**
   * Clean up expired game invites
   */
  cleanupExpiredInvites() {
    /* istanbul ignore next */
    cov_b9431avi7().f[29]++;
    const now =
    /* istanbul ignore next */
    (cov_b9431avi7().s[170]++, new Date());
    const expiredInvites =
    /* istanbul ignore next */
    (cov_b9431avi7().s[171]++, []);
    /* istanbul ignore next */
    cov_b9431avi7().s[172]++;
    for (const [inviteId, invite] of this.gameInvites.entries()) {
      /* istanbul ignore next */
      cov_b9431avi7().s[173]++;
      if (
      /* istanbul ignore next */
      (cov_b9431avi7().b[31][0]++, invite.expiresAt < now) &&
      /* istanbul ignore next */
      (cov_b9431avi7().b[31][1]++, invite.status === 'pending')) {
        /* istanbul ignore next */
        cov_b9431avi7().b[30][0]++;
        cov_b9431avi7().s[174]++;
        invite.status = 'expired';
        /* istanbul ignore next */
        cov_b9431avi7().s[175]++;
        expiredInvites.push(inviteId);
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[30][1]++;
      }
    }
    /* istanbul ignore next */
    cov_b9431avi7().s[176]++;
    expiredInvites.forEach(inviteId => {
      /* istanbul ignore next */
      cov_b9431avi7().f[30]++;
      cov_b9431avi7().s[177]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_b9431avi7().f[31]++;
        cov_b9431avi7().s[178]++;
        this.gameInvites.delete(inviteId);
      }, 24 * 60 * 60 * 1000); // Keep expired invites for 24 hours
    });
    /* istanbul ignore next */
    cov_b9431avi7().s[179]++;
    if (expiredInvites.length > 0) {
      /* istanbul ignore next */
      cov_b9431avi7().b[32][0]++;
      cov_b9431avi7().s[180]++;
      logger_1.logger.info(`Cleaned up ${expiredInvites.length} expired game invites`);
    } else
    /* istanbul ignore next */
    {
      cov_b9431avi7().b[32][1]++;
    }
  }
  /**
   * Update user activity statuses
   */
  updateUserActivities() {
    /* istanbul ignore next */
    cov_b9431avi7().f[32]++;
    const now =
    /* istanbul ignore next */
    (cov_b9431avi7().s[181]++, new Date());
    const inactiveThreshold =
    /* istanbul ignore next */
    (cov_b9431avi7().s[182]++, 5 * 60 * 1000); // 5 minutes
    /* istanbul ignore next */
    cov_b9431avi7().s[183]++;
    for (const [userId, statusData] of this.userStatuses.entries()) {
      /* istanbul ignore next */
      cov_b9431avi7().s[184]++;
      if (
      /* istanbul ignore next */
      (cov_b9431avi7().b[34][0]++, statusData.status === 'online') &&
      /* istanbul ignore next */
      (cov_b9431avi7().b[34][1]++, now.getTime() - statusData.lastUpdate.getTime() > inactiveThreshold)) {
        /* istanbul ignore next */
        cov_b9431avi7().b[33][0]++;
        cov_b9431avi7().s[185]++;
        this.updateUserStatus(userId, 'away');
      } else
      /* istanbul ignore next */
      {
        cov_b9431avi7().b[33][1]++;
      }
    }
  }
  /**
   * Helper methods
   */
  getRandomAvatar() {
    /* istanbul ignore next */
    cov_b9431avi7().f[33]++;
    const avatars =
    /* istanbul ignore next */
    (cov_b9431avi7().s[186]++, ['🎮', '⚔️', '🏆', '👑', '💎', '🔥', '⚡', '🚀', '🦄', '🐉', '♟️', '🃏', '🎯', '🎪', '🎨']);
    /* istanbul ignore next */
    cov_b9431avi7().s[187]++;
    return avatars[Math.floor(Math.random() * avatars.length)];
  }
}
/* istanbul ignore next */
cov_b9431avi7().s[188]++;
exports.SocialService = SocialService;
/* istanbul ignore next */
cov_b9431avi7().s[189]++;
exports.socialService = SocialService.getInstance();