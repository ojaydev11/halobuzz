64fdd4e7aae01a43719073f21af1dd7b
"use strict";

/* istanbul ignore next */
function cov_2ono7qy6fp() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\storytelling.ts";
  var hash = "48151476ae5f17f4b1e60758d2114ced67321491";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\storytelling.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 41
        },
        end: {
          line: 4,
          column: 106
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 51
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "7": {
        start: {
          line: 9,
          column: 28
        },
        end: {
          line: 9,
          column: 105
        }
      },
      "8": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "9": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 37
        }
      },
      "10": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "11": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "12": {
        start: {
          line: 19,
          column: 56
        },
        end: {
          line: 19,
          column: 64
        }
      },
      "13": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "14": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "15": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 77
        }
      },
      "16": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "17": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 97
        }
      },
      "18": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 104
        }
      },
      "19": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 31,
          column: 11
        }
      },
      "20": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 103
        }
      },
      "21": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 66
        }
      },
      "22": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "23": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "24": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 38
        }
      },
      "25": {
        start: {
          line: 45,
          column: 56
        },
        end: {
          line: 45,
          column: 64
        }
      },
      "26": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "27": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "28": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 77
        }
      },
      "29": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "30": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 85
        }
      },
      "31": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 114
        }
      },
      "32": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 57,
          column: 11
        }
      },
      "33": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 120
        }
      },
      "34": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 65
        }
      },
      "35": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 89,
          column: 3
        }
      },
      "36": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "37": {
        start: {
          line: 70,
          column: 39
        },
        end: {
          line: 70,
          column: 49
        }
      },
      "38": {
        start: {
          line: 71,
          column: 53
        },
        end: {
          line: 71,
          column: 61
        }
      },
      "39": {
        start: {
          line: 72,
          column: 23
        },
        end: {
          line: 72,
          column: 39
        }
      },
      "40": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "41": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 77
        }
      },
      "42": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "43": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 88
        }
      },
      "44": {
        start: {
          line: 79,
          column: 23
        },
        end: {
          line: 79,
          column: 120
        }
      },
      "45": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "46": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 152
        }
      },
      "47": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 64
        }
      },
      "48": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 115,
          column: 3
        }
      },
      "49": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "50": {
        start: {
          line: 96,
          column: 39
        },
        end: {
          line: 96,
          column: 49
        }
      },
      "51": {
        start: {
          line: 97,
          column: 40
        },
        end: {
          line: 97,
          column: 48
        }
      },
      "52": {
        start: {
          line: 98,
          column: 23
        },
        end: {
          line: 98,
          column: 39
        }
      },
      "53": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "54": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 77
        }
      },
      "55": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "56": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 95
        }
      },
      "57": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 88
        }
      },
      "58": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "59": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 151
        }
      },
      "60": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 63
        }
      },
      "61": {
        start: {
          line: 120,
          column: 0
        },
        end: {
          line: 141,
          column: 3
        }
      },
      "62": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "63": {
        start: {
          line: 122,
          column: 39
        },
        end: {
          line: 122,
          column: 49
        }
      },
      "64": {
        start: {
          line: 123,
          column: 44
        },
        end: {
          line: 123,
          column: 52
        }
      },
      "65": {
        start: {
          line: 124,
          column: 23
        },
        end: {
          line: 124,
          column: 39
        }
      },
      "66": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "67": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 77
        }
      },
      "68": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "69": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 84
        }
      },
      "70": {
        start: {
          line: 131,
          column: 28
        },
        end: {
          line: 131,
          column: 124
        }
      },
      "71": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "72": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 162
        }
      },
      "73": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 73
        }
      },
      "74": {
        start: {
          line: 146,
          column: 0
        },
        end: {
          line: 163,
          column: 3
        }
      },
      "75": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "76": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 148,
          column: 38
        }
      },
      "77": {
        start: {
          line: 149,
          column: 23
        },
        end: {
          line: 149,
          column: 39
        }
      },
      "78": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "79": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 77
        }
      },
      "80": {
        start: {
          line: 153,
          column: 28
        },
        end: {
          line: 153,
          column: 92
        }
      },
      "81": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "82": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 133
        }
      },
      "83": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 78
        }
      },
      "84": {
        start: {
          line: 168,
          column: 0
        },
        end: {
          line: 188,
          column: 3
        }
      },
      "85": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "86": {
        start: {
          line: 170,
          column: 28
        },
        end: {
          line: 170,
          column: 38
        }
      },
      "87": {
        start: {
          line: 171,
          column: 23
        },
        end: {
          line: 171,
          column: 39
        }
      },
      "88": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "89": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 77
        }
      },
      "90": {
        start: {
          line: 175,
          column: 22
        },
        end: {
          line: 175,
          column: 65
        }
      },
      "91": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "92": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 70
        }
      },
      "93": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 182,
          column: 11
        }
      },
      "94": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 119
        }
      },
      "95": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 63
        }
      },
      "96": {
        start: {
          line: 193,
          column: 0
        },
        end: {
          line: 210,
          column: 3
        }
      },
      "97": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "98": {
        start: {
          line: 195,
          column: 28
        },
        end: {
          line: 195,
          column: 38
        }
      },
      "99": {
        start: {
          line: 196,
          column: 23
        },
        end: {
          line: 196,
          column: 39
        }
      },
      "100": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "101": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 77
        }
      },
      "102": {
        start: {
          line: 200,
          column: 25
        },
        end: {
          line: 200,
          column: 83
        }
      },
      "103": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 204,
          column: 11
        }
      },
      "104": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 127
        }
      },
      "105": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 71
        }
      },
      "106": {
        start: {
          line: 215,
          column: 0
        },
        end: {
          line: 232,
          column: 3
        }
      },
      "107": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "108": {
        start: {
          line: 217,
          column: 28
        },
        end: {
          line: 217,
          column: 38
        }
      },
      "109": {
        start: {
          line: 218,
          column: 23
        },
        end: {
          line: 218,
          column: 39
        }
      },
      "110": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "111": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 77
        }
      },
      "112": {
        start: {
          line: 222,
          column: 26
        },
        end: {
          line: 222,
          column: 78
        }
      },
      "113": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 226,
          column: 11
        }
      },
      "114": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 129
        }
      },
      "115": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 73
        }
      },
      "116": {
        start: {
          line: 237,
          column: 0
        },
        end: {
          line: 254,
          column: 3
        }
      },
      "117": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "118": {
        start: {
          line: 239,
          column: 26
        },
        end: {
          line: 239,
          column: 35
        }
      },
      "119": {
        start: {
          line: 240,
          column: 23
        },
        end: {
          line: 240,
          column: 39
        }
      },
      "120": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "121": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 77
        }
      },
      "122": {
        start: {
          line: 244,
          column: 24
        },
        end: {
          line: 244,
          column: 98
        }
      },
      "123": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 248,
          column: 11
        }
      },
      "124": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 101
        }
      },
      "125": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 74
        }
      },
      "126": {
        start: {
          line: 255,
          column: 0
        },
        end: {
          line: 255,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 22
          },
          end: {
            line: 17,
            column: 23
          }
        },
        loc: {
          start: {
            line: 17,
            column: 42
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 34
          }
        },
        loc: {
          start: {
            line: 42,
            column: 53
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 42
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 68,
            column: 51
          },
          end: {
            line: 68,
            column: 52
          }
        },
        loc: {
          start: {
            line: 68,
            column: 71
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 68
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 94,
            column: 49
          },
          end: {
            line: 94,
            column: 50
          }
        },
        loc: {
          start: {
            line: 94,
            column: 69
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 94
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 120,
            column: 52
          },
          end: {
            line: 120,
            column: 53
          }
        },
        loc: {
          start: {
            line: 120,
            column: 72
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 120
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 146,
            column: 34
          },
          end: {
            line: 146,
            column: 35
          }
        },
        loc: {
          start: {
            line: 146,
            column: 54
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 146
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 168,
            column: 24
          },
          end: {
            line: 168,
            column: 25
          }
        },
        loc: {
          start: {
            line: 168,
            column: 44
          },
          end: {
            line: 188,
            column: 1
          }
        },
        line: 168
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 193,
            column: 33
          },
          end: {
            line: 193,
            column: 34
          }
        },
        loc: {
          start: {
            line: 193,
            column: 53
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 193
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 215,
            column: 34
          },
          end: {
            line: 215,
            column: 35
          }
        },
        loc: {
          start: {
            line: 215,
            column: 54
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 215
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 237,
            column: 24
          },
          end: {
            line: 237,
            column: 25
          }
        },
        loc: {
          start: {
            line: 237,
            column: 44
          },
          end: {
            line: 254,
            column: 1
          }
        },
        line: 237
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 18
          }
        }, {
          start: {
            line: 24,
            column: 22
          },
          end: {
            line: 24,
            column: 34
          }
        }, {
          start: {
            line: 24,
            column: 38
          },
          end: {
            line: 24,
            column: 44
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 18
          }
        }, {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 30
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "8": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 17
          }
        }, {
          start: {
            line: 76,
            column: 21
          },
          end: {
            line: 76,
            column: 33
          }
        }],
        line: 76
      },
      "9": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "10": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "11": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 21
          }
        }, {
          start: {
            line: 102,
            column: 25
          },
          end: {
            line: 102,
            column: 35
          }
        }],
        line: 102
      },
      "12": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "13": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "14": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 128,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 128,
            column: 17
          }
        }, {
          start: {
            line: 128,
            column: 21
          },
          end: {
            line: 128,
            column: 29
          }
        }],
        line: 128
      },
      "15": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "16": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "17": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "18": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "19": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "20": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "21": {
        loc: {
          start: {
            line: 244,
            column: 69
          },
          end: {
            line: 244,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 77
          },
          end: {
            line: 244,
            column: 92
          }
        }, {
          start: {
            line: 244,
            column: 95
          },
          end: {
            line: 244,
            column: 97
          }
        }],
        line: 244
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "48151476ae5f17f4b1e60758d2114ced67321491"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ono7qy6fp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ono7qy6fp();
cov_2ono7qy6fp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2ono7qy6fp().s[1]++, require("express"));
const InteractiveStorytellingService_1 =
/* istanbul ignore next */
(cov_2ono7qy6fp().s[2]++, require("@/services/storytelling/InteractiveStorytellingService"));
const auth_1 =
/* istanbul ignore next */
(cov_2ono7qy6fp().s[3]++, require("@/middleware/auth"));
const security_1 =
/* istanbul ignore next */
(cov_2ono7qy6fp().s[4]++, require("@/middleware/security"));
const logger_1 =
/* istanbul ignore next */
(cov_2ono7qy6fp().s[5]++, require("@/config/logger"));
const router =
/* istanbul ignore next */
(cov_2ono7qy6fp().s[6]++, (0, express_1.Router)());
const storytellingService =
/* istanbul ignore next */
(cov_2ono7qy6fp().s[7]++, InteractiveStorytellingService_1.InteractiveStorytellingService.getInstance());
// Apply authentication and rate limiting to all routes
/* istanbul ignore next */
cov_2ono7qy6fp().s[8]++;
router.use(auth_1.authMiddleware);
/* istanbul ignore next */
cov_2ono7qy6fp().s[9]++;
router.use(security_1.socialLimiter);
/**
 * @route POST /api/v1/storytelling/story
 * @desc Create a new interactive story
 */
/* istanbul ignore next */
cov_2ono7qy6fp().s[10]++;
router.post('/story', async (req, res) => {
  /* istanbul ignore next */
  cov_2ono7qy6fp().f[0]++;
  cov_2ono7qy6fp().s[11]++;
  try {
    const {
      title,
      description,
      genre,
      settings
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[12]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[13]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[14]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[0][0]++;
      cov_2ono7qy6fp().s[15]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[0][1]++;
    }
    cov_2ono7qy6fp().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[2][0]++, !title) ||
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[2][1]++, !description) ||
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[2][2]++, !genre)) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[1][0]++;
      cov_2ono7qy6fp().s[17]++;
      return res.status(400).json({
        error: 'Title, description, and genre are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[1][1]++;
    }
    const story =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[18]++, await storytellingService.createStory(userId, title, description, genre, settings));
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[19]++;
    res.status(201).json({
      success: true,
      data: story
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[20]++;
    logger_1.logger.error('Error creating interactive story', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[21]++;
    res.status(500).json({
      error: 'Failed to create story'
    });
  }
});
/**
 * @route POST /api/v1/storytelling/:storyId/chapter
 * @desc Add a chapter to the story
 */
/* istanbul ignore next */
cov_2ono7qy6fp().s[22]++;
router.post('/:storyId/chapter', async (req, res) => {
  /* istanbul ignore next */
  cov_2ono7qy6fp().f[1]++;
  cov_2ono7qy6fp().s[23]++;
  try {
    const {
      storyId
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[24]++, req.params);
    const {
      title,
      content,
      mediaUrl,
      timeLimit
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[25]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[26]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[27]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[3][0]++;
      cov_2ono7qy6fp().s[28]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[3][1]++;
    }
    cov_2ono7qy6fp().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[5][0]++, !title) ||
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[5][1]++, !content)) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[4][0]++;
      cov_2ono7qy6fp().s[30]++;
      return res.status(400).json({
        error: 'Title and content are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[4][1]++;
    }
    const chapter =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[31]++, await storytellingService.addChapter(storyId, userId, title, content, mediaUrl, timeLimit));
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[32]++;
    res.status(201).json({
      success: true,
      data: chapter
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[33]++;
    logger_1.logger.error('Error adding chapter', {
      error,
      storyId: req.params.storyId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[34]++;
    res.status(500).json({
      error: 'Failed to add chapter'
    });
  }
});
/**
 * @route POST /api/v1/storytelling/:storyId/chapter/:chapterId/choice
 * @desc Add a choice to a chapter
 */
/* istanbul ignore next */
cov_2ono7qy6fp().s[35]++;
router.post('/:storyId/chapter/:chapterId/choice', async (req, res) => {
  /* istanbul ignore next */
  cov_2ono7qy6fp().f[2]++;
  cov_2ono7qy6fp().s[36]++;
  try {
    const {
      storyId,
      chapterId
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[37]++, req.params);
    const {
      text,
      consequence,
      nextChapterId
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[38]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[39]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[40]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[6][0]++;
      cov_2ono7qy6fp().s[41]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[6][1]++;
    }
    cov_2ono7qy6fp().s[42]++;
    if (
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[8][0]++, !text) ||
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[8][1]++, !consequence)) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[7][0]++;
      cov_2ono7qy6fp().s[43]++;
      return res.status(400).json({
        error: 'Text and consequence are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[7][1]++;
    }
    const choice =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[44]++, await storytellingService.addChoice(storyId, chapterId, userId, text, consequence, nextChapterId));
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[45]++;
    res.status(201).json({
      success: true,
      data: choice
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[46]++;
    logger_1.logger.error('Error adding choice', {
      error,
      storyId: req.params.storyId,
      chapterId: req.params.chapterId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[47]++;
    res.status(500).json({
      error: 'Failed to add choice'
    });
  }
});
/**
 * @route POST /api/v1/storytelling/:storyId/chapter/:chapterId/vote
 * @desc Vote on a choice or user content
 */
/* istanbul ignore next */
cov_2ono7qy6fp().s[48]++;
router.post('/:storyId/chapter/:chapterId/vote', async (req, res) => {
  /* istanbul ignore next */
  cov_2ono7qy6fp().f[3]++;
  cov_2ono7qy6fp().s[49]++;
  try {
    const {
      storyId,
      chapterId
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[50]++, req.params);
    const {
      choiceId,
      contentId
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[51]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[52]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[53]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[9][0]++;
      cov_2ono7qy6fp().s[54]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[9][1]++;
    }
    cov_2ono7qy6fp().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[11][0]++, !choiceId) &&
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[11][1]++, !contentId)) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[10][0]++;
      cov_2ono7qy6fp().s[56]++;
      return res.status(400).json({
        error: 'Either choiceId or contentId is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[10][1]++;
    }
    cov_2ono7qy6fp().s[57]++;
    await storytellingService.vote(storyId, chapterId, userId, choiceId, contentId);
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[58]++;
    res.status(200).json({
      success: true,
      message: 'Vote cast successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[59]++;
    logger_1.logger.error('Error casting vote', {
      error,
      storyId: req.params.storyId,
      chapterId: req.params.chapterId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[60]++;
    res.status(500).json({
      error: 'Failed to cast vote'
    });
  }
});
/**
 * @route POST /api/v1/storytelling/:storyId/chapter/:chapterId/content
 * @desc Submit user-generated content
 */
/* istanbul ignore next */
cov_2ono7qy6fp().s[61]++;
router.post('/:storyId/chapter/:chapterId/content', async (req, res) => {
  /* istanbul ignore next */
  cov_2ono7qy6fp().f[4]++;
  cov_2ono7qy6fp().s[62]++;
  try {
    const {
      storyId,
      chapterId
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[63]++, req.params);
    const {
      type,
      content,
      mediaUrl
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[64]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[65]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[66]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[12][0]++;
      cov_2ono7qy6fp().s[67]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[12][1]++;
    }
    cov_2ono7qy6fp().s[68]++;
    if (
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[14][0]++, !type) ||
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[14][1]++, !content)) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[13][0]++;
      cov_2ono7qy6fp().s[69]++;
      return res.status(400).json({
        error: 'Type and content are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[13][1]++;
    }
    const userContent =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[70]++, await storytellingService.submitUserContent(storyId, chapterId, userId, type, content, mediaUrl));
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[71]++;
    res.status(201).json({
      success: true,
      data: userContent
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[72]++;
    logger_1.logger.error('Error submitting user content', {
      error,
      storyId: req.params.storyId,
      chapterId: req.params.chapterId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[73]++;
    res.status(500).json({
      error: 'Failed to submit user content'
    });
  }
});
/**
 * @route POST /api/v1/storytelling/:storyId/progress
 * @desc Progress to next chapter
 */
/* istanbul ignore next */
cov_2ono7qy6fp().s[74]++;
router.post('/:storyId/progress', async (req, res) => {
  /* istanbul ignore next */
  cov_2ono7qy6fp().f[5]++;
  cov_2ono7qy6fp().s[75]++;
  try {
    const {
      storyId
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[76]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[77]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[78]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[15][0]++;
      cov_2ono7qy6fp().s[79]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[15][1]++;
    }
    const nextChapter =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[80]++, await storytellingService.progressToNextChapter(storyId, userId));
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[81]++;
    res.status(200).json({
      success: true,
      data: nextChapter
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[82]++;
    logger_1.logger.error('Error progressing to next chapter', {
      error,
      storyId: req.params.storyId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[83]++;
    res.status(500).json({
      error: 'Failed to progress to next chapter'
    });
  }
});
/**
 * @route GET /api/v1/storytelling/:storyId
 * @desc Get story with current chapter
 */
/* istanbul ignore next */
cov_2ono7qy6fp().s[84]++;
router.get('/:storyId', async (req, res) => {
  /* istanbul ignore next */
  cov_2ono7qy6fp().f[6]++;
  cov_2ono7qy6fp().s[85]++;
  try {
    const {
      storyId
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[86]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[87]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[88]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[16][0]++;
      cov_2ono7qy6fp().s[89]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[16][1]++;
    }
    const story =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[90]++, await storytellingService.getStory(storyId));
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[91]++;
    if (!story) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[17][0]++;
      cov_2ono7qy6fp().s[92]++;
      return res.status(404).json({
        error: 'Story not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[17][1]++;
    }
    cov_2ono7qy6fp().s[93]++;
    res.status(200).json({
      success: true,
      data: story
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[94]++;
    logger_1.logger.error('Error getting story', {
      error,
      storyId: req.params.storyId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[95]++;
    res.status(500).json({
      error: 'Failed to get story'
    });
  }
});
/**
 * @route GET /api/v1/storytelling/:storyId/progress
 * @desc Get user's story progress
 */
/* istanbul ignore next */
cov_2ono7qy6fp().s[96]++;
router.get('/:storyId/progress', async (req, res) => {
  /* istanbul ignore next */
  cov_2ono7qy6fp().f[7]++;
  cov_2ono7qy6fp().s[97]++;
  try {
    const {
      storyId
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[98]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[99]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[100]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[18][0]++;
      cov_2ono7qy6fp().s[101]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[18][1]++;
    }
    const progress =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[102]++, await storytellingService.getUserProgress(userId, storyId));
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[103]++;
    res.status(200).json({
      success: true,
      data: progress
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[104]++;
    logger_1.logger.error('Error getting user progress', {
      error,
      storyId: req.params.storyId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[105]++;
    res.status(500).json({
      error: 'Failed to get user progress'
    });
  }
});
/**
 * @route GET /api/v1/storytelling/:storyId/analytics
 * @desc Get story analytics
 */
/* istanbul ignore next */
cov_2ono7qy6fp().s[106]++;
router.get('/:storyId/analytics', async (req, res) => {
  /* istanbul ignore next */
  cov_2ono7qy6fp().f[8]++;
  cov_2ono7qy6fp().s[107]++;
  try {
    const {
      storyId
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[108]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[109]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[110]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[19][0]++;
      cov_2ono7qy6fp().s[111]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[19][1]++;
    }
    const analytics =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[112]++, await storytellingService.getStoryAnalytics(storyId));
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[113]++;
    res.status(200).json({
      success: true,
      data: analytics
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[114]++;
    logger_1.logger.error('Error getting story analytics', {
      error,
      storyId: req.params.storyId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[115]++;
    res.status(500).json({
      error: 'Failed to get story analytics'
    });
  }
});
/**
 * @route GET /api/v1/storytelling/trending
 * @desc Get trending stories
 */
/* istanbul ignore next */
cov_2ono7qy6fp().s[116]++;
router.get('/trending', async (req, res) => {
  /* istanbul ignore next */
  cov_2ono7qy6fp().f[9]++;
  cov_2ono7qy6fp().s[117]++;
  try {
    const {
      limit
    } =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[118]++, req.query);
    const userId =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[119]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[120]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2ono7qy6fp().b[20][0]++;
      cov_2ono7qy6fp().s[121]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ono7qy6fp().b[20][1]++;
    }
    const stories =
    /* istanbul ignore next */
    (cov_2ono7qy6fp().s[122]++, await storytellingService.getTrendingStories(limit ?
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[21][0]++, parseInt(limit)) :
    /* istanbul ignore next */
    (cov_2ono7qy6fp().b[21][1]++, 10)));
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[123]++;
    res.status(200).json({
      success: true,
      data: stories
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[124]++;
    logger_1.logger.error('Error getting trending stories', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_2ono7qy6fp().s[125]++;
    res.status(500).json({
      error: 'Failed to get trending stories'
    });
  }
});
/* istanbul ignore next */
cov_2ono7qy6fp().s[126]++;
exports.default = router;