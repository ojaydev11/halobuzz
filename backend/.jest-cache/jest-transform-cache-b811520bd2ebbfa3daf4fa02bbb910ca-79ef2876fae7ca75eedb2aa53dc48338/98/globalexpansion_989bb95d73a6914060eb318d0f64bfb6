a9c5ead6912133783052c9c7ad3e603a
"use strict";

/* istanbul ignore next */
function cov_1wski0y56i() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\global-expansion.ts";
  var hash = "62ecdc48de221ac7ebe0619d0ef753f1d7f10b3e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\global-expansion.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 33
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 44
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "8": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "9": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "10": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 87
        }
      },
      "11": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 21,
          column: 11
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 28,
          column: 11
        }
      },
      "14": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 67,
          column: 3
        }
      },
      "15": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "16": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 38,
          column: 69
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "18": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "19": {
        start: {
          line: 45,
          column: 31
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "20": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 112
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "22": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 51,
          column: 15
        }
      },
      "23": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "24": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 62
        }
      },
      "25": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "26": {
        start: {
          line: 69,
          column: 0
        },
        end: {
          line: 89,
          column: 3
        }
      },
      "27": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "28": {
        start: {
          line: 71,
          column: 26
        },
        end: {
          line: 71,
          column: 97
        }
      },
      "29": {
        start: {
          line: 72,
          column: 30
        },
        end: {
          line: 72,
          column: 99
        }
      },
      "30": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "31": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 65
        }
      },
      "32": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "33": {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 126,
          column: 3
        }
      },
      "34": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "35": {
        start: {
          line: 97,
          column: 23
        },
        end: {
          line: 97,
          column: 69
        }
      },
      "36": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "37": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 102,
          column: 15
        }
      },
      "38": {
        start: {
          line: 104,
          column: 29
        },
        end: {
          line: 104,
          column: 39
        }
      },
      "39": {
        start: {
          line: 105,
          column: 29
        },
        end: {
          line: 105,
          column: 122
        }
      },
      "40": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "41": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 110,
          column: 15
        }
      },
      "42": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 117,
          column: 11
        }
      },
      "43": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 64
        }
      },
      "44": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "45": {
        start: {
          line: 128,
          column: 0
        },
        end: {
          line: 162,
          column: 3
        }
      },
      "46": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "47": {
        start: {
          line: 137,
          column: 23
        },
        end: {
          line: 137,
          column: 69
        }
      },
      "48": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "49": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 142,
          column: 15
        }
      },
      "50": {
        start: {
          line: 144,
          column: 35
        },
        end: {
          line: 144,
          column: 44
        }
      },
      "51": {
        start: {
          line: 145,
          column: 31
        },
        end: {
          line: 145,
          column: 118
        }
      },
      "52": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 153,
          column: 11
        }
      },
      "53": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 64
        }
      },
      "54": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "55": {
        start: {
          line: 164,
          column: 0
        },
        end: {
          line: 200,
          column: 3
        }
      },
      "56": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "57": {
        start: {
          line: 175,
          column: 23
        },
        end: {
          line: 175,
          column: 69
        }
      },
      "58": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "59": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "60": {
        start: {
          line: 182,
          column: 34
        },
        end: {
          line: 182,
          column: 43
        }
      },
      "61": {
        start: {
          line: 183,
          column: 28
        },
        end: {
          line: 183,
          column: 100
        }
      },
      "62": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 191,
          column: 11
        }
      },
      "63": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 61
        }
      },
      "64": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "65": {
        start: {
          line: 202,
          column: 0
        },
        end: {
          line: 238,
          column: 3
        }
      },
      "66": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 237,
          column: 5
        }
      },
      "67": {
        start: {
          line: 208,
          column: 23
        },
        end: {
          line: 208,
          column: 69
        }
      },
      "68": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "69": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 213,
          column: 15
        }
      },
      "70": {
        start: {
          line: 215,
          column: 31
        },
        end: {
          line: 215,
          column: 41
        }
      },
      "71": {
        start: {
          line: 216,
          column: 33
        },
        end: {
          line: 216,
          column: 126
        }
      },
      "72": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "73": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 221,
          column: 15
        }
      },
      "74": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 229,
          column: 11
        }
      },
      "75": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 73
        }
      },
      "76": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 236,
          column: 11
        }
      },
      "77": {
        start: {
          line: 240,
          column: 0
        },
        end: {
          line: 270,
          column: 3
        }
      },
      "78": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "79": {
        start: {
          line: 246,
          column: 23
        },
        end: {
          line: 246,
          column: 69
        }
      },
      "80": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "81": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 251,
          column: 15
        }
      },
      "82": {
        start: {
          line: 253,
          column: 31
        },
        end: {
          line: 253,
          column: 41
        }
      },
      "83": {
        start: {
          line: 254,
          column: 31
        },
        end: {
          line: 254,
          column: 122
        }
      },
      "84": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 261,
          column: 11
        }
      },
      "85": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 71
        }
      },
      "86": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 268,
          column: 11
        }
      },
      "87": {
        start: {
          line: 272,
          column: 0
        },
        end: {
          line: 299,
          column: 3
        }
      },
      "88": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 298,
          column: 5
        }
      },
      "89": {
        start: {
          line: 274,
          column: 34
        },
        end: {
          line: 274,
          column: 42
        }
      },
      "90": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "91": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 279,
          column: 15
        }
      },
      "92": {
        start: {
          line: 281,
          column: 31
        },
        end: {
          line: 281,
          column: 116
        }
      },
      "93": {
        start: {
          line: 282,
          column: 29
        },
        end: {
          line: 282,
          column: 108
        }
      },
      "94": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 290,
          column: 11
        }
      },
      "95": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 65
        }
      },
      "96": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 297,
          column: 11
        }
      },
      "97": {
        start: {
          line: 301,
          column: 0
        },
        end: {
          line: 316,
          column: 3
        }
      },
      "98": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 315,
          column: 5
        }
      },
      "99": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 84
        }
      },
      "100": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 307,
          column: 11
        }
      },
      "101": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 73
        }
      },
      "102": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "103": {
        start: {
          line: 318,
          column: 0
        },
        end: {
          line: 343,
          column: 3
        }
      },
      "104": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 342,
          column: 5
        }
      },
      "105": {
        start: {
          line: 320,
          column: 24
        },
        end: {
          line: 320,
          column: 87
        }
      },
      "106": {
        start: {
          line: 321,
          column: 26
        },
        end: {
          line: 321,
          column: 97
        }
      },
      "107": {
        start: {
          line: 322,
          column: 23
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "108": {
        start: {
          line: 325,
          column: 62
        },
        end: {
          line: 325,
          column: 72
        }
      },
      "109": {
        start: {
          line: 326,
          column: 70
        },
        end: {
          line: 326,
          column: 86
        }
      },
      "110": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 334,
          column: 11
        }
      },
      "111": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 72
        }
      },
      "112": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 341,
          column: 11
        }
      },
      "113": {
        start: {
          line: 344,
          column: 0
        },
        end: {
          line: 344,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 24
          }
        },
        loc: {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 36,
            column: 3
          },
          end: {
            line: 36,
            column: 4
          }
        },
        loc: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 36
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 69,
            column: 26
          }
        },
        loc: {
          start: {
            line: 69,
            column: 45
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 69
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 95,
            column: 3
          },
          end: {
            line: 95,
            column: 4
          }
        },
        loc: {
          start: {
            line: 95,
            column: 23
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 95
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 135,
            column: 3
          },
          end: {
            line: 135,
            column: 4
          }
        },
        loc: {
          start: {
            line: 135,
            column: 23
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 135
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 173,
            column: 3
          },
          end: {
            line: 173,
            column: 4
          }
        },
        loc: {
          start: {
            line: 173,
            column: 23
          },
          end: {
            line: 200,
            column: 1
          }
        },
        line: 173
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 206,
            column: 3
          },
          end: {
            line: 206,
            column: 4
          }
        },
        loc: {
          start: {
            line: 206,
            column: 23
          },
          end: {
            line: 238,
            column: 1
          }
        },
        line: 206
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 244,
            column: 3
          },
          end: {
            line: 244,
            column: 4
          }
        },
        loc: {
          start: {
            line: 244,
            column: 23
          },
          end: {
            line: 270,
            column: 1
          }
        },
        line: 244
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 272,
            column: 30
          },
          end: {
            line: 272,
            column: 31
          }
        },
        loc: {
          start: {
            line: 272,
            column: 50
          },
          end: {
            line: 299,
            column: 1
          }
        },
        line: 272
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 301,
            column: 38
          },
          end: {
            line: 301,
            column: 39
          }
        },
        loc: {
          start: {
            line: 301,
            column: 58
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 301
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 318,
            column: 22
          },
          end: {
            line: 318,
            column: 23
          }
        },
        loc: {
          start: {
            line: 318,
            column: 42
          },
          end: {
            line: 343,
            column: 1
          }
        },
        line: 318
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 325,
            column: 57
          },
          end: {
            line: 325,
            column: 58
          }
        },
        loc: {
          start: {
            line: 325,
            column: 62
          },
          end: {
            line: 325,
            column: 72
          }
        },
        line: 325
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 326,
            column: 65
          },
          end: {
            line: 326,
            column: 66
          }
        },
        loc: {
          start: {
            line: 326,
            column: 70
          },
          end: {
            line: 326,
            column: 86
          }
        },
        line: 326
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "6": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "7": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "8": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "9": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "10": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "11": {
        loc: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "12": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "13": {
        loc: {
          start: {
            line: 281,
            column: 100
          },
          end: {
            line: 281,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 100
          },
          end: {
            line: 281,
            column: 109
          }
        }, {
          start: {
            line: 281,
            column: 113
          },
          end: {
            line: 281,
            column: 115
          }
        }],
        line: 281
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "62ecdc48de221ac7ebe0619d0ef753f1d7f10b3e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wski0y56i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wski0y56i();
var __importDefault =
/* istanbul ignore next */
(cov_1wski0y56i().s[0]++,
/* istanbul ignore next */
(cov_1wski0y56i().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1wski0y56i().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1wski0y56i().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1wski0y56i().f[0]++;
  cov_1wski0y56i().s[1]++;
  return /* istanbul ignore next */(cov_1wski0y56i().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1wski0y56i().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1wski0y56i().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1wski0y56i().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1wski0y56i().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1wski0y56i().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_1wski0y56i().s[4]++, require("express-validator"));
const GlobalExpansionService_1 =
/* istanbul ignore next */
(cov_1wski0y56i().s[5]++, require("../services/GlobalExpansionService"));
const logger_1 =
/* istanbul ignore next */
(cov_1wski0y56i().s[6]++, require("../config/logger"));
const router =
/* istanbul ignore next */
(cov_1wski0y56i().s[7]++, express_1.default.Router());
// Get all supported regions
/* istanbul ignore next */
cov_1wski0y56i().s[8]++;
router.get('/regions', async (req, res) => {
  /* istanbul ignore next */
  cov_1wski0y56i().f[1]++;
  cov_1wski0y56i().s[9]++;
  try {
    const regions =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[10]++, GlobalExpansionService_1.globalExpansionService.getAllRegions());
    /* istanbul ignore next */
    cov_1wski0y56i().s[11]++;
    res.json({
      success: true,
      data: {
        regions,
        total: regions.length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wski0y56i().s[12]++;
    logger_1.logger.error('Failed to get regions:', error);
    /* istanbul ignore next */
    cov_1wski0y56i().s[13]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get regions'
    });
  }
});
// Get specific region configuration
/* istanbul ignore next */
cov_1wski0y56i().s[14]++;
router.get('/regions/:regionCode', [(0, express_validator_1.query)('regionCode').isLength({
  min: 2,
  max: 2
}).withMessage('Region code must be 2 characters')], async (req, res) => {
  /* istanbul ignore next */
  cov_1wski0y56i().f[2]++;
  cov_1wski0y56i().s[15]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[16]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_1wski0y56i().s[17]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_1wski0y56i().b[3][0]++;
      cov_1wski0y56i().s[18]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wski0y56i().b[3][1]++;
    }
    const {
      regionCode
    } =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[19]++, req.params);
    const region =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[20]++, GlobalExpansionService_1.globalExpansionService.getRegionConfig(regionCode.toUpperCase()));
    /* istanbul ignore next */
    cov_1wski0y56i().s[21]++;
    if (!region) {
      /* istanbul ignore next */
      cov_1wski0y56i().b[4][0]++;
      cov_1wski0y56i().s[22]++;
      return res.status(404).json({
        success: false,
        error: 'Region not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wski0y56i().b[4][1]++;
    }
    cov_1wski0y56i().s[23]++;
    res.json({
      success: true,
      data: {
        region
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wski0y56i().s[24]++;
    logger_1.logger.error('Failed to get region:', error);
    /* istanbul ignore next */
    cov_1wski0y56i().s[25]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get region'
    });
  }
});
// Get all supported languages
/* istanbul ignore next */
cov_1wski0y56i().s[26]++;
router.get('/languages', async (req, res) => {
  /* istanbul ignore next */
  cov_1wski0y56i().f[3]++;
  cov_1wski0y56i().s[27]++;
  try {
    const languages =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[28]++, GlobalExpansionService_1.globalExpansionService.getSupportedLanguages());
    const localizations =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[29]++, GlobalExpansionService_1.globalExpansionService.getAllLocalizations());
    /* istanbul ignore next */
    cov_1wski0y56i().s[30]++;
    res.json({
      success: true,
      data: {
        languages,
        localizations,
        total: languages.length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wski0y56i().s[31]++;
    logger_1.logger.error('Failed to get languages:', error);
    /* istanbul ignore next */
    cov_1wski0y56i().s[32]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get languages'
    });
  }
});
// Get specific language configuration
/* istanbul ignore next */
cov_1wski0y56i().s[33]++;
router.get('/languages/:language', [(0, express_validator_1.query)('language').isLength({
  min: 2,
  max: 5
}).withMessage('Language code must be 2-5 characters')], async (req, res) => {
  /* istanbul ignore next */
  cov_1wski0y56i().f[4]++;
  cov_1wski0y56i().s[34]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[35]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_1wski0y56i().s[36]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_1wski0y56i().b[5][0]++;
      cov_1wski0y56i().s[37]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wski0y56i().b[5][1]++;
    }
    const {
      language
    } =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[38]++, req.params);
    const localization =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[39]++, GlobalExpansionService_1.globalExpansionService.getLocalizationConfig(language.toLowerCase()));
    /* istanbul ignore next */
    cov_1wski0y56i().s[40]++;
    if (!localization) {
      /* istanbul ignore next */
      cov_1wski0y56i().b[6][0]++;
      cov_1wski0y56i().s[41]++;
      return res.status(404).json({
        success: false,
        error: 'Language not supported'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wski0y56i().b[6][1]++;
    }
    cov_1wski0y56i().s[42]++;
    res.json({
      success: true,
      data: {
        localization
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wski0y56i().s[43]++;
    logger_1.logger.error('Failed to get language:', error);
    /* istanbul ignore next */
    cov_1wski0y56i().s[44]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get language'
    });
  }
});
// Format price for specific region
/* istanbul ignore next */
cov_1wski0y56i().s[45]++;
router.get('/format-price', [(0, express_validator_1.query)('amount').isNumeric().withMessage('Amount must be numeric'), (0, express_validator_1.query)('region').isLength({
  min: 2,
  max: 2
}).withMessage('Region code must be 2 characters')], async (req, res) => {
  /* istanbul ignore next */
  cov_1wski0y56i().f[5]++;
  cov_1wski0y56i().s[46]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[47]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_1wski0y56i().s[48]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_1wski0y56i().b[7][0]++;
      cov_1wski0y56i().s[49]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wski0y56i().b[7][1]++;
    }
    const {
      amount,
      region
    } =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[50]++, req.query);
    const formattedPrice =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[51]++, GlobalExpansionService_1.globalExpansionService.formatPrice(parseFloat(amount), region));
    /* istanbul ignore next */
    cov_1wski0y56i().s[52]++;
    res.json({
      success: true,
      data: {
        originalAmount: parseFloat(amount),
        region: region,
        formattedPrice
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wski0y56i().s[53]++;
    logger_1.logger.error('Failed to format price:', error);
    /* istanbul ignore next */
    cov_1wski0y56i().s[54]++;
    res.status(500).json({
      success: false,
      error: 'Failed to format price'
    });
  }
});
// Translate text
/* istanbul ignore next */
cov_1wski0y56i().s[55]++;
router.get('/translate', [(0, express_validator_1.query)('key').isString().trim().isLength({
  min: 1
}).withMessage('Translation key is required'), (0, express_validator_1.query)('language').isLength({
  min: 2,
  max: 5
}).withMessage('Language code must be 2-5 characters')], async (req, res) => {
  /* istanbul ignore next */
  cov_1wski0y56i().f[6]++;
  cov_1wski0y56i().s[56]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[57]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_1wski0y56i().s[58]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_1wski0y56i().b[8][0]++;
      cov_1wski0y56i().s[59]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wski0y56i().b[8][1]++;
    }
    const {
      key,
      language
    } =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[60]++, req.query);
    const translation =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[61]++, GlobalExpansionService_1.globalExpansionService.translate(key, language));
    /* istanbul ignore next */
    cov_1wski0y56i().s[62]++;
    res.json({
      success: true,
      data: {
        key: key,
        language: language,
        translation
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wski0y56i().s[63]++;
    logger_1.logger.error('Failed to translate:', error);
    /* istanbul ignore next */
    cov_1wski0y56i().s[64]++;
    res.status(500).json({
      success: false,
      error: 'Failed to translate'
    });
  }
});
// Get cultural features for region
/* istanbul ignore next */
cov_1wski0y56i().s[65]++;
router.get('/cultural/:regionCode', [(0, express_validator_1.query)('regionCode').isLength({
  min: 2,
  max: 2
}).withMessage('Region code must be 2 characters')], async (req, res) => {
  /* istanbul ignore next */
  cov_1wski0y56i().f[7]++;
  cov_1wski0y56i().s[66]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[67]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_1wski0y56i().s[68]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_1wski0y56i().b[9][0]++;
      cov_1wski0y56i().s[69]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wski0y56i().b[9][1]++;
    }
    const {
      regionCode
    } =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[70]++, req.params);
    const culturalFeatures =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[71]++, GlobalExpansionService_1.globalExpansionService.getCulturalFeatures(regionCode.toUpperCase()));
    /* istanbul ignore next */
    cov_1wski0y56i().s[72]++;
    if (!culturalFeatures) {
      /* istanbul ignore next */
      cov_1wski0y56i().b[10][0]++;
      cov_1wski0y56i().s[73]++;
      return res.status(404).json({
        success: false,
        error: 'Cultural features not found for this region'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wski0y56i().b[10][1]++;
    }
    cov_1wski0y56i().s[74]++;
    res.json({
      success: true,
      data: {
        regionCode: regionCode.toUpperCase(),
        culturalFeatures
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wski0y56i().s[75]++;
    logger_1.logger.error('Failed to get cultural features:', error);
    /* istanbul ignore next */
    cov_1wski0y56i().s[76]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get cultural features'
    });
  }
});
// Get payment methods for region
/* istanbul ignore next */
cov_1wski0y56i().s[77]++;
router.get('/payment-methods/:regionCode', [(0, express_validator_1.query)('regionCode').isLength({
  min: 2,
  max: 2
}).withMessage('Region code must be 2 characters')], async (req, res) => {
  /* istanbul ignore next */
  cov_1wski0y56i().f[8]++;
  cov_1wski0y56i().s[78]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[79]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_1wski0y56i().s[80]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_1wski0y56i().b[11][0]++;
      cov_1wski0y56i().s[81]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wski0y56i().b[11][1]++;
    }
    const {
      regionCode
    } =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[82]++, req.params);
    const paymentMethods =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[83]++, GlobalExpansionService_1.globalExpansionService.getPaymentMethods(regionCode.toUpperCase()));
    /* istanbul ignore next */
    cov_1wski0y56i().s[84]++;
    res.json({
      success: true,
      data: {
        regionCode: regionCode.toUpperCase(),
        paymentMethods
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wski0y56i().s[85]++;
    logger_1.logger.error('Failed to get payment methods:', error);
    /* istanbul ignore next */
    cov_1wski0y56i().s[86]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get payment methods'
    });
  }
});
// Detect user region
/* istanbul ignore next */
cov_1wski0y56i().s[87]++;
router.post('/detect-region', async (req, res) => {
  /* istanbul ignore next */
  cov_1wski0y56i().f[9]++;
  cov_1wski0y56i().s[88]++;
  try {
    const {
      ip,
      userAgent
    } =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[89]++, req.body);
    /* istanbul ignore next */
    cov_1wski0y56i().s[90]++;
    if (!ip) {
      /* istanbul ignore next */
      cov_1wski0y56i().b[12][0]++;
      cov_1wski0y56i().s[91]++;
      return res.status(400).json({
        success: false,
        error: 'IP address is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wski0y56i().b[12][1]++;
    }
    const detectedRegion =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[92]++, GlobalExpansionService_1.globalExpansionService.detectUserRegion(ip,
    /* istanbul ignore next */
    (cov_1wski0y56i().b[13][0]++, userAgent) ||
    /* istanbul ignore next */
    (cov_1wski0y56i().b[13][1]++, '')));
    const regionConfig =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[93]++, GlobalExpansionService_1.globalExpansionService.getRegionConfig(detectedRegion));
    /* istanbul ignore next */
    cov_1wski0y56i().s[94]++;
    res.json({
      success: true,
      data: {
        detectedRegion,
        regionConfig,
        confidence: 0.85 // Mock confidence score
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wski0y56i().s[95]++;
    logger_1.logger.error('Failed to detect region:', error);
    /* istanbul ignore next */
    cov_1wski0y56i().s[96]++;
    res.status(500).json({
      success: false,
      error: 'Failed to detect region'
    });
  }
});
// Update exchange rates
/* istanbul ignore next */
cov_1wski0y56i().s[97]++;
router.post('/update-exchange-rates', async (req, res) => {
  /* istanbul ignore next */
  cov_1wski0y56i().f[10]++;
  cov_1wski0y56i().s[98]++;
  try {
    /* istanbul ignore next */
    cov_1wski0y56i().s[99]++;
    await GlobalExpansionService_1.globalExpansionService.updateExchangeRates();
    /* istanbul ignore next */
    cov_1wski0y56i().s[100]++;
    res.json({
      success: true,
      message: 'Exchange rates updated successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wski0y56i().s[101]++;
    logger_1.logger.error('Failed to update exchange rates:', error);
    /* istanbul ignore next */
    cov_1wski0y56i().s[102]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update exchange rates'
    });
  }
});
// Get global expansion status
/* istanbul ignore next */
cov_1wski0y56i().s[103]++;
router.get('/status', async (req, res) => {
  /* istanbul ignore next */
  cov_1wski0y56i().f[11]++;
  cov_1wski0y56i().s[104]++;
  try {
    const regions =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[105]++, GlobalExpansionService_1.globalExpansionService.getAllRegions());
    const languages =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[106]++, GlobalExpansionService_1.globalExpansionService.getSupportedLanguages());
    const status =
    /* istanbul ignore next */
    (cov_1wski0y56i().s[107]++, {
      totalRegions: regions.length,
      totalLanguages: languages.length,
      supportedCurrencies: [...new Set(regions.map(r => {
        /* istanbul ignore next */
        cov_1wski0y56i().f[12]++;
        cov_1wski0y56i().s[108]++;
        return r.currency;
      }))],
      supportedPaymentMethods: [...new Set(regions.flatMap(r => {
        /* istanbul ignore next */
        cov_1wski0y56i().f[13]++;
        cov_1wski0y56i().s[109]++;
        return r.paymentMethods;
      }))],
      lastUpdated: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1wski0y56i().s[110]++;
    res.json({
      success: true,
      data: {
        status
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wski0y56i().s[111]++;
    logger_1.logger.error('Failed to get expansion status:', error);
    /* istanbul ignore next */
    cov_1wski0y56i().s[112]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get expansion status'
    });
  }
});
/* istanbul ignore next */
cov_1wski0y56i().s[113]++;
exports.default = router;