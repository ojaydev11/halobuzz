971f2508d9346107992e7fa779fc3c54
"use strict";

/* istanbul ignore next */
function cov_1lz4ojsbus() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\middleware\\auth.ts";
  var hash = "a434e471bb046df4aef65a80d6b03909a7059563";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\middleware\\auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 262
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 38
        }
      },
      "5": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 40
        }
      },
      "6": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 63
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 40
        }
      },
      "8": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 44
        }
      },
      "9": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "10": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 87,
          column: 1
        }
      },
      "11": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "12": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 73
        }
      },
      "13": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "14": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 23,
          column: 15
        }
      },
      "15": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 26,
          column: 84
        }
      },
      "16": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 83
        }
      },
      "17": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "18": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "20": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "21": {
        start: {
          line: 42,
          column: 29
        },
        end: {
          line: 42,
          column: 71
        }
      },
      "22": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "23": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "24": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "25": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 65,
          column: 10
        }
      },
      "26": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 15
        }
      },
      "27": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 62
        }
      },
      "28": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "29": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 74,
          column: 15
        }
      },
      "30": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "31": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 80,
          column: 15
        }
      },
      "32": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "33": {
        start: {
          line: 88,
          column: 0
        },
        end: {
          line: 88,
          column: 40
        }
      },
      "34": {
        start: {
          line: 92,
          column: 31
        },
        end: {
          line: 122,
          column: 1
        }
      },
      "35": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "36": {
        start: {
          line: 94,
          column: 29
        },
        end: {
          line: 94,
          column: 58
        }
      },
      "37": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "38": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 99,
          column: 15
        }
      },
      "39": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 99
        }
      },
      "40": {
        start: {
          line: 103,
          column: 21
        },
        end: {
          line: 103,
          column: 63
        }
      },
      "41": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "42": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "43": {
        start: {
          line: 111,
          column: 31
        },
        end: {
          line: 111,
          column: 168
        }
      },
      "44": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 47
        }
      },
      "45": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 15
        }
      },
      "46": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 61
        }
      },
      "47": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 120,
          column: 11
        }
      },
      "48": {
        start: {
          line: 123,
          column: 0
        },
        end: {
          line: 123,
          column: 56
        }
      },
      "49": {
        start: {
          line: 127,
          column: 22
        },
        end: {
          line: 176,
          column: 1
        }
      },
      "50": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "51": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "52": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 133,
          column: 15
        }
      },
      "53": {
        start: {
          line: 135,
          column: 21
        },
        end: {
          line: 135,
          column: 64
        }
      },
      "54": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "55": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 140,
          column: 15
        }
      },
      "56": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "57": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 26
        }
      },
      "58": {
        start: {
          line: 146,
          column: 25
        },
        end: {
          line: 146,
          column: 51
        }
      },
      "59": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "60": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 151,
          column: 15
        }
      },
      "61": {
        start: {
          line: 154,
          column: 26
        },
        end: {
          line: 154,
          column: 46
        }
      },
      "62": {
        start: {
          line: 155,
          column: 25
        },
        end: {
          line: 160,
          column: 10
        }
      },
      "63": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "64": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 165,
          column: 15
        }
      },
      "65": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 15
        }
      },
      "66": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 64
        }
      },
      "67": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 174,
          column: 11
        }
      },
      "68": {
        start: {
          line: 177,
          column: 0
        },
        end: {
          line: 177,
          column: 38
        }
      },
      "69": {
        start: {
          line: 181,
          column: 24
        },
        end: {
          line: 205,
          column: 1
        }
      },
      "70": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "71": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "72": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 187,
          column: 15
        }
      },
      "73": {
        start: {
          line: 189,
          column: 21
        },
        end: {
          line: 189,
          column: 64
        }
      },
      "74": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "75": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 194,
          column: 15
        }
      },
      "76": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 15
        }
      },
      "77": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 64
        }
      },
      "78": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 203,
          column: 11
        }
      },
      "79": {
        start: {
          line: 206,
          column: 0
        },
        end: {
          line: 206,
          column: 42
        }
      },
      "80": {
        start: {
          line: 210,
          column: 32
        },
        end: {
          line: 256,
          column: 1
        }
      },
      "81": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "82": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "83": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 216,
          column: 15
        }
      },
      "84": {
        start: {
          line: 218,
          column: 25
        },
        end: {
          line: 218,
          column: 50
        }
      },
      "85": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "86": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 223,
          column: 15
        }
      },
      "87": {
        start: {
          line: 225,
          column: 21
        },
        end: {
          line: 225,
          column: 64
        }
      },
      "88": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "89": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 230,
          column: 15
        }
      },
      "90": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "91": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "92": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 238,
          column: 19
        }
      },
      "93": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 245,
          column: 15
        }
      },
      "94": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 15
        }
      },
      "95": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 62
        }
      },
      "96": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 254,
          column: 11
        }
      },
      "97": {
        start: {
          line: 257,
          column: 0
        },
        end: {
          line: 257,
          column: 58
        }
      },
      "98": {
        start: {
          line: 261,
          column: 28
        },
        end: {
          line: 281,
          column: 1
        }
      },
      "99": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 280,
          column: 6
        }
      },
      "100": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "101": {
        start: {
          line: 264,
          column: 24
        },
        end: {
          line: 264,
          column: 58
        }
      },
      "102": {
        start: {
          line: 265,
          column: 28
        },
        end: {
          line: 265,
          column: 60
        }
      },
      "103": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 271,
          column: 13
        }
      },
      "104": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 270,
          column: 19
        }
      },
      "105": {
        start: {
          line: 272,
          column: 26
        },
        end: {
          line: 272,
          column: 51
        }
      },
      "106": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 80
        }
      },
      "107": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 19
        }
      },
      "108": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 65
        }
      },
      "109": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 19
        }
      },
      "110": {
        start: {
          line: 282,
          column: 0
        },
        end: {
          line: 282,
          column: 50
        }
      },
      "111": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 313,
          column: 5
        }
      },
      "112": {
        start: {
          line: 288,
          column: 27
        },
        end: {
          line: 288,
          column: 46
        }
      },
      "113": {
        start: {
          line: 289,
          column: 24
        },
        end: {
          line: 289,
          column: 63
        }
      },
      "114": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "115": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 25
        }
      },
      "116": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "117": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 61
        }
      },
      "118": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 25
        }
      },
      "119": {
        start: {
          line: 299,
          column: 25
        },
        end: {
          line: 299,
          column: 50
        }
      },
      "120": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "121": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 25
        }
      },
      "122": {
        start: {
          line: 304,
          column: 26
        },
        end: {
          line: 304,
          column: 64
        }
      },
      "123": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "124": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 25
        }
      },
      "125": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 20
        }
      },
      "126": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 66
        }
      },
      "127": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 21
        }
      },
      "128": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 337,
          column: 5
        }
      },
      "129": {
        start: {
          line: 320,
          column: 28
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "130": {
        start: {
          line: 330,
          column: 27
        },
        end: {
          line: 330,
          column: 46
        }
      },
      "131": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 79
        }
      },
      "132": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 26
        }
      },
      "133": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 64
        }
      },
      "134": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 20
        }
      },
      "135": {
        start: {
          line: 343,
          column: 4
        },
        end: {
          line: 349,
          column: 5
        }
      },
      "136": {
        start: {
          line: 344,
          column: 27
        },
        end: {
          line: 344,
          column: 46
        }
      },
      "137": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 57
        }
      },
      "138": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 67
        }
      },
      "139": {
        start: {
          line: 354,
          column: 0
        },
        end: {
          line: 354,
          column: 51
        }
      },
      "140": {
        start: {
          line: 355,
          column: 0
        },
        end: {
          line: 355,
          column: 45
        }
      },
      "141": {
        start: {
          line: 359,
          column: 31
        },
        end: {
          line: 384,
          column: 1
        }
      },
      "142": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 383,
          column: 5
        }
      },
      "143": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "144": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 365,
          column: 15
        }
      },
      "145": {
        start: {
          line: 368,
          column: 21
        },
        end: {
          line: 368,
          column: 64
        }
      },
      "146": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "147": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 373,
          column: 15
        }
      },
      "148": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 15
        }
      },
      "149": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 64
        }
      },
      "150": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 382,
          column: 11
        }
      },
      "151": {
        start: {
          line: 385,
          column: 0
        },
        end: {
          line: 385,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 24
          }
        },
        loc: {
          start: {
            line: 16,
            column: 49
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 92,
            column: 31
          },
          end: {
            line: 92,
            column: 32
          }
        },
        loc: {
          start: {
            line: 92,
            column: 57
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 92
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 127,
            column: 22
          },
          end: {
            line: 127,
            column: 23
          }
        },
        loc: {
          start: {
            line: 127,
            column: 48
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 127
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 181,
            column: 24
          },
          end: {
            line: 181,
            column: 25
          }
        },
        loc: {
          start: {
            line: 181,
            column: 50
          },
          end: {
            line: 205,
            column: 1
          }
        },
        line: 181
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 210,
            column: 32
          },
          end: {
            line: 210,
            column: 33
          }
        },
        loc: {
          start: {
            line: 210,
            column: 58
          },
          end: {
            line: 256,
            column: 1
          }
        },
        line: 210
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 261,
            column: 28
          },
          end: {
            line: 261,
            column: 29
          }
        },
        loc: {
          start: {
            line: 261,
            column: 70
          },
          end: {
            line: 281,
            column: 1
          }
        },
        line: 261
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 262,
            column: 11
          },
          end: {
            line: 262,
            column: 12
          }
        },
        loc: {
          start: {
            line: 262,
            column: 37
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 262
      },
      "8": {
        name: "validateSession",
        decl: {
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 286,
            column: 30
          }
        },
        loc: {
          start: {
            line: 286,
            column: 44
          },
          end: {
            line: 314,
            column: 1
          }
        },
        line: 286
      },
      "9": {
        name: "createSession",
        decl: {
          start: {
            line: 318,
            column: 15
          },
          end: {
            line: 318,
            column: 28
          }
        },
        loc: {
          start: {
            line: 318,
            column: 42
          },
          end: {
            line: 338,
            column: 1
          }
        },
        line: 318
      },
      "10": {
        name: "destroySession",
        decl: {
          start: {
            line: 342,
            column: 15
          },
          end: {
            line: 342,
            column: 29
          }
        },
        loc: {
          start: {
            line: 342,
            column: 38
          },
          end: {
            line: 350,
            column: 1
          }
        },
        line: 342
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 359,
            column: 31
          },
          end: {
            line: 359,
            column: 32
          }
        },
        loc: {
          start: {
            line: 359,
            column: 57
          },
          end: {
            line: 384,
            column: 1
          }
        },
        line: 359
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 58,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 58,
            column: 33
          }
        }, {
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 58,
            column: 38
          }
        }],
        line: 58
      },
      "8": {
        loc: {
          start: {
            line: 61,
            column: 21
          },
          end: {
            line: 61,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 21
          },
          end: {
            line: 61,
            column: 33
          }
        }, {
          start: {
            line: 61,
            column: 37
          },
          end: {
            line: 61,
            column: 58
          }
        }],
        line: 61
      },
      "9": {
        loc: {
          start: {
            line: 62,
            column: 19
          },
          end: {
            line: 62,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 31
          },
          end: {
            line: 62,
            column: 42
          }
        }, {
          start: {
            line: 62,
            column: 45
          },
          end: {
            line: 62,
            column: 53
          }
        }],
        line: 62
      },
      "10": {
        loc: {
          start: {
            line: 63,
            column: 24
          },
          end: {
            line: 63,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 24
          },
          end: {
            line: 63,
            column: 39
          }
        }, {
          start: {
            line: 63,
            column: 43
          },
          end: {
            line: 63,
            column: 48
          }
        }],
        line: 63
      },
      "11": {
        loc: {
          start: {
            line: 64,
            column: 25
          },
          end: {
            line: 64,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 25
          },
          end: {
            line: 64,
            column: 44
          }
        }, {
          start: {
            line: 64,
            column: 48
          },
          end: {
            line: 64,
            column: 53
          }
        }],
        line: 64
      },
      "12": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "13": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "14": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "15": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "16": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 104,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 104,
            column: 17
          }
        }, {
          start: {
            line: 104,
            column: 21
          },
          end: {
            line: 104,
            column: 34
          }
        }],
        line: 104
      },
      "17": {
        loc: {
          start: {
            line: 111,
            column: 124
          },
          end: {
            line: 111,
            column: 165
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 124
          },
          end: {
            line: 111,
            column: 157
          }
        }, {
          start: {
            line: 111,
            column: 161
          },
          end: {
            line: 111,
            column: 165
          }
        }],
        line: 111
      },
      "18": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "19": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "20": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "21": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "22": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "23": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "24": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "25": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 17
          }
        }, {
          start: {
            line: 190,
            column: 22
          },
          end: {
            line: 190,
            column: 35
          }
        }, {
          start: {
            line: 190,
            column: 39
          },
          end: {
            line: 190,
            column: 60
          }
        }],
        line: 190
      },
      "26": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "27": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "28": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "29": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: 241,
            column: 13
          },
          end: {
            line: 246,
            column: 9
          }
        }],
        line: 233
      },
      "30": {
        loc: {
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 233,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 233,
            column: 29
          }
        }, {
          start: {
            line: 233,
            column: 33
          },
          end: {
            line: 233,
            column: 61
          }
        }],
        line: 233
      },
      "31": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 239,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 239,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "32": {
        loc: {
          start: {
            line: 261,
            column: 29
          },
          end: {
            line: 261,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 261,
            column: 43
          },
          end: {
            line: 261,
            column: 46
          }
        }],
        line: 261
      },
      "33": {
        loc: {
          start: {
            line: 261,
            column: 48
          },
          end: {
            line: 261,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 261,
            column: 59
          },
          end: {
            line: 261,
            column: 65
          }
        }],
        line: 261
      },
      "34": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "35": {
        loc: {
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 266,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 266,
            column: 23
          }
        }, {
          start: {
            line: 266,
            column: 27
          },
          end: {
            line: 266,
            column: 49
          }
        }],
        line: 266
      },
      "36": {
        loc: {
          start: {
            line: 272,
            column: 26
          },
          end: {
            line: 272,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 272,
            column: 36
          },
          end: {
            line: 272,
            column: 47
          }
        }, {
          start: {
            line: 272,
            column: 50
          },
          end: {
            line: 272,
            column: 51
          }
        }],
        line: 272
      },
      "37": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "38": {
        loc: {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "39": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "40": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 300,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 300,
            column: 20
          }
        }, {
          start: {
            line: 300,
            column: 24
          },
          end: {
            line: 300,
            column: 53
          }
        }],
        line: 300
      },
      "41": {
        loc: {
          start: {
            line: 304,
            column: 26
          },
          end: {
            line: 304,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 304,
            column: 26
          },
          end: {
            line: 304,
            column: 32
          }
        }, {
          start: {
            line: 304,
            column: 36
          },
          end: {
            line: 304,
            column: 64
          }
        }],
        line: 304
      },
      "42": {
        loc: {
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "43": {
        loc: {
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 305,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 305,
            column: 21
          }
        }, {
          start: {
            line: 305,
            column: 25
          },
          end: {
            line: 305,
            column: 56
          }
        }],
        line: 305
      },
      "44": {
        loc: {
          start: {
            line: 324,
            column: 22
          },
          end: {
            line: 324,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 22
          },
          end: {
            line: 324,
            column: 47
          }
        }, {
          start: {
            line: 324,
            column: 51
          },
          end: {
            line: 324,
            column: 53
          }
        }],
        line: 324
      },
      "45": {
        loc: {
          start: {
            line: 325,
            column: 23
          },
          end: {
            line: 325,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 23
          },
          end: {
            line: 325,
            column: 29
          }
        }, {
          start: {
            line: 325,
            column: 33
          },
          end: {
            line: 325,
            column: 61
          }
        }, {
          start: {
            line: 325,
            column: 65
          },
          end: {
            line: 325,
            column: 67
          }
        }],
        line: 325
      },
      "46": {
        loc: {
          start: {
            line: 326,
            column: 23
          },
          end: {
            line: 326,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 326,
            column: 23
          },
          end: {
            line: 326,
            column: 47
          }
        }, {
          start: {
            line: 326,
            column: 51
          },
          end: {
            line: 326,
            column: 53
          }
        }],
        line: 326
      },
      "47": {
        loc: {
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "48": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "49": {
        loc: {
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 369,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 369,
            column: 17
          }
        }, {
          start: {
            line: 369,
            column: 21
          },
          end: {
            line: 369,
            column: 38
          }
        }],
        line: 369
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a434e471bb046df4aef65a80d6b03909a7059563"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lz4ojsbus = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1lz4ojsbus();
var __importDefault =
/* istanbul ignore next */
(cov_1lz4ojsbus().s[0]++,
/* istanbul ignore next */
(cov_1lz4ojsbus().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1lz4ojsbus().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1lz4ojsbus().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1lz4ojsbus().f[0]++;
  cov_1lz4ojsbus().s[1]++;
  return /* istanbul ignore next */(cov_1lz4ojsbus().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1lz4ojsbus().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1lz4ojsbus().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1lz4ojsbus().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1lz4ojsbus().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1lz4ojsbus().s[3]++;
exports.requireAgeVerification = exports.requireAuth = exports.authenticateToken = exports.rateLimitMiddleware = exports.deviceBindingMiddleware = exports.adminMiddleware = exports.mfaMiddleware = exports.refreshTokenMiddleware = exports.authMiddleware = void 0;
/* istanbul ignore next */
cov_1lz4ojsbus().s[4]++;
exports.createSession = createSession;
/* istanbul ignore next */
cov_1lz4ojsbus().s[5]++;
exports.destroySession = destroySession;
const jsonwebtoken_1 =
/* istanbul ignore next */
(cov_1lz4ojsbus().s[6]++, __importDefault(require("jsonwebtoken")));
const User_1 =
/* istanbul ignore next */
(cov_1lz4ojsbus().s[7]++, require("../models/User"));
const logger_1 =
/* istanbul ignore next */
(cov_1lz4ojsbus().s[8]++, require("../config/logger"));
const redis_1 =
/* istanbul ignore next */
(cov_1lz4ojsbus().s[9]++, require("../config/redis"));
/**
 * Main authentication middleware
 */
/* istanbul ignore next */
cov_1lz4ojsbus().s[10]++;
const authMiddleware = async (req, res, next) => {
  /* istanbul ignore next */
  cov_1lz4ojsbus().f[1]++;
  cov_1lz4ojsbus().s[11]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[12]++, req.header('Authorization')?.replace('Bearer ', ''));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[13]++;
    if (!token) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[3][0]++;
      cov_1lz4ojsbus().s[14]++;
      return res.status(401).json({
        success: false,
        error: 'Access denied. No token provided.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[3][1]++;
    }
    // Verify JWT token
    const decoded =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[15]++, jsonwebtoken_1.default.verify(token, process.env.JWT_SECRET));
    // Check if user still exists and is not banned
    const user =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[16]++, await User_1.User.findById(decoded.userId).select('-password'));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[17]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[4][0]++;
      cov_1lz4ojsbus().s[18]++;
      return res.status(401).json({
        success: false,
        error: 'Invalid token. User not found.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[4][1]++;
    }
    cov_1lz4ojsbus().s[19]++;
    if (user.isBanned) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[5][0]++;
      cov_1lz4ojsbus().s[20]++;
      return res.status(403).json({
        success: false,
        error: 'Account is banned.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[5][1]++;
    }
    // Check session validity
    const sessionValid =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[21]++, await validateSession(decoded.userId, req));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[22]++;
    if (!sessionValid) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[6][0]++;
      cov_1lz4ojsbus().s[23]++;
      return res.status(401).json({
        success: false,
        error: 'Session expired or invalid.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[6][1]++;
    }
    // Update last active
    cov_1lz4ojsbus().s[24]++;
    await User_1.User.findByIdAndUpdate(decoded.userId, {
      lastActiveAt: new Date()
    });
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[25]++;
    req.user = {
      userId: user._id.toString(),
      id: user._id.toString(),
      email: user.email,
      username: user.username,
      ogLevel:
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[7][0]++, user.ogLevel) ||
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[7][1]++, 0),
      isVerified: user.isVerified,
      isBanned: user.isBanned,
      isAdmin:
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[8][0]++, user.isAdmin) ||
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[8][1]++, user.role === 'admin'),
      roles: user.role ?
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[9][0]++, [user.role]) :
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[9][1]++, ['user']),
      mfaEnabled:
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[10][0]++, user.mfaEnabled) ||
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[10][1]++, false),
      mfaVerified:
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[11][0]++, decoded.mfaVerified) ||
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[11][1]++, false)
    };
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[26]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[27]++;
    logger_1.logger.error('Authentication error:', error);
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[28]++;
    if (error instanceof jsonwebtoken_1.default.JsonWebTokenError) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[12][0]++;
      cov_1lz4ojsbus().s[29]++;
      return res.status(401).json({
        success: false,
        error: 'Invalid token.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[12][1]++;
    }
    cov_1lz4ojsbus().s[30]++;
    if (error instanceof jsonwebtoken_1.default.TokenExpiredError) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[13][0]++;
      cov_1lz4ojsbus().s[31]++;
      return res.status(401).json({
        success: false,
        error: 'Token expired.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[13][1]++;
    }
    cov_1lz4ojsbus().s[32]++;
    return res.status(500).json({
      success: false,
      error: 'Authentication failed.'
    });
  }
};
/* istanbul ignore next */
cov_1lz4ojsbus().s[33]++;
exports.authMiddleware = authMiddleware;
/**
 * Refresh token middleware
 */
/* istanbul ignore next */
cov_1lz4ojsbus().s[34]++;
const refreshTokenMiddleware = async (req, res, next) => {
  /* istanbul ignore next */
  cov_1lz4ojsbus().f[2]++;
  cov_1lz4ojsbus().s[35]++;
  try {
    const refreshToken =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[36]++, req.header('X-Refresh-Token'));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[37]++;
    if (!refreshToken) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[14][0]++;
      cov_1lz4ojsbus().s[38]++;
      return res.status(401).json({
        success: false,
        error: 'Refresh token required.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[14][1]++;
    }
    const decoded =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[39]++, jsonwebtoken_1.default.verify(refreshToken, process.env.JWT_REFRESH_SECRET));
    // Check if refresh token is still valid
    const user =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[40]++, await User_1.User.findById(decoded.userId));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[16][0]++, !user) ||
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[16][1]++, user.isBanned)) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[15][0]++;
      cov_1lz4ojsbus().s[42]++;
      return res.status(401).json({
        success: false,
        error: 'Invalid refresh token.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[15][1]++;
    }
    // Generate new access token
    const newAccessToken =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[43]++, jsonwebtoken_1.default.sign({
      userId: decoded.userId
    }, process.env.JWT_SECRET, {
      expiresIn:
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[17][0]++, process.env.JWT_ACCESS_EXPIRES_IN) ||
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[17][1]++, '1h')
    }));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[44]++;
    res.set('X-New-Token', newAccessToken);
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[45]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[46]++;
    logger_1.logger.error('Refresh token error:', error);
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[47]++;
    return res.status(401).json({
      success: false,
      error: 'Invalid refresh token.'
    });
  }
};
/* istanbul ignore next */
cov_1lz4ojsbus().s[48]++;
exports.refreshTokenMiddleware = refreshTokenMiddleware;
/**
 * MFA middleware
 */
/* istanbul ignore next */
cov_1lz4ojsbus().s[49]++;
const mfaMiddleware = async (req, res, next) => {
  /* istanbul ignore next */
  cov_1lz4ojsbus().f[3]++;
  cov_1lz4ojsbus().s[50]++;
  try {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[51]++;
    if (!req.user) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[18][0]++;
      cov_1lz4ojsbus().s[52]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[18][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[53]++, await User_1.User.findById(req.user.userId));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[54]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[19][0]++;
      cov_1lz4ojsbus().s[55]++;
      return res.status(401).json({
        success: false,
        error: 'User not found.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[19][1]++;
    }
    // Check if MFA is enabled
    cov_1lz4ojsbus().s[56]++;
    if (!user.mfaEnabled) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[20][0]++;
      cov_1lz4ojsbus().s[57]++;
      return next();
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[20][1]++;
    }
    const mfaToken =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[58]++, req.header('X-TOTP-Token'));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[59]++;
    if (!mfaToken) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[21][0]++;
      cov_1lz4ojsbus().s[60]++;
      return res.status(401).json({
        success: false,
        error: 'MFA token required.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[21][1]++;
    }
    // Verify TOTP token
    const speakeasy =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[61]++, require('speakeasy'));
    const verified =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[62]++, speakeasy.totp.verify({
      secret: user.totpSecret,
      encoding: 'base32',
      token: mfaToken,
      window: 2
    }));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[63]++;
    if (!verified) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[22][0]++;
      cov_1lz4ojsbus().s[64]++;
      return res.status(401).json({
        success: false,
        error: 'Invalid MFA token.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[22][1]++;
    }
    cov_1lz4ojsbus().s[65]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[66]++;
    logger_1.logger.error('MFA verification error:', error);
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[67]++;
    return res.status(500).json({
      success: false,
      error: 'MFA verification failed.'
    });
  }
};
/* istanbul ignore next */
cov_1lz4ojsbus().s[68]++;
exports.mfaMiddleware = mfaMiddleware;
/**
 * Admin middleware
 */
/* istanbul ignore next */
cov_1lz4ojsbus().s[69]++;
const adminMiddleware = async (req, res, next) => {
  /* istanbul ignore next */
  cov_1lz4ojsbus().f[4]++;
  cov_1lz4ojsbus().s[70]++;
  try {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[71]++;
    if (!req.user) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[23][0]++;
      cov_1lz4ojsbus().s[72]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[23][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[73]++, await User_1.User.findById(req.user.userId));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[74]++;
    if (
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[25][0]++, !user) ||
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[25][1]++, !user.isAdmin) &&
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[25][2]++, user.role !== 'admin')) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[24][0]++;
      cov_1lz4ojsbus().s[75]++;
      return res.status(403).json({
        success: false,
        error: 'Admin access required.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[24][1]++;
    }
    cov_1lz4ojsbus().s[76]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[77]++;
    logger_1.logger.error('Admin middleware error:', error);
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[78]++;
    return res.status(500).json({
      success: false,
      error: 'Authorization failed.'
    });
  }
};
/* istanbul ignore next */
cov_1lz4ojsbus().s[79]++;
exports.adminMiddleware = adminMiddleware;
/**
 * Device binding middleware
 */
/* istanbul ignore next */
cov_1lz4ojsbus().s[80]++;
const deviceBindingMiddleware = async (req, res, next) => {
  /* istanbul ignore next */
  cov_1lz4ojsbus().f[5]++;
  cov_1lz4ojsbus().s[81]++;
  try {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[82]++;
    if (!req.user) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[26][0]++;
      cov_1lz4ojsbus().s[83]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[26][1]++;
    }
    const deviceId =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[84]++, req.header('X-Device-ID'));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[85]++;
    if (!deviceId) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[27][0]++;
      cov_1lz4ojsbus().s[86]++;
      return res.status(400).json({
        success: false,
        error: 'Device ID required.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[27][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[87]++, await User_1.User.findById(req.user.userId));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[88]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[28][0]++;
      cov_1lz4ojsbus().s[89]++;
      return res.status(401).json({
        success: false,
        error: 'User not found.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[28][1]++;
    }
    // Check if device is bound
    cov_1lz4ojsbus().s[90]++;
    if (
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[30][0]++, user.boundDevices) &&
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[30][1]++, user.boundDevices.length > 0)) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[29][0]++;
      cov_1lz4ojsbus().s[91]++;
      if (!user.boundDevices.includes(deviceId)) {
        /* istanbul ignore next */
        cov_1lz4ojsbus().b[31][0]++;
        cov_1lz4ojsbus().s[92]++;
        return res.status(403).json({
          success: false,
          error: 'Device not authorized.'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1lz4ojsbus().b[31][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[29][1]++;
      cov_1lz4ojsbus().s[93]++;
      // First time - bind device
      await User_1.User.findByIdAndUpdate(req.user.userId, {
        $addToSet: {
          boundDevices: deviceId
        }
      });
    }
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[94]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[95]++;
    logger_1.logger.error('Device binding error:', error);
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[96]++;
    return res.status(500).json({
      success: false,
      error: 'Device binding failed.'
    });
  }
};
/* istanbul ignore next */
cov_1lz4ojsbus().s[97]++;
exports.deviceBindingMiddleware = deviceBindingMiddleware;
/**
 * Rate limiting middleware
 */
/* istanbul ignore next */
cov_1lz4ojsbus().s[98]++;
const rateLimitMiddleware = (maxRequests =
/* istanbul ignore next */
(cov_1lz4ojsbus().b[32][0]++, 100), windowMs =
/* istanbul ignore next */
(cov_1lz4ojsbus().b[33][0]++, 900000)) => {
  /* istanbul ignore next */
  cov_1lz4ojsbus().f[6]++;
  cov_1lz4ojsbus().s[99]++;
  return async (req, res, next) => {
    /* istanbul ignore next */
    cov_1lz4ojsbus().f[7]++;
    cov_1lz4ojsbus().s[100]++;
    try {
      const key =
      /* istanbul ignore next */
      (cov_1lz4ojsbus().s[101]++, `rate_limit:${req.ip}:${req.path}`);
      const current =
      /* istanbul ignore next */
      (cov_1lz4ojsbus().s[102]++, await (0, redis_1.getCache)(key));
      /* istanbul ignore next */
      cov_1lz4ojsbus().s[103]++;
      if (
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[35][0]++, current) &&
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[35][1]++, current >= maxRequests)) {
        /* istanbul ignore next */
        cov_1lz4ojsbus().b[34][0]++;
        cov_1lz4ojsbus().s[104]++;
        return res.status(429).json({
          success: false,
          error: 'Too many requests.'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1lz4ojsbus().b[34][1]++;
      }
      const count =
      /* istanbul ignore next */
      (cov_1lz4ojsbus().s[105]++, current ?
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[36][0]++, current + 1) :
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[36][1]++, 1));
      /* istanbul ignore next */
      cov_1lz4ojsbus().s[106]++;
      await (0, redis_1.setCache)(key, count, Math.ceil(windowMs / 1000));
      /* istanbul ignore next */
      cov_1lz4ojsbus().s[107]++;
      next();
    } catch (error) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().s[108]++;
      logger_1.logger.error('Rate limiting error:', error);
      /* istanbul ignore next */
      cov_1lz4ojsbus().s[109]++;
      next(); // Continue on error
    }
  };
};
/* istanbul ignore next */
cov_1lz4ojsbus().s[110]++;
exports.rateLimitMiddleware = rateLimitMiddleware;
/**
 * Validate session
 */
async function validateSession(userId, req) {
  /* istanbul ignore next */
  cov_1lz4ojsbus().f[8]++;
  cov_1lz4ojsbus().s[111]++;
  try {
    const sessionKey =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[112]++, `session:${userId}`);
    const session =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[113]++, await (0, redis_1.getCache)(sessionKey));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[114]++;
    if (!session) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[37][0]++;
      cov_1lz4ojsbus().s[115]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[37][1]++;
    }
    // Check if session is expired
    cov_1lz4ojsbus().s[116]++;
    if (new Date() > new Date(session.expiresAt)) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[38][0]++;
      cov_1lz4ojsbus().s[117]++;
      await (0, redis_1.setCache)(sessionKey, null, 0); // Delete expired session
      /* istanbul ignore next */
      cov_1lz4ojsbus().s[118]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[38][1]++;
    }
    // Check device binding if enabled
    const deviceId =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[119]++, req.header('X-Device-ID'));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[120]++;
    if (
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[40][0]++, deviceId) &&
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[40][1]++, session.deviceId !== deviceId)) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[39][0]++;
      cov_1lz4ojsbus().s[121]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[39][1]++;
    }
    // Check IP binding if enabled
    const ipAddress =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[122]++,
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[41][0]++, req.ip) ||
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[41][1]++, req.connection.remoteAddress));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[123]++;
    if (
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[43][0]++, ipAddress) &&
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[43][1]++, session.ipAddress !== ipAddress)) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[42][0]++;
      cov_1lz4ojsbus().s[124]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[42][1]++;
    }
    cov_1lz4ojsbus().s[125]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[126]++;
    logger_1.logger.error('Session validation error:', error);
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[127]++;
    return false;
  }
}
/**
 * Create session
 */
async function createSession(userId, req) {
  /* istanbul ignore next */
  cov_1lz4ojsbus().f[9]++;
  cov_1lz4ojsbus().s[128]++;
  try {
    const sessionData =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[129]++, {
      userId,
      email: '',
      // Will be populated
      role: 'user',
      deviceId:
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[44][0]++, req.header('X-Device-ID')) ||
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[44][1]++, ''),
      ipAddress:
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[45][0]++, req.ip) ||
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[45][1]++, req.connection.remoteAddress) ||
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[45][2]++, ''),
      userAgent:
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[46][0]++, req.header('User-Agent')) ||
      /* istanbul ignore next */
      (cov_1lz4ojsbus().b[46][1]++, ''),
      createdAt: new Date(),
      expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000) // 7 days
    });
    const sessionKey =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[130]++, `session:${userId}`);
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[131]++;
    await (0, redis_1.setCache)(sessionKey, sessionData, 7 * 24 * 60 * 60); // 7 days
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[132]++;
    return sessionKey;
  } catch (error) {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[133]++;
    logger_1.logger.error('Session creation error:', error);
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[134]++;
    throw error;
  }
}
/**
 * Destroy session
 */
async function destroySession(userId) {
  /* istanbul ignore next */
  cov_1lz4ojsbus().f[10]++;
  cov_1lz4ojsbus().s[135]++;
  try {
    const sessionKey =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[136]++, `session:${userId}`);
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[137]++;
    await (0, redis_1.setCache)(sessionKey, null, 0);
  } catch (error) {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[138]++;
    logger_1.logger.error('Session destruction error:', error);
  }
}
/**
 * Alias for authMiddleware for backward compatibility
 */
/* istanbul ignore next */
cov_1lz4ojsbus().s[139]++;
exports.authenticateToken = exports.authMiddleware;
/* istanbul ignore next */
cov_1lz4ojsbus().s[140]++;
exports.requireAuth = exports.authMiddleware;
/**
 * Age verification middleware
 */
/* istanbul ignore next */
cov_1lz4ojsbus().s[141]++;
const requireAgeVerification = async (req, res, next) => {
  /* istanbul ignore next */
  cov_1lz4ojsbus().f[11]++;
  cov_1lz4ojsbus().s[142]++;
  try {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[143]++;
    if (!req.user) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[47][0]++;
      cov_1lz4ojsbus().s[144]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[47][1]++;
    }
    // Check if user has verified their age
    const user =
    /* istanbul ignore next */
    (cov_1lz4ojsbus().s[145]++, await User_1.User.findById(req.user.userId));
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[146]++;
    if (
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[49][0]++, !user) ||
    /* istanbul ignore next */
    (cov_1lz4ojsbus().b[49][1]++, !user.ageVerified)) {
      /* istanbul ignore next */
      cov_1lz4ojsbus().b[48][0]++;
      cov_1lz4ojsbus().s[147]++;
      return res.status(403).json({
        success: false,
        error: 'Age verification required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1lz4ojsbus().b[48][1]++;
    }
    cov_1lz4ojsbus().s[148]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[149]++;
    logger_1.logger.error('Age verification error:', error);
    /* istanbul ignore next */
    cov_1lz4ojsbus().s[150]++;
    res.status(500).json({
      success: false,
      error: 'Internal server error'
    });
  }
};
/* istanbul ignore next */
cov_1lz4ojsbus().s[151]++;
exports.requireAgeVerification = requireAgeVerification;