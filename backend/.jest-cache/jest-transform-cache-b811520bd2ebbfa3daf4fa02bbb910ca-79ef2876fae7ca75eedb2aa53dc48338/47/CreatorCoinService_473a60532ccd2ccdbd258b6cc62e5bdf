3688bcf9ece015fc5ebf390bf97b7eba
"use strict";

/* istanbul ignore next */
function cov_pm7o5qgqe() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\blockchain\\CreatorCoinService.ts";
  var hash = "9db14436864d852c1dd7544dd56b0543800fc71a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\blockchain\\CreatorCoinService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 38
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 41
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "6": {
        start: {
          line: 9,
          column: 25
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "7": {
        start: {
          line: 48,
          column: 26
        },
        end: {
          line: 79,
          column: 2
        }
      },
      "8": {
        start: {
          line: 80,
          column: 30
        },
        end: {
          line: 95,
          column: 2
        }
      },
      "9": {
        start: {
          line: 96,
          column: 25
        },
        end: {
          line: 110,
          column: 2
        }
      },
      "10": {
        start: {
          line: 111,
          column: 26
        },
        end: {
          line: 129,
          column: 2
        }
      },
      "11": {
        start: {
          line: 130,
          column: 30
        },
        end: {
          line: 146,
          column: 2
        }
      },
      "12": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 148,
          column: 80
        }
      },
      "13": {
        start: {
          line: 149,
          column: 29
        },
        end: {
          line: 149,
          column: 92
        }
      },
      "14": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 77
        }
      },
      "15": {
        start: {
          line: 151,
          column: 25
        },
        end: {
          line: 151,
          column: 80
        }
      },
      "16": {
        start: {
          line: 152,
          column: 29
        },
        end: {
          line: 152,
          column: 92
        }
      },
      "17": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 25
        }
      },
      "18": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "19": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 67
        }
      },
      "20": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 43
        }
      },
      "21": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "22": {
        start: {
          line: 173,
          column: 27
        },
        end: {
          line: 173,
          column: 48
        }
      },
      "23": {
        start: {
          line: 175,
          column: 36
        },
        end: {
          line: 175,
          column: 108
        }
      },
      "24": {
        start: {
          line: 176,
          column: 32
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "25": {
        start: {
          line: 202,
          column: 32
        },
        end: {
          line: 202,
          column: 74
        }
      },
      "26": {
        start: {
          line: 204,
          column: 32
        },
        end: {
          line: 204,
          column: 61
        }
      },
      "27": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 97
        }
      },
      "28": {
        start: {
          line: 207,
          column: 23
        },
        end: {
          line: 207,
          column: 50
        }
      },
      "29": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "30": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 215,
          column: 19
        }
      },
      "31": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 97
        }
      },
      "32": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 31
        }
      },
      "33": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 95
        }
      },
      "34": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 24
        }
      },
      "35": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "36": {
        start: {
          line: 230,
          column: 25
        },
        end: {
          line: 230,
          column: 58
        }
      },
      "37": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 233,
          column: 13
        }
      },
      "38": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 58
        }
      },
      "39": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 236,
          column: 13
        }
      },
      "40": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 235,
          column: 62
        }
      },
      "41": {
        start: {
          line: 237,
          column: 33
        },
        end: {
          line: 237,
          column: 67
        }
      },
      "42": {
        start: {
          line: 238,
          column: 31
        },
        end: {
          line: 238,
          column: 52
        }
      },
      "43": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 241,
          column: 13
        }
      },
      "44": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 71
        }
      },
      "45": {
        start: {
          line: 243,
          column: 32
        },
        end: {
          line: 243,
          column: 87
        }
      },
      "46": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "47": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 56
        }
      },
      "48": {
        start: {
          line: 247,
          column: 34
        },
        end: {
          line: 247,
          column: 62
        }
      },
      "49": {
        start: {
          line: 248,
          column: 32
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "50": {
        start: {
          line: 261,
          column: 37
        },
        end: {
          line: 261,
          column: 107
        }
      },
      "51": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 60
        }
      },
      "52": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 45
        }
      },
      "53": {
        start: {
          line: 265,
          column: 39
        },
        end: {
          line: 265,
          column: 85
        }
      },
      "54": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 85
        }
      },
      "55": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 78
        }
      },
      "56": {
        start: {
          line: 271,
          column: 23
        },
        end: {
          line: 271,
          column: 50
        }
      },
      "57": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 281,
          column: 13
        }
      },
      "58": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 280,
          column: 19
        }
      },
      "59": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 103
        }
      },
      "60": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 38
        }
      },
      "61": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 99
        }
      },
      "62": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 24
        }
      },
      "63": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "64": {
        start: {
          line: 295,
          column: 25
        },
        end: {
          line: 295,
          column: 58
        }
      },
      "65": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "66": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 58
        }
      },
      "67": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 301,
          column: 13
        }
      },
      "68": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 300,
          column: 62
        }
      },
      "69": {
        start: {
          line: 303,
          column: 32
        },
        end: {
          line: 303,
          column: 77
        }
      },
      "70": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 306,
          column: 13
        }
      },
      "71": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 61
        }
      },
      "72": {
        start: {
          line: 307,
          column: 33
        },
        end: {
          line: 307,
          column: 67
        }
      },
      "73": {
        start: {
          line: 308,
          column: 31
        },
        end: {
          line: 308,
          column: 52
        }
      },
      "74": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "75": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 72
        }
      },
      "76": {
        start: {
          line: 312,
          column: 34
        },
        end: {
          line: 312,
          column: 62
        }
      },
      "77": {
        start: {
          line: 313,
          column: 32
        },
        end: {
          line: 324,
          column: 13
        }
      },
      "78": {
        start: {
          line: 326,
          column: 37
        },
        end: {
          line: 326,
          column: 108
        }
      },
      "79": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 60
        }
      },
      "80": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 45
        }
      },
      "81": {
        start: {
          line: 330,
          column: 39
        },
        end: {
          line: 330,
          column: 85
        }
      },
      "82": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 86
        }
      },
      "83": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 334,
          column: 79
        }
      },
      "84": {
        start: {
          line: 336,
          column: 23
        },
        end: {
          line: 336,
          column: 50
        }
      },
      "85": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "86": {
        start: {
          line: 338,
          column: 16
        },
        end: {
          line: 345,
          column: 19
        }
      },
      "87": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 98
        }
      },
      "88": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 38
        }
      },
      "89": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 100
        }
      },
      "90": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 24
        }
      },
      "91": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 395,
          column: 9
        }
      },
      "92": {
        start: {
          line: 360,
          column: 27
        },
        end: {
          line: 360,
          column: 48
        }
      },
      "93": {
        start: {
          line: 361,
          column: 32
        },
        end: {
          line: 376,
          column: 13
        }
      },
      "94": {
        start: {
          line: 377,
          column: 32
        },
        end: {
          line: 377,
          column: 74
        }
      },
      "95": {
        start: {
          line: 379,
          column: 23
        },
        end: {
          line: 379,
          column: 50
        }
      },
      "96": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 388,
          column: 13
        }
      },
      "97": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 387,
          column: 19
        }
      },
      "98": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 82
        }
      },
      "99": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 31
        }
      },
      "100": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 89
        }
      },
      "101": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 24
        }
      },
      "102": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 461,
          column: 9
        }
      },
      "103": {
        start: {
          line: 402,
          column: 25
        },
        end: {
          line: 402,
          column: 67
        }
      },
      "104": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 405,
          column: 13
        }
      },
      "105": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 404,
          column: 58
        }
      },
      "106": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 408,
          column: 13
        }
      },
      "107": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 407,
          column: 62
        }
      },
      "108": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 411,
          column: 13
        }
      },
      "109": {
        start: {
          line: 410,
          column: 16
        },
        end: {
          line: 410,
          column: 77
        }
      },
      "110": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 414,
          column: 13
        }
      },
      "111": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 413,
          column: 70
        }
      },
      "112": {
        start: {
          line: 416,
          column: 32
        },
        end: {
          line: 416,
          column: 82
        }
      },
      "113": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 419,
          column: 13
        }
      },
      "114": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 418,
          column: 61
        }
      },
      "115": {
        start: {
          line: 420,
          column: 31
        },
        end: {
          line: 420,
          column: 56
        }
      },
      "116": {
        start: {
          line: 421,
          column: 28
        },
        end: {
          line: 421,
          column: 88
        }
      },
      "117": {
        start: {
          line: 422,
          column: 36
        },
        end: {
          line: 436,
          column: 13
        }
      },
      "118": {
        start: {
          line: 437,
          column: 36
        },
        end: {
          line: 437,
          column: 86
        }
      },
      "119": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 439,
          column: 39
        }
      },
      "120": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 440,
          column: 36
        }
      },
      "121": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 69
        }
      },
      "122": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 66
        }
      },
      "123": {
        start: {
          line: 445,
          column: 23
        },
        end: {
          line: 445,
          column: 50
        }
      },
      "124": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 454,
          column: 13
        }
      },
      "125": {
        start: {
          line: 447,
          column: 16
        },
        end: {
          line: 453,
          column: 19
        }
      },
      "126": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 89
        }
      },
      "127": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 35
        }
      },
      "128": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 92
        }
      },
      "129": {
        start: {
          line: 460,
          column: 12
        },
        end: {
          line: 460,
          column: 24
        }
      },
      "130": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 503,
          column: 9
        }
      },
      "131": {
        start: {
          line: 468,
          column: 29
        },
        end: {
          line: 468,
          column: 87
        }
      },
      "132": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 471,
          column: 13
        }
      },
      "133": {
        start: {
          line: 470,
          column: 16
        },
        end: {
          line: 470,
          column: 62
        }
      },
      "134": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 474,
          column: 13
        }
      },
      "135": {
        start: {
          line: 473,
          column: 16
        },
        end: {
          line: 473,
          column: 66
        }
      },
      "136": {
        start: {
          line: 476,
          column: 31
        },
        end: {
          line: 476,
          column: 110
        }
      },
      "137": {
        start: {
          line: 477,
          column: 33
        },
        end: {
          line: 477,
          column: 86
        }
      },
      "138": {
        start: {
          line: 478,
          column: 37
        },
        end: {
          line: 478,
          column: 75
        }
      },
      "139": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 481,
          column: 13
        }
      },
      "140": {
        start: {
          line: 480,
          column: 16
        },
        end: {
          line: 480,
          column: 55
        }
      },
      "141": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 50
        }
      },
      "142": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 484,
          column: 56
        }
      },
      "143": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 81
        }
      },
      "144": {
        start: {
          line: 487,
          column: 12
        },
        end: {
          line: 487,
          column: 82
        }
      },
      "145": {
        start: {
          line: 489,
          column: 23
        },
        end: {
          line: 489,
          column: 50
        }
      },
      "146": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 496,
          column: 13
        }
      },
      "147": {
        start: {
          line: 491,
          column: 16
        },
        end: {
          line: 495,
          column: 19
        }
      },
      "148": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 110
        }
      },
      "149": {
        start: {
          line: 498,
          column: 12
        },
        end: {
          line: 498,
          column: 36
        }
      },
      "150": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 99
        }
      },
      "151": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 502,
          column: 24
        }
      },
      "152": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 541,
          column: 9
        }
      },
      "153": {
        start: {
          line: 510,
          column: 25
        },
        end: {
          line: 510,
          column: 58
        }
      },
      "154": {
        start: {
          line: 511,
          column: 12
        },
        end: {
          line: 513,
          column: 13
        }
      },
      "155": {
        start: {
          line: 512,
          column: 16
        },
        end: {
          line: 512,
          column: 58
        }
      },
      "156": {
        start: {
          line: 515,
          column: 30
        },
        end: {
          line: 515,
          column: 72
        }
      },
      "157": {
        start: {
          line: 516,
          column: 42
        },
        end: {
          line: 520,
          column: 14
        }
      },
      "158": {
        start: {
          line: 521,
          column: 30
        },
        end: {
          line: 521,
          column: 95
        }
      },
      "159": {
        start: {
          line: 521,
          column: 72
        },
        end: {
          line: 521,
          column: 91
        }
      },
      "160": {
        start: {
          line: 522,
          column: 35
        },
        end: {
          line: 522,
          column: 36
        }
      },
      "161": {
        start: {
          line: 523,
          column: 31
        },
        end: {
          line: 535,
          column: 13
        }
      },
      "162": {
        start: {
          line: 536,
          column: 12
        },
        end: {
          line: 536,
          column: 30
        }
      },
      "163": {
        start: {
          line: 539,
          column: 12
        },
        end: {
          line: 539,
          column: 82
        }
      },
      "164": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 540,
          column: 24
        }
      },
      "165": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 556,
          column: 9
        }
      },
      "166": {
        start: {
          line: 548,
          column: 26
        },
        end: {
          line: 550,
          column: 29
        }
      },
      "167": {
        start: {
          line: 551,
          column: 12
        },
        end: {
          line: 551,
          column: 25
        }
      },
      "168": {
        start: {
          line: 554,
          column: 12
        },
        end: {
          line: 554,
          column: 77
        }
      },
      "169": {
        start: {
          line: 555,
          column: 12
        },
        end: {
          line: 555,
          column: 24
        }
      },
      "170": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 577,
          column: 9
        }
      },
      "171": {
        start: {
          line: 562,
          column: 32
        },
        end: {
          line: 562,
          column: 61
        }
      },
      "172": {
        start: {
          line: 563,
          column: 27
        },
        end: {
          line: 563,
          column: 74
        }
      },
      "173": {
        start: {
          line: 564,
          column: 12
        },
        end: {
          line: 566,
          column: 13
        }
      },
      "174": {
        start: {
          line: 565,
          column: 16
        },
        end: {
          line: 565,
          column: 42
        }
      },
      "175": {
        start: {
          line: 568,
          column: 25
        },
        end: {
          line: 568,
          column: 67
        }
      },
      "176": {
        start: {
          line: 569,
          column: 12
        },
        end: {
          line: 571,
          column: 13
        }
      },
      "177": {
        start: {
          line: 570,
          column: 16
        },
        end: {
          line: 570,
          column: 94
        }
      },
      "178": {
        start: {
          line: 572,
          column: 12
        },
        end: {
          line: 572,
          column: 24
        }
      },
      "179": {
        start: {
          line: 575,
          column: 12
        },
        end: {
          line: 575,
          column: 83
        }
      },
      "180": {
        start: {
          line: 576,
          column: 12
        },
        end: {
          line: 576,
          column: 24
        }
      },
      "181": {
        start: {
          line: 581,
          column: 21
        },
        end: {
          line: 581,
          column: 54
        }
      },
      "182": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 582,
          column: 35
        }
      },
      "183": {
        start: {
          line: 586,
          column: 8
        },
        end: {
          line: 586,
          column: 20
        }
      },
      "184": {
        start: {
          line: 589,
          column: 23
        },
        end: {
          line: 589,
          column: 72
        }
      },
      "185": {
        start: {
          line: 590,
          column: 8
        },
        end: {
          line: 590,
          column: 36
        }
      },
      "186": {
        start: {
          line: 593,
          column: 21
        },
        end: {
          line: 593,
          column: 70
        }
      },
      "187": {
        start: {
          line: 594,
          column: 8
        },
        end: {
          line: 608,
          column: 9
        }
      },
      "188": {
        start: {
          line: 595,
          column: 12
        },
        end: {
          line: 607,
          column: 15
        }
      },
      "189": {
        start: {
          line: 609,
          column: 8
        },
        end: {
          line: 618,
          column: 9
        }
      },
      "190": {
        start: {
          line: 610,
          column: 12
        },
        end: {
          line: 610,
          column: 37
        }
      },
      "191": {
        start: {
          line: 611,
          column: 12
        },
        end: {
          line: 611,
          column: 41
        }
      },
      "192": {
        start: {
          line: 612,
          column: 12
        },
        end: {
          line: 612,
          column: 132
        }
      },
      "193": {
        start: {
          line: 615,
          column: 12
        },
        end: {
          line: 615,
          column: 37
        }
      },
      "194": {
        start: {
          line: 616,
          column: 12
        },
        end: {
          line: 616,
          column: 39
        }
      },
      "195": {
        start: {
          line: 617,
          column: 12
        },
        end: {
          line: 617,
          column: 76
        }
      },
      "196": {
        start: {
          line: 619,
          column: 8
        },
        end: {
          line: 619,
          column: 41
        }
      },
      "197": {
        start: {
          line: 620,
          column: 8
        },
        end: {
          line: 620,
          column: 68
        }
      },
      "198": {
        start: {
          line: 623,
          column: 21
        },
        end: {
          line: 623,
          column: 63
        }
      },
      "199": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 625,
          column: 19
        }
      },
      "200": {
        start: {
          line: 625,
          column: 12
        },
        end: {
          line: 625,
          column: 19
        }
      },
      "201": {
        start: {
          line: 626,
          column: 8
        },
        end: {
          line: 631,
          column: 9
        }
      },
      "202": {
        start: {
          line: 627,
          column: 12
        },
        end: {
          line: 627,
          column: 45
        }
      },
      "203": {
        start: {
          line: 630,
          column: 12
        },
        end: {
          line: 630,
          column: 45
        }
      },
      "204": {
        start: {
          line: 632,
          column: 8
        },
        end: {
          line: 632,
          column: 56
        }
      },
      "205": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 633,
          column: 41
        }
      },
      "206": {
        start: {
          line: 634,
          column: 8
        },
        end: {
          line: 634,
          column: 36
        }
      },
      "207": {
        start: {
          line: 635,
          column: 8
        },
        end: {
          line: 635,
          column: 65
        }
      },
      "208": {
        start: {
          line: 637,
          column: 28
        },
        end: {
          line: 637,
          column: 57
        }
      },
      "209": {
        start: {
          line: 638,
          column: 8
        },
        end: {
          line: 638,
          column: 86
        }
      },
      "210": {
        start: {
          line: 642,
          column: 8
        },
        end: {
          line: 642,
          column: 63
        }
      },
      "211": {
        start: {
          line: 646,
          column: 8
        },
        end: {
          line: 646,
          column: 63
        }
      },
      "212": {
        start: {
          line: 650,
          column: 8
        },
        end: {
          line: 650,
          column: 63
        }
      },
      "213": {
        start: {
          line: 654,
          column: 8
        },
        end: {
          line: 654,
          column: 71
        }
      },
      "214": {
        start: {
          line: 658,
          column: 8
        },
        end: {
          line: 658,
          column: 70
        }
      },
      "215": {
        start: {
          line: 661,
          column: 8
        },
        end: {
          line: 661,
          column: 79
        }
      },
      "216": {
        start: {
          line: 664,
          column: 8
        },
        end: {
          line: 664,
          column: 77
        }
      },
      "217": {
        start: {
          line: 667,
          column: 8
        },
        end: {
          line: 667,
          column: 79
        }
      },
      "218": {
        start: {
          line: 670,
          column: 8
        },
        end: {
          line: 670,
          column: 78
        }
      },
      "219": {
        start: {
          line: 673,
          column: 0
        },
        end: {
          line: 673,
          column: 48
        }
      },
      "220": {
        start: {
          line: 674,
          column: 0
        },
        end: {
          line: 674,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 18
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 157
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 25
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 162
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 98
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 171
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 53
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 228
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 54
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 293
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 120
          },
          end: {
            line: 396,
            column: 5
          }
        },
        line: 358
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 400,
            column: 5
          }
        },
        loc: {
          start: {
            line: 400,
            column: 45
          },
          end: {
            line: 462,
            column: 5
          }
        },
        line: 400
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 466,
            column: 4
          },
          end: {
            line: 466,
            column: 5
          }
        },
        loc: {
          start: {
            line: 466,
            column: 50
          },
          end: {
            line: 504,
            column: 5
          }
        },
        line: 466
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 508,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        loc: {
          start: {
            line: 508,
            column: 32
          },
          end: {
            line: 542,
            column: 5
          }
        },
        line: 508
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 521,
            column: 59
          },
          end: {
            line: 521,
            column: 60
          }
        },
        loc: {
          start: {
            line: 521,
            column: 72
          },
          end: {
            line: 521,
            column: 91
          }
        },
        line: 521
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 546,
            column: 4
          },
          end: {
            line: 546,
            column: 5
          }
        },
        loc: {
          start: {
            line: 546,
            column: 39
          },
          end: {
            line: 557,
            column: 5
          }
        },
        line: 546
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 559,
            column: 4
          },
          end: {
            line: 559,
            column: 5
          }
        },
        loc: {
          start: {
            line: 559,
            column: 33
          },
          end: {
            line: 578,
            column: 5
          }
        },
        line: 559
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 579,
            column: 4
          },
          end: {
            line: 579,
            column: 5
          }
        },
        loc: {
          start: {
            line: 579,
            column: 34
          },
          end: {
            line: 583,
            column: 5
          }
        },
        line: 579
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 584,
            column: 4
          },
          end: {
            line: 584,
            column: 5
          }
        },
        loc: {
          start: {
            line: 584,
            column: 45
          },
          end: {
            line: 587,
            column: 5
          }
        },
        line: 584
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 588,
            column: 4
          },
          end: {
            line: 588,
            column: 5
          }
        },
        loc: {
          start: {
            line: 588,
            column: 45
          },
          end: {
            line: 591,
            column: 5
          }
        },
        line: 588
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 592,
            column: 4
          },
          end: {
            line: 592,
            column: 5
          }
        },
        loc: {
          start: {
            line: 592,
            column: 64
          },
          end: {
            line: 621,
            column: 5
          }
        },
        line: 592
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 622,
            column: 4
          },
          end: {
            line: 622,
            column: 5
          }
        },
        loc: {
          start: {
            line: 622,
            column: 57
          },
          end: {
            line: 639,
            column: 5
          }
        },
        line: 622
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 640,
            column: 4
          },
          end: {
            line: 640,
            column: 5
          }
        },
        loc: {
          start: {
            line: 640,
            column: 72
          },
          end: {
            line: 643,
            column: 5
          }
        },
        line: 640
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 644,
            column: 4
          },
          end: {
            line: 644,
            column: 5
          }
        },
        loc: {
          start: {
            line: 644,
            column: 63
          },
          end: {
            line: 647,
            column: 5
          }
        },
        line: 644
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 648,
            column: 4
          },
          end: {
            line: 648,
            column: 5
          }
        },
        loc: {
          start: {
            line: 648,
            column: 64
          },
          end: {
            line: 651,
            column: 5
          }
        },
        line: 648
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 652,
            column: 4
          },
          end: {
            line: 652,
            column: 5
          }
        },
        loc: {
          start: {
            line: 652,
            column: 48
          },
          end: {
            line: 655,
            column: 5
          }
        },
        line: 652
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 656,
            column: 4
          },
          end: {
            line: 656,
            column: 5
          }
        },
        loc: {
          start: {
            line: 656,
            column: 50
          },
          end: {
            line: 659,
            column: 5
          }
        },
        line: 656
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 660,
            column: 4
          },
          end: {
            line: 660,
            column: 5
          }
        },
        loc: {
          start: {
            line: 660,
            column: 21
          },
          end: {
            line: 662,
            column: 5
          }
        },
        line: 660
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 663,
            column: 4
          },
          end: {
            line: 663,
            column: 5
          }
        },
        loc: {
          start: {
            line: 663,
            column: 28
          },
          end: {
            line: 665,
            column: 5
          }
        },
        line: 663
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 666,
            column: 4
          },
          end: {
            line: 666,
            column: 5
          }
        },
        loc: {
          start: {
            line: 666,
            column: 21
          },
          end: {
            line: 668,
            column: 5
          }
        },
        line: 666
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 669,
            column: 4
          },
          end: {
            line: 669,
            column: 5
          }
        },
        loc: {
          start: {
            line: 669,
            column: 25
          },
          end: {
            line: 671,
            column: 5
          }
        },
        line: 669
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "1": {
        loc: {
          start: {
            line: 194,
            column: 33
          },
          end: {
            line: 194,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 33
          },
          end: {
            line: 194,
            column: 53
          }
        }, {
          start: {
            line: 194,
            column: 57
          },
          end: {
            line: 194,
            column: 59
          }
        }],
        line: 194
      },
      "2": {
        loc: {
          start: {
            line: 195,
            column: 29
          },
          end: {
            line: 195,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 29
          },
          end: {
            line: 195,
            column: 45
          }
        }, {
          start: {
            line: 195,
            column: 49
          },
          end: {
            line: 195,
            column: 51
          }
        }],
        line: 195
      },
      "3": {
        loc: {
          start: {
            line: 196,
            column: 36
          },
          end: {
            line: 196,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 36
          },
          end: {
            line: 196,
            column: 59
          }
        }, {
          start: {
            line: 196,
            column: 63
          },
          end: {
            line: 196,
            column: 64
          }
        }],
        line: 196
      },
      "4": {
        loc: {
          start: {
            line: 197,
            column: 37
          },
          end: {
            line: 197,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 37
          },
          end: {
            line: 197,
            column: 61
          }
        }, {
          start: {
            line: 197,
            column: 65
          },
          end: {
            line: 197,
            column: 66
          }
        }],
        line: 197
      },
      "5": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "6": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 233,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 233,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "7": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "8": {
        loc: {
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 241,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 241,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "9": {
        loc: {
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 239,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 239,
            column: 24
          }
        }, {
          start: {
            line: 239,
            column: 28
          },
          end: {
            line: 239,
            column: 51
          }
        }],
        line: 239
      },
      "10": {
        loc: {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "11": {
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "12": {
        loc: {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "13": {
        loc: {
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 301,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 301,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "14": {
        loc: {
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "15": {
        loc: {
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "16": {
        loc: {
          start: {
            line: 309,
            column: 16
          },
          end: {
            line: 309,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 16
          },
          end: {
            line: 309,
            column: 24
          }
        }, {
          start: {
            line: 309,
            column: 28
          },
          end: {
            line: 309,
            column: 51
          }
        }],
        line: 309
      },
      "17": {
        loc: {
          start: {
            line: 337,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "18": {
        loc: {
          start: {
            line: 358,
            column: 88
          },
          end: {
            line: 358,
            column: 118
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 358,
            column: 103
          },
          end: {
            line: 358,
            column: 118
          }
        }],
        line: 358
      },
      "19": {
        loc: {
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 388,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 388,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "20": {
        loc: {
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 405,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 405,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "21": {
        loc: {
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 408,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 408,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "22": {
        loc: {
          start: {
            line: 409,
            column: 12
          },
          end: {
            line: 411,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 12
          },
          end: {
            line: 411,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "23": {
        loc: {
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 414,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 414,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "24": {
        loc: {
          start: {
            line: 412,
            column: 16
          },
          end: {
            line: 412,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 412,
            column: 16
          },
          end: {
            line: 412,
            column: 35
          }
        }, {
          start: {
            line: 412,
            column: 39
          },
          end: {
            line: 412,
            column: 67
          }
        }],
        line: 412
      },
      "25": {
        loc: {
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "26": {
        loc: {
          start: {
            line: 446,
            column: 12
          },
          end: {
            line: 454,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 446,
            column: 12
          },
          end: {
            line: 454,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 446
      },
      "27": {
        loc: {
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 471,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 471,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "28": {
        loc: {
          start: {
            line: 472,
            column: 12
          },
          end: {
            line: 474,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 12
          },
          end: {
            line: 474,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      },
      "29": {
        loc: {
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 481,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 481,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 479
      },
      "30": {
        loc: {
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 496,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 496,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "31": {
        loc: {
          start: {
            line: 511,
            column: 12
          },
          end: {
            line: 513,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 12
          },
          end: {
            line: 513,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 511
      },
      "32": {
        loc: {
          start: {
            line: 527,
            column: 39
          },
          end: {
            line: 527,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 527,
            column: 56
          },
          end: {
            line: 527,
            column: 91
          }
        }, {
          start: {
            line: 527,
            column: 94
          },
          end: {
            line: 527,
            column: 95
          }
        }],
        line: 527
      },
      "33": {
        loc: {
          start: {
            line: 546,
            column: 27
          },
          end: {
            line: 546,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 546,
            column: 35
          },
          end: {
            line: 546,
            column: 37
          }
        }],
        line: 546
      },
      "34": {
        loc: {
          start: {
            line: 564,
            column: 12
          },
          end: {
            line: 566,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 564,
            column: 12
          },
          end: {
            line: 566,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 564
      },
      "35": {
        loc: {
          start: {
            line: 569,
            column: 12
          },
          end: {
            line: 571,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 569,
            column: 12
          },
          end: {
            line: 571,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 569
      },
      "36": {
        loc: {
          start: {
            line: 582,
            column: 15
          },
          end: {
            line: 582,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 582,
            column: 15
          },
          end: {
            line: 582,
            column: 26
          }
        }, {
          start: {
            line: 582,
            column: 30
          },
          end: {
            line: 582,
            column: 34
          }
        }],
        line: 582
      },
      "37": {
        loc: {
          start: {
            line: 590,
            column: 15
          },
          end: {
            line: 590,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 590,
            column: 15
          },
          end: {
            line: 590,
            column: 30
          }
        }, {
          start: {
            line: 590,
            column: 34
          },
          end: {
            line: 590,
            column: 35
          }
        }],
        line: 590
      },
      "38": {
        loc: {
          start: {
            line: 594,
            column: 8
          },
          end: {
            line: 608,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 594,
            column: 8
          },
          end: {
            line: 608,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 594
      },
      "39": {
        loc: {
          start: {
            line: 609,
            column: 8
          },
          end: {
            line: 618,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 609,
            column: 8
          },
          end: {
            line: 618,
            column: 9
          }
        }, {
          start: {
            line: 614,
            column: 13
          },
          end: {
            line: 618,
            column: 9
          }
        }],
        line: 609
      },
      "40": {
        loc: {
          start: {
            line: 624,
            column: 8
          },
          end: {
            line: 625,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 624,
            column: 8
          },
          end: {
            line: 625,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 624
      },
      "41": {
        loc: {
          start: {
            line: 626,
            column: 8
          },
          end: {
            line: 631,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 626,
            column: 8
          },
          end: {
            line: 631,
            column: 9
          }
        }, {
          start: {
            line: 629,
            column: 13
          },
          end: {
            line: 631,
            column: 9
          }
        }],
        line: 626
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9db14436864d852c1dd7544dd56b0543800fc71a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_pm7o5qgqe = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_pm7o5qgqe();
cov_pm7o5qgqe().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_pm7o5qgqe().s[1]++;
exports.CreatorCoinService = void 0;
const mongoose_1 =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[2]++, require("mongoose"));
const logger_1 =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[3]++, require("@/config/logger"));
const redis_1 =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[4]++, require("@/config/redis"));
const socket_1 =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[5]++, require("@/config/socket"));
// Smart Contract ABI (simplified)
const CREATOR_COIN_ABI =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[6]++, [{
  "inputs": [{
    "internalType": "string",
    "name": "_name",
    "type": "string"
  }, {
    "internalType": "string",
    "name": "_symbol",
    "type": "string"
  }, {
    "internalType": "uint256",
    "name": "_totalSupply",
    "type": "uint256"
  }],
  "stateMutability": "nonpayable",
  "type": "constructor"
}, {
  "inputs": [{
    "internalType": "address",
    "name": "account",
    "type": "address"
  }],
  "name": "balanceOf",
  "outputs": [{
    "internalType": "uint256",
    "name": "",
    "type": "uint256"
  }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [{
    "internalType": "address",
    "name": "to",
    "type": "address"
  }, {
    "internalType": "uint256",
    "name": "amount",
    "type": "uint256"
  }],
  "name": "transfer",
  "outputs": [{
    "internalType": "bool",
    "name": "",
    "type": "bool"
  }],
  "stateMutability": "nonpayable",
  "type": "function"
}, {
  "inputs": [{
    "internalType": "address",
    "name": "spender",
    "type": "address"
  }, {
    "internalType": "uint256",
    "name": "amount",
    "type": "uint256"
  }],
  "name": "approve",
  "outputs": [{
    "internalType": "bool",
    "name": "",
    "type": "bool"
  }],
  "stateMutability": "nonpayable",
  "type": "function"
}]);
// Mongoose Schemas
const CreatorCoinSchema =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[7]++, new mongoose_1.Schema({
  coinId: {
    type: String,
    required: true,
    unique: true
  },
  creatorId: {
    type: String,
    required: true
  },
  symbol: {
    type: String,
    required: true,
    unique: true
  },
  name: {
    type: String,
    required: true
  },
  description: {
    type: String,
    required: true
  },
  totalSupply: {
    type: Number,
    required: true
  },
  circulatingSupply: {
    type: Number,
    default: 0
  },
  contractAddress: {
    type: String
  },
  network: {
    type: String,
    enum: ['ethereum', 'polygon', 'bsc', 'arbitrum'],
    required: true
  },
  price: {
    type: Number,
    default: 0
  },
  marketCap: {
    type: Number,
    default: 0
  },
  volume24h: {
    type: Number,
    default: 0
  },
  holders: {
    type: Number,
    default: 0
  },
  status: {
    type: String,
    enum: ['active', 'paused', 'delisted'],
    default: 'active'
  },
  metadata: {
    logoUrl: {
      type: String
    },
    website: {
      type: String
    },
    socialLinks: {
      twitter: {
        type: String
      },
      instagram: {
        type: String
      },
      tiktok: {
        type: String
      }
    },
    utility: [{
      type: String
    }],
    stakingRewards: {
      type: Number
    },
    governancePower: {
      type: Number
    }
  },
  createdAt: {
    type: Date,
    default: Date.now
  },
  updatedAt: {
    type: Date,
    default: Date.now
  }
}, {
  timestamps: true
}));
const CoinTransactionSchema =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[8]++, new mongoose_1.Schema({
  transactionId: {
    type: String,
    required: true,
    unique: true
  },
  coinId: {
    type: String,
    required: true
  },
  fromUserId: {
    type: String,
    required: true
  },
  toUserId: {
    type: String,
    required: true
  },
  amount: {
    type: Number,
    required: true
  },
  price: {
    type: Number,
    required: true
  },
  totalValue: {
    type: Number,
    required: true
  },
  type: {
    type: String,
    enum: ['buy', 'sell', 'transfer', 'reward', 'burn', 'mint'],
    required: true
  },
  status: {
    type: String,
    enum: ['pending', 'confirmed', 'failed'],
    default: 'pending'
  },
  blockchainTxHash: {
    type: String
  },
  gasUsed: {
    type: Number
  },
  gasPrice: {
    type: Number
  },
  timestamp: {
    type: Date,
    default: Date.now
  },
  metadata: {
    type: mongoose_1.Schema.Types.Mixed
  }
}));
const CoinHolderSchema =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[9]++, new mongoose_1.Schema({
  userId: {
    type: String,
    required: true
  },
  coinId: {
    type: String,
    required: true
  },
  balance: {
    type: Number,
    default: 0
  },
  percentage: {
    type: Number,
    default: 0
  },
  firstPurchase: {
    type: Date,
    default: Date.now
  },
  lastActivity: {
    type: Date,
    default: Date.now
  },
  totalBought: {
    type: Number,
    default: 0
  },
  totalSold: {
    type: Number,
    default: 0
  },
  averageBuyPrice: {
    type: Number,
    default: 0
  },
  unrealizedPnL: {
    type: Number,
    default: 0
  },
  realizedPnL: {
    type: Number,
    default: 0
  }
}, {
  timestamps: true
}));
const StakingPoolSchema =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[10]++, new mongoose_1.Schema({
  poolId: {
    type: String,
    required: true,
    unique: true
  },
  coinId: {
    type: String,
    required: true
  },
  name: {
    type: String,
    required: true
  },
  description: {
    type: String,
    required: true
  },
  apy: {
    type: Number,
    required: true
  },
  minStakeAmount: {
    type: Number,
    required: true
  },
  maxStakeAmount: {
    type: Number
  },
  lockPeriod: {
    type: Number,
    required: true
  },
  totalStaked: {
    type: Number,
    default: 0
  },
  totalRewards: {
    type: Number,
    default: 0
  },
  activeStakers: {
    type: Number,
    default: 0
  },
  status: {
    type: String,
    enum: ['active', 'paused', 'closed'],
    default: 'active'
  },
  rewardsToken: {
    type: String,
    required: true
  },
  createdAt: {
    type: Date,
    default: Date.now
  },
  updatedAt: {
    type: Date,
    default: Date.now
  }
}, {
  timestamps: true
}));
const StakingPositionSchema =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[11]++, new mongoose_1.Schema({
  positionId: {
    type: String,
    required: true,
    unique: true
  },
  userId: {
    type: String,
    required: true
  },
  poolId: {
    type: String,
    required: true
  },
  coinId: {
    type: String,
    required: true
  },
  amount: {
    type: Number,
    required: true
  },
  startDate: {
    type: Date,
    required: true
  },
  endDate: {
    type: Date,
    required: true
  },
  apy: {
    type: Number,
    required: true
  },
  rewardsEarned: {
    type: Number,
    default: 0
  },
  rewardsClaimed: {
    type: Number,
    default: 0
  },
  status: {
    type: String,
    enum: ['active', 'completed', 'cancelled'],
    default: 'active'
  },
  createdAt: {
    type: Date,
    default: Date.now
  },
  updatedAt: {
    type: Date,
    default: Date.now
  }
}, {
  timestamps: true
}));
// Models
const CreatorCoinModel =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[12]++, (0, mongoose_1.model)('CreatorCoin', CreatorCoinSchema));
const CoinTransactionModel =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[13]++, (0, mongoose_1.model)('CoinTransaction', CoinTransactionSchema));
const CoinHolderModel =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[14]++, (0, mongoose_1.model)('CoinHolder', CoinHolderSchema));
const StakingPoolModel =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[15]++, (0, mongoose_1.model)('StakingPool', StakingPoolSchema));
const StakingPositionModel =
/* istanbul ignore next */
(cov_pm7o5qgqe().s[16]++, (0, mongoose_1.model)('StakingPosition', StakingPositionSchema));
class CreatorCoinService {
  static instance;
  web3;
  contracts =
  /* istanbul ignore next */
  (cov_pm7o5qgqe().s[17]++, new Map());
  constructor() {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[0]++;
  } // Initialize Web3 with multiple networks
  // Web3 will be dynamically imported when needed
  // this.web3 = new Web3(process.env.ETHEREUM_RPC_URL || 'https://mainnet.infura.io/v3/YOUR_PROJECT_ID');
  static getInstance() {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[1]++;
    cov_pm7o5qgqe().s[18]++;
    if (!CreatorCoinService.instance) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().b[0][0]++;
      cov_pm7o5qgqe().s[19]++;
      CreatorCoinService.instance = new CreatorCoinService();
    } else
    /* istanbul ignore next */
    {
      cov_pm7o5qgqe().b[0][1]++;
    }
    cov_pm7o5qgqe().s[20]++;
    return CreatorCoinService.instance;
  }
  /**
   * Create a new creator coin
   */
  async createCreatorCoin(creatorId, symbol, name, description, totalSupply, network, metadata) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[2]++;
    cov_pm7o5qgqe().s[21]++;
    try {
      const coinId =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[22]++, this.generateCoinId());
      // Deploy smart contract (simplified - in production, use proper deployment)
      const contractAddress =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[23]++, await this.deployCreatorCoinContract(name, symbol, totalSupply, network));
      const creatorCoin =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[24]++, {
        coinId,
        creatorId,
        symbol: symbol.toUpperCase(),
        name,
        description,
        totalSupply,
        circulatingSupply: 0,
        contractAddress,
        network,
        price: 0,
        marketCap: 0,
        volume24h: 0,
        holders: 0,
        status: 'active',
        metadata: {
          logoUrl: metadata.logoUrl,
          website: metadata.website,
          socialLinks:
          /* istanbul ignore next */
          (cov_pm7o5qgqe().b[1][0]++, metadata.socialLinks) ||
          /* istanbul ignore next */
          (cov_pm7o5qgqe().b[1][1]++, {}),
          utility:
          /* istanbul ignore next */
          (cov_pm7o5qgqe().b[2][0]++, metadata.utility) ||
          /* istanbul ignore next */
          (cov_pm7o5qgqe().b[2][1]++, []),
          stakingRewards:
          /* istanbul ignore next */
          (cov_pm7o5qgqe().b[3][0]++, metadata.stakingRewards) ||
          /* istanbul ignore next */
          (cov_pm7o5qgqe().b[3][1]++, 0),
          governancePower:
          /* istanbul ignore next */
          (cov_pm7o5qgqe().b[4][0]++, metadata.governancePower) ||
          /* istanbul ignore next */
          (cov_pm7o5qgqe().b[4][1]++, 0)
        },
        createdAt: new Date(),
        updatedAt: new Date()
      });
      const createdCoin =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[25]++, await CreatorCoinModel.create(creatorCoin));
      // Cache coin data
      const redisClient =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[26]++, (0, redis_1.getRedisClient)());
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[27]++;
      await redisClient.setEx(`creator_coin:${coinId}`, 3600, JSON.stringify(creatorCoin));
      // Emit real-time event
      const io =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[28]++, (0, socket_1.getSocketIO)());
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[29]++;
      if (io) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[5][0]++;
        cov_pm7o5qgqe().s[30]++;
        io.emit('creator_coin_created', {
          coinId,
          creatorId,
          symbol,
          name,
          network
        });
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[5][1]++;
      }
      cov_pm7o5qgqe().s[31]++;
      logger_1.logger.info('Creator coin created', {
        coinId,
        creatorId,
        symbol,
        network
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[32]++;
      return createdCoin;
    } catch (error) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[33]++;
      logger_1.logger.error('Error creating creator coin', {
        error,
        creatorId,
        symbol
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[34]++;
      throw error;
    }
  }
  /**
   * Buy creator coins
   */
  async buyCoins(userId, coinId, amount, maxPrice) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[3]++;
    cov_pm7o5qgqe().s[35]++;
    try {
      const coin =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[36]++, await this.getCreatorCoin(coinId));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[37]++;
      if (!coin) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[6][0]++;
        cov_pm7o5qgqe().s[38]++;
        throw new Error('Creator coin not found');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[6][1]++;
      }
      cov_pm7o5qgqe().s[39]++;
      if (coin.status !== 'active') {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[7][0]++;
        cov_pm7o5qgqe().s[40]++;
        throw new Error('Coin trading is not active');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[7][1]++;
      }
      const currentPrice =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[41]++, await this.getCurrentPrice(coinId));
      const totalValue =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[42]++, amount * currentPrice);
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[43]++;
      if (
      /* istanbul ignore next */
      (cov_pm7o5qgqe().b[9][0]++, maxPrice) &&
      /* istanbul ignore next */
      (cov_pm7o5qgqe().b[9][1]++, currentPrice > maxPrice)) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[8][0]++;
        cov_pm7o5qgqe().s[44]++;
        throw new Error('Current price exceeds maximum price');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[8][1]++;
      }
      // Check user balance (HALOBUZZ_COIN or USDC)
      const userBalance =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[45]++, await this.getUserTokenBalance(userId, 'HALOBUZZ_COIN'));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[46]++;
      if (userBalance < totalValue) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[10][0]++;
        cov_pm7o5qgqe().s[47]++;
        throw new Error('Insufficient balance');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[10][1]++;
      }
      const transactionId =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[48]++, this.generateTransactionId());
      const transaction =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[49]++, {
        transactionId,
        coinId,
        fromUserId: 'system',
        // System sells coins
        toUserId: userId,
        amount,
        price: currentPrice,
        totalValue,
        type: 'buy',
        status: 'pending',
        timestamp: new Date()
      });
      // Execute blockchain transaction
      const blockchainTxHash =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[50]++, await this.executeBuyTransaction(userId, coinId, amount, currentPrice));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[51]++;
      transaction.blockchainTxHash = blockchainTxHash;
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[52]++;
      transaction.status = 'confirmed';
      // Save transaction
      const createdTransaction =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[53]++, await CoinTransactionModel.create(transaction));
      // Update coin holder
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[54]++;
      await this.updateCoinHolder(userId, coinId, amount, currentPrice, 'buy');
      // Update coin metrics
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[55]++;
      await this.updateCoinMetrics(coinId, amount, currentPrice, 'buy');
      // Emit real-time event
      const io =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[56]++, (0, socket_1.getSocketIO)());
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[57]++;
      if (io) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[11][0]++;
        cov_pm7o5qgqe().s[58]++;
        io.emit('coin_purchased', {
          transactionId,
          coinId,
          userId,
          amount,
          price: currentPrice,
          totalValue
        });
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[11][1]++;
      }
      cov_pm7o5qgqe().s[59]++;
      logger_1.logger.info('Creator coins purchased', {
        transactionId,
        coinId,
        userId,
        amount
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[60]++;
      return createdTransaction;
    } catch (error) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[61]++;
      logger_1.logger.error('Error buying creator coins', {
        error,
        coinId,
        userId,
        amount
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[62]++;
      throw error;
    }
  }
  /**
   * Sell creator coins
   */
  async sellCoins(userId, coinId, amount, minPrice) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[4]++;
    cov_pm7o5qgqe().s[63]++;
    try {
      const coin =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[64]++, await this.getCreatorCoin(coinId));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[65]++;
      if (!coin) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[12][0]++;
        cov_pm7o5qgqe().s[66]++;
        throw new Error('Creator coin not found');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[12][1]++;
      }
      cov_pm7o5qgqe().s[67]++;
      if (coin.status !== 'active') {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[13][0]++;
        cov_pm7o5qgqe().s[68]++;
        throw new Error('Coin trading is not active');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[13][1]++;
      }
      // Check user coin balance
      const userBalance =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[69]++, await this.getUserCoinBalance(userId, coinId));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[70]++;
      if (userBalance < amount) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[14][0]++;
        cov_pm7o5qgqe().s[71]++;
        throw new Error('Insufficient coin balance');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[14][1]++;
      }
      const currentPrice =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[72]++, await this.getCurrentPrice(coinId));
      const totalValue =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[73]++, amount * currentPrice);
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[74]++;
      if (
      /* istanbul ignore next */
      (cov_pm7o5qgqe().b[16][0]++, minPrice) &&
      /* istanbul ignore next */
      (cov_pm7o5qgqe().b[16][1]++, currentPrice < minPrice)) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[15][0]++;
        cov_pm7o5qgqe().s[75]++;
        throw new Error('Current price is below minimum price');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[15][1]++;
      }
      const transactionId =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[76]++, this.generateTransactionId());
      const transaction =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[77]++, {
        transactionId,
        coinId,
        fromUserId: userId,
        toUserId: 'system',
        // System buys back coins
        amount,
        price: currentPrice,
        totalValue,
        type: 'sell',
        status: 'pending',
        timestamp: new Date()
      });
      // Execute blockchain transaction
      const blockchainTxHash =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[78]++, await this.executeSellTransaction(userId, coinId, amount, currentPrice));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[79]++;
      transaction.blockchainTxHash = blockchainTxHash;
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[80]++;
      transaction.status = 'confirmed';
      // Save transaction
      const createdTransaction =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[81]++, await CoinTransactionModel.create(transaction));
      // Update coin holder
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[82]++;
      await this.updateCoinHolder(userId, coinId, amount, currentPrice, 'sell');
      // Update coin metrics
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[83]++;
      await this.updateCoinMetrics(coinId, amount, currentPrice, 'sell');
      // Emit real-time event
      const io =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[84]++, (0, socket_1.getSocketIO)());
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[85]++;
      if (io) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[17][0]++;
        cov_pm7o5qgqe().s[86]++;
        io.emit('coin_sold', {
          transactionId,
          coinId,
          userId,
          amount,
          price: currentPrice,
          totalValue
        });
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[17][1]++;
      }
      cov_pm7o5qgqe().s[87]++;
      logger_1.logger.info('Creator coins sold', {
        transactionId,
        coinId,
        userId,
        amount
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[88]++;
      return createdTransaction;
    } catch (error) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[89]++;
      logger_1.logger.error('Error selling creator coins', {
        error,
        coinId,
        userId,
        amount
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[90]++;
      throw error;
    }
  }
  /**
   * Create staking pool
   */
  async createStakingPool(coinId, name, description, apy, minStakeAmount, lockPeriod, rewardsToken =
  /* istanbul ignore next */
  (cov_pm7o5qgqe().b[18][0]++, 'HALOBUZZ_COIN')) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[5]++;
    cov_pm7o5qgqe().s[91]++;
    try {
      const poolId =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[92]++, this.generatePoolId());
      const stakingPool =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[93]++, {
        poolId,
        coinId,
        name,
        description,
        apy,
        minStakeAmount,
        lockPeriod,
        totalStaked: 0,
        totalRewards: 0,
        activeStakers: 0,
        status: 'active',
        rewardsToken,
        createdAt: new Date(),
        updatedAt: new Date()
      });
      const createdPool =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[94]++, await StakingPoolModel.create(stakingPool));
      // Emit real-time event
      const io =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[95]++, (0, socket_1.getSocketIO)());
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[96]++;
      if (io) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[19][0]++;
        cov_pm7o5qgqe().s[97]++;
        io.emit('staking_pool_created', {
          poolId,
          coinId,
          name,
          apy,
          lockPeriod
        });
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[19][1]++;
      }
      cov_pm7o5qgqe().s[98]++;
      logger_1.logger.info('Staking pool created', {
        poolId,
        coinId,
        apy
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[99]++;
      return createdPool;
    } catch (error) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[100]++;
      logger_1.logger.error('Error creating staking pool', {
        error,
        coinId,
        apy
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[101]++;
      throw error;
    }
  }
  /**
   * Stake coins in a pool
   */
  async stakeCoins(userId, poolId, amount) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[6]++;
    cov_pm7o5qgqe().s[102]++;
    try {
      const pool =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[103]++, await StakingPoolModel.findOne({
        poolId
      }));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[104]++;
      if (!pool) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[20][0]++;
        cov_pm7o5qgqe().s[105]++;
        throw new Error('Staking pool not found');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[20][1]++;
      }
      cov_pm7o5qgqe().s[106]++;
      if (pool.status !== 'active') {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[21][0]++;
        cov_pm7o5qgqe().s[107]++;
        throw new Error('Staking pool is not active');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[21][1]++;
      }
      cov_pm7o5qgqe().s[108]++;
      if (amount < pool.minStakeAmount) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[22][0]++;
        cov_pm7o5qgqe().s[109]++;
        throw new Error('Amount is below minimum stake requirement');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[22][1]++;
      }
      cov_pm7o5qgqe().s[110]++;
      if (
      /* istanbul ignore next */
      (cov_pm7o5qgqe().b[24][0]++, pool.maxStakeAmount) &&
      /* istanbul ignore next */
      (cov_pm7o5qgqe().b[24][1]++, amount > pool.maxStakeAmount)) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[23][0]++;
        cov_pm7o5qgqe().s[111]++;
        throw new Error('Amount exceeds maximum stake limit');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[23][1]++;
      }
      // Check user coin balance
      const userBalance =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[112]++, await this.getUserCoinBalance(userId, pool.coinId));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[113]++;
      if (userBalance < amount) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[25][0]++;
        cov_pm7o5qgqe().s[114]++;
        throw new Error('Insufficient coin balance');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[25][1]++;
      }
      const positionId =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[115]++, this.generatePositionId());
      const endDate =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[116]++, new Date(Date.now() + pool.lockPeriod * 24 * 60 * 60 * 1000));
      const stakingPosition =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[117]++, {
        positionId,
        userId,
        poolId,
        coinId: pool.coinId,
        amount,
        startDate: new Date(),
        endDate,
        apy: pool.apy,
        rewardsEarned: 0,
        rewardsClaimed: 0,
        status: 'active',
        createdAt: new Date(),
        updatedAt: new Date()
      });
      const createdPosition =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[118]++, await StakingPositionModel.create(stakingPosition));
      // Update pool metrics
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[119]++;
      pool.totalStaked += amount;
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[120]++;
      pool.activeStakers += 1;
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[121]++;
      await StakingPoolModel.findByIdAndUpdate(pool._id, pool);
      // Lock user's coins
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[122]++;
      await this.lockUserCoins(userId, pool.coinId, amount);
      // Emit real-time event
      const io =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[123]++, (0, socket_1.getSocketIO)());
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[124]++;
      if (io) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[26][0]++;
        cov_pm7o5qgqe().s[125]++;
        io.emit('coins_staked', {
          positionId,
          userId,
          poolId,
          amount,
          apy: pool.apy
        });
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[26][1]++;
      }
      cov_pm7o5qgqe().s[126]++;
      logger_1.logger.info('Coins staked', {
        positionId,
        userId,
        poolId,
        amount
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[127]++;
      return createdPosition;
    } catch (error) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[128]++;
      logger_1.logger.error('Error staking coins', {
        error,
        userId,
        poolId,
        amount
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[129]++;
      throw error;
    }
  }
  /**
   * Claim staking rewards
   */
  async claimStakingRewards(userId, positionId) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[7]++;
    cov_pm7o5qgqe().s[130]++;
    try {
      const position =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[131]++, await StakingPositionModel.findOne({
        positionId,
        userId
      }));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[132]++;
      if (!position) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[27][0]++;
        cov_pm7o5qgqe().s[133]++;
        throw new Error('Staking position not found');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[27][1]++;
      }
      cov_pm7o5qgqe().s[134]++;
      if (position.status !== 'active') {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[28][0]++;
        cov_pm7o5qgqe().s[135]++;
        throw new Error('Staking position is not active');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[28][1]++;
      }
      // Calculate rewards
      const daysStaked =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[136]++, Math.floor((Date.now() - position.startDate.getTime()) / (24 * 60 * 60 * 1000)));
      const totalRewards =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[137]++, position.amount * position.apy * daysStaked / 36500); // APY as percentage
      const claimableRewards =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[138]++, totalRewards - position.rewardsClaimed);
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[139]++;
      if (claimableRewards <= 0) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[29][0]++;
        cov_pm7o5qgqe().s[140]++;
        throw new Error('No rewards to claim');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[29][1]++;
      }
      // Update position
      cov_pm7o5qgqe().s[141]++;
      position.rewardsEarned = totalRewards;
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[142]++;
      position.rewardsClaimed += claimableRewards;
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[143]++;
      await StakingPositionModel.findByIdAndUpdate(position._id, position);
      // Transfer rewards to user
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[144]++;
      await this.transferRewards(userId, position.coinId, claimableRewards);
      // Emit real-time event
      const io =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[145]++, (0, socket_1.getSocketIO)());
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[146]++;
      if (io) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[30][0]++;
        cov_pm7o5qgqe().s[147]++;
        io.emit('rewards_claimed', {
          positionId,
          userId,
          amount: claimableRewards
        });
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[30][1]++;
      }
      cov_pm7o5qgqe().s[148]++;
      logger_1.logger.info('Staking rewards claimed', {
        positionId,
        userId,
        amount: claimableRewards
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[149]++;
      return claimableRewards;
    } catch (error) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[150]++;
      logger_1.logger.error('Error claiming staking rewards', {
        error,
        userId,
        positionId
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[151]++;
      throw error;
    }
  }
  /**
   * Get creator coin market data
   */
  async getMarketData(coinId) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[8]++;
    cov_pm7o5qgqe().s[152]++;
    try {
      const coin =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[153]++, await this.getCreatorCoin(coinId));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[154]++;
      if (!coin) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[31][0]++;
        cov_pm7o5qgqe().s[155]++;
        throw new Error('Creator coin not found');
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[31][1]++;
      }
      // Get 24h price change
      const yesterday =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[156]++, new Date(Date.now() - 24 * 60 * 60 * 1000));
      const yesterdayTransactions =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[157]++, await CoinTransactionModel.find({
        coinId,
        timestamp: {
          $gte: yesterday
        },
        status: 'confirmed'
      }));
      const volume24h =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[158]++, yesterdayTransactions.reduce((sum, tx) => {
        /* istanbul ignore next */
        cov_pm7o5qgqe().f[9]++;
        cov_pm7o5qgqe().s[159]++;
        return sum + tx.totalValue;
      }, 0));
      const priceChange24h =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[160]++, 0); // Would need historical price data
      const marketData =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[161]++, {
        coinId,
        price: coin.price,
        priceChange24h,
        priceChangePercent24h: coin.price > 0 ?
        /* istanbul ignore next */
        (cov_pm7o5qgqe().b[32][0]++, priceChange24h / coin.price * 100) :
        /* istanbul ignore next */
        (cov_pm7o5qgqe().b[32][1]++, 0),
        volume24h,
        marketCap: coin.marketCap,
        circulatingSupply: coin.circulatingSupply,
        totalSupply: coin.totalSupply,
        holders: coin.holders,
        liquidity: 0,
        // Would need liquidity pool data
        lastUpdated: new Date()
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[162]++;
      return marketData;
    } catch (error) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[163]++;
      logger_1.logger.error('Error getting market data', {
        error,
        coinId
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[164]++;
      throw error;
    }
  }
  /**
   * Get trending creator coins
   */
  async getTrendingCoins(limit =
  /* istanbul ignore next */
  (cov_pm7o5qgqe().b[33][0]++, 10)) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[10]++;
    cov_pm7o5qgqe().s[165]++;
    try {
      const coins =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[166]++, await CreatorCoinModel.find({
        status: 'active'
      }).sort({
        volume24h: -1,
        holders: -1
      }).limit(limit));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[167]++;
      return coins;
    } catch (error) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[168]++;
      logger_1.logger.error('Error getting trending coins', {
        error
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[169]++;
      throw error;
    }
  }
  // Helper methods
  async getCreatorCoin(coinId) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[11]++;
    cov_pm7o5qgqe().s[170]++;
    try {
      // Try cache first
      const redisClient =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[171]++, (0, redis_1.getRedisClient)());
      const cached =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[172]++, await redisClient.get(`creator_coin:${coinId}`));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[173]++;
      if (cached) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[34][0]++;
        cov_pm7o5qgqe().s[174]++;
        return JSON.parse(cached);
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[34][1]++;
      }
      // Fallback to database
      const coin =
      /* istanbul ignore next */
      (cov_pm7o5qgqe().s[175]++, await CreatorCoinModel.findOne({
        coinId
      }));
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[176]++;
      if (coin) {
        /* istanbul ignore next */
        cov_pm7o5qgqe().b[35][0]++;
        cov_pm7o5qgqe().s[177]++;
        await redisClient.setEx(`creator_coin:${coinId}`, 3600, JSON.stringify(coin));
      } else
      /* istanbul ignore next */
      {
        cov_pm7o5qgqe().b[35][1]++;
      }
      cov_pm7o5qgqe().s[178]++;
      return coin;
    } catch (error) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[179]++;
      logger_1.logger.error('Error getting creator coin', {
        error,
        coinId
      });
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[180]++;
      throw error;
    }
  }
  async getCurrentPrice(coinId) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[12]++;
    // Simplified price calculation - in production, use AMM or order book
    const coin =
    /* istanbul ignore next */
    (cov_pm7o5qgqe().s[181]++, await this.getCreatorCoin(coinId));
    /* istanbul ignore next */
    cov_pm7o5qgqe().s[182]++;
    return /* istanbul ignore next */(cov_pm7o5qgqe().b[36][0]++, coin?.price) ||
    /* istanbul ignore next */
    (cov_pm7o5qgqe().b[36][1]++, 0.01); // Default price
  }
  async getUserTokenBalance(userId, token) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[13]++;
    cov_pm7o5qgqe().s[183]++;
    // Simplified - in production, check actual token balance
    return 1000; // Mock balance
  }
  async getUserCoinBalance(userId, coinId) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[14]++;
    const holder =
    /* istanbul ignore next */
    (cov_pm7o5qgqe().s[184]++, await CoinHolderModel.findOne({
      userId,
      coinId
    }));
    /* istanbul ignore next */
    cov_pm7o5qgqe().s[185]++;
    return /* istanbul ignore next */(cov_pm7o5qgqe().b[37][0]++, holder?.balance) ||
    /* istanbul ignore next */
    (cov_pm7o5qgqe().b[37][1]++, 0);
  }
  async updateCoinHolder(userId, coinId, amount, price, type) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[15]++;
    let holder =
    /* istanbul ignore next */
    (cov_pm7o5qgqe().s[186]++, await CoinHolderModel.findOne({
      userId,
      coinId
    }));
    /* istanbul ignore next */
    cov_pm7o5qgqe().s[187]++;
    if (!holder) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().b[38][0]++;
      cov_pm7o5qgqe().s[188]++;
      holder = new CoinHolderModel({
        userId,
        coinId,
        balance: 0,
        percentage: 0,
        firstPurchase: new Date(),
        lastActivity: new Date(),
        totalBought: 0,
        totalSold: 0,
        averageBuyPrice: 0,
        unrealizedPnL: 0,
        realizedPnL: 0
      });
    } else
    /* istanbul ignore next */
    {
      cov_pm7o5qgqe().b[38][1]++;
    }
    cov_pm7o5qgqe().s[189]++;
    if (type === 'buy') {
      /* istanbul ignore next */
      cov_pm7o5qgqe().b[39][0]++;
      cov_pm7o5qgqe().s[190]++;
      holder.balance += amount;
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[191]++;
      holder.totalBought += amount;
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[192]++;
      holder.averageBuyPrice = (holder.averageBuyPrice * (holder.totalBought - amount) + price * amount) / holder.totalBought;
    } else {
      /* istanbul ignore next */
      cov_pm7o5qgqe().b[39][1]++;
      cov_pm7o5qgqe().s[193]++;
      holder.balance -= amount;
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[194]++;
      holder.totalSold += amount;
      /* istanbul ignore next */
      cov_pm7o5qgqe().s[195]++;
      holder.realizedPnL += (price - holder.averageBuyPrice) * amount;
    }
    /* istanbul ignore next */
    cov_pm7o5qgqe().s[196]++;
    holder.lastActivity = new Date();
    /* istanbul ignore next */
    cov_pm7o5qgqe().s[197]++;
    await CoinHolderModel.findByIdAndUpdate(holder._id, holder);
  }
  async updateCoinMetrics(coinId, amount, price, type) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[16]++;
    const coin =
    /* istanbul ignore next */
    (cov_pm7o5qgqe().s[198]++, await CreatorCoinModel.findOne({
      coinId
    }));
    /* istanbul ignore next */
    cov_pm7o5qgqe().s[199]++;
    if (!coin) {
      /* istanbul ignore next */
      cov_pm7o5qgqe().b[40][0]++;
      cov_pm7o5qgqe().s[200]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_pm7o5qgqe().b[40][1]++;
    }
    cov_pm7o5qgqe().s[201]++;
    if (type === 'buy') {
      /* istanbul ignore next */
      cov_pm7o5qgqe().b[41][0]++;
      cov_pm7o5qgqe().s[202]++;
      coin.circulatingSupply += amount;
    } else {
      /* istanbul ignore next */
      cov_pm7o5qgqe().b[41][1]++;
      cov_pm7o5qgqe().s[203]++;
      coin.circulatingSupply -= amount;
    }
    /* istanbul ignore next */
    cov_pm7o5qgqe().s[204]++;
    coin.marketCap = coin.circulatingSupply * price;
    /* istanbul ignore next */
    cov_pm7o5qgqe().s[205]++;
    coin.volume24h += amount * price;
    /* istanbul ignore next */
    cov_pm7o5qgqe().s[206]++;
    coin.updatedAt = new Date();
    /* istanbul ignore next */
    cov_pm7o5qgqe().s[207]++;
    await CreatorCoinModel.findByIdAndUpdate(coin._id, coin);
    // Update cache
    const redisClient =
    /* istanbul ignore next */
    (cov_pm7o5qgqe().s[208]++, (0, redis_1.getRedisClient)());
    /* istanbul ignore next */
    cov_pm7o5qgqe().s[209]++;
    await redisClient.setEx(`creator_coin:${coinId}`, 3600, JSON.stringify(coin));
  }
  async deployCreatorCoinContract(name, symbol, totalSupply, network) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[17]++;
    cov_pm7o5qgqe().s[210]++;
    // Simplified contract deployment - in production, use proper deployment
    return `0x${Math.random().toString(16).substr(2, 40)}`;
  }
  async executeBuyTransaction(userId, coinId, amount, price) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[18]++;
    cov_pm7o5qgqe().s[211]++;
    // Simplified blockchain transaction - in production, use actual Web3 calls
    return `0x${Math.random().toString(16).substr(2, 64)}`;
  }
  async executeSellTransaction(userId, coinId, amount, price) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[19]++;
    cov_pm7o5qgqe().s[212]++;
    // Simplified blockchain transaction - in production, use actual Web3 calls
    return `0x${Math.random().toString(16).substr(2, 64)}`;
  }
  async lockUserCoins(userId, coinId, amount) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[20]++;
    cov_pm7o5qgqe().s[213]++;
    // Lock user's coins for staking
    await this.updateCoinHolder(userId, coinId, amount, 0, 'sell');
  }
  async transferRewards(userId, coinId, amount) {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[21]++;
    cov_pm7o5qgqe().s[214]++;
    // Transfer staking rewards to user
    await this.updateCoinHolder(userId, coinId, amount, 0, 'buy');
  }
  generateCoinId() {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[22]++;
    cov_pm7o5qgqe().s[215]++;
    return `coin_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  generateTransactionId() {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[23]++;
    cov_pm7o5qgqe().s[216]++;
    return `tx_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  generatePoolId() {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[24]++;
    cov_pm7o5qgqe().s[217]++;
    return `pool_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  generatePositionId() {
    /* istanbul ignore next */
    cov_pm7o5qgqe().f[25]++;
    cov_pm7o5qgqe().s[218]++;
    return `pos_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
}
/* istanbul ignore next */
cov_pm7o5qgqe().s[219]++;
exports.CreatorCoinService = CreatorCoinService;
/* istanbul ignore next */
cov_pm7o5qgqe().s[220]++;
exports.default = CreatorCoinService;