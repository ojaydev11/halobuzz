79ee519e88e0ceabccb2e059ba579dc7
"use strict";

/* istanbul ignore next */
function cov_17w5py6oec() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\analytics\\services\\appMapper.ts";
  var hash = "476c83f66afddaa0e977d8299f21ddc2d9d77b86";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\analytics\\services\\appMapper.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 47
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 47
        }
      },
      "3": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 16,
          column: 10
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 101
        }
      },
      "5": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "6": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "7": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "8": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 47
        }
      },
      "9": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "10": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 39
        }
      },
      "11": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "12": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 39,
          column: 59
        }
      },
      "13": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 41,
          column: 32
        }
      },
      "14": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 32
        }
      },
      "15": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 43,
          column: 37
        }
      },
      "16": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 37
        }
      },
      "17": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 45,
          column: 33
        }
      },
      "18": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 33
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 40
        }
      },
      "20": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "21": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 54
        }
      },
      "22": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 24
        }
      },
      "23": {
        start: {
          line: 69,
          column: 30
        },
        end: {
          line: 69,
          column: 63
        }
      },
      "24": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 40
        }
      },
      "25": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 52
        }
      },
      "26": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 48
        }
      },
      "27": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 55
        }
      },
      "28": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 79
        }
      },
      "29": {
        start: {
          line: 96,
          column: 0
        },
        end: {
          line: 96,
          column: 30
        }
      },
      "30": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 98,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 35
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 68
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 25
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 76
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 24
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 84
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 28
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 91
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 26
          }
        }, {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 26,
            column: 68
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 42
          }
        }, {
          start: {
            line: 30,
            column: 46
          },
          end: {
            line: 30,
            column: 98
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 33
          }
        }, {
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 34,
            column: 81
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 41,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 41,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "8": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 43,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 43,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "9": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 45,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 45,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "10": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "11": {
        loc: {
          start: {
            line: 69,
            column: 30
          },
          end: {
            line: 69,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 30
          },
          end: {
            line: 69,
            column: 35
          }
        }, {
          start: {
            line: 69,
            column: 39
          },
          end: {
            line: 69,
            column: 63
          }
        }],
        line: 69
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "476c83f66afddaa0e977d8299f21ddc2d9d77b86"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_17w5py6oec = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_17w5py6oec();
cov_17w5py6oec().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_17w5py6oec().s[1]++;
exports.appMapper = exports.AppMapper = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_17w5py6oec().s[2]++, require("../../config/logger"));
class AppMapper {
  config;
  constructor() {
    /* istanbul ignore next */
    cov_17w5py6oec().f[0]++;
    cov_17w5py6oec().s[3]++;
    this.config = {
      defaultAppId: 'halobuzz',
      appMappings: {
        'halobuzz': 'halobuzz',
        'sewago': 'sewago',
        'solsnipepro': 'solsnipepro',
        'nepvest': 'nepvest'
      }
    };
    /* istanbul ignore next */
    cov_17w5py6oec().s[4]++;
    logger_1.logger.info('AppMapper initialized with default app ID:', this.config.defaultAppId);
  }
  /**
   * Maps a request context to an app ID
   * @param context Request context (headers, query params, etc.)
   * @returns The mapped app ID
   */
  mapToAppId(context) {
    /* istanbul ignore next */
    cov_17w5py6oec().f[1]++;
    cov_17w5py6oec().s[5]++;
    // Check for explicit app ID in context
    if (
    /* istanbul ignore next */
    (cov_17w5py6oec().b[1][0]++, context?.appId) &&
    /* istanbul ignore next */
    (cov_17w5py6oec().b[1][1]++, this.config.appMappings[context.appId])) {
      /* istanbul ignore next */
      cov_17w5py6oec().b[0][0]++;
      cov_17w5py6oec().s[6]++;
      return context.appId;
    } else
    /* istanbul ignore next */
    {
      cov_17w5py6oec().b[0][1]++;
    }
    // Check for app ID in headers
    cov_17w5py6oec().s[7]++;
    if (
    /* istanbul ignore next */
    (cov_17w5py6oec().b[3][0]++, context?.headers?.['x-app-id']) &&
    /* istanbul ignore next */
    (cov_17w5py6oec().b[3][1]++, this.config.appMappings[context.headers['x-app-id']])) {
      /* istanbul ignore next */
      cov_17w5py6oec().b[2][0]++;
      cov_17w5py6oec().s[8]++;
      return context.headers['x-app-id'];
    } else
    /* istanbul ignore next */
    {
      cov_17w5py6oec().b[2][1]++;
    }
    // Check for app ID in query parameters
    cov_17w5py6oec().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_17w5py6oec().b[5][0]++, context?.query?.appId) &&
    /* istanbul ignore next */
    (cov_17w5py6oec().b[5][1]++, this.config.appMappings[context.query.appId])) {
      /* istanbul ignore next */
      cov_17w5py6oec().b[4][0]++;
      cov_17w5py6oec().s[10]++;
      return context.query.appId;
    } else
    /* istanbul ignore next */
    {
      cov_17w5py6oec().b[4][1]++;
    }
    // Check for subdomain-based mapping
    cov_17w5py6oec().s[11]++;
    if (context?.headers?.host) {
      /* istanbul ignore next */
      cov_17w5py6oec().b[6][0]++;
      const host =
      /* istanbul ignore next */
      (cov_17w5py6oec().s[12]++, context.headers.host.toLowerCase());
      /* istanbul ignore next */
      cov_17w5py6oec().s[13]++;
      if (host.includes('sewago')) {
        /* istanbul ignore next */
        cov_17w5py6oec().b[7][0]++;
        cov_17w5py6oec().s[14]++;
        return 'sewago';
      } else
      /* istanbul ignore next */
      {
        cov_17w5py6oec().b[7][1]++;
      }
      cov_17w5py6oec().s[15]++;
      if (host.includes('solsnipepro')) {
        /* istanbul ignore next */
        cov_17w5py6oec().b[8][0]++;
        cov_17w5py6oec().s[16]++;
        return 'solsnipepro';
      } else
      /* istanbul ignore next */
      {
        cov_17w5py6oec().b[8][1]++;
      }
      cov_17w5py6oec().s[17]++;
      if (host.includes('nepvest')) {
        /* istanbul ignore next */
        cov_17w5py6oec().b[9][0]++;
        cov_17w5py6oec().s[18]++;
        return 'nepvest';
      } else
      /* istanbul ignore next */
      {
        cov_17w5py6oec().b[9][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_17w5py6oec().b[6][1]++;
    }
    // Default to halobuzz
    cov_17w5py6oec().s[19]++;
    return this.config.defaultAppId;
  }
  /**
   * Ensures all analytics documents have the correct app ID
   * @param document The analytics document
   * @param context Request context
   * @returns Document with app ID set
   */
  ensureAppId(document, context) {
    /* istanbul ignore next */
    cov_17w5py6oec().f[2]++;
    cov_17w5py6oec().s[20]++;
    if (!document.appId) {
      /* istanbul ignore next */
      cov_17w5py6oec().b[10][0]++;
      cov_17w5py6oec().s[21]++;
      document.appId = this.mapToAppId(context);
    } else
    /* istanbul ignore next */
    {
      cov_17w5py6oec().b[10][1]++;
    }
    cov_17w5py6oec().s[22]++;
    return document;
  }
  /**
   * Creates a filter object for querying by app ID
   * @param appId Optional app ID to filter by
   * @param context Request context
   * @returns Filter object
   */
  createAppFilter(appId, context) {
    /* istanbul ignore next */
    cov_17w5py6oec().f[3]++;
    const resolvedAppId =
    /* istanbul ignore next */
    (cov_17w5py6oec().s[23]++,
    /* istanbul ignore next */
    (cov_17w5py6oec().b[11][0]++, appId) ||
    /* istanbul ignore next */
    (cov_17w5py6oec().b[11][1]++, this.mapToAppId(context)));
    /* istanbul ignore next */
    cov_17w5py6oec().s[24]++;
    return {
      appId: resolvedAppId
    };
  }
  /**
   * Gets all available app IDs
   * @returns Array of app IDs
   */
  getAvailableAppIds() {
    /* istanbul ignore next */
    cov_17w5py6oec().f[4]++;
    cov_17w5py6oec().s[25]++;
    return Object.keys(this.config.appMappings);
  }
  /**
   * Validates if an app ID is valid
   * @param appId App ID to validate
   * @returns True if valid, false otherwise
   */
  isValidAppId(appId) {
    /* istanbul ignore next */
    cov_17w5py6oec().f[5]++;
    cov_17w5py6oec().s[26]++;
    return appId in this.config.appMappings;
  }
  /**
   * Updates the app mapping configuration
   * @param newConfig New configuration
   */
  updateConfig(newConfig) {
    /* istanbul ignore next */
    cov_17w5py6oec().f[6]++;
    cov_17w5py6oec().s[27]++;
    this.config = {
      ...this.config,
      ...newConfig
    };
    /* istanbul ignore next */
    cov_17w5py6oec().s[28]++;
    logger_1.logger.info('AppMapper configuration updated', {
      newConfig
    });
  }
}
/* istanbul ignore next */
cov_17w5py6oec().s[29]++;
exports.AppMapper = AppMapper;
// Singleton instance
/* istanbul ignore next */
cov_17w5py6oec().s[30]++;
exports.appMapper = new AppMapper();