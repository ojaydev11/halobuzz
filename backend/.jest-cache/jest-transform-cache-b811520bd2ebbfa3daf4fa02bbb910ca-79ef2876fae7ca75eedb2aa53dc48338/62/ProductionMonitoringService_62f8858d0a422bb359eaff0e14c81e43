2f62edd72fab0f023d7d146494af1806
"use strict";

/* istanbul ignore next */
function cov_ebtsb1dbk() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\ProductionMonitoringService.ts";
  var hash = "d9502719a6d6c26a1053af85503e07a3dcf0d906";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\ProductionMonitoringService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 83
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 34
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 8,
          column: 14
        },
        end: {
          line: 8,
          column: 16
        }
      },
      "5": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "6": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 10,
          column: 29
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 16
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "9": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "10": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 85
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 52
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 79
        }
      },
      "14": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 60
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "16": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "17": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 18
        }
      },
      "19": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "20": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 54
        }
      },
      "21": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 65
        }
      },
      "22": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 68,
          column: 10
        }
      },
      "23": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 59
        }
      },
      "24": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "25": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 63
        }
      },
      "26": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 19
        }
      },
      "27": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 33
        }
      },
      "28": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 66
        }
      },
      "29": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 18
        }
      },
      "30": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 40
        }
      },
      "31": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 36
        }
      },
      "32": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "33": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 19
        }
      },
      "34": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 34
        }
      },
      "35": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "36": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 51
        }
      },
      "37": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 43
        }
      },
      "38": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 62
        }
      },
      "39": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "40": {
        start: {
          line: 101,
          column: 28
        },
        end: {
          line: 121,
          column: 13
        }
      },
      "41": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 39
        }
      },
      "42": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "43": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 57
        }
      },
      "44": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 51
        }
      },
      "45": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 70
        }
      },
      "46": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 35
        }
      },
      "47": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 35
        }
      },
      "48": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 35
        }
      },
      "49": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 35
        }
      },
      "50": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 49
        }
      },
      "51": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 36
        }
      },
      "52": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 33
        }
      },
      "53": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 35
        }
      },
      "54": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 38
        }
      },
      "55": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 36
        }
      },
      "56": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 35
        }
      },
      "57": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 35
        }
      },
      "58": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 86
        }
      },
      "59": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 42
        }
      },
      "60": {
        start: {
          line: 188,
          column: 23
        },
        end: {
          line: 188,
          column: 52
        }
      },
      "61": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "62": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 74
        }
      },
      "63": {
        start: {
          line: 192,
          column: 53
        },
        end: {
          line: 192,
          column: 59
        }
      },
      "64": {
        start: {
          line: 194,
          column: 26
        },
        end: {
          line: 198,
          column: 50
        }
      },
      "65": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 205,
          column: 10
        }
      },
      "66": {
        start: {
          line: 208,
          column: 23
        },
        end: {
          line: 208,
          column: 25
        }
      },
      "67": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "68": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 51
        }
      },
      "69": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "70": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 54
        }
      },
      "71": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "72": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 52
        }
      },
      "73": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "74": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 52
        }
      },
      "75": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "76": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 56
        }
      },
      "77": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 22
        }
      },
      "78": {
        start: {
          line: 227,
          column: 23
        },
        end: {
          line: 227,
          column: 52
        }
      },
      "79": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "80": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 55
        }
      },
      "81": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 238,
          column: 10
        }
      },
      "82": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "83": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 79
        }
      },
      "84": {
        start: {
          line: 244,
          column: 24
        },
        end: {
          line: 244,
          column: 61
        }
      },
      "85": {
        start: {
          line: 245,
          column: 25
        },
        end: {
          line: 245,
          column: 62
        }
      },
      "86": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 251,
          column: 10
        }
      },
      "87": {
        start: {
          line: 254,
          column: 0
        },
        end: {
          line: 254,
          column: 66
        }
      },
      "88": {
        start: {
          line: 255,
          column: 0
        },
        end: {
          line: 255,
          column: 80
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 28
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 49
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 53
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 43
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 57
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 36
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 61
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 31
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 70
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 28
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 74
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 82,
            column: 46
          },
          end: {
            line: 82,
            column: 47
          }
        },
        loc: {
          start: {
            line: 82,
            column: 58
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 82
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 27
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 88
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 99
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 24
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 133
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 27
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 137
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 25
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 141
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 28
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 145
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 27
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 149
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 33
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 153
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 25
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 157
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 35
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 161
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 23
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 165
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 27
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 169
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        loc: {
          start: {
            line: 173,
            column: 30
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 173
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 25
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 177
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 29
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 181
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        loc: {
          start: {
            line: 184,
            column: 41
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 184
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 28
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 187
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 28
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 207
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 31
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 226
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        loc: {
          start: {
            line: 240,
            column: 22
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 240
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 52
          }
        }, {
          start: {
            line: 23,
            column: 56
          },
          end: {
            line: 23,
            column: 58
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 72
          }
        }, {
          start: {
            line: 27,
            column: 76
          },
          end: {
            line: 27,
            column: 78
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 39
          },
          end: {
            line: 38,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 70
          },
          end: {
            line: 38,
            column: 79
          }
        }, {
          start: {
            line: 38,
            column: 82
          },
          end: {
            line: 38,
            column: 91
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 42
          },
          end: {
            line: 39,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 76
          },
          end: {
            line: 39,
            column: 85
          }
        }, {
          start: {
            line: 39,
            column: 88
          },
          end: {
            line: 39,
            column: 97
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 40
          },
          end: {
            line: 40,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 72
          },
          end: {
            line: 40,
            column: 81
          }
        }, {
          start: {
            line: 40,
            column: 84
          },
          end: {
            line: 40,
            column: 93
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 43
          },
          end: {
            line: 41,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 78
          },
          end: {
            line: 41,
            column: 87
          }
        }, {
          start: {
            line: 41,
            column: 90
          },
          end: {
            line: 41,
            column: 99
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 72,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 72,
            column: 52
          }
        }, {
          start: {
            line: 72,
            column: 56
          },
          end: {
            line: 72,
            column: 58
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "12": {
        loc: {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "13": {
        loc: {
          start: {
            line: 182,
            column: 15
          },
          end: {
            line: 182,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 41
          },
          end: {
            line: 182,
            column: 78
          }
        }, {
          start: {
            line: 182,
            column: 81
          },
          end: {
            line: 182,
            column: 85
          }
        }],
        line: 182
      },
      "14": {
        loc: {
          start: {
            line: 184,
            column: 28
          },
          end: {
            line: 184,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 184,
            column: 36
          },
          end: {
            line: 184,
            column: 39
          }
        }],
        line: 184
      },
      "15": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "16": {
        loc: {
          start: {
            line: 194,
            column: 26
          },
          end: {
            line: 198,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 26
          },
          end: {
            line: 194,
            column: 47
          }
        }, {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 36
          }
        }, {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 34
          }
        }, {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 197,
            column: 44
          }
        }, {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 198,
            column: 50
          }
        }],
        line: 194
      },
      "17": {
        loc: {
          start: {
            line: 200,
            column: 20
          },
          end: {
            line: 200,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 200,
            column: 32
          },
          end: {
            line: 200,
            column: 41
          }
        }, {
          start: {
            line: 200,
            column: 44
          },
          end: {
            line: 200,
            column: 53
          }
        }],
        line: 200
      },
      "18": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "19": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "20": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "21": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "22": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "23": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "24": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d9502719a6d6c26a1053af85503e07a3dcf0d906"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ebtsb1dbk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ebtsb1dbk();
cov_ebtsb1dbk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ebtsb1dbk().s[1]++;
exports.productionMonitoringService = exports.ProductionMonitoringService = void 0;
const events_1 =
/* istanbul ignore next */
(cov_ebtsb1dbk().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_ebtsb1dbk().s[3]++, require("@/config/logger"));
class ProductionMonitoringService extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  static instance;
  metrics =
  /* istanbul ignore next */
  (cov_ebtsb1dbk().s[4]++, []);
  isMonitoring =
  /* istanbul ignore next */
  (cov_ebtsb1dbk().s[5]++, false);
  monitoringInterval =
  /* istanbul ignore next */
  (cov_ebtsb1dbk().s[6]++, null);
  constructor() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[0]++;
    cov_ebtsb1dbk().s[7]++;
    super();
    /* istanbul ignore next */
    cov_ebtsb1dbk().s[8]++;
    logger_1.logger.info('ProductionMonitoringService initialized');
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[1]++;
    cov_ebtsb1dbk().s[9]++;
    if (!ProductionMonitoringService.instance) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[0][0]++;
      cov_ebtsb1dbk().s[10]++;
      ProductionMonitoringService.instance = new ProductionMonitoringService();
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[0][1]++;
    }
    cov_ebtsb1dbk().s[11]++;
    return ProductionMonitoringService.instance;
  }
  async getSystemMetrics() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[2]++;
    cov_ebtsb1dbk().s[12]++;
    // Return current system metrics
    return /* istanbul ignore next */(cov_ebtsb1dbk().b[1][0]++, this.metrics[this.metrics.length - 1]) ||
    /* istanbul ignore next */
    (cov_ebtsb1dbk().b[1][1]++, {});
  }
  async getApplicationMetrics() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[3]++;
    cov_ebtsb1dbk().s[13]++;
    // Return current application metrics
    return /* istanbul ignore next */(cov_ebtsb1dbk().b[2][0]++, this.metrics[this.metrics.length - 1]?.applicationMetrics) ||
    /* istanbul ignore next */
    (cov_ebtsb1dbk().b[2][1]++, {});
  }
  async getHealthStatus() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[4]++;
    // Return system health status
    const latest =
    /* istanbul ignore next */
    (cov_ebtsb1dbk().s[14]++, this.metrics[this.metrics.length - 1]);
    /* istanbul ignore next */
    cov_ebtsb1dbk().s[15]++;
    if (!latest) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[3][0]++;
      cov_ebtsb1dbk().s[16]++;
      return {
        status: 'unknown',
        checks: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[3][1]++;
    }
    cov_ebtsb1dbk().s[17]++;
    return {
      status: 'healthy',
      checks: [{
        name: 'cpu',
        status: latest.systemHealth.cpu < 80 ?
        /* istanbul ignore next */
        (cov_ebtsb1dbk().b[4][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_ebtsb1dbk().b[4][1]++, 'warning')
      }, {
        name: 'memory',
        status: latest.systemHealth.memory < 80 ?
        /* istanbul ignore next */
        (cov_ebtsb1dbk().b[5][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_ebtsb1dbk().b[5][1]++, 'warning')
      }, {
        name: 'disk',
        status: latest.systemHealth.disk < 80 ?
        /* istanbul ignore next */
        (cov_ebtsb1dbk().b[6][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_ebtsb1dbk().b[6][1]++, 'warning')
      }, {
        name: 'network',
        status: latest.systemHealth.network < 80 ?
        /* istanbul ignore next */
        (cov_ebtsb1dbk().b[7][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_ebtsb1dbk().b[7][1]++, 'warning')
      }]
    };
  }
  async getActiveAlerts() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[5]++;
    cov_ebtsb1dbk().s[18]++;
    // Return active alerts
    return [];
  }
  async resolveAlert(alertId) {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[6]++;
    cov_ebtsb1dbk().s[19]++;
    // Resolve an alert
    return {
      success: true,
      resolvedAt: new Date()
    };
  }
  async createAlertRule(rule) {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[7]++;
    cov_ebtsb1dbk().s[20]++;
    // Create an alert rule
    return {
      ...rule,
      id: Date.now().toString()
    };
  }
  async updateAlertRule(ruleId, updates) {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[8]++;
    cov_ebtsb1dbk().s[21]++;
    // Update an alert rule
    return {
      ...updates,
      id: ruleId,
      updatedAt: new Date()
    };
  }
  async getPerformanceDashboard() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[9]++;
    cov_ebtsb1dbk().s[22]++;
    // Return performance dashboard data
    return {
      uptime: process.uptime(),
      memoryUsage: process.memoryUsage(),
      cpuUsage: process.cpuUsage(),
      metrics: this.metrics.slice(-100) // Last 100 metrics
    };
  }
  async getRealTimeMetrics() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[10]++;
    cov_ebtsb1dbk().s[23]++;
    // Return real-time metrics
    return /* istanbul ignore next */(cov_ebtsb1dbk().b[8][0]++, this.metrics[this.metrics.length - 1]) ||
    /* istanbul ignore next */
    (cov_ebtsb1dbk().b[8][1]++, {});
  }
  async startMonitoring() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[11]++;
    cov_ebtsb1dbk().s[24]++;
    if (this.isMonitoring) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[9][0]++;
      cov_ebtsb1dbk().s[25]++;
      logger_1.logger.warn('Monitoring already started');
      /* istanbul ignore next */
      cov_ebtsb1dbk().s[26]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[9][1]++;
    }
    cov_ebtsb1dbk().s[27]++;
    this.isMonitoring = true;
    /* istanbul ignore next */
    cov_ebtsb1dbk().s[28]++;
    logger_1.logger.info('Starting production monitoring...');
    // Start collecting metrics every 30 seconds
    /* istanbul ignore next */
    cov_ebtsb1dbk().s[29]++;
    this.monitoringInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_ebtsb1dbk().f[12]++;
      cov_ebtsb1dbk().s[30]++;
      await this.collectMetrics();
    }, 30000);
    // Collect initial metrics
    /* istanbul ignore next */
    cov_ebtsb1dbk().s[31]++;
    await this.collectMetrics();
  }
  async stopMonitoring() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[13]++;
    cov_ebtsb1dbk().s[32]++;
    if (!this.isMonitoring) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[10][0]++;
      cov_ebtsb1dbk().s[33]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[10][1]++;
    }
    cov_ebtsb1dbk().s[34]++;
    this.isMonitoring = false;
    /* istanbul ignore next */
    cov_ebtsb1dbk().s[35]++;
    if (this.monitoringInterval) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[11][0]++;
      cov_ebtsb1dbk().s[36]++;
      clearInterval(this.monitoringInterval);
      /* istanbul ignore next */
      cov_ebtsb1dbk().s[37]++;
      this.monitoringInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[11][1]++;
    }
    cov_ebtsb1dbk().s[38]++;
    logger_1.logger.info('Production monitoring stopped');
  }
  async collectMetrics() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[14]++;
    cov_ebtsb1dbk().s[39]++;
    try {
      const metrics =
      /* istanbul ignore next */
      (cov_ebtsb1dbk().s[40]++, {
        timestamp: new Date(),
        systemHealth: {
          cpu: await this.getCPUUsage(),
          memory: await this.getMemoryUsage(),
          disk: await this.getDiskUsage(),
          network: await this.getNetworkUsage()
        },
        applicationMetrics: {
          activeUsers: await this.getActiveUsers(),
          requestsPerSecond: await this.getRequestsPerSecond(),
          errorRate: await this.getErrorRate(),
          responseTime: await this.getAverageResponseTime()
        },
        businessMetrics: {
          revenue: await this.getRevenue(),
          conversions: await this.getConversions(),
          userEngagement: await this.getUserEngagement(),
          retention: await this.getRetention()
        }
      });
      /* istanbul ignore next */
      cov_ebtsb1dbk().s[41]++;
      this.metrics.push(metrics);
      // Keep only last 1000 metrics to prevent memory issues
      /* istanbul ignore next */
      cov_ebtsb1dbk().s[42]++;
      if (this.metrics.length > 1000) {
        /* istanbul ignore next */
        cov_ebtsb1dbk().b[12][0]++;
        cov_ebtsb1dbk().s[43]++;
        this.metrics = this.metrics.slice(-1000);
      } else
      /* istanbul ignore next */
      {
        cov_ebtsb1dbk().b[12][1]++;
      }
      cov_ebtsb1dbk().s[44]++;
      this.emit('metricsCollected', metrics);
    } catch (error) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().s[45]++;
      logger_1.logger.error('Error collecting metrics:', error);
    }
  }
  async getCPUUsage() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[15]++;
    cov_ebtsb1dbk().s[46]++;
    // Mock CPU usage - in production, use actual system monitoring
    return Math.random() * 100;
  }
  async getMemoryUsage() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[16]++;
    cov_ebtsb1dbk().s[47]++;
    // Mock memory usage - in production, use actual system monitoring
    return Math.random() * 100;
  }
  async getDiskUsage() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[17]++;
    cov_ebtsb1dbk().s[48]++;
    // Mock disk usage - in production, use actual system monitoring
    return Math.random() * 100;
  }
  async getNetworkUsage() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[18]++;
    cov_ebtsb1dbk().s[49]++;
    // Mock network usage - in production, use actual system monitoring
    return Math.random() * 100;
  }
  async getActiveUsers() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[19]++;
    cov_ebtsb1dbk().s[50]++;
    // Mock active users - in production, get from actual data
    return Math.floor(Math.random() * 10000);
  }
  async getRequestsPerSecond() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[20]++;
    cov_ebtsb1dbk().s[51]++;
    // Mock RPS - in production, get from actual metrics
    return Math.random() * 1000;
  }
  async getErrorRate() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[21]++;
    cov_ebtsb1dbk().s[52]++;
    // Mock error rate - in production, get from actual metrics
    return Math.random() * 5;
  }
  async getAverageResponseTime() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[22]++;
    cov_ebtsb1dbk().s[53]++;
    // Mock response time - in production, get from actual metrics
    return Math.random() * 500;
  }
  async getRevenue() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[23]++;
    cov_ebtsb1dbk().s[54]++;
    // Mock revenue - in production, get from actual data
    return Math.random() * 100000;
  }
  async getConversions() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[24]++;
    cov_ebtsb1dbk().s[55]++;
    // Mock conversions - in production, get from actual data
    return Math.random() * 1000;
  }
  async getUserEngagement() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[25]++;
    cov_ebtsb1dbk().s[56]++;
    // Mock engagement - in production, get from actual data
    return Math.random() * 100;
  }
  async getRetention() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[26]++;
    cov_ebtsb1dbk().s[57]++;
    // Mock retention - in production, get from actual data
    return Math.random() * 100;
  }
  async getLatestMetrics() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[27]++;
    cov_ebtsb1dbk().s[58]++;
    return this.metrics.length > 0 ?
    /* istanbul ignore next */
    (cov_ebtsb1dbk().b[13][0]++, this.metrics[this.metrics.length - 1]) :
    /* istanbul ignore next */
    (cov_ebtsb1dbk().b[13][1]++, null);
  }
  async getMetricsHistory(limit =
  /* istanbul ignore next */
  (cov_ebtsb1dbk().b[14][0]++, 100)) {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[28]++;
    cov_ebtsb1dbk().s[59]++;
    return this.metrics.slice(-limit);
  }
  async getSystemHealth() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[29]++;
    const latest =
    /* istanbul ignore next */
    (cov_ebtsb1dbk().s[60]++, await this.getLatestMetrics());
    /* istanbul ignore next */
    cov_ebtsb1dbk().s[61]++;
    if (!latest) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[15][0]++;
      cov_ebtsb1dbk().s[62]++;
      return {
        status: 'unknown',
        message: 'No metrics available'
      };
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[15][1]++;
    }
    const {
      systemHealth,
      applicationMetrics
    } =
    /* istanbul ignore next */
    (cov_ebtsb1dbk().s[63]++, latest);
    // Determine overall health based on thresholds
    const isHealthy =
    /* istanbul ignore next */
    (cov_ebtsb1dbk().s[64]++,
    /* istanbul ignore next */
    (cov_ebtsb1dbk().b[16][0]++, systemHealth.cpu < 80) &&
    /* istanbul ignore next */
    (cov_ebtsb1dbk().b[16][1]++, systemHealth.memory < 80) &&
    /* istanbul ignore next */
    (cov_ebtsb1dbk().b[16][2]++, systemHealth.disk < 90) &&
    /* istanbul ignore next */
    (cov_ebtsb1dbk().b[16][3]++, applicationMetrics.errorRate < 5) &&
    /* istanbul ignore next */
    (cov_ebtsb1dbk().b[16][4]++, applicationMetrics.responseTime < 1000));
    /* istanbul ignore next */
    cov_ebtsb1dbk().s[65]++;
    return {
      status: isHealthy ?
      /* istanbul ignore next */
      (cov_ebtsb1dbk().b[17][0]++, 'healthy') :
      /* istanbul ignore next */
      (cov_ebtsb1dbk().b[17][1]++, 'warning'),
      timestamp: latest.timestamp,
      systemHealth,
      applicationMetrics,
      alerts: this.generateAlerts(latest)
    };
  }
  generateAlerts(metrics) {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[30]++;
    const alerts =
    /* istanbul ignore next */
    (cov_ebtsb1dbk().s[66]++, []);
    /* istanbul ignore next */
    cov_ebtsb1dbk().s[67]++;
    if (metrics.systemHealth.cpu > 80) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[18][0]++;
      cov_ebtsb1dbk().s[68]++;
      alerts.push('High CPU usage detected');
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[18][1]++;
    }
    cov_ebtsb1dbk().s[69]++;
    if (metrics.systemHealth.memory > 80) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[19][0]++;
      cov_ebtsb1dbk().s[70]++;
      alerts.push('High memory usage detected');
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[19][1]++;
    }
    cov_ebtsb1dbk().s[71]++;
    if (metrics.systemHealth.disk > 90) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[20][0]++;
      cov_ebtsb1dbk().s[72]++;
      alerts.push('High disk usage detected');
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[20][1]++;
    }
    cov_ebtsb1dbk().s[73]++;
    if (metrics.applicationMetrics.errorRate > 5) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[21][0]++;
      cov_ebtsb1dbk().s[74]++;
      alerts.push('High error rate detected');
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[21][1]++;
    }
    cov_ebtsb1dbk().s[75]++;
    if (metrics.applicationMetrics.responseTime > 1000) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[22][0]++;
      cov_ebtsb1dbk().s[76]++;
      alerts.push('Slow response times detected');
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[22][1]++;
    }
    cov_ebtsb1dbk().s[77]++;
    return alerts;
  }
  async getBusinessMetrics() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[31]++;
    const latest =
    /* istanbul ignore next */
    (cov_ebtsb1dbk().s[78]++, await this.getLatestMetrics());
    /* istanbul ignore next */
    cov_ebtsb1dbk().s[79]++;
    if (!latest) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[23][0]++;
      cov_ebtsb1dbk().s[80]++;
      return {
        message: 'No metrics available'
      };
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[23][1]++;
    }
    cov_ebtsb1dbk().s[81]++;
    return {
      timestamp: latest.timestamp,
      revenue: latest.businessMetrics.revenue,
      conversions: latest.businessMetrics.conversions,
      userEngagement: latest.businessMetrics.userEngagement,
      retention: latest.businessMetrics.retention,
      trends: this.calculateTrends()
    };
  }
  calculateTrends() {
    /* istanbul ignore next */
    cov_ebtsb1dbk().f[32]++;
    cov_ebtsb1dbk().s[82]++;
    if (this.metrics.length < 2) {
      /* istanbul ignore next */
      cov_ebtsb1dbk().b[24][0]++;
      cov_ebtsb1dbk().s[83]++;
      return {
        revenue: 0,
        conversions: 0,
        engagement: 0,
        retention: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_ebtsb1dbk().b[24][1]++;
    }
    const current =
    /* istanbul ignore next */
    (cov_ebtsb1dbk().s[84]++, this.metrics[this.metrics.length - 1]);
    const previous =
    /* istanbul ignore next */
    (cov_ebtsb1dbk().s[85]++, this.metrics[this.metrics.length - 2]);
    /* istanbul ignore next */
    cov_ebtsb1dbk().s[86]++;
    return {
      revenue: (current.businessMetrics.revenue - previous.businessMetrics.revenue) / previous.businessMetrics.revenue * 100,
      conversions: (current.businessMetrics.conversions - previous.businessMetrics.conversions) / previous.businessMetrics.conversions * 100,
      engagement: (current.businessMetrics.userEngagement - previous.businessMetrics.userEngagement) / previous.businessMetrics.userEngagement * 100,
      retention: (current.businessMetrics.retention - previous.businessMetrics.retention) / previous.businessMetrics.retention * 100
    };
  }
}
/* istanbul ignore next */
cov_ebtsb1dbk().s[87]++;
exports.ProductionMonitoringService = ProductionMonitoringService;
/* istanbul ignore next */
cov_ebtsb1dbk().s[88]++;
exports.productionMonitoringService = ProductionMonitoringService.getInstance();