a858aee293aceffd036cffd8af0e4867
"use strict";

/* istanbul ignore next */
function cov_t1pphw067() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\stripe-checkout.ts";
  var hash = "5721e31ee80ee96d5f552bd4fd994a3168afb0d0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\stripe-checkout.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 51
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 44
        }
      },
      "7": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 44
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "9": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 15,
          column: 2
        }
      },
      "10": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "11": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "12": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 53,
          column: 3
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "15": {
        start: {
          line: 34,
          column: 52
        },
        end: {
          line: 42,
          column: 17
        }
      },
      "16": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 70
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "18": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 133,
          column: 3
        }
      },
      "19": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "20": {
        start: {
          line: 65,
          column: 23
        },
        end: {
          line: 65,
          column: 69
        }
      },
      "21": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "22": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "23": {
        start: {
          line: 72,
          column: 23
        },
        end: {
          line: 72,
          column: 39
        }
      },
      "24": {
        start: {
          line: 73,
          column: 53
        },
        end: {
          line: 73,
          column: 61
        }
      },
      "25": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "26": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 78,
          column: 15
        }
      },
      "27": {
        start: {
          line: 81,
          column: 28
        },
        end: {
          line: 81,
          column: 75
        }
      },
      "28": {
        start: {
          line: 81,
          column: 54
        },
        end: {
          line: 81,
          column: 74
        }
      },
      "29": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "30": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 86,
          column: 15
        }
      },
      "31": {
        start: {
          line: 89,
          column: 24
        },
        end: {
          line: 116,
          column: 10
        }
      },
      "32": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 114
        }
      },
      "33": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "34": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 73
        }
      },
      "35": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "36": {
        start: {
          line: 138,
          column: 0
        },
        end: {
          line: 175,
          column: 3
        }
      },
      "37": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "38": {
        start: {
          line: 140,
          column: 30
        },
        end: {
          line: 140,
          column: 40
        }
      },
      "39": {
        start: {
          line: 141,
          column: 23
        },
        end: {
          line: 141,
          column: 39
        }
      },
      "40": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "41": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 146,
          column: 15
        }
      },
      "42": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 148,
          column: 74
        }
      },
      "43": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "44": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 154,
          column: 15
        }
      },
      "45": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 166,
          column: 11
        }
      },
      "46": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 66
        }
      },
      "47": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "48": {
        start: {
          line: 176,
          column: 0
        },
        end: {
          line: 176,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 47
          },
          end: {
            line: 29,
            column: 48
          }
        },
        loc: {
          start: {
            line: 29,
            column: 67
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 44
          },
          end: {
            line: 34,
            column: 45
          }
        },
        loc: {
          start: {
            line: 34,
            column: 52
          },
          end: {
            line: 42,
            column: 17
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 63,
            column: 3
          },
          end: {
            line: 63,
            column: 4
          }
        },
        loc: {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 63
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 81,
            column: 47
          },
          end: {
            line: 81,
            column: 48
          }
        },
        loc: {
          start: {
            line: 81,
            column: 54
          },
          end: {
            line: 81,
            column: 74
          }
        },
        line: 81
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 138,
            column: 57
          },
          end: {
            line: 138,
            column: 58
          }
        },
        loc: {
          start: {
            line: 138,
            column: 77
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 138
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 13,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 13,
            column: 65
          }
        }, {
          start: {
            line: 13,
            column: 69
          },
          end: {
            line: 13,
            column: 71
          }
        }],
        line: 13
      },
      "4": {
        loc: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 45
          }
        }, {
          start: {
            line: 16,
            column: 49
          },
          end: {
            line: 16,
            column: 72
          }
        }],
        line: 16
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 40,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 40,
            column: 36
          }
        }, {
          start: {
            line: 40,
            column: 40
          },
          end: {
            line: 40,
            column: 41
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 29
          },
          end: {
            line: 41,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 41
          },
          end: {
            line: 41,
            column: 82
          }
        }, {
          start: {
            line: 41,
            column: 85
          },
          end: {
            line: 41,
            column: 86
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "8": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "9": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "10": {
        loc: {
          start: {
            line: 97,
            column: 41
          },
          end: {
            line: 99,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 34
          },
          end: {
            line: 98,
            column: 111
          }
        }, {
          start: {
            line: 99,
            column: 34
          },
          end: {
            line: 99,
            column: 66
          }
        }],
        line: 97
      },
      "11": {
        loc: {
          start: {
            line: 108,
            column: 25
          },
          end: {
            line: 108,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 25
          },
          end: {
            line: 108,
            column: 35
          }
        }, {
          start: {
            line: 108,
            column: 39
          },
          end: {
            line: 108,
            column: 105
          }
        }],
        line: 108
      },
      "12": {
        loc: {
          start: {
            line: 109,
            column: 24
          },
          end: {
            line: 109,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 24
          },
          end: {
            line: 109,
            column: 33
          }
        }, {
          start: {
            line: 109,
            column: 37
          },
          end: {
            line: 109,
            column: 69
          }
        }],
        line: 109
      },
      "13": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "14": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "15": {
        loc: {
          start: {
            line: 161,
            column: 29
          },
          end: {
            line: 161,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 52
          },
          end: {
            line: 161,
            column: 78
          }
        }, {
          start: {
            line: 161,
            column: 81
          },
          end: {
            line: 161,
            column: 82
          }
        }],
        line: 161
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5721e31ee80ee96d5f552bd4fd994a3168afb0d0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_t1pphw067 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_t1pphw067();
var __importDefault =
/* istanbul ignore next */
(cov_t1pphw067().s[0]++,
/* istanbul ignore next */
(cov_t1pphw067().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_t1pphw067().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_t1pphw067().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_t1pphw067().f[0]++;
  cov_t1pphw067().s[1]++;
  return /* istanbul ignore next */(cov_t1pphw067().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_t1pphw067().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_t1pphw067().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_t1pphw067().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_t1pphw067().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_t1pphw067().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_t1pphw067().s[4]++, require("express-validator"));
const stripe_1 =
/* istanbul ignore next */
(cov_t1pphw067().s[5]++, __importDefault(require("stripe")));
const auth_1 =
/* istanbul ignore next */
(cov_t1pphw067().s[6]++, require("../middleware/auth"));
const logger_1 =
/* istanbul ignore next */
(cov_t1pphw067().s[7]++, require("../config/logger"));
const router =
/* istanbul ignore next */
(cov_t1pphw067().s[8]++, express_1.default.Router());
// Initialize Stripe
const stripe =
/* istanbul ignore next */
(cov_t1pphw067().s[9]++, new stripe_1.default(
/* istanbul ignore next */
(cov_t1pphw067().b[3][0]++, process.env.STRIPE_SECRET_KEY) ||
/* istanbul ignore next */
(cov_t1pphw067().b[3][1]++, ''), {
  apiVersion: '2023-10-16'
}));
const FRONTEND_URL =
/* istanbul ignore next */
(cov_t1pphw067().s[10]++,
/* istanbul ignore next */
(cov_t1pphw067().b[4][0]++, process.env.FRONTEND_URL) ||
/* istanbul ignore next */
(cov_t1pphw067().b[4][1]++, 'http://localhost:3000'));
// Coin packages configuration
const COIN_PACKAGES =
/* istanbul ignore next */
(cov_t1pphw067().s[11]++, [{
  id: 'coins_100',
  coins: 100,
  price: 0.99,
  currency: 'USD',
  title: 'Starter Pack'
}, {
  id: 'coins_500',
  coins: 550,
  price: 4.99,
  currency: 'USD',
  title: 'Popular Pack',
  bonus: 50
}, {
  id: 'coins_1000',
  coins: 1150,
  price: 9.99,
  currency: 'USD',
  title: 'Value Pack',
  bonus: 150
}, {
  id: 'coins_5000',
  coins: 6000,
  price: 39.99,
  currency: 'USD',
  title: 'Mega Pack',
  bonus: 1000
}, {
  id: 'coins_10000',
  coins: 12500,
  price: 79.99,
  currency: 'USD',
  title: 'Ultimate Pack',
  bonus: 2500
}]);
/**
 * GET /api/v1/stripe/products
 * Get available coin packages
 */
/* istanbul ignore next */
cov_t1pphw067().s[12]++;
router.get('/products', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_t1pphw067().f[1]++;
  cov_t1pphw067().s[13]++;
  try {
    /* istanbul ignore next */
    cov_t1pphw067().s[14]++;
    res.json({
      success: true,
      data: {
        packages: COIN_PACKAGES.map(pkg => {
          /* istanbul ignore next */
          cov_t1pphw067().f[2]++;
          cov_t1pphw067().s[15]++;
          return {
            id: pkg.id,
            coins: pkg.coins,
            price: pkg.price,
            currency: pkg.currency,
            title: pkg.title,
            bonus:
            /* istanbul ignore next */
            (cov_t1pphw067().b[5][0]++, pkg.bonus) ||
            /* istanbul ignore next */
            (cov_t1pphw067().b[5][1]++, 0),
            savings: pkg.bonus ?
            /* istanbul ignore next */
            (cov_t1pphw067().b[6][0]++, Math.round(pkg.bonus / pkg.coins * 100)) :
            /* istanbul ignore next */
            (cov_t1pphw067().b[6][1]++, 0)
          };
        })
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_t1pphw067().s[16]++;
    logger_1.logger.error('Error fetching coin packages:', error);
    /* istanbul ignore next */
    cov_t1pphw067().s[17]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch coin packages'
    });
  }
});
/**
 * POST /api/v1/stripe/create-checkout-session
 * Create Stripe checkout session for coin purchase
 */
/* istanbul ignore next */
cov_t1pphw067().s[18]++;
router.post('/create-checkout-session', [auth_1.authMiddleware, (0, express_validator_1.body)('packageId').isString().withMessage('Package ID is required'), (0, express_validator_1.body)('successUrl').optional().isURL(), (0, express_validator_1.body)('cancelUrl').optional().isURL()], async (req, res) => {
  /* istanbul ignore next */
  cov_t1pphw067().f[3]++;
  cov_t1pphw067().s[19]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_t1pphw067().s[20]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_t1pphw067().s[21]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_t1pphw067().b[7][0]++;
      cov_t1pphw067().s[22]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_t1pphw067().b[7][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_t1pphw067().s[23]++, req.user?.userId);
    const {
      packageId,
      successUrl,
      cancelUrl
    } =
    /* istanbul ignore next */
    (cov_t1pphw067().s[24]++, req.body);
    /* istanbul ignore next */
    cov_t1pphw067().s[25]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_t1pphw067().b[8][0]++;
      cov_t1pphw067().s[26]++;
      return res.status(401).json({
        success: false,
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_t1pphw067().b[8][1]++;
    }
    // Find package
    const coinPackage =
    /* istanbul ignore next */
    (cov_t1pphw067().s[27]++, COIN_PACKAGES.find(pkg => {
      /* istanbul ignore next */
      cov_t1pphw067().f[4]++;
      cov_t1pphw067().s[28]++;
      return pkg.id === packageId;
    }));
    /* istanbul ignore next */
    cov_t1pphw067().s[29]++;
    if (!coinPackage) {
      /* istanbul ignore next */
      cov_t1pphw067().b[9][0]++;
      cov_t1pphw067().s[30]++;
      return res.status(404).json({
        success: false,
        error: 'Package not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_t1pphw067().b[9][1]++;
    }
    // Create Stripe checkout session
    const session =
    /* istanbul ignore next */
    (cov_t1pphw067().s[31]++, await stripe.checkout.sessions.create({
      payment_method_types: ['card'],
      line_items: [{
        price_data: {
          currency: coinPackage.currency.toLowerCase(),
          product_data: {
            name: `${coinPackage.title} - ${coinPackage.coins} Coins`,
            description: coinPackage.bonus ?
            /* istanbul ignore next */
            (cov_t1pphw067().b[10][0]++, `Get ${coinPackage.coins} coins (includes ${coinPackage.bonus} bonus coins!)`) :
            /* istanbul ignore next */
            (cov_t1pphw067().b[10][1]++, `Get ${coinPackage.coins} coins`),
            images: ['https://halobuzz.com/assets/coin-icon.png'] // Replace with actual image
          },
          unit_amount: Math.round(coinPackage.price * 100) // Convert to cents
        },
        quantity: 1
      }],
      mode: 'payment',
      success_url:
      /* istanbul ignore next */
      (cov_t1pphw067().b[11][0]++, successUrl) ||
      /* istanbul ignore next */
      (cov_t1pphw067().b[11][1]++, `${FRONTEND_URL}/payment/success?session_id={CHECKOUT_SESSION_ID}`),
      cancel_url:
      /* istanbul ignore next */
      (cov_t1pphw067().b[12][0]++, cancelUrl) ||
      /* istanbul ignore next */
      (cov_t1pphw067().b[12][1]++, `${FRONTEND_URL}/payment/cancel`),
      client_reference_id: userId,
      metadata: {
        userId,
        coinPackageId: coinPackage.id,
        coinsAmount: coinPackage.coins.toString()
      }
    }));
    /* istanbul ignore next */
    cov_t1pphw067().s[32]++;
    logger_1.logger.info(`Checkout session created: ${session.id} - User: ${userId} - Package: ${packageId}`);
    /* istanbul ignore next */
    cov_t1pphw067().s[33]++;
    res.json({
      success: true,
      data: {
        sessionId: session.id,
        url: session.url
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_t1pphw067().s[34]++;
    logger_1.logger.error('Error creating checkout session:', error);
    /* istanbul ignore next */
    cov_t1pphw067().s[35]++;
    res.status(500).json({
      success: false,
      error: 'Failed to create checkout session'
    });
  }
});
/**
 * GET /api/v1/stripe/session/:sessionId
 * Get checkout session details
 */
/* istanbul ignore next */
cov_t1pphw067().s[36]++;
router.get('/session/:sessionId', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_t1pphw067().f[5]++;
  cov_t1pphw067().s[37]++;
  try {
    const {
      sessionId
    } =
    /* istanbul ignore next */
    (cov_t1pphw067().s[38]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_t1pphw067().s[39]++, req.user?.userId);
    /* istanbul ignore next */
    cov_t1pphw067().s[40]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_t1pphw067().b[13][0]++;
      cov_t1pphw067().s[41]++;
      return res.status(401).json({
        success: false,
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_t1pphw067().b[13][1]++;
    }
    const session =
    /* istanbul ignore next */
    (cov_t1pphw067().s[42]++, await stripe.checkout.sessions.retrieve(sessionId));
    // Verify session belongs to user
    /* istanbul ignore next */
    cov_t1pphw067().s[43]++;
    if (session.metadata?.userId !== userId) {
      /* istanbul ignore next */
      cov_t1pphw067().b[14][0]++;
      cov_t1pphw067().s[44]++;
      return res.status(403).json({
        success: false,
        error: 'Unauthorized access to session'
      });
    } else
    /* istanbul ignore next */
    {
      cov_t1pphw067().b[14][1]++;
    }
    cov_t1pphw067().s[45]++;
    res.json({
      success: true,
      data: {
        id: session.id,
        status: session.payment_status,
        amountTotal: session.amount_total ?
        /* istanbul ignore next */
        (cov_t1pphw067().b[15][0]++, session.amount_total / 100) :
        /* istanbul ignore next */
        (cov_t1pphw067().b[15][1]++, 0),
        currency: session.currency,
        customerEmail: session.customer_details?.email,
        metadata: session.metadata
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_t1pphw067().s[46]++;
    logger_1.logger.error('Error retrieving session:', error);
    /* istanbul ignore next */
    cov_t1pphw067().s[47]++;
    res.status(500).json({
      success: false,
      error: 'Failed to retrieve session'
    });
  }
});
/* istanbul ignore next */
cov_t1pphw067().s[48]++;
exports.default = router;