7c96a2400d68e01297e5f82853810568
"use strict";

/* istanbul ignore next */
function cov_1k2hnm1kon() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\app.ts";
  var hash = "42d6cf2e799e68b37f292178f992a63fe8b3eaaf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\app.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 22
        }
      },
      "4": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 53
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 47
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 51
        }
      },
      "7": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 43
        }
      },
      "8": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 40
        }
      },
      "9": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "10": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 35
        }
      },
      "11": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 56
        }
      },
      "12": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 78
        }
      },
      "13": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 7
        }
      },
      "14": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 40,
          column: 7
        }
      },
      "16": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "17": {
        start: {
          line: 34,
          column: 30
        },
        end: {
          line: 34,
          column: 68
        }
      },
      "18": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 35,
          column: 82
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "20": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "build",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 14
          }
        },
        loc: {
          start: {
            line: 11,
            column: 17
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 24
          }
        },
        loc: {
          start: {
            line: 20,
            column: 37
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 13
          }
        },
        loc: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 45
          },
          end: {
            line: 35,
            column: 56
          }
        }, {
          start: {
            line: 35,
            column: 59
          },
          end: {
            line: 35,
            column: 82
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 29
          }
        }, {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 38,
            column: 53
          }
        }],
        line: 38
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "42d6cf2e799e68b37f292178f992a63fe8b3eaaf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1k2hnm1kon = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1k2hnm1kon();
var __importDefault =
/* istanbul ignore next */
(cov_1k2hnm1kon().s[0]++,
/* istanbul ignore next */
(cov_1k2hnm1kon().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1k2hnm1kon().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1k2hnm1kon().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1k2hnm1kon().f[0]++;
  cov_1k2hnm1kon().s[1]++;
  return /* istanbul ignore next */(cov_1k2hnm1kon().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1k2hnm1kon().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1k2hnm1kon().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1k2hnm1kon().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1k2hnm1kon().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1k2hnm1kon().s[3]++;
exports.build = build;
const express_1 =
/* istanbul ignore next */
(cov_1k2hnm1kon().s[4]++, __importDefault(require("express")));
const cors_1 =
/* istanbul ignore next */
(cov_1k2hnm1kon().s[5]++, __importDefault(require("cors")));
const helmet_1 =
/* istanbul ignore next */
(cov_1k2hnm1kon().s[6]++, __importDefault(require("helmet")));
const logger_1 =
/* istanbul ignore next */
(cov_1k2hnm1kon().s[7]++, require("./config/logger"));
function build() {
  /* istanbul ignore next */
  cov_1k2hnm1kon().f[1]++;
  const app =
  /* istanbul ignore next */
  (cov_1k2hnm1kon().s[8]++, (0, express_1.default)());
  // Security middleware
  /* istanbul ignore next */
  cov_1k2hnm1kon().s[9]++;
  app.use((0, helmet_1.default)());
  /* istanbul ignore next */
  cov_1k2hnm1kon().s[10]++;
  app.use((0, cors_1.default)());
  // Body parsing middleware with stricter limits
  /* istanbul ignore next */
  cov_1k2hnm1kon().s[11]++;
  app.use(express_1.default.json({
    limit: '512kb'
  }));
  /* istanbul ignore next */
  cov_1k2hnm1kon().s[12]++;
  app.use(express_1.default.urlencoded({
    extended: true,
    limit: '512kb'
  }));
  // Health check endpoint
  /* istanbul ignore next */
  cov_1k2hnm1kon().s[13]++;
  app.get('/health', (req, res) => {
    /* istanbul ignore next */
    cov_1k2hnm1kon().f[2]++;
    cov_1k2hnm1kon().s[14]++;
    res.json({
      status: 'ok',
      timestamp: new Date().toISOString()
    });
  });
  // Error handling middleware with security considerations
  /* istanbul ignore next */
  cov_1k2hnm1kon().s[15]++;
  app.use((err, req, res, next) => {
    /* istanbul ignore next */
    cov_1k2hnm1kon().f[3]++;
    cov_1k2hnm1kon().s[16]++;
    logger_1.logger.error('Unhandled error:', {
      message: err.message,
      stack: err.stack,
      url: req.url,
      method: req.method,
      ip: req.ip,
      userAgent: req.get('User-Agent')
    });
    // Don't expose internal errors in production
    const isDevelopment =
    /* istanbul ignore next */
    (cov_1k2hnm1kon().s[17]++, process.env.NODE_ENV === 'development');
    const errorMessage =
    /* istanbul ignore next */
    (cov_1k2hnm1kon().s[18]++, isDevelopment ?
    /* istanbul ignore next */
    (cov_1k2hnm1kon().b[3][0]++, err.message) :
    /* istanbul ignore next */
    (cov_1k2hnm1kon().b[3][1]++, 'Internal server error'));
    /* istanbul ignore next */
    cov_1k2hnm1kon().s[19]++;
    res.status(500).json({
      error: errorMessage,
      ...(
      /* istanbul ignore next */
      (cov_1k2hnm1kon().b[4][0]++, isDevelopment) &&
      /* istanbul ignore next */
      (cov_1k2hnm1kon().b[4][1]++, {
        stack: err.stack
      }))
    });
  });
  /* istanbul ignore next */
  cov_1k2hnm1kon().s[20]++;
  return app;
}