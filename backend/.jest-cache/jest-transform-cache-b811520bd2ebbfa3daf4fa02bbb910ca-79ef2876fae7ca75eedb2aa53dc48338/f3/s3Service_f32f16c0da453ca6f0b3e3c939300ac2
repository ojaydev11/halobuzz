61066428f361c82e7fe44f556592021b
"use strict";

/* istanbul ignore next */
function cov_1sb54jc9qm() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\s3Service.ts";
  var hash = "fb2e3af4097424ac5e65d05cc276e3086ce0daa7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\s3Service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 47
        }
      },
      "2": {
        start: {
          line: 4,
          column: 20
        },
        end: {
          line: 4,
          column: 49
        }
      },
      "3": {
        start: {
          line: 5,
          column: 31
        },
        end: {
          line: 5,
          column: 71
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 73
        }
      },
      "6": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 19,
          column: 11
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "8": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 99
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "10": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 34,
          column: 13
        }
      },
      "11": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 91
        }
      },
      "12": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 80
        }
      },
      "13": {
        start: {
          line: 35,
          column: 37
        },
        end: {
          line: 43,
          column: 14
        }
      },
      "14": {
        start: {
          line: 44,
          column: 33
        },
        end: {
          line: 46,
          column: 14
        }
      },
      "15": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 87
        }
      },
      "16": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 32
        }
      },
      "17": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 85
        }
      },
      "18": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 61
        }
      },
      "19": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "20": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "21": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 91
        }
      },
      "22": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 80
        }
      },
      "23": {
        start: {
          line: 65,
          column: 37
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "24": {
        start: {
          line: 69,
          column: 33
        },
        end: {
          line: 71,
          column: 14
        }
      },
      "25": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 85
        }
      },
      "26": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 32
        }
      },
      "27": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 83
        }
      },
      "28": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 59
        }
      },
      "29": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "30": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "31": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 93
        }
      },
      "32": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 28
        }
      },
      "33": {
        start: {
          line: 90,
          column: 38
        },
        end: {
          line: 93,
          column: 14
        }
      },
      "34": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 56
        }
      },
      "35": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 24
        }
      },
      "36": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "37": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 29
        }
      },
      "38": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 76
        }
      },
      "39": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 62
        }
      },
      "40": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "41": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "42": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 91
        }
      },
      "43": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 29
        }
      },
      "44": {
        start: {
          line: 115,
          column: 40
        },
        end: {
          line: 118,
          column: 14
        }
      },
      "45": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 58
        }
      },
      "46": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 69
        }
      },
      "47": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 24
        }
      },
      "48": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 67
        }
      },
      "49": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 53
        }
      },
      "50": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "51": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "52": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 96
        }
      },
      "53": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 140,
          column: 18
        }
      },
      "54": {
        start: {
          line: 142,
          column: 38
        },
        end: {
          line: 145,
          column: 14
        }
      },
      "55": {
        start: {
          line: 146,
          column: 29
        },
        end: {
          line: 146,
          column: 72
        }
      },
      "56": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 152,
          column: 14
        }
      },
      "57": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 73
        }
      },
      "58": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 59
        }
      },
      "59": {
        start: {
          line: 160,
          column: 0
        },
        end: {
          line: 160,
          column: 30
        }
      },
      "60": {
        start: {
          line: 162,
          column: 0
        },
        end: {
          line: 162,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 74
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 63
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 58
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 30
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 83
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 30
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 108
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 35
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 131
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 26
          },
          end: {
            line: 11,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 26
          },
          end: {
            line: 11,
            column: 52
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 72
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 42
          }
        }, {
          start: {
            line: 14,
            column: 46
          },
          end: {
            line: 14,
            column: 57
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 16,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 16,
            column: 58
          }
        }, {
          start: {
            line: 16,
            column: 62
          },
          end: {
            line: 16,
            column: 64
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 33
          },
          end: {
            line: 17,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 33
          },
          end: {
            line: 17,
            column: 66
          }
        }, {
          start: {
            line: 17,
            column: 70
          },
          end: {
            line: 17,
            column: 72
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 42
          }
        }, {
          start: {
            line: 21,
            column: 46
          },
          end: {
            line: 21,
            column: 80
          }
        }],
        line: 21
      },
      "6": {
        loc: {
          start: {
            line: 28,
            column: 59
          },
          end: {
            line: 28,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 70
          },
          end: {
            line: 28,
            column: 72
          }
        }],
        line: 28
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 31,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 31,
            column: 46
          }
        }, {
          start: {
            line: 31,
            column: 50
          },
          end: {
            line: 31,
            column: 84
          }
        }],
        line: 31
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 44
          },
          end: {
            line: 58,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 58,
            column: 56
          },
          end: {
            line: 58,
            column: 61
          }
        }],
        line: 58
      },
      "10": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "11": {
        loc: {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 61,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 61,
            column: 46
          }
        }, {
          start: {
            line: 61,
            column: 50
          },
          end: {
            line: 61,
            column: 84
          }
        }],
        line: 61
      },
      "12": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "13": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 86,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 86,
            column: 46
          }
        }, {
          start: {
            line: 86,
            column: 50
          },
          end: {
            line: 86,
            column: 84
          }
        }],
        line: 86
      },
      "14": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "15": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "16": {
        loc: {
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 46
          }
        }, {
          start: {
            line: 111,
            column: 50
          },
          end: {
            line: 111,
            column: 84
          }
        }],
        line: 111
      },
      "17": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "18": {
        loc: {
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 134,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 134,
            column: 46
          }
        }, {
          start: {
            line: 134,
            column: 50
          },
          end: {
            line: 134,
            column: 84
          }
        }],
        line: 134
      },
      "19": {
        loc: {
          start: {
            line: 148,
            column: 22
          },
          end: {
            line: 148,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 22
          },
          end: {
            line: 148,
            column: 44
          }
        }, {
          start: {
            line: 148,
            column: 48
          },
          end: {
            line: 148,
            column: 49
          }
        }],
        line: 148
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fb2e3af4097424ac5e65d05cc276e3086ce0daa7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1sb54jc9qm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1sb54jc9qm();
cov_1sb54jc9qm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1sb54jc9qm().s[1]++;
exports.s3Service = exports.S3Service = void 0;
const client_s3_1 =
/* istanbul ignore next */
(cov_1sb54jc9qm().s[2]++, require("@aws-sdk/client-s3"));
const s3_request_presigner_1 =
/* istanbul ignore next */
(cov_1sb54jc9qm().s[3]++, require("@aws-sdk/s3-request-presigner"));
const logger_1 =
/* istanbul ignore next */
(cov_1sb54jc9qm().s[4]++, require("../config/logger"));
class S3Service {
  s3Client;
  bucketName;
  constructor() {
    /* istanbul ignore next */
    cov_1sb54jc9qm().f[0]++;
    cov_1sb54jc9qm().s[5]++;
    this.bucketName =
    /* istanbul ignore next */
    (cov_1sb54jc9qm().b[0][0]++, process.env.S3_BUCKET_NAME) ||
    /* istanbul ignore next */
    (cov_1sb54jc9qm().b[0][1]++, 'halobuzz-media');
    // Initialize S3 client with proper configuration
    /* istanbul ignore next */
    cov_1sb54jc9qm().s[6]++;
    this.s3Client = new client_s3_1.S3Client({
      region:
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[1][0]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[1][1]++, 'us-east-1'),
      credentials: {
        accessKeyId:
        /* istanbul ignore next */
        (cov_1sb54jc9qm().b[2][0]++, process.env.AWS_ACCESS_KEY_ID) ||
        /* istanbul ignore next */
        (cov_1sb54jc9qm().b[2][1]++, ''),
        secretAccessKey:
        /* istanbul ignore next */
        (cov_1sb54jc9qm().b[3][0]++, process.env.AWS_SECRET_ACCESS_KEY) ||
        /* istanbul ignore next */
        (cov_1sb54jc9qm().b[3][1]++, '')
      }
    });
    // Validate configuration
    /* istanbul ignore next */
    cov_1sb54jc9qm().s[7]++;
    if (
    /* istanbul ignore next */
    (cov_1sb54jc9qm().b[5][0]++, !process.env.AWS_ACCESS_KEY_ID) ||
    /* istanbul ignore next */
    (cov_1sb54jc9qm().b[5][1]++, !process.env.AWS_SECRET_ACCESS_KEY)) {
      /* istanbul ignore next */
      cov_1sb54jc9qm().b[4][0]++;
      cov_1sb54jc9qm().s[8]++;
      logger_1.logger.warn('AWS credentials not configured - S3 service will use mock URLs');
    } else
    /* istanbul ignore next */
    {
      cov_1sb54jc9qm().b[4][1]++;
    }
  }
  /**
   * Generate presigned URL for file upload
   */
  async generatePresignedUploadUrl(fileKey, contentType, metadata =
  /* istanbul ignore next */
  (cov_1sb54jc9qm().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_1sb54jc9qm().f[1]++;
    cov_1sb54jc9qm().s[9]++;
    try {
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[10]++;
      // Check if AWS credentials are configured
      if (
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[8][0]++, !process.env.AWS_ACCESS_KEY_ID) ||
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[8][1]++, !process.env.AWS_SECRET_ACCESS_KEY)) {
        /* istanbul ignore next */
        cov_1sb54jc9qm().b[7][0]++;
        cov_1sb54jc9qm().s[11]++;
        logger_1.logger.warn('AWS credentials not configured, returning mock URL');
        /* istanbul ignore next */
        cov_1sb54jc9qm().s[12]++;
        return `https://${this.bucketName}.s3.amazonaws.com/${fileKey}`;
      } else
      /* istanbul ignore next */
      {
        cov_1sb54jc9qm().b[7][1]++;
      }
      const putObjectCommand =
      /* istanbul ignore next */
      (cov_1sb54jc9qm().s[13]++, new client_s3_1.PutObjectCommand({
        Bucket: this.bucketName,
        Key: fileKey,
        ContentType: contentType,
        Metadata: {
          ...metadata,
          uploadedAt: new Date().toISOString()
        }
      }));
      const presignedUrl =
      /* istanbul ignore next */
      (cov_1sb54jc9qm().s[14]++, await (0, s3_request_presigner_1.getSignedUrl)(this.s3Client, putObjectCommand, {
        expiresIn: 3600 // 1 hour
      }));
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[15]++;
      logger_1.logger.info(`Generated presigned upload URL for key: ${fileKey}`);
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[16]++;
      return presignedUrl;
    } catch (error) {
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[17]++;
      logger_1.logger.error('Failed to generate presigned upload URL:', error);
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[18]++;
      throw new Error('Failed to generate upload URL');
    }
  }
  /**
   * Generate presigned URL for file download/viewing
   */
  async generatePresignedViewUrl(fileKey, expiresIn =
  /* istanbul ignore next */
  (cov_1sb54jc9qm().b[9][0]++, 86400)) {
    /* istanbul ignore next */
    cov_1sb54jc9qm().f[2]++;
    cov_1sb54jc9qm().s[19]++;
    try {
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[20]++;
      // Check if AWS credentials are configured
      if (
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[11][0]++, !process.env.AWS_ACCESS_KEY_ID) ||
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[11][1]++, !process.env.AWS_SECRET_ACCESS_KEY)) {
        /* istanbul ignore next */
        cov_1sb54jc9qm().b[10][0]++;
        cov_1sb54jc9qm().s[21]++;
        logger_1.logger.warn('AWS credentials not configured, returning mock URL');
        /* istanbul ignore next */
        cov_1sb54jc9qm().s[22]++;
        return `https://${this.bucketName}.s3.amazonaws.com/${fileKey}`;
      } else
      /* istanbul ignore next */
      {
        cov_1sb54jc9qm().b[10][1]++;
      }
      const getObjectCommand =
      /* istanbul ignore next */
      (cov_1sb54jc9qm().s[23]++, new client_s3_1.GetObjectCommand({
        Bucket: this.bucketName,
        Key: fileKey
      }));
      const presignedUrl =
      /* istanbul ignore next */
      (cov_1sb54jc9qm().s[24]++, await (0, s3_request_presigner_1.getSignedUrl)(this.s3Client, getObjectCommand, {
        expiresIn
      }));
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[25]++;
      logger_1.logger.info(`Generated presigned view URL for key: ${fileKey}`);
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[26]++;
      return presignedUrl;
    } catch (error) {
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[27]++;
      logger_1.logger.error('Failed to generate presigned view URL:', error);
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[28]++;
      throw new Error('Failed to generate view URL');
    }
  }
  /**
   * Check if file exists in S3
   */
  async fileExists(fileKey) {
    /* istanbul ignore next */
    cov_1sb54jc9qm().f[3]++;
    cov_1sb54jc9qm().s[29]++;
    try {
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[30]++;
      // Check if AWS credentials are configured
      if (
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[13][0]++, !process.env.AWS_ACCESS_KEY_ID) ||
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[13][1]++, !process.env.AWS_SECRET_ACCESS_KEY)) {
        /* istanbul ignore next */
        cov_1sb54jc9qm().b[12][0]++;
        cov_1sb54jc9qm().s[31]++;
        logger_1.logger.warn('AWS credentials not configured, assuming file exists');
        /* istanbul ignore next */
        cov_1sb54jc9qm().s[32]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_1sb54jc9qm().b[12][1]++;
      }
      const headObjectCommand =
      /* istanbul ignore next */
      (cov_1sb54jc9qm().s[33]++, new client_s3_1.HeadObjectCommand({
        Bucket: this.bucketName,
        Key: fileKey
      }));
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[34]++;
      await this.s3Client.send(headObjectCommand);
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[35]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[36]++;
      if (error.name === 'NotFound') {
        /* istanbul ignore next */
        cov_1sb54jc9qm().b[14][0]++;
        cov_1sb54jc9qm().s[37]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1sb54jc9qm().b[14][1]++;
      }
      cov_1sb54jc9qm().s[38]++;
      logger_1.logger.error('Failed to check file existence:', error);
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[39]++;
      throw new Error('Failed to check file existence');
    }
  }
  /**
   * Delete file from S3
   */
  async deleteFile(fileKey) {
    /* istanbul ignore next */
    cov_1sb54jc9qm().f[4]++;
    cov_1sb54jc9qm().s[40]++;
    try {
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[41]++;
      // Check if AWS credentials are configured
      if (
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[16][0]++, !process.env.AWS_ACCESS_KEY_ID) ||
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[16][1]++, !process.env.AWS_SECRET_ACCESS_KEY)) {
        /* istanbul ignore next */
        cov_1sb54jc9qm().b[15][0]++;
        cov_1sb54jc9qm().s[42]++;
        logger_1.logger.warn('AWS credentials not configured, cannot delete file');
        /* istanbul ignore next */
        cov_1sb54jc9qm().s[43]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1sb54jc9qm().b[15][1]++;
      }
      const deleteObjectCommand =
      /* istanbul ignore next */
      (cov_1sb54jc9qm().s[44]++, new client_s3_1.PutObjectCommand({
        Bucket: this.bucketName,
        Key: fileKey
      }));
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[45]++;
      await this.s3Client.send(deleteObjectCommand);
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[46]++;
      logger_1.logger.info(`Deleted file from S3: ${fileKey}`);
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[47]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[48]++;
      logger_1.logger.error('Failed to delete file:', error);
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[49]++;
      throw new Error('Failed to delete file');
    }
  }
  /**
   * Get file metadata
   */
  async getFileMetadata(fileKey) {
    /* istanbul ignore next */
    cov_1sb54jc9qm().f[5]++;
    cov_1sb54jc9qm().s[50]++;
    try {
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[51]++;
      // Check if AWS credentials are configured
      if (
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[18][0]++, !process.env.AWS_ACCESS_KEY_ID) ||
      /* istanbul ignore next */
      (cov_1sb54jc9qm().b[18][1]++, !process.env.AWS_SECRET_ACCESS_KEY)) {
        /* istanbul ignore next */
        cov_1sb54jc9qm().b[17][0]++;
        cov_1sb54jc9qm().s[52]++;
        logger_1.logger.warn('AWS credentials not configured, returning mock metadata');
        /* istanbul ignore next */
        cov_1sb54jc9qm().s[53]++;
        return {
          size: 0,
          lastModified: new Date(),
          contentType: 'application/octet-stream'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1sb54jc9qm().b[17][1]++;
      }
      const headObjectCommand =
      /* istanbul ignore next */
      (cov_1sb54jc9qm().s[54]++, new client_s3_1.HeadObjectCommand({
        Bucket: this.bucketName,
        Key: fileKey
      }));
      const response =
      /* istanbul ignore next */
      (cov_1sb54jc9qm().s[55]++, await this.s3Client.send(headObjectCommand));
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[56]++;
      return {
        size:
        /* istanbul ignore next */
        (cov_1sb54jc9qm().b[19][0]++, response.ContentLength) ||
        /* istanbul ignore next */
        (cov_1sb54jc9qm().b[19][1]++, 0),
        lastModified: response.LastModified,
        contentType: response.ContentType,
        metadata: response.Metadata
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[57]++;
      logger_1.logger.error('Failed to get file metadata:', error);
      /* istanbul ignore next */
      cov_1sb54jc9qm().s[58]++;
      throw new Error('Failed to get file metadata');
    }
  }
}
/* istanbul ignore next */
cov_1sb54jc9qm().s[59]++;
exports.S3Service = S3Service;
// Export singleton instance
/* istanbul ignore next */
cov_1sb54jc9qm().s[60]++;
exports.s3Service = new S3Service();