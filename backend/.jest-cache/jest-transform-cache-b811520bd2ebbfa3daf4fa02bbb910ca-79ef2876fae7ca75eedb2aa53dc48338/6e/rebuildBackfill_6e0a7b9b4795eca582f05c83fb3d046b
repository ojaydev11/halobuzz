180d19461f35184b3a2cbcd842918822
"use strict";

/* istanbul ignore next */
function cov_1mrciynv2s() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\analytics\\etl\\rebuildBackfill.ts";
  var hash = "5ffd97f0ae204a90f291275e4b6f94bff182b3b0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\analytics\\etl\\rebuildBackfill.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 36
        }
      },
      "37": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 37,
          column: 47
        }
      },
      "38": {
        start: {
          line: 38,
          column: 22
        },
        end: {
          line: 38,
          column: 46
        }
      },
      "39": {
        start: {
          line: 39,
          column: 15
        },
        end: {
          line: 39,
          column: 43
        }
      },
      "40": {
        start: {
          line: 40,
          column: 21
        },
        end: {
          line: 40,
          column: 55
        }
      },
      "41": {
        start: {
          line: 41,
          column: 22
        },
        end: {
          line: 41,
          column: 57
        }
      },
      "42": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 71
        }
      },
      "43": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 62
        }
      },
      "44": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 48
        }
      },
      "45": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 48
        }
      },
      "46": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "47": {
        start: {
          line: 58,
          column: 26
        },
        end: {
          line: 58,
          column: 36
        }
      },
      "48": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 53
        }
      },
      "49": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 39
        }
      },
      "50": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 25
        }
      },
      "51": {
        start: {
          line: 64,
          column: 26
        },
        end: {
          line: 64,
          column: 36
        }
      },
      "52": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 51
        }
      },
      "53": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 44
        }
      },
      "54": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 25
        }
      },
      "55": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "56": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 77,
          column: 15
        }
      },
      "57": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "58": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 44
        }
      },
      "59": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 23
        }
      },
      "60": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 43
        }
      },
      "61": {
        start: {
          line: 85,
          column: 30
        },
        end: {
          line: 85,
          column: 116
        }
      },
      "62": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 86,
          column: 70
        }
      },
      "63": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 92
        }
      },
      "64": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "65": {
        start: {
          line: 88,
          column: 29
        },
        end: {
          line: 88,
          column: 30
        }
      },
      "66": {
        start: {
          line: 89,
          column: 35
        },
        end: {
          line: 89,
          column: 64
        }
      },
      "67": {
        start: {
          line: 90,
          column: 33
        },
        end: {
          line: 90,
          column: 65
        }
      },
      "68": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 94,
          column: 19
        }
      },
      "69": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 62
        }
      },
      "70": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "71": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 98,
          column: 43
        }
      },
      "72": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 107,
          column: 15
        }
      },
      "73": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 73
        }
      },
      "74": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 24
        }
      },
      "75": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 60
        }
      },
      "76": {
        start: {
          line: 117,
          column: 26
        },
        end: {
          line: 120,
          column: 10
        }
      },
      "77": {
        start: {
          line: 121,
          column: 28
        },
        end: {
          line: 124,
          column: 10
        }
      },
      "78": {
        start: {
          line: 125,
          column: 33
        },
        end: {
          line: 128,
          column: 10
        }
      },
      "79": {
        start: {
          line: 129,
          column: 26
        },
        end: {
          line: 129,
          column: 112
        }
      },
      "80": {
        start: {
          line: 130,
          column: 29
        },
        end: {
          line: 130,
          column: 66
        }
      },
      "81": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "82": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 148,
          column: 11
        }
      },
      "83": {
        start: {
          line: 149,
          column: 38
        },
        end: {
          line: 149,
          column: 126
        }
      },
      "84": {
        start: {
          line: 149,
          column: 73
        },
        end: {
          line: 149,
          column: 125
        }
      },
      "85": {
        start: {
          line: 150,
          column: 36
        },
        end: {
          line: 150,
          column: 122
        }
      },
      "86": {
        start: {
          line: 150,
          column: 71
        },
        end: {
          line: 150,
          column: 121
        }
      },
      "87": {
        start: {
          line: 151,
          column: 45
        },
        end: {
          line: 151,
          column: 140
        }
      },
      "88": {
        start: {
          line: 151,
          column: 80
        },
        end: {
          line: 151,
          column: 139
        }
      },
      "89": {
        start: {
          line: 152,
          column: 33
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "90": {
        start: {
          line: 156,
          column: 57
        },
        end: {
          line: 160,
          column: 10
        }
      },
      "91": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 165,
          column: 11
        }
      },
      "92": {
        start: {
          line: 168,
          column: 27
        },
        end: {
          line: 168,
          column: 51
        }
      },
      "93": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 81
        }
      },
      "94": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 40
        }
      },
      "95": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 26
        }
      },
      "96": {
        start: {
          line: 174,
          column: 25
        },
        end: {
          line: 174,
          column: 45
        }
      },
      "97": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 66
        }
      },
      "98": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 43
        }
      },
      "99": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "100": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 53
        }
      },
      "101": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 24
        }
      },
      "102": {
        start: {
          line: 184,
          column: 28
        },
        end: {
          line: 184,
          column: 48
        }
      },
      "103": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "104": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "105": {
        start: {
          line: 187,
          column: 33
        },
        end: {
          line: 191,
          column: 18
        }
      },
      "106": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 41
        }
      },
      "107": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 63
        }
      },
      "108": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 101
        }
      },
      "109": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 63
        }
      },
      "110": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 63
        }
      },
      "111": {
        start: {
          line: 204,
          column: 38
        },
        end: {
          line: 204,
          column: 61
        }
      },
      "112": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 63
        }
      },
      "113": {
        start: {
          line: 209,
          column: 24
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "114": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 73
        }
      },
      "115": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 23
        }
      },
      "116": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 247,
          column: 11
        }
      },
      "117": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 260,
          column: 11
        }
      },
      "118": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 272,
          column: 11
        }
      },
      "119": {
        start: {
          line: 275,
          column: 0
        },
        end: {
          line: 275,
          column: 48
        }
      },
      "120": {
        start: {
          line: 276,
          column: 0
        },
        end: {
          line: 276,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 30
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 48
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 24
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 55
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 19
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 63
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 69
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 27
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 114
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 30
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 143
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 149,
            column: 67
          },
          end: {
            line: 149,
            column: 68
          }
        },
        loc: {
          start: {
            line: 149,
            column: 73
          },
          end: {
            line: 149,
            column: 125
          }
        },
        line: 149
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 150,
            column: 65
          },
          end: {
            line: 150,
            column: 66
          }
        },
        loc: {
          start: {
            line: 150,
            column: 71
          },
          end: {
            line: 150,
            column: 121
          }
        },
        line: 150
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 151,
            column: 74
          },
          end: {
            line: 151,
            column: 75
          }
        },
        loc: {
          start: {
            line: 151,
            column: 80
          },
          end: {
            line: 151,
            column: 139
          }
        },
        line: 151
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 34
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 167
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        loc: {
          start: {
            line: 173,
            column: 32
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 173
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 45
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 183
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 14
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 203
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 204,
            column: 27
          },
          end: {
            line: 204,
            column: 28
          }
        },
        loc: {
          start: {
            line: 204,
            column: 38
          },
          end: {
            line: 204,
            column: 61
          }
        },
        line: 204
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 34
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 207
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        },
        loc: {
          start: {
            line: 238,
            column: 38
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 238
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        loc: {
          start: {
            line: 249,
            column: 40
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 249
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        loc: {
          start: {
            line: 262,
            column: 45
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 262
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 48,
            column: 28
          }
        }],
        line: 48
      },
      "18": {
        loc: {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 42
          }
        }, {
          start: {
            line: 49,
            column: 46
          },
          end: {
            line: 49,
            column: 70
          }
        }],
        line: 49
      },
      "19": {
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 38
          }
        }, {
          start: {
            line: 50,
            column: 42
          },
          end: {
            line: 50,
            column: 61
          }
        }],
        line: 50
      },
      "20": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 38
          }
        }, {
          start: {
            line: 51,
            column: 42
          },
          end: {
            line: 51,
            column: 47
          }
        }],
        line: 51
      },
      "21": {
        loc: {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 42
          }
        }, {
          start: {
            line: 52,
            column: 46
          },
          end: {
            line: 52,
            column: 47
          }
        }],
        line: 52
      },
      "22": {
        loc: {
          start: {
            line: 53,
            column: 22
          },
          end: {
            line: 53,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 22
          },
          end: {
            line: 53,
            column: 36
          }
        }, {
          start: {
            line: 53,
            column: 40
          },
          end: {
            line: 53,
            column: 45
          }
        }],
        line: 53
      },
      "23": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "24": {
        loc: {
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "25": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 119,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 119,
            column: 38
          }
        }, {
          start: {
            line: 119,
            column: 42
          },
          end: {
            line: 119,
            column: 67
          }
        }],
        line: 119
      },
      "26": {
        loc: {
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 123,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 123,
            column: 38
          }
        }, {
          start: {
            line: 123,
            column: 42
          },
          end: {
            line: 123,
            column: 67
          }
        }],
        line: 123
      },
      "27": {
        loc: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 38
          }
        }, {
          start: {
            line: 127,
            column: 42
          },
          end: {
            line: 127,
            column: 67
          }
        }],
        line: 127
      },
      "28": {
        loc: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 38
          }
        }, {
          start: {
            line: 154,
            column: 42
          },
          end: {
            line: 154,
            column: 67
          }
        }],
        line: 154
      },
      "29": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "30": {
        loc: {
          start: {
            line: 218,
            column: 24
          },
          end: {
            line: 218,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 24
          },
          end: {
            line: 218,
            column: 46
          }
        }, {
          start: {
            line: 218,
            column: 50
          },
          end: {
            line: 218,
            column: 75
          }
        }],
        line: 218
      },
      "31": {
        loc: {
          start: {
            line: 222,
            column: 24
          },
          end: {
            line: 222,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 24
          },
          end: {
            line: 222,
            column: 46
          }
        }, {
          start: {
            line: 222,
            column: 50
          },
          end: {
            line: 222,
            column: 75
          }
        }],
        line: 222
      },
      "32": {
        loc: {
          start: {
            line: 226,
            column: 24
          },
          end: {
            line: 226,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 24
          },
          end: {
            line: 226,
            column: 46
          }
        }, {
          start: {
            line: 226,
            column: 50
          },
          end: {
            line: 226,
            column: 75
          }
        }],
        line: 226
      },
      "33": {
        loc: {
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 246,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 246,
            column: 38
          }
        }, {
          start: {
            line: 246,
            column: 42
          },
          end: {
            line: 246,
            column: 67
          }
        }],
        line: 246
      },
      "34": {
        loc: {
          start: {
            line: 259,
            column: 16
          },
          end: {
            line: 259,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 16
          },
          end: {
            line: 259,
            column: 38
          }
        }, {
          start: {
            line: 259,
            column: 42
          },
          end: {
            line: 259,
            column: 67
          }
        }],
        line: 259
      },
      "35": {
        loc: {
          start: {
            line: 271,
            column: 16
          },
          end: {
            line: 271,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 16
          },
          end: {
            line: 271,
            column: 38
          }
        }, {
          start: {
            line: 271,
            column: 42
          },
          end: {
            line: 271,
            column: 67
          }
        }],
        line: 271
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5ffd97f0ae204a90f291275e4b6f94bff182b3b0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mrciynv2s = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mrciynv2s();
var __createBinding =
/* istanbul ignore next */
(cov_1mrciynv2s().s[0]++,
/* istanbul ignore next */
(cov_1mrciynv2s().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1mrciynv2s().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1mrciynv2s().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1mrciynv2s().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1mrciynv2s().f[0]++;
  cov_1mrciynv2s().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1mrciynv2s().b[2][0]++;
    cov_1mrciynv2s().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1mrciynv2s().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1mrciynv2s().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1mrciynv2s().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1mrciynv2s().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1mrciynv2s().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1mrciynv2s().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1mrciynv2s().b[5][1]++,
  /* istanbul ignore next */
  (cov_1mrciynv2s().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1mrciynv2s().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1mrciynv2s().b[3][0]++;
    cov_1mrciynv2s().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1mrciynv2s().f[1]++;
        cov_1mrciynv2s().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1mrciynv2s().b[3][1]++;
  }
  cov_1mrciynv2s().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1mrciynv2s().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1mrciynv2s().f[2]++;
  cov_1mrciynv2s().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1mrciynv2s().b[7][0]++;
    cov_1mrciynv2s().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1mrciynv2s().b[7][1]++;
  }
  cov_1mrciynv2s().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1mrciynv2s().s[11]++,
/* istanbul ignore next */
(cov_1mrciynv2s().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1mrciynv2s().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1mrciynv2s().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1mrciynv2s().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1mrciynv2s().f[3]++;
  cov_1mrciynv2s().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1mrciynv2s().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1mrciynv2s().f[4]++;
  cov_1mrciynv2s().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1mrciynv2s().s[14]++,
/* istanbul ignore next */
(cov_1mrciynv2s().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1mrciynv2s().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1mrciynv2s().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1mrciynv2s().f[5]++;
  cov_1mrciynv2s().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[6]++;
    cov_1mrciynv2s().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1mrciynv2s().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1mrciynv2s().s[17]++, []);
      /* istanbul ignore next */
      cov_1mrciynv2s().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1mrciynv2s().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1mrciynv2s().b[12][0]++;
          cov_1mrciynv2s().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1mrciynv2s().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1mrciynv2s().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1mrciynv2s().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1mrciynv2s().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[8]++;
    cov_1mrciynv2s().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1mrciynv2s().b[13][0]++;
      cov_1mrciynv2s().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1mrciynv2s().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[26]++, {});
    /* istanbul ignore next */
    cov_1mrciynv2s().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1mrciynv2s().b[15][0]++;
      cov_1mrciynv2s().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1mrciynv2s().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1mrciynv2s().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1mrciynv2s().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1mrciynv2s().b[16][0]++;
          cov_1mrciynv2s().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1mrciynv2s().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1mrciynv2s().b[15][1]++;
    }
    cov_1mrciynv2s().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1mrciynv2s().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_1mrciynv2s().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1mrciynv2s().s[36]++;
exports.RebuildBackfillETL = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_1mrciynv2s().s[37]++, require("../../config/logger"));
const dailyRollup_1 =
/* istanbul ignore next */
(cov_1mrciynv2s().s[38]++, require("./dailyRollup"));
const User_1 =
/* istanbul ignore next */
(cov_1mrciynv2s().s[39]++, require("../../models/User"));
const LiveStream_1 =
/* istanbul ignore next */
(cov_1mrciynv2s().s[40]++, require("../../models/LiveStream"));
const Transaction_1 =
/* istanbul ignore next */
(cov_1mrciynv2s().s[41]++, require("../../models/Transaction"));
class RebuildBackfillETL {
  startDate;
  endDate;
  country;
  batchSize;
  dryRun;
  constructor(options =
  /* istanbul ignore next */
  (cov_1mrciynv2s().b[17][0]++, {})) {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[9]++;
    cov_1mrciynv2s().s[42]++;
    this.startDate =
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[18][0]++, options.startDate) ||
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[18][1]++, this.getFirstEventDate());
    /* istanbul ignore next */
    cov_1mrciynv2s().s[43]++;
    this.endDate =
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[19][0]++, options.endDate) ||
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[19][1]++, this.getYesterday());
    /* istanbul ignore next */
    cov_1mrciynv2s().s[44]++;
    this.country =
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[20][0]++, options.country) ||
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[20][1]++, 'ALL');
    /* istanbul ignore next */
    cov_1mrciynv2s().s[45]++;
    this.batchSize =
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[21][0]++, options.batchSize) ||
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[21][1]++, 7); // Process 7 days at a time
    /* istanbul ignore next */
    cov_1mrciynv2s().s[46]++;
    this.dryRun =
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[22][0]++, options.dryRun) ||
    /* istanbul ignore next */
    (cov_1mrciynv2s().b[22][1]++, false);
  }
  getFirstEventDate() {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[10]++;
    // This would typically query the earliest event date from your data
    // For now, we'll use a reasonable default
    const firstDate =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[47]++, new Date());
    /* istanbul ignore next */
    cov_1mrciynv2s().s[48]++;
    firstDate.setDate(firstDate.getDate() - 365); // 1 year ago
    /* istanbul ignore next */
    cov_1mrciynv2s().s[49]++;
    firstDate.setHours(0, 0, 0, 0);
    /* istanbul ignore next */
    cov_1mrciynv2s().s[50]++;
    return firstDate;
  }
  getYesterday() {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[11]++;
    const yesterday =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[51]++, new Date());
    /* istanbul ignore next */
    cov_1mrciynv2s().s[52]++;
    yesterday.setDate(yesterday.getDate() - 1);
    /* istanbul ignore next */
    cov_1mrciynv2s().s[53]++;
    yesterday.setHours(23, 59, 59, 999);
    /* istanbul ignore next */
    cov_1mrciynv2s().s[54]++;
    return yesterday;
  }
  async execute() {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[12]++;
    cov_1mrciynv2s().s[55]++;
    try {
      /* istanbul ignore next */
      cov_1mrciynv2s().s[56]++;
      logger_1.logger.info('Starting rebuild backfill ETL', {
        startDate: this.startDate,
        endDate: this.endDate,
        country: this.country,
        batchSize: this.batchSize,
        dryRun: this.dryRun
      });
      /* istanbul ignore next */
      cov_1mrciynv2s().s[57]++;
      if (this.dryRun) {
        /* istanbul ignore next */
        cov_1mrciynv2s().b[23][0]++;
        cov_1mrciynv2s().s[58]++;
        await this.dryRunAnalysis();
        /* istanbul ignore next */
        cov_1mrciynv2s().s[59]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1mrciynv2s().b[23][1]++;
      }
      // Clear existing analytics data for the date range
      cov_1mrciynv2s().s[60]++;
      await this.clearExistingData();
      // Process data in batches
      const totalDays =
      /* istanbul ignore next */
      (cov_1mrciynv2s().s[61]++, Math.ceil((this.endDate.getTime() - this.startDate.getTime()) / (1000 * 60 * 60 * 24)));
      const totalBatches =
      /* istanbul ignore next */
      (cov_1mrciynv2s().s[62]++, Math.ceil(totalDays / this.batchSize));
      /* istanbul ignore next */
      cov_1mrciynv2s().s[63]++;
      logger_1.logger.info(`Processing ${totalDays} days in ${totalBatches} batches`);
      /* istanbul ignore next */
      cov_1mrciynv2s().s[64]++;
      for (let batch =
      /* istanbul ignore next */
      (cov_1mrciynv2s().s[65]++, 0); batch < totalBatches; batch++) {
        const batchStart =
        /* istanbul ignore next */
        (cov_1mrciynv2s().s[66]++, this.getBatchStartDate(batch));
        const batchEnd =
        /* istanbul ignore next */
        (cov_1mrciynv2s().s[67]++, this.getBatchEndDate(batchStart));
        /* istanbul ignore next */
        cov_1mrciynv2s().s[68]++;
        logger_1.logger.info(`Processing batch ${batch + 1}/${totalBatches}`, {
          batchStart,
          batchEnd
        });
        /* istanbul ignore next */
        cov_1mrciynv2s().s[69]++;
        await this.processBatch(batchStart, batchEnd);
        // Add delay between batches to prevent overwhelming the database
        /* istanbul ignore next */
        cov_1mrciynv2s().s[70]++;
        if (batch < totalBatches - 1) {
          /* istanbul ignore next */
          cov_1mrciynv2s().b[24][0]++;
          cov_1mrciynv2s().s[71]++;
          await this.delay(1000); // 1 second delay
        } else
        /* istanbul ignore next */
        {
          cov_1mrciynv2s().b[24][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1mrciynv2s().s[72]++;
      logger_1.logger.info('Rebuild backfill ETL completed successfully', {
        startDate: this.startDate,
        endDate: this.endDate,
        country: this.country,
        totalDays,
        totalBatches
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1mrciynv2s().s[73]++;
      logger_1.logger.error('Rebuild backfill ETL failed:', error);
      /* istanbul ignore next */
      cov_1mrciynv2s().s[74]++;
      throw error;
    }
  }
  async dryRunAnalysis() {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[13]++;
    cov_1mrciynv2s().s[75]++;
    logger_1.logger.info('Performing dry run analysis');
    // Analyze data availability
    const userCount =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[76]++, await User_1.User.countDocuments({
      createdAt: {
        $gte: this.startDate,
        $lte: this.endDate
      },
      ...(
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[25][0]++, this.country !== 'ALL') &&
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[25][1]++, {
        country: this.country
      }))
    }));
    const streamCount =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[77]++, await LiveStream_1.LiveStream.countDocuments({
      createdAt: {
        $gte: this.startDate,
        $lte: this.endDate
      },
      ...(
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[26][0]++, this.country !== 'ALL') &&
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[26][1]++, {
        country: this.country
      }))
    }));
    const transactionCount =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[78]++, await Transaction_1.Transaction.countDocuments({
      createdAt: {
        $gte: this.startDate,
        $lte: this.endDate
      },
      ...(
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[27][0]++, this.country !== 'ALL') &&
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[27][1]++, {
        country: this.country
      }))
    }));
    const totalDays =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[79]++, Math.ceil((this.endDate.getTime() - this.startDate.getTime()) / (1000 * 60 * 60 * 24)));
    const totalBatches =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[80]++, Math.ceil(totalDays / this.batchSize));
    /* istanbul ignore next */
    cov_1mrciynv2s().s[81]++;
    logger_1.logger.info('Dry run analysis completed', {
      dateRange: {
        start: this.startDate,
        end: this.endDate
      },
      totalDays,
      totalBatches,
      dataAvailability: {
        users: userCount,
        streams: streamCount,
        transactions: transactionCount
      },
      estimatedProcessingTime: `${totalBatches * 2} minutes` // Rough estimate
    });
  }
  async clearExistingData() {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[14]++;
    cov_1mrciynv2s().s[82]++;
    logger_1.logger.info('Clearing existing analytics data', {
      startDate: this.startDate,
      endDate: this.endDate,
      country: this.country
    });
    const {
      AnalyticsDailyKPI
    } =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[83]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1mrciynv2s().f[15]++;
      cov_1mrciynv2s().s[84]++;
      return __importStar(require('../models/AnalyticsDailyKPI'));
    }));
    const {
      AnalyticsFunnel
    } =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[85]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1mrciynv2s().f[16]++;
      cov_1mrciynv2s().s[86]++;
      return __importStar(require('../models/AnalyticsFunnel'));
    }));
    const {
      AnalyticsHostPerformance
    } =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[87]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1mrciynv2s().f[17]++;
      cov_1mrciynv2s().s[88]++;
      return __importStar(require('../models/AnalyticsHostPerformance'));
    }));
    const deleteConditions =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[89]++, {
      date: {
        $gte: this.startDate,
        $lte: this.endDate
      },
      ...(
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[28][0]++, this.country !== 'ALL') &&
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[28][1]++, {
        country: this.country
      }))
    });
    const [kpiDeleted, funnelDeleted, hostDeleted] =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[90]++, await Promise.all([AnalyticsDailyKPI.deleteMany(deleteConditions), AnalyticsFunnel.deleteMany(deleteConditions), AnalyticsHostPerformance.deleteMany(deleteConditions)]));
    /* istanbul ignore next */
    cov_1mrciynv2s().s[91]++;
    logger_1.logger.info('Existing analytics data cleared', {
      kpiRecordsDeleted: kpiDeleted.deletedCount,
      funnelRecordsDeleted: funnelDeleted.deletedCount,
      hostRecordsDeleted: hostDeleted.deletedCount
    });
  }
  getBatchStartDate(batchIndex) {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[18]++;
    const batchStart =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[92]++, new Date(this.startDate));
    /* istanbul ignore next */
    cov_1mrciynv2s().s[93]++;
    batchStart.setDate(batchStart.getDate() + batchIndex * this.batchSize);
    /* istanbul ignore next */
    cov_1mrciynv2s().s[94]++;
    batchStart.setHours(0, 0, 0, 0);
    /* istanbul ignore next */
    cov_1mrciynv2s().s[95]++;
    return batchStart;
  }
  getBatchEndDate(batchStart) {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[19]++;
    const batchEnd =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[96]++, new Date(batchStart));
    /* istanbul ignore next */
    cov_1mrciynv2s().s[97]++;
    batchEnd.setDate(batchEnd.getDate() + this.batchSize - 1);
    /* istanbul ignore next */
    cov_1mrciynv2s().s[98]++;
    batchEnd.setHours(23, 59, 59, 999);
    // Don't exceed the overall end date
    /* istanbul ignore next */
    cov_1mrciynv2s().s[99]++;
    if (batchEnd > this.endDate) {
      /* istanbul ignore next */
      cov_1mrciynv2s().b[29][0]++;
      cov_1mrciynv2s().s[100]++;
      batchEnd.setTime(this.endDate.getTime());
    } else
    /* istanbul ignore next */
    {
      cov_1mrciynv2s().b[29][1]++;
    }
    cov_1mrciynv2s().s[101]++;
    return batchEnd;
  }
  async processBatch(batchStart, batchEnd) {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[20]++;
    const currentDate =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[102]++, new Date(batchStart));
    /* istanbul ignore next */
    cov_1mrciynv2s().s[103]++;
    while (currentDate <= batchEnd) {
      /* istanbul ignore next */
      cov_1mrciynv2s().s[104]++;
      try {
        const dailyETL =
        /* istanbul ignore next */
        (cov_1mrciynv2s().s[105]++, new dailyRollup_1.DailyRollupETL({
          targetDate: new Date(currentDate),
          country: this.country,
          forceRebuild: true
        }));
        /* istanbul ignore next */
        cov_1mrciynv2s().s[106]++;
        await dailyETL.execute();
        // Move to next day
        /* istanbul ignore next */
        cov_1mrciynv2s().s[107]++;
        currentDate.setDate(currentDate.getDate() + 1);
      } catch (error) {
        /* istanbul ignore next */
        cov_1mrciynv2s().s[108]++;
        logger_1.logger.error(`Failed to process date ${currentDate.toISOString()}:`, error);
        // Continue with next date instead of failing the entire batch
        /* istanbul ignore next */
        cov_1mrciynv2s().s[109]++;
        currentDate.setDate(currentDate.getDate() + 1);
      }
    }
  }
  delay(ms) {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[21]++;
    cov_1mrciynv2s().s[110]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_1mrciynv2s().f[22]++;
      cov_1mrciynv2s().s[111]++;
      return setTimeout(resolve, ms);
    });
  }
  // Utility method to get data quality metrics
  async getDataQualityMetrics() {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[23]++;
    cov_1mrciynv2s().s[112]++;
    logger_1.logger.info('Analyzing data quality metrics');
    const metrics =
    /* istanbul ignore next */
    (cov_1mrciynv2s().s[113]++, {
      dateRange: {
        start: this.startDate,
        end: this.endDate,
        totalDays: Math.ceil((this.endDate.getTime() - this.startDate.getTime()) / (1000 * 60 * 60 * 24))
      },
      dataAvailability: {
        users: await User_1.User.countDocuments({
          createdAt: {
            $gte: this.startDate,
            $lte: this.endDate
          },
          ...(
          /* istanbul ignore next */
          (cov_1mrciynv2s().b[30][0]++, this.country !== 'ALL') &&
          /* istanbul ignore next */
          (cov_1mrciynv2s().b[30][1]++, {
            country: this.country
          }))
        }),
        streams: await LiveStream_1.LiveStream.countDocuments({
          createdAt: {
            $gte: this.startDate,
            $lte: this.endDate
          },
          ...(
          /* istanbul ignore next */
          (cov_1mrciynv2s().b[31][0]++, this.country !== 'ALL') &&
          /* istanbul ignore next */
          (cov_1mrciynv2s().b[31][1]++, {
            country: this.country
          }))
        }),
        transactions: await Transaction_1.Transaction.countDocuments({
          createdAt: {
            $gte: this.startDate,
            $lte: this.endDate
          },
          ...(
          /* istanbul ignore next */
          (cov_1mrciynv2s().b[32][0]++, this.country !== 'ALL') &&
          /* istanbul ignore next */
          (cov_1mrciynv2s().b[32][1]++, {
            country: this.country
          }))
        })
      },
      dataQuality: {
        usersWithMissingData: await this.countUsersWithMissingData(),
        streamsWithMissingData: await this.countStreamsWithMissingData(),
        transactionsWithMissingData: await this.countTransactionsWithMissingData()
      }
    });
    /* istanbul ignore next */
    cov_1mrciynv2s().s[114]++;
    logger_1.logger.info('Data quality metrics calculated', metrics);
    /* istanbul ignore next */
    cov_1mrciynv2s().s[115]++;
    return metrics;
  }
  async countUsersWithMissingData() {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[24]++;
    cov_1mrciynv2s().s[116]++;
    return await User_1.User.countDocuments({
      createdAt: {
        $gte: this.startDate,
        $lte: this.endDate
      },
      $or: [{
        country: {
          $exists: false
        }
      }, {
        country: null
      }, {
        country: ''
      }],
      ...(
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[33][0]++, this.country !== 'ALL') &&
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[33][1]++, {
        country: this.country
      }))
    });
  }
  async countStreamsWithMissingData() {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[25]++;
    cov_1mrciynv2s().s[117]++;
    return await LiveStream_1.LiveStream.countDocuments({
      createdAt: {
        $gte: this.startDate,
        $lte: this.endDate
      },
      $or: [{
        country: {
          $exists: false
        }
      }, {
        country: null
      }, {
        country: ''
      }, {
        duration: {
          $exists: false
        }
      }, {
        duration: null
      }],
      ...(
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[34][0]++, this.country !== 'ALL') &&
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[34][1]++, {
        country: this.country
      }))
    });
  }
  async countTransactionsWithMissingData() {
    /* istanbul ignore next */
    cov_1mrciynv2s().f[26]++;
    cov_1mrciynv2s().s[118]++;
    return await Transaction_1.Transaction.countDocuments({
      createdAt: {
        $gte: this.startDate,
        $lte: this.endDate
      },
      $or: [{
        amount: {
          $exists: false
        }
      }, {
        amount: null
      }, {
        status: {
          $exists: false
        }
      }, {
        status: null
      }],
      ...(
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[35][0]++, this.country !== 'ALL') &&
      /* istanbul ignore next */
      (cov_1mrciynv2s().b[35][1]++, {
        country: this.country
      }))
    });
  }
}
/* istanbul ignore next */
cov_1mrciynv2s().s[119]++;
exports.RebuildBackfillETL = RebuildBackfillETL;
/* istanbul ignore next */
cov_1mrciynv2s().s[120]++;
exports.default = RebuildBackfillETL;