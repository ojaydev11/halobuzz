9c3f3d6c62698b2350af80bd5f6b297c
"use strict";

/* istanbul ignore next */
function cov_2a8m0l84an() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\production-monitoring.ts";
  var hash = "485c5a00697396a7a854c98d57e334dbf94647ff";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\production-monitoring.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 48
        }
      },
      "37": {
        start: {
          line: 37,
          column: 38
        },
        end: {
          line: 37,
          column: 88
        }
      },
      "38": {
        start: {
          line: 38,
          column: 15
        },
        end: {
          line: 38,
          column: 44
        }
      },
      "39": {
        start: {
          line: 39,
          column: 33
        },
        end: {
          line: 39,
          column: 80
        }
      },
      "40": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 40,
          column: 44
        }
      },
      "41": {
        start: {
          line: 41,
          column: 15
        },
        end: {
          line: 41,
          column: 31
        }
      },
      "42": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 68,
          column: 3
        }
      },
      "43": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "44": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 49,
          column: 106
        }
      },
      "45": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "46": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "47": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 62
        }
      },
      "48": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "49": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 95,
          column: 3
        }
      },
      "50": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "51": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 111
        }
      },
      "52": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "53": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "54": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 67
        }
      },
      "55": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "56": {
        start: {
          line: 101,
          column: 0
        },
        end: {
          line: 127,
          column: 3
        }
      },
      "57": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "58": {
        start: {
          line: 103,
          column: 29
        },
        end: {
          line: 103,
          column: 110
        }
      },
      "59": {
        start: {
          line: 104,
          column: 30
        },
        end: {
          line: 108,
          column: 28
        }
      },
      "60": {
        start: {
          line: 104,
          column: 58
        },
        end: {
          line: 104,
          column: 84
        }
      },
      "61": {
        start: {
          line: 106,
          column: 41
        },
        end: {
          line: 106,
          column: 69
        }
      },
      "62": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 113,
          column: 11
        }
      },
      "63": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "64": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 61
        }
      },
      "65": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 125,
          column: 11
        }
      },
      "66": {
        start: {
          line: 133,
          column: 0
        },
        end: {
          line: 152,
          column: 3
        }
      },
      "67": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "68": {
        start: {
          line: 135,
          column: 23
        },
        end: {
          line: 135,
          column: 104
        }
      },
      "69": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 139,
          column: 11
        }
      },
      "70": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "71": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 54
        }
      },
      "72": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "73": {
        start: {
          line: 158,
          column: 0
        },
        end: {
          line: 190,
          column: 3
        }
      },
      "74": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "75": {
        start: {
          line: 160,
          column: 28
        },
        end: {
          line: 160,
          column: 36
        }
      },
      "76": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "77": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 165,
          column: 15
        }
      },
      "78": {
        start: {
          line: 167,
          column: 25
        },
        end: {
          line: 167,
          column: 110
        }
      },
      "79": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "80": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 172,
          column: 15
        }
      },
      "81": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "82": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 181,
          column: 11
        }
      },
      "83": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 61
        }
      },
      "84": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 188,
          column: 11
        }
      },
      "85": {
        start: {
          line: 196,
          column: 0
        },
        end: {
          line: 231,
          column: 3
        }
      },
      "86": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "87": {
        start: {
          line: 198,
          column: 83
        },
        end: {
          line: 198,
          column: 91
        }
      },
      "88": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "89": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 203,
          column: 15
        }
      },
      "90": {
        start: {
          line: 205,
          column: 21
        },
        end: {
          line: 213,
          column: 10
        }
      },
      "91": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 218,
          column: 11
        }
      },
      "92": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 222,
          column: 11
        }
      },
      "93": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 65
        }
      },
      "94": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 229,
          column: 11
        }
      },
      "95": {
        start: {
          line: 237,
          column: 0
        },
        end: {
          line: 264,
          column: 3
        }
      },
      "96": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 263,
          column: 5
        }
      },
      "97": {
        start: {
          line: 239,
          column: 27
        },
        end: {
          line: 239,
          column: 37
        }
      },
      "98": {
        start: {
          line: 240,
          column: 24
        },
        end: {
          line: 240,
          column: 32
        }
      },
      "99": {
        start: {
          line: 241,
          column: 24
        },
        end: {
          line: 241,
          column: 120
        }
      },
      "100": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "101": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 246,
          column: 15
        }
      },
      "102": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 251,
          column: 11
        }
      },
      "103": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 255,
          column: 11
        }
      },
      "104": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 65
        }
      },
      "105": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 262,
          column: 11
        }
      },
      "106": {
        start: {
          line: 270,
          column: 0
        },
        end: {
          line: 290,
          column: 3
        }
      },
      "107": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 289,
          column: 5
        }
      },
      "108": {
        start: {
          line: 272,
          column: 26
        },
        end: {
          line: 272,
          column: 115
        }
      },
      "109": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 277,
          column: 11
        }
      },
      "110": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 281,
          column: 11
        }
      },
      "111": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 57
        }
      },
      "112": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 288,
          column: 11
        }
      },
      "113": {
        start: {
          line: 296,
          column: 0
        },
        end: {
          line: 316,
          column: 3
        }
      },
      "114": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 315,
          column: 5
        }
      },
      "115": {
        start: {
          line: 298,
          column: 32
        },
        end: {
          line: 298,
          column: 116
        }
      },
      "116": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "117": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 307,
          column: 11
        }
      },
      "118": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 65
        }
      },
      "119": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "120": {
        start: {
          line: 317,
          column: 0
        },
        end: {
          line: 317,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 47,
            column: 169
          },
          end: {
            line: 47,
            column: 170
          }
        },
        loc: {
          start: {
            line: 47,
            column: 189
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 47
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 74,
            column: 174
          },
          end: {
            line: 74,
            column: 175
          }
        },
        loc: {
          start: {
            line: 74,
            column: 194
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 74
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 101,
            column: 168
          },
          end: {
            line: 101,
            column: 169
          }
        },
        loc: {
          start: {
            line: 101,
            column: 188
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 101
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 104,
            column: 49
          },
          end: {
            line: 104,
            column: 50
          }
        },
        loc: {
          start: {
            line: 104,
            column: 58
          },
          end: {
            line: 104,
            column: 84
          }
        },
        line: 104
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 106,
            column: 32
          },
          end: {
            line: 106,
            column: 33
          }
        },
        loc: {
          start: {
            line: 106,
            column: 41
          },
          end: {
            line: 106,
            column: 69
          }
        },
        line: 106
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 133,
            column: 161
          },
          end: {
            line: 133,
            column: 162
          }
        },
        loc: {
          start: {
            line: 133,
            column: 181
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 133
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 158,
            column: 170
          },
          end: {
            line: 158,
            column: 171
          }
        },
        loc: {
          start: {
            line: 158,
            column: 190
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 158
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 196,
            column: 173
          },
          end: {
            line: 196,
            column: 174
          }
        },
        loc: {
          start: {
            line: 196,
            column: 193
          },
          end: {
            line: 231,
            column: 1
          }
        },
        line: 196
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 237,
            column: 180
          },
          end: {
            line: 237,
            column: 181
          }
        },
        loc: {
          start: {
            line: 237,
            column: 200
          },
          end: {
            line: 264,
            column: 1
          }
        },
        line: 237
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 270,
            column: 164
          },
          end: {
            line: 270,
            column: 165
          }
        },
        loc: {
          start: {
            line: 270,
            column: 184
          },
          end: {
            line: 290,
            column: 1
          }
        },
        line: 270
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 296,
            column: 164
          },
          end: {
            line: 296,
            column: 165
          }
        },
        loc: {
          start: {
            line: 296,
            column: 184
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 296
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 104,
            column: 30
          },
          end: {
            line: 108,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 105,
            column: 14
          },
          end: {
            line: 105,
            column: 23
          }
        }, {
          start: {
            line: 106,
            column: 14
          },
          end: {
            line: 108,
            column: 28
          }
        }],
        line: 104
      },
      "18": {
        loc: {
          start: {
            line: 106,
            column: 14
          },
          end: {
            line: 108,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 18
          },
          end: {
            line: 107,
            column: 29
          }
        }, {
          start: {
            line: 108,
            column: 18
          },
          end: {
            line: 108,
            column: 28
          }
        }],
        line: 106
      },
      "19": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "20": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "21": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "22": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 17
          }
        }, {
          start: {
            line: 199,
            column: 21
          },
          end: {
            line: 199,
            column: 28
          }
        }, {
          start: {
            line: 199,
            column: 32
          },
          end: {
            line: 199,
            column: 41
          }
        }, {
          start: {
            line: 199,
            column: 45
          },
          end: {
            line: 199,
            column: 55
          }
        }, {
          start: {
            line: 199,
            column: 59
          },
          end: {
            line: 199,
            column: 68
          }
        }],
        line: 199
      },
      "23": {
        loc: {
          start: {
            line: 212,
            column: 22
          },
          end: {
            line: 212,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 22
          },
          end: {
            line: 212,
            column: 30
          }
        }, {
          start: {
            line: 212,
            column: 34
          },
          end: {
            line: 212,
            column: 35
          }
        }],
        line: 212
      },
      "24": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0, 0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "485c5a00697396a7a854c98d57e334dbf94647ff"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2a8m0l84an = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2a8m0l84an();
var __createBinding =
/* istanbul ignore next */
(cov_2a8m0l84an().s[0]++,
/* istanbul ignore next */
(cov_2a8m0l84an().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2a8m0l84an().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2a8m0l84an().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2a8m0l84an().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[0]++;
  cov_2a8m0l84an().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2a8m0l84an().b[2][0]++;
    cov_2a8m0l84an().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2a8m0l84an().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2a8m0l84an().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2a8m0l84an().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2a8m0l84an().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2a8m0l84an().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2a8m0l84an().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2a8m0l84an().b[5][1]++,
  /* istanbul ignore next */
  (cov_2a8m0l84an().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2a8m0l84an().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2a8m0l84an().b[3][0]++;
    cov_2a8m0l84an().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2a8m0l84an().f[1]++;
        cov_2a8m0l84an().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2a8m0l84an().b[3][1]++;
  }
  cov_2a8m0l84an().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2a8m0l84an().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[2]++;
  cov_2a8m0l84an().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2a8m0l84an().b[7][0]++;
    cov_2a8m0l84an().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2a8m0l84an().b[7][1]++;
  }
  cov_2a8m0l84an().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2a8m0l84an().s[11]++,
/* istanbul ignore next */
(cov_2a8m0l84an().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2a8m0l84an().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2a8m0l84an().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2a8m0l84an().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[3]++;
  cov_2a8m0l84an().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2a8m0l84an().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[4]++;
  cov_2a8m0l84an().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2a8m0l84an().s[14]++,
/* istanbul ignore next */
(cov_2a8m0l84an().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2a8m0l84an().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2a8m0l84an().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[5]++;
  cov_2a8m0l84an().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2a8m0l84an().f[6]++;
    cov_2a8m0l84an().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2a8m0l84an().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2a8m0l84an().s[17]++, []);
      /* istanbul ignore next */
      cov_2a8m0l84an().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2a8m0l84an().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2a8m0l84an().b[12][0]++;
          cov_2a8m0l84an().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2a8m0l84an().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2a8m0l84an().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2a8m0l84an().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2a8m0l84an().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2a8m0l84an().f[8]++;
    cov_2a8m0l84an().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2a8m0l84an().b[13][0]++;
      cov_2a8m0l84an().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2a8m0l84an().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[26]++, {});
    /* istanbul ignore next */
    cov_2a8m0l84an().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2a8m0l84an().b[15][0]++;
      cov_2a8m0l84an().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2a8m0l84an().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2a8m0l84an().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2a8m0l84an().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2a8m0l84an().b[16][0]++;
          cov_2a8m0l84an().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2a8m0l84an().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2a8m0l84an().b[15][1]++;
    }
    cov_2a8m0l84an().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_2a8m0l84an().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express =
/* istanbul ignore next */
(cov_2a8m0l84an().s[36]++, __importStar(require("express")));
const ProductionMonitoringService_1 =
/* istanbul ignore next */
(cov_2a8m0l84an().s[37]++, require("../services/ProductionMonitoringService"));
const auth_1 =
/* istanbul ignore next */
(cov_2a8m0l84an().s[38]++, require("../middleware/auth"));
const EnhancedAuthMiddleware_1 =
/* istanbul ignore next */
(cov_2a8m0l84an().s[39]++, require("../middleware/EnhancedAuthMiddleware"));
const logger_1 =
/* istanbul ignore next */
(cov_2a8m0l84an().s[40]++, require("../config/logger"));
const router =
/* istanbul ignore next */
(cov_2a8m0l84an().s[41]++, express.Router());
/**
 * @route GET /monitoring/system-metrics
 * @description Get real-time system metrics
 * @access Private (Admin only)
 */
/* istanbul ignore next */
cov_2a8m0l84an().s[42]++;
router.get('/system-metrics', auth_1.authMiddleware, EnhancedAuthMiddleware_1.enhancedAuthMiddleware.requireAdmin.bind(EnhancedAuthMiddleware_1.enhancedAuthMiddleware), async (req, res) => {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[9]++;
  cov_2a8m0l84an().s[43]++;
  try {
    const metrics =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[44]++, await ProductionMonitoringService_1.productionMonitoringService.getSystemMetrics());
    /* istanbul ignore next */
    cov_2a8m0l84an().s[45]++;
    logger_1.logger.info('System metrics retrieved', {
      userId: req.user?.id,
      cpuUsage: metrics.cpu.usage,
      memoryUsage: metrics.memory.percentage,
      diskUsage: metrics.disk.percentage
    });
    /* istanbul ignore next */
    cov_2a8m0l84an().s[46]++;
    res.json({
      success: true,
      metrics
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2a8m0l84an().s[47]++;
    logger_1.logger.error('System metrics error:', error);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[48]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get system metrics'
    });
  }
});
/**
 * @route GET /monitoring/application-metrics
 * @description Get application metrics
 * @access Private (Admin only)
 */
/* istanbul ignore next */
cov_2a8m0l84an().s[49]++;
router.get('/application-metrics', auth_1.authMiddleware, EnhancedAuthMiddleware_1.enhancedAuthMiddleware.requireAdmin.bind(EnhancedAuthMiddleware_1.enhancedAuthMiddleware), async (req, res) => {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[10]++;
  cov_2a8m0l84an().s[50]++;
  try {
    const metrics =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[51]++, await ProductionMonitoringService_1.productionMonitoringService.getApplicationMetrics());
    /* istanbul ignore next */
    cov_2a8m0l84an().s[52]++;
    logger_1.logger.info('Application metrics retrieved', {
      userId: req.user?.id,
      totalUsers: metrics.users.total,
      activeStreams: metrics.streams.active,
      totalRevenue: metrics.transactions.totalRevenue
    });
    /* istanbul ignore next */
    cov_2a8m0l84an().s[53]++;
    res.json({
      success: true,
      metrics
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2a8m0l84an().s[54]++;
    logger_1.logger.error('Application metrics error:', error);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[55]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get application metrics'
    });
  }
});
/**
 * @route GET /monitoring/health-status
 * @description Get health status of all services
 * @access Private (Admin only)
 */
/* istanbul ignore next */
cov_2a8m0l84an().s[56]++;
router.get('/health-status', auth_1.authMiddleware, EnhancedAuthMiddleware_1.enhancedAuthMiddleware.requireAdmin.bind(EnhancedAuthMiddleware_1.enhancedAuthMiddleware), async (req, res) => {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[11]++;
  cov_2a8m0l84an().s[57]++;
  try {
    const healthChecks =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[58]++, await ProductionMonitoringService_1.productionMonitoringService.getHealthStatus());
    const overallHealth =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[59]++, healthChecks.every(check => {
      /* istanbul ignore next */
      cov_2a8m0l84an().f[12]++;
      cov_2a8m0l84an().s[60]++;
      return check.status === 'healthy';
    }) ?
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[17][0]++, 'healthy') :
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[17][1]++, healthChecks.some(check => {
      /* istanbul ignore next */
      cov_2a8m0l84an().f[13]++;
      cov_2a8m0l84an().s[61]++;
      return check.status === 'unhealthy';
    }) ?
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[18][0]++, 'unhealthy') :
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[18][1]++, 'degraded')));
    /* istanbul ignore next */
    cov_2a8m0l84an().s[62]++;
    logger_1.logger.info('Health status retrieved', {
      userId: req.user?.id,
      overallHealth,
      services: healthChecks.length
    });
    /* istanbul ignore next */
    cov_2a8m0l84an().s[63]++;
    res.json({
      success: true,
      overallHealth,
      services: healthChecks
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2a8m0l84an().s[64]++;
    logger_1.logger.error('Health status error:', error);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[65]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get health status'
    });
  }
});
/**
 * @route GET /monitoring/alerts
 * @description Get active alerts
 * @access Private (Admin only)
 */
/* istanbul ignore next */
cov_2a8m0l84an().s[66]++;
router.get('/alerts', auth_1.authMiddleware, EnhancedAuthMiddleware_1.enhancedAuthMiddleware.requireAdmin.bind(EnhancedAuthMiddleware_1.enhancedAuthMiddleware), async (req, res) => {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[14]++;
  cov_2a8m0l84an().s[67]++;
  try {
    const alerts =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[68]++, await ProductionMonitoringService_1.productionMonitoringService.getActiveAlerts());
    /* istanbul ignore next */
    cov_2a8m0l84an().s[69]++;
    logger_1.logger.info('Active alerts retrieved', {
      userId: req.user?.id,
      alertCount: alerts.length
    });
    /* istanbul ignore next */
    cov_2a8m0l84an().s[70]++;
    res.json({
      success: true,
      alerts
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2a8m0l84an().s[71]++;
    logger_1.logger.error('Alerts error:', error);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[72]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get alerts'
    });
  }
});
/**
 * @route POST /monitoring/alerts/resolve
 * @description Resolve an alert
 * @access Private (Admin only)
 */
/* istanbul ignore next */
cov_2a8m0l84an().s[73]++;
router.post('/alerts/resolve', auth_1.authMiddleware, EnhancedAuthMiddleware_1.enhancedAuthMiddleware.requireAdmin.bind(EnhancedAuthMiddleware_1.enhancedAuthMiddleware), async (req, res) => {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[15]++;
  cov_2a8m0l84an().s[74]++;
  try {
    const {
      alertId
    } =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[75]++, req.body);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[76]++;
    if (!alertId) {
      /* istanbul ignore next */
      cov_2a8m0l84an().b[19][0]++;
      cov_2a8m0l84an().s[77]++;
      return res.status(400).json({
        success: false,
        error: 'Alert ID is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2a8m0l84an().b[19][1]++;
    }
    const resolved =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[78]++, await ProductionMonitoringService_1.productionMonitoringService.resolveAlert(alertId));
    /* istanbul ignore next */
    cov_2a8m0l84an().s[79]++;
    if (!resolved) {
      /* istanbul ignore next */
      cov_2a8m0l84an().b[20][0]++;
      cov_2a8m0l84an().s[80]++;
      return res.status(404).json({
        success: false,
        error: 'Alert not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2a8m0l84an().b[20][1]++;
    }
    cov_2a8m0l84an().s[81]++;
    logger_1.logger.info('Alert resolved', {
      userId: req.user?.id,
      alertId
    });
    /* istanbul ignore next */
    cov_2a8m0l84an().s[82]++;
    res.json({
      success: true,
      message: 'Alert resolved successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2a8m0l84an().s[83]++;
    logger_1.logger.error('Resolve alert error:', error);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[84]++;
    res.status(500).json({
      success: false,
      error: 'Failed to resolve alert'
    });
  }
});
/**
 * @route POST /monitoring/alerts/rules
 * @description Create alert rule
 * @access Private (Super Admin only)
 */
/* istanbul ignore next */
cov_2a8m0l84an().s[85]++;
router.post('/alerts/rules', auth_1.authMiddleware, EnhancedAuthMiddleware_1.enhancedAuthMiddleware.requireSuperAdmin.bind(EnhancedAuthMiddleware_1.enhancedAuthMiddleware), async (req, res) => {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[16]++;
  cov_2a8m0l84an().s[86]++;
  try {
    const {
      name,
      metric,
      operator,
      threshold,
      severity,
      enabled,
      cooldown
    } =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[87]++, req.body);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[88]++;
    if (
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[22][0]++, !name) ||
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[22][1]++, !metric) ||
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[22][2]++, !operator) ||
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[22][3]++, !threshold) ||
    /* istanbul ignore next */
    (cov_2a8m0l84an().b[22][4]++, !severity)) {
      /* istanbul ignore next */
      cov_2a8m0l84an().b[21][0]++;
      cov_2a8m0l84an().s[89]++;
      return res.status(400).json({
        success: false,
        error: 'Missing required fields: name, metric, operator, threshold, severity'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2a8m0l84an().b[21][1]++;
    }
    const rule =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[90]++, await ProductionMonitoringService_1.productionMonitoringService.createAlertRule({
      name,
      metric,
      operator,
      threshold,
      severity,
      enabled: enabled !== false,
      cooldown:
      /* istanbul ignore next */
      (cov_2a8m0l84an().b[23][0]++, cooldown) ||
      /* istanbul ignore next */
      (cov_2a8m0l84an().b[23][1]++, 5)
    }));
    /* istanbul ignore next */
    cov_2a8m0l84an().s[91]++;
    logger_1.logger.info('Alert rule created', {
      userId: req.user?.id,
      ruleId: rule.id,
      name: rule.name
    });
    /* istanbul ignore next */
    cov_2a8m0l84an().s[92]++;
    res.json({
      success: true,
      rule
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2a8m0l84an().s[93]++;
    logger_1.logger.error('Create alert rule error:', error);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[94]++;
    res.status(500).json({
      success: false,
      error: 'Failed to create alert rule'
    });
  }
});
/**
 * @route PUT /monitoring/alerts/rules/:ruleId
 * @description Update alert rule
 * @access Private (Super Admin only)
 */
/* istanbul ignore next */
cov_2a8m0l84an().s[95]++;
router.put('/alerts/rules/:ruleId', auth_1.authMiddleware, EnhancedAuthMiddleware_1.enhancedAuthMiddleware.requireSuperAdmin.bind(EnhancedAuthMiddleware_1.enhancedAuthMiddleware), async (req, res) => {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[17]++;
  cov_2a8m0l84an().s[96]++;
  try {
    const {
      ruleId
    } =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[97]++, req.params);
    const updates =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[98]++, req.body);
    const updated =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[99]++, await ProductionMonitoringService_1.productionMonitoringService.updateAlertRule(ruleId, updates));
    /* istanbul ignore next */
    cov_2a8m0l84an().s[100]++;
    if (!updated) {
      /* istanbul ignore next */
      cov_2a8m0l84an().b[24][0]++;
      cov_2a8m0l84an().s[101]++;
      return res.status(404).json({
        success: false,
        error: 'Alert rule not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2a8m0l84an().b[24][1]++;
    }
    cov_2a8m0l84an().s[102]++;
    logger_1.logger.info('Alert rule updated', {
      userId: req.user?.id,
      ruleId
    });
    /* istanbul ignore next */
    cov_2a8m0l84an().s[103]++;
    res.json({
      success: true,
      message: 'Alert rule updated successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2a8m0l84an().s[104]++;
    logger_1.logger.error('Update alert rule error:', error);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[105]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update alert rule'
    });
  }
});
/**
 * @route GET /monitoring/dashboard
 * @description Get performance dashboard data
 * @access Private (Admin only)
 */
/* istanbul ignore next */
cov_2a8m0l84an().s[106]++;
router.get('/dashboard', auth_1.authMiddleware, EnhancedAuthMiddleware_1.enhancedAuthMiddleware.requireAdmin.bind(EnhancedAuthMiddleware_1.enhancedAuthMiddleware), async (req, res) => {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[18]++;
  cov_2a8m0l84an().s[107]++;
  try {
    const dashboard =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[108]++, await ProductionMonitoringService_1.productionMonitoringService.getPerformanceDashboard());
    /* istanbul ignore next */
    cov_2a8m0l84an().s[109]++;
    logger_1.logger.info('Performance dashboard retrieved', {
      userId: req.user?.id,
      overallHealth: dashboard.summary.overallHealth,
      criticalAlerts: dashboard.summary.criticalAlerts
    });
    /* istanbul ignore next */
    cov_2a8m0l84an().s[110]++;
    res.json({
      success: true,
      dashboard
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2a8m0l84an().s[111]++;
    logger_1.logger.error('Dashboard error:', error);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[112]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get dashboard data'
    });
  }
});
/**
 * @route GET /monitoring/real-time
 * @description Get real-time metrics
 * @access Private (Admin only)
 */
/* istanbul ignore next */
cov_2a8m0l84an().s[113]++;
router.get('/real-time', auth_1.authMiddleware, EnhancedAuthMiddleware_1.enhancedAuthMiddleware.requireAdmin.bind(EnhancedAuthMiddleware_1.enhancedAuthMiddleware), async (req, res) => {
  /* istanbul ignore next */
  cov_2a8m0l84an().f[19]++;
  cov_2a8m0l84an().s[114]++;
  try {
    const realTimeMetrics =
    /* istanbul ignore next */
    (cov_2a8m0l84an().s[115]++, await ProductionMonitoringService_1.productionMonitoringService.getRealTimeMetrics());
    /* istanbul ignore next */
    cov_2a8m0l84an().s[116]++;
    logger_1.logger.info('Real-time metrics retrieved', {
      userId: req.user?.id,
      activeStreams: realTimeMetrics.activeStreams,
      activeUsers: realTimeMetrics.activeUsers
    });
    /* istanbul ignore next */
    cov_2a8m0l84an().s[117]++;
    res.json({
      success: true,
      metrics: realTimeMetrics
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2a8m0l84an().s[118]++;
    logger_1.logger.error('Real-time metrics error:', error);
    /* istanbul ignore next */
    cov_2a8m0l84an().s[119]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get real-time metrics'
    });
  }
});
/* istanbul ignore next */
cov_2a8m0l84an().s[120]++;
exports.default = router;