3931c8bfb0cd7680f49ffb0e6535eef1
"use strict";

/* istanbul ignore next */
function cov_12cjr77v4d() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\streams-enhanced.ts";
  var hash = "8953da4a5a6ec14e1db42a068b93fdc11a81524a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\streams-enhanced.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 38
        }
      },
      "4": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 80,
          column: 1
        }
      },
      "5": {
        start: {
          line: 82,
          column: 19
        },
        end: {
          line: 107,
          column: 1
        }
      },
      "6": {
        start: {
          line: 109,
          column: 29
        },
        end: {
          line: 132,
          column: 1
        }
      },
      "7": {
        start: {
          line: 134,
          column: 0
        },
        end: {
          line: 179,
          column: 3
        }
      },
      "8": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "9": {
        start: {
          line: 136,
          column: 71
        },
        end: {
          line: 136,
          column: 80
        }
      },
      "10": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 91
        }
      },
      "11": {
        start: {
          line: 138,
          column: 30
        },
        end: {
          line: 138,
          column: 73
        }
      },
      "12": {
        start: {
          line: 138,
          column: 59
        },
        end: {
          line: 138,
          column: 72
        }
      },
      "13": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "14": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 93
        }
      },
      "15": {
        start: {
          line: 141,
          column: 63
        },
        end: {
          line: 141,
          column: 91
        }
      },
      "16": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "17": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 78
        }
      },
      "18": {
        start: {
          line: 146,
          column: 47
        },
        end: {
          line: 146,
          column: 76
        }
      },
      "19": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 22
        }
      },
      "20": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 66
        }
      },
      "21": {
        start: {
          line: 149,
          column: 47
        },
        end: {
          line: 149,
          column: 64
        }
      },
      "22": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 22
        }
      },
      "23": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 114
        }
      },
      "24": {
        start: {
          line: 152,
          column: 47
        },
        end: {
          line: 152,
          column: 112
        }
      },
      "25": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 22
        }
      },
      "26": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 114
        }
      },
      "27": {
        start: {
          line: 155,
          column: 47
        },
        end: {
          line: 155,
          column: 112
        }
      },
      "28": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 22
        }
      },
      "29": {
        start: {
          line: 159,
          column: 33
        },
        end: {
          line: 159,
          column: 102
        }
      },
      "30": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "31": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 71
        }
      },
      "32": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "33": {
        start: {
          line: 181,
          column: 0
        },
        end: {
          line: 199,
          column: 3
        }
      },
      "34": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "35": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 57
        }
      },
      "36": {
        start: {
          line: 184,
          column: 31
        },
        end: {
          line: 184,
          column: 75
        }
      },
      "37": {
        start: {
          line: 184,
          column: 58
        },
        end: {
          line: 184,
          column: 74
        }
      },
      "38": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "39": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 72
        }
      },
      "40": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "41": {
        start: {
          line: 201,
          column: 0
        },
        end: {
          line: 220,
          column: 3
        }
      },
      "42": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "43": {
        start: {
          line: 203,
          column: 27
        },
        end: {
          line: 203,
          column: 36
        }
      },
      "44": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 79
        }
      },
      "45": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 210,
          column: 11
        }
      },
      "46": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 82
        }
      },
      "47": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 218,
          column: 11
        }
      },
      "48": {
        start: {
          line: 222,
          column: 0
        },
        end: {
          line: 263,
          column: 3
        }
      },
      "49": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 262,
          column: 5
        }
      },
      "50": {
        start: {
          line: 224,
          column: 27
        },
        end: {
          line: 224,
          column: 35
        }
      },
      "51": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 70
        }
      },
      "52": {
        start: {
          line: 227,
          column: 22
        },
        end: {
          line: 227,
          column: 47
        }
      },
      "53": {
        start: {
          line: 228,
          column: 28
        },
        end: {
          line: 228,
          column: 53
        }
      },
      "54": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "55": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 234,
          column: 15
        }
      },
      "56": {
        start: {
          line: 237,
          column: 23
        },
        end: {
          line: 237,
          column: 24
        }
      },
      "57": {
        start: {
          line: 238,
          column: 27
        },
        end: {
          line: 238,
          column: 29
        }
      },
      "58": {
        start: {
          line: 239,
          column: 28
        },
        end: {
          line: 239,
          column: 52
        }
      },
      "59": {
        start: {
          line: 240,
          column: 28
        },
        end: {
          line: 240,
          column: 52
        }
      },
      "60": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 253,
          column: 11
        }
      },
      "61": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 67
        }
      },
      "62": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 261,
          column: 11
        }
      },
      "63": {
        start: {
          line: 265,
          column: 0
        },
        end: {
          line: 318,
          column: 3
        }
      },
      "64": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 317,
          column: 5
        }
      },
      "65": {
        start: {
          line: 267,
          column: 115
        },
        end: {
          line: 267,
          column: 123
        }
      },
      "66": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 81
        }
      },
      "67": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "68": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 274,
          column: 15
        }
      },
      "69": {
        start: {
          line: 277,
          column: 25
        },
        end: {
          line: 277,
          column: 90
        }
      },
      "70": {
        start: {
          line: 278,
          column: 26
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "71": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 36
        }
      },
      "72": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 308,
          column: 11
        }
      },
      "73": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 63
        }
      },
      "74": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 316,
          column: 11
        }
      },
      "75": {
        start: {
          line: 320,
          column: 0
        },
        end: {
          line: 355,
          column: 3
        }
      },
      "76": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 354,
          column: 5
        }
      },
      "77": {
        start: {
          line: 322,
          column: 29
        },
        end: {
          line: 322,
          column: 39
        }
      },
      "78": {
        start: {
          line: 323,
          column: 31
        },
        end: {
          line: 323,
          column: 39
        }
      },
      "79": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 60
        }
      },
      "80": {
        start: {
          line: 325,
          column: 23
        },
        end: {
          line: 325,
          column: 63
        }
      },
      "81": {
        start: {
          line: 325,
          column: 45
        },
        end: {
          line: 325,
          column: 62
        }
      },
      "82": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "83": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 330,
          column: 15
        }
      },
      "84": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 30
        }
      },
      "85": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 97
        }
      },
      "86": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "87": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 78
        }
      },
      "88": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 60
        }
      },
      "89": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 69
        }
      },
      "90": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 345,
          column: 11
        }
      },
      "91": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 61
        }
      },
      "92": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 353,
          column: 11
        }
      },
      "93": {
        start: {
          line: 357,
          column: 0
        },
        end: {
          line: 381,
          column: 3
        }
      },
      "94": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 380,
          column: 5
        }
      },
      "95": {
        start: {
          line: 359,
          column: 29
        },
        end: {
          line: 359,
          column: 39
        }
      },
      "96": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 70
        }
      },
      "97": {
        start: {
          line: 361,
          column: 23
        },
        end: {
          line: 361,
          column: 63
        }
      },
      "98": {
        start: {
          line: 361,
          column: 45
        },
        end: {
          line: 361,
          column: 62
        }
      },
      "99": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "100": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 366,
          column: 15
        }
      },
      "101": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 371,
          column: 11
        }
      },
      "102": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 71
        }
      },
      "103": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 379,
          column: 11
        }
      },
      "104": {
        start: {
          line: 382,
          column: 0
        },
        end: {
          line: 382,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 134,
            column: 22
          },
          end: {
            line: 134,
            column: 23
          }
        },
        loc: {
          start: {
            line: 134,
            column: 42
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 134
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 138,
            column: 49
          },
          end: {
            line: 138,
            column: 50
          }
        },
        loc: {
          start: {
            line: 138,
            column: 59
          },
          end: {
            line: 138,
            column: 72
          }
        },
        line: 138
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 141,
            column: 53
          },
          end: {
            line: 141,
            column: 54
          }
        },
        loc: {
          start: {
            line: 141,
            column: 63
          },
          end: {
            line: 141,
            column: 91
          }
        },
        line: 141
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 146,
            column: 37
          },
          end: {
            line: 146,
            column: 38
          }
        },
        loc: {
          start: {
            line: 146,
            column: 47
          },
          end: {
            line: 146,
            column: 76
          }
        },
        line: 146
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 149,
            column: 37
          },
          end: {
            line: 149,
            column: 38
          }
        },
        loc: {
          start: {
            line: 149,
            column: 47
          },
          end: {
            line: 149,
            column: 64
          }
        },
        line: 149
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 152,
            column: 37
          },
          end: {
            line: 152,
            column: 38
          }
        },
        loc: {
          start: {
            line: 152,
            column: 47
          },
          end: {
            line: 152,
            column: 112
          }
        },
        line: 152
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 155,
            column: 37
          },
          end: {
            line: 155,
            column: 38
          }
        },
        loc: {
          start: {
            line: 155,
            column: 47
          },
          end: {
            line: 155,
            column: 112
          }
        },
        line: 155
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 181,
            column: 31
          },
          end: {
            line: 181,
            column: 32
          }
        },
        loc: {
          start: {
            line: 181,
            column: 51
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 181
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 184,
            column: 49
          },
          end: {
            line: 184,
            column: 50
          }
        },
        loc: {
          start: {
            line: 184,
            column: 58
          },
          end: {
            line: 184,
            column: 74
          }
        },
        line: 184
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 201,
            column: 42
          },
          end: {
            line: 201,
            column: 43
          }
        },
        loc: {
          start: {
            line: 201,
            column: 62
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 201
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 222,
            column: 32
          },
          end: {
            line: 222,
            column: 33
          }
        },
        loc: {
          start: {
            line: 222,
            column: 52
          },
          end: {
            line: 263,
            column: 1
          }
        },
        line: 222
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 265,
            column: 22
          },
          end: {
            line: 265,
            column: 23
          }
        },
        loc: {
          start: {
            line: 265,
            column: 42
          },
          end: {
            line: 318,
            column: 1
          }
        },
        line: 265
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 320,
            column: 30
          },
          end: {
            line: 320,
            column: 31
          }
        },
        loc: {
          start: {
            line: 320,
            column: 50
          },
          end: {
            line: 355,
            column: 1
          }
        },
        line: 320
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 325,
            column: 40
          },
          end: {
            line: 325,
            column: 41
          }
        },
        loc: {
          start: {
            line: 325,
            column: 45
          },
          end: {
            line: 325,
            column: 62
          }
        },
        line: 325
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 357,
            column: 25
          },
          end: {
            line: 357,
            column: 26
          }
        },
        loc: {
          start: {
            line: 357,
            column: 45
          },
          end: {
            line: 381,
            column: 1
          }
        },
        line: 357
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 361,
            column: 40
          },
          end: {
            line: 361,
            column: 41
          }
        },
        loc: {
          start: {
            line: 361,
            column: 45
          },
          end: {
            line: 361,
            column: 62
          }
        },
        line: 361
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 136,
            column: 26
          },
          end: {
            line: 136,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 136,
            column: 34
          },
          end: {
            line: 136,
            column: 36
          }
        }],
        line: 136
      },
      "1": {
        loc: {
          start: {
            line: 136,
            column: 38
          },
          end: {
            line: 136,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 136,
            column: 47
          },
          end: {
            line: 136,
            column: 48
          }
        }],
        line: 136
      },
      "2": {
        loc: {
          start: {
            line: 136,
            column: 50
          },
          end: {
            line: 136,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 136,
            column: 57
          },
          end: {
            line: 136,
            column: 66
          }
        }],
        line: 136
      },
      "3": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "4": {
        loc: {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 140,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 140,
            column: 20
          }
        }, {
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 140,
            column: 42
          }
        }],
        line: 140
      },
      "5": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 22
          }
        }, {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 150,
            column: 22
          }
        }, {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 153,
            column: 22
          }
        }, {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 156,
            column: 22
          }
        }],
        line: 144
      },
      "6": {
        loc: {
          start: {
            line: 176,
            column: 19
          },
          end: {
            line: 176,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 176,
            column: 44
          },
          end: {
            line: 176,
            column: 57
          }
        }, {
          start: {
            line: 176,
            column: 60
          },
          end: {
            line: 176,
            column: 75
          }
        }],
        line: 176
      },
      "7": {
        loc: {
          start: {
            line: 196,
            column: 19
          },
          end: {
            line: 196,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 44
          },
          end: {
            line: 196,
            column: 57
          }
        }, {
          start: {
            line: 196,
            column: 60
          },
          end: {
            line: 196,
            column: 75
          }
        }],
        line: 196
      },
      "8": {
        loc: {
          start: {
            line: 217,
            column: 19
          },
          end: {
            line: 217,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 44
          },
          end: {
            line: 217,
            column: 57
          }
        }, {
          start: {
            line: 217,
            column: 60
          },
          end: {
            line: 217,
            column: 75
          }
        }],
        line: 217
      },
      "9": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "10": {
        loc: {
          start: {
            line: 260,
            column: 19
          },
          end: {
            line: 260,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 260,
            column: 44
          },
          end: {
            line: 260,
            column: 57
          }
        }, {
          start: {
            line: 260,
            column: 60
          },
          end: {
            line: 260,
            column: 75
          }
        }],
        line: 260
      },
      "11": {
        loc: {
          start: {
            line: 267,
            column: 46
          },
          end: {
            line: 267,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 267,
            column: 57
          },
          end: {
            line: 267,
            column: 61
          }
        }],
        line: 267
      },
      "12": {
        loc: {
          start: {
            line: 267,
            column: 63
          },
          end: {
            line: 267,
            column: 83
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 267,
            column: 79
          },
          end: {
            line: 267,
            column: 83
          }
        }],
        line: 267
      },
      "13": {
        loc: {
          start: {
            line: 267,
            column: 85
          },
          end: {
            line: 267,
            column: 102
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 267,
            column: 98
          },
          end: {
            line: 267,
            column: 102
          }
        }],
        line: 267
      },
      "14": {
        loc: {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "15": {
        loc: {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 270,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 270,
            column: 18
          }
        }, {
          start: {
            line: 270,
            column: 22
          },
          end: {
            line: 270,
            column: 31
          }
        }, {
          start: {
            line: 270,
            column: 35
          },
          end: {
            line: 270,
            column: 42
          }
        }],
        line: 270
      },
      "16": {
        loc: {
          start: {
            line: 281,
            column: 25
          },
          end: {
            line: 281,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 25
          },
          end: {
            line: 281,
            column: 36
          }
        }, {
          start: {
            line: 281,
            column: 40
          },
          end: {
            line: 281,
            column: 42
          }
        }],
        line: 281
      },
      "17": {
        loc: {
          start: {
            line: 315,
            column: 19
          },
          end: {
            line: 315,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 315,
            column: 44
          },
          end: {
            line: 315,
            column: 57
          }
        }, {
          start: {
            line: 315,
            column: 60
          },
          end: {
            line: 315,
            column: 75
          }
        }],
        line: 315
      },
      "18": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "19": {
        loc: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "20": {
        loc: {
          start: {
            line: 337,
            column: 33
          },
          end: {
            line: 337,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 33
          },
          end: {
            line: 337,
            column: 55
          }
        }, {
          start: {
            line: 337,
            column: 59
          },
          end: {
            line: 337,
            column: 77
          }
        }],
        line: 337
      },
      "21": {
        loc: {
          start: {
            line: 338,
            column: 27
          },
          end: {
            line: 338,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 27
          },
          end: {
            line: 338,
            column: 43
          }
        }, {
          start: {
            line: 338,
            column: 47
          },
          end: {
            line: 338,
            column: 59
          }
        }],
        line: 338
      },
      "22": {
        loc: {
          start: {
            line: 339,
            column: 30
          },
          end: {
            line: 339,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 30
          },
          end: {
            line: 339,
            column: 49
          }
        }, {
          start: {
            line: 339,
            column: 53
          },
          end: {
            line: 339,
            column: 68
          }
        }],
        line: 339
      },
      "23": {
        loc: {
          start: {
            line: 352,
            column: 19
          },
          end: {
            line: 352,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 352,
            column: 44
          },
          end: {
            line: 352,
            column: 57
          }
        }, {
          start: {
            line: 352,
            column: 60
          },
          end: {
            line: 352,
            column: 75
          }
        }],
        line: 352
      },
      "24": {
        loc: {
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "25": {
        loc: {
          start: {
            line: 378,
            column: 19
          },
          end: {
            line: 378,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 378,
            column: 44
          },
          end: {
            line: 378,
            column: 57
          }
        }, {
          start: {
            line: 378,
            column: 60
          },
          end: {
            line: 378,
            column: 75
          }
        }],
        line: 378
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8953da4a5a6ec14e1db42a068b93fdc11a81524a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12cjr77v4d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12cjr77v4d();
cov_12cjr77v4d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_12cjr77v4d().s[1]++, require("express"));
const logger_1 =
/* istanbul ignore next */
(cov_12cjr77v4d().s[2]++, require("../config/logger"));
const router =
/* istanbul ignore next */
(cov_12cjr77v4d().s[3]++, (0, express_1.Router)());
// Mock streams data
const mockStreams =
/* istanbul ignore next */
(cov_12cjr77v4d().s[4]++, [{
  id: 'stream_1',
  title: 'Epic Gaming Session!',
  description: 'Playing the latest games and having fun with viewers',
  hostId: 'user_1',
  hostName: 'GamerPro',
  hostAvatar: 'https://i.pravatar.cc/150?img=1',
  category: 'gaming',
  thumbnail: 'https://picsum.photos/400/300?random=1',
  isLive: true,
  viewerCount: 1250,
  likes: 890,
  comments: 156,
  startTime: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
  // 2 hours ago
  duration: 7200,
  // 2 hours in seconds
  tags: ['gaming', 'fun', 'interactive'],
  quality: '1080p',
  language: 'en',
  isPublic: true,
  allowComments: true,
  allowGifts: true,
  minLevel: 1,
  maxViewers: 10000
}, {
  id: 'stream_2',
  title: 'Music Production Live',
  description: 'Creating beats and making music with the community',
  hostId: 'user_2',
  hostName: 'MusicMaker',
  hostAvatar: 'https://i.pravatar.cc/150?img=2',
  category: 'music',
  thumbnail: 'https://picsum.photos/400/300?random=2',
  isLive: true,
  viewerCount: 450,
  likes: 320,
  comments: 89,
  startTime: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),
  // 1 hour ago
  duration: 3600,
  tags: ['music', 'production', 'creative'],
  quality: '720p',
  language: 'en',
  isPublic: true,
  allowComments: true,
  allowGifts: true,
  minLevel: 1,
  maxViewers: 5000
}, {
  id: 'stream_3',
  title: 'Digital Art Creation',
  description: 'Drawing and painting digitally with viewers',
  hostId: 'user_3',
  hostName: 'ArtistLife',
  hostAvatar: 'https://i.pravatar.cc/150?img=3',
  category: 'art',
  thumbnail: 'https://picsum.photos/400/300?random=3',
  isLive: true,
  viewerCount: 780,
  likes: 560,
  comments: 234,
  startTime: new Date(Date.now() - 30 * 60 * 1000).toISOString(),
  // 30 minutes ago
  duration: 1800,
  tags: ['art', 'digital', 'creative'],
  quality: '1080p',
  language: 'en',
  isPublic: true,
  allowComments: true,
  allowGifts: true,
  minLevel: 1,
  maxViewers: 3000
}]);
// Mock events data
const mockEvents =
/* istanbul ignore next */
(cov_12cjr77v4d().s[5]++, [{
  id: 'event_1',
  title: 'Gaming Tournament Finals',
  description: 'Watch the final matches of our biggest gaming tournament',
  thumbnail: 'https://picsum.photos/400/300?random=4',
  startTime: new Date(Date.now() + 2 * 60 * 60 * 1000).toISOString(),
  // 2 hours from now
  endTime: new Date(Date.now() + 4 * 60 * 60 * 1000).toISOString(),
  // 4 hours from now
  category: 'gaming',
  isFeatured: true,
  maxViewers: 50000,
  currentViewers: 0
}, {
  id: 'event_2',
  title: 'Music Festival Live',
  description: 'Live performances from top artists',
  thumbnail: 'https://picsum.photos/400/300?random=5',
  startTime: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),
  // 24 hours from now
  endTime: new Date(Date.now() + 26 * 60 * 60 * 1000).toISOString(),
  // 26 hours from now
  category: 'music',
  isFeatured: true,
  maxViewers: 100000,
  currentViewers: 0
}]);
// Mock continue watching data
const mockContinueWatching =
/* istanbul ignore next */
(cov_12cjr77v4d().s[6]++, [{
  id: 'stream_4',
  title: 'Cooking Show - Italian Cuisine',
  description: 'Learn to cook authentic Italian dishes',
  hostName: 'ChefMaster',
  thumbnail: 'https://picsum.photos/400/300?random=6',
  watchedDuration: 1800,
  // 30 minutes
  totalDuration: 3600,
  // 1 hour
  lastWatched: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
  isLive: false
}, {
  id: 'stream_5',
  title: 'Fitness Workout Session',
  description: 'High-intensity workout for all fitness levels',
  hostName: 'FitnessGuru',
  thumbnail: 'https://picsum.photos/400/300?random=7',
  watchedDuration: 900,
  // 15 minutes
  totalDuration: 2700,
  // 45 minutes
  lastWatched: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),
  isLive: false
}]);
// GET /streams/active - Get active live streams
/* istanbul ignore next */
cov_12cjr77v4d().s[7]++;
router.get('/active', async (req, res) => {
  /* istanbul ignore next */
  cov_12cjr77v4d().f[0]++;
  cov_12cjr77v4d().s[8]++;
  try {
    const {
      category,
      limit =
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[0][0]++, 20),
      offset =
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[1][0]++, 0),
      sort =
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[2][0]++, 'viewers')
    } =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[9]++, req.query);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[10]++;
    logger_1.logger.info('Fetching active streams', {
      category,
      limit,
      offset,
      sort
    });
    let filteredStreams =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[11]++, mockStreams.filter(stream => {
      /* istanbul ignore next */
      cov_12cjr77v4d().f[1]++;
      cov_12cjr77v4d().s[12]++;
      return stream.isLive;
    }));
    // Apply category filter
    /* istanbul ignore next */
    cov_12cjr77v4d().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_12cjr77v4d().b[4][0]++, category) &&
    /* istanbul ignore next */
    (cov_12cjr77v4d().b[4][1]++, category !== 'all')) {
      /* istanbul ignore next */
      cov_12cjr77v4d().b[3][0]++;
      cov_12cjr77v4d().s[14]++;
      filteredStreams = filteredStreams.filter(stream => {
        /* istanbul ignore next */
        cov_12cjr77v4d().f[2]++;
        cov_12cjr77v4d().s[15]++;
        return stream.category === category;
      });
    } else
    /* istanbul ignore next */
    {
      cov_12cjr77v4d().b[3][1]++;
    }
    // Apply sorting
    cov_12cjr77v4d().s[16]++;
    switch (sort) {
      case 'viewers':
        /* istanbul ignore next */
        cov_12cjr77v4d().b[5][0]++;
        cov_12cjr77v4d().s[17]++;
        filteredStreams.sort((a, b) => {
          /* istanbul ignore next */
          cov_12cjr77v4d().f[3]++;
          cov_12cjr77v4d().s[18]++;
          return b.viewerCount - a.viewerCount;
        });
        /* istanbul ignore next */
        cov_12cjr77v4d().s[19]++;
        break;
      case 'likes':
        /* istanbul ignore next */
        cov_12cjr77v4d().b[5][1]++;
        cov_12cjr77v4d().s[20]++;
        filteredStreams.sort((a, b) => {
          /* istanbul ignore next */
          cov_12cjr77v4d().f[4]++;
          cov_12cjr77v4d().s[21]++;
          return b.likes - a.likes;
        });
        /* istanbul ignore next */
        cov_12cjr77v4d().s[22]++;
        break;
      case 'newest':
        /* istanbul ignore next */
        cov_12cjr77v4d().b[5][2]++;
        cov_12cjr77v4d().s[23]++;
        filteredStreams.sort((a, b) => {
          /* istanbul ignore next */
          cov_12cjr77v4d().f[5]++;
          cov_12cjr77v4d().s[24]++;
          return new Date(b.startTime).getTime() - new Date(a.startTime).getTime();
        });
        /* istanbul ignore next */
        cov_12cjr77v4d().s[25]++;
        break;
      case 'oldest':
        /* istanbul ignore next */
        cov_12cjr77v4d().b[5][3]++;
        cov_12cjr77v4d().s[26]++;
        filteredStreams.sort((a, b) => {
          /* istanbul ignore next */
          cov_12cjr77v4d().f[6]++;
          cov_12cjr77v4d().s[27]++;
          return new Date(a.startTime).getTime() - new Date(b.startTime).getTime();
        });
        /* istanbul ignore next */
        cov_12cjr77v4d().s[28]++;
        break;
    }
    // Apply pagination
    const paginatedStreams =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[29]++, filteredStreams.slice(Number(offset), Number(offset) + Number(limit)));
    /* istanbul ignore next */
    cov_12cjr77v4d().s[30]++;
    res.json({
      success: true,
      streams: paginatedStreams,
      total: filteredStreams.length,
      pagination: {
        limit: Number(limit),
        offset: Number(offset),
        hasMore: Number(offset) + Number(limit) < filteredStreams.length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12cjr77v4d().s[31]++;
    logger_1.logger.error('Error fetching active streams:', error);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[32]++;
    res.status(500).json({
      success: false,
      message: 'Failed to fetch active streams',
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[6][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[6][1]++, 'Unknown error')
    });
  }
});
// GET /events/featured - Get featured events
/* istanbul ignore next */
cov_12cjr77v4d().s[33]++;
router.get('/events/featured', async (req, res) => {
  /* istanbul ignore next */
  cov_12cjr77v4d().f[7]++;
  cov_12cjr77v4d().s[34]++;
  try {
    /* istanbul ignore next */
    cov_12cjr77v4d().s[35]++;
    logger_1.logger.info('Fetching featured events');
    const featuredEvents =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[36]++, mockEvents.filter(event => {
      /* istanbul ignore next */
      cov_12cjr77v4d().f[8]++;
      cov_12cjr77v4d().s[37]++;
      return event.isFeatured;
    }));
    /* istanbul ignore next */
    cov_12cjr77v4d().s[38]++;
    res.json({
      success: true,
      events: featuredEvents,
      total: featuredEvents.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12cjr77v4d().s[39]++;
    logger_1.logger.error('Error fetching featured events:', error);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[40]++;
    res.status(500).json({
      success: false,
      message: 'Failed to fetch featured events',
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[7][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[7][1]++, 'Unknown error')
    });
  }
});
// GET /personal/continue-watching - Get continue watching content
/* istanbul ignore next */
cov_12cjr77v4d().s[41]++;
router.get('/personal/continue-watching', async (req, res) => {
  /* istanbul ignore next */
  cov_12cjr77v4d().f[9]++;
  cov_12cjr77v4d().s[42]++;
  try {
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[43]++, req.query);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[44]++;
    logger_1.logger.info('Fetching continue watching content', {
      userId
    });
    // In a real app, this would be filtered by userId
    /* istanbul ignore next */
    cov_12cjr77v4d().s[45]++;
    res.json({
      success: true,
      content: mockContinueWatching,
      total: mockContinueWatching.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12cjr77v4d().s[46]++;
    logger_1.logger.error('Error fetching continue watching content:', error);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[47]++;
    res.status(500).json({
      success: false,
      message: 'Failed to fetch continue watching content',
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[8][1]++, 'Unknown error')
    });
  }
});
// POST /rewards/checkin - Daily check-in reward
/* istanbul ignore next */
cov_12cjr77v4d().s[48]++;
router.post('/rewards/checkin', async (req, res) => {
  /* istanbul ignore next */
  cov_12cjr77v4d().f[10]++;
  cov_12cjr77v4d().s[49]++;
  try {
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[50]++, req.body);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[51]++;
    logger_1.logger.info('Processing daily check-in', {
      userId
    });
    // Mock check-in logic
    const today =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[52]++, new Date().toDateString());
    const lastCheckIn =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[53]++, new Date().toDateString()); // In real app, get from database
    // Check if already checked in today
    /* istanbul ignore next */
    cov_12cjr77v4d().s[54]++;
    if (lastCheckIn === today) {
      /* istanbul ignore next */
      cov_12cjr77v4d().b[9][0]++;
      cov_12cjr77v4d().s[55]++;
      return res.status(400).json({
        success: false,
        message: 'Already checked in today'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12cjr77v4d().b[9][1]++;
    }
    // Calculate reward based on streak
    const streak =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[56]++, 1); // In real app, calculate from database
    const baseReward =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[57]++, 10);
    const streakBonus =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[58]++, Math.min(streak * 2, 50)); // Max 50 bonus
    const totalReward =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[59]++, baseReward + streakBonus);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[60]++;
    res.json({
      success: true,
      reward: {
        coins: totalReward,
        xp: 25,
        streak: streak + 1,
        nextReward: {
          coins: baseReward + Math.min((streak + 1) * 2, 50),
          xp: 25
        }
      },
      message: `Check-in successful! Earned ${totalReward} coins and 25 XP`
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12cjr77v4d().s[61]++;
    logger_1.logger.error('Error processing check-in:', error);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[62]++;
    res.status(500).json({
      success: false,
      message: 'Failed to process check-in',
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[10][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[10][1]++, 'Unknown error')
    });
  }
});
// POST /streams/start - Start a new stream
/* istanbul ignore next */
cov_12cjr77v4d().s[63]++;
router.post('/start', async (req, res) => {
  /* istanbul ignore next */
  cov_12cjr77v4d().f[11]++;
  cov_12cjr77v4d().s[64]++;
  try {
    const {
      title,
      description,
      category,
      isPublic =
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[11][0]++, true),
      allowComments =
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[12][0]++, true),
      allowGifts =
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[13][0]++, true),
      userId
    } =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[65]++, req.body);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[66]++;
    logger_1.logger.info('Starting new stream', {
      title,
      category,
      userId
    });
    // Validate required fields
    /* istanbul ignore next */
    cov_12cjr77v4d().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_12cjr77v4d().b[15][0]++, !title) ||
    /* istanbul ignore next */
    (cov_12cjr77v4d().b[15][1]++, !category) ||
    /* istanbul ignore next */
    (cov_12cjr77v4d().b[15][2]++, !userId)) {
      /* istanbul ignore next */
      cov_12cjr77v4d().b[14][0]++;
      cov_12cjr77v4d().s[68]++;
      return res.status(400).json({
        success: false,
        message: 'Missing required fields: title, category, userId'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12cjr77v4d().b[14][1]++;
    }
    // Create new stream
    const streamId =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[69]++, `stream_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
    const newStream =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[70]++, {
      id: streamId,
      title,
      description:
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[16][0]++, description) ||
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[16][1]++, ''),
      hostId: userId,
      hostName: 'CurrentUser',
      // In real app, get from user data
      hostAvatar: 'https://i.pravatar.cc/150?img=5',
      category,
      thumbnail: 'https://picsum.photos/400/300?random=8',
      isLive: true,
      viewerCount: 0,
      likes: 0,
      comments: 0,
      startTime: new Date().toISOString(),
      duration: 0,
      tags: [],
      quality: '1080p',
      language: 'en',
      isPublic,
      allowComments,
      allowGifts,
      minLevel: 1,
      maxViewers: 10000
    });
    // Add to mock data
    /* istanbul ignore next */
    cov_12cjr77v4d().s[71]++;
    mockStreams.push(newStream);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[72]++;
    res.json({
      success: true,
      stream: newStream,
      message: 'Stream started successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12cjr77v4d().s[73]++;
    logger_1.logger.error('Error starting stream:', error);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[74]++;
    res.status(500).json({
      success: false,
      message: 'Failed to start stream',
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[17][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[17][1]++, 'Unknown error')
    });
  }
});
// POST /streams/:streamId/end - End a stream
/* istanbul ignore next */
cov_12cjr77v4d().s[75]++;
router.post('/:streamId/end', async (req, res) => {
  /* istanbul ignore next */
  cov_12cjr77v4d().f[12]++;
  cov_12cjr77v4d().s[76]++;
  try {
    const {
      streamId
    } =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[77]++, req.params);
    const {
      finalStats
    } =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[78]++, req.body);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[79]++;
    logger_1.logger.info('Ending stream', {
      streamId
    });
    const stream =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[80]++, mockStreams.find(s => {
      /* istanbul ignore next */
      cov_12cjr77v4d().f[13]++;
      cov_12cjr77v4d().s[81]++;
      return s.id === streamId;
    }));
    /* istanbul ignore next */
    cov_12cjr77v4d().s[82]++;
    if (!stream) {
      /* istanbul ignore next */
      cov_12cjr77v4d().b[18][0]++;
      cov_12cjr77v4d().s[83]++;
      return res.status(404).json({
        success: false,
        message: 'Stream not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12cjr77v4d().b[18][1]++;
    }
    // Update stream status
    cov_12cjr77v4d().s[84]++;
    stream.isLive = false;
    /* istanbul ignore next */
    cov_12cjr77v4d().s[85]++;
    stream.duration = Math.floor((Date.now() - new Date(stream.startTime).getTime()) / 1000);
    // Update final stats if provided
    /* istanbul ignore next */
    cov_12cjr77v4d().s[86]++;
    if (finalStats) {
      /* istanbul ignore next */
      cov_12cjr77v4d().b[19][0]++;
      cov_12cjr77v4d().s[87]++;
      stream.viewerCount =
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[20][0]++, finalStats.viewerCount) ||
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[20][1]++, stream.viewerCount);
      /* istanbul ignore next */
      cov_12cjr77v4d().s[88]++;
      stream.likes =
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[21][0]++, finalStats.likes) ||
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[21][1]++, stream.likes);
      /* istanbul ignore next */
      cov_12cjr77v4d().s[89]++;
      stream.comments =
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[22][0]++, finalStats.comments) ||
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[22][1]++, stream.comments);
    } else
    /* istanbul ignore next */
    {
      cov_12cjr77v4d().b[19][1]++;
    }
    cov_12cjr77v4d().s[90]++;
    res.json({
      success: true,
      stream,
      message: 'Stream ended successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12cjr77v4d().s[91]++;
    logger_1.logger.error('Error ending stream:', error);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[92]++;
    res.status(500).json({
      success: false,
      message: 'Failed to end stream',
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[23][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[23][1]++, 'Unknown error')
    });
  }
});
// GET /streams/:streamId - Get specific stream details
/* istanbul ignore next */
cov_12cjr77v4d().s[93]++;
router.get('/:streamId', async (req, res) => {
  /* istanbul ignore next */
  cov_12cjr77v4d().f[14]++;
  cov_12cjr77v4d().s[94]++;
  try {
    const {
      streamId
    } =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[95]++, req.params);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[96]++;
    logger_1.logger.info('Fetching stream details', {
      streamId
    });
    const stream =
    /* istanbul ignore next */
    (cov_12cjr77v4d().s[97]++, mockStreams.find(s => {
      /* istanbul ignore next */
      cov_12cjr77v4d().f[15]++;
      cov_12cjr77v4d().s[98]++;
      return s.id === streamId;
    }));
    /* istanbul ignore next */
    cov_12cjr77v4d().s[99]++;
    if (!stream) {
      /* istanbul ignore next */
      cov_12cjr77v4d().b[24][0]++;
      cov_12cjr77v4d().s[100]++;
      return res.status(404).json({
        success: false,
        message: 'Stream not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12cjr77v4d().b[24][1]++;
    }
    cov_12cjr77v4d().s[101]++;
    res.json({
      success: true,
      stream
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12cjr77v4d().s[102]++;
    logger_1.logger.error('Error fetching stream details:', error);
    /* istanbul ignore next */
    cov_12cjr77v4d().s[103]++;
    res.status(500).json({
      success: false,
      message: 'Failed to fetch stream details',
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[25][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12cjr77v4d().b[25][1]++, 'Unknown error')
    });
  }
});
/* istanbul ignore next */
cov_12cjr77v4d().s[104]++;
exports.default = router;