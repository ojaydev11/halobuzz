2307af1fe8ace086351c04ec036cb646
"use strict";

/* istanbul ignore next */
function cov_3vtcc4fya() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\ViralGrowthService.ts";
  var hash = "c73eb600103a74b2e01c102b55d3a5dc5ffffb44";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\ViralGrowthService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 65
        }
      },
      "4": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 39
        }
      },
      "5": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 8,
          column: 51
        }
      },
      "6": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 53
        }
      },
      "7": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 43
        }
      },
      "8": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "9": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 51
        }
      },
      "10": {
        start: {
          line: 14,
          column: 22
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "11": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 30
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 33,
          column: 10
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 80
        }
      },
      "16": {
        start: {
          line: 46,
          column: 68
        },
        end: {
          line: 46,
          column: 78
        }
      },
      "17": {
        start: {
          line: 50,
          column: 25
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "18": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 55
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "20": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "21": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 19
        }
      },
      "22": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 18
        }
      },
      "23": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 18
        }
      },
      "24": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 90
        }
      },
      "25": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "26": {
        start: {
          line: 92,
          column: 25
        },
        end: {
          line: 92,
          column: 59
        }
      },
      "27": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "28": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 50
        }
      },
      "29": {
        start: {
          line: 97,
          column: 30
        },
        end: {
          line: 97,
          column: 53
        }
      },
      "30": {
        start: {
          line: 98,
          column: 25
        },
        end: {
          line: 98,
          column: 100
        }
      },
      "31": {
        start: {
          line: 99,
          column: 33
        },
        end: {
          line: 99,
          column: 74
        }
      },
      "32": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 106,
          column: 67
        }
      },
      "33": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 116,
          column: 15
        }
      },
      "34": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 95
        }
      },
      "35": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 32
        }
      },
      "36": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 78
        }
      },
      "37": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 24
        }
      },
      "38": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "39": {
        start: {
          line: 130,
          column: 33
        },
        end: {
          line: 130,
          column: 88
        }
      },
      "40": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 133,
          column: 13
        }
      },
      "41": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 79
        }
      },
      "42": {
        start: {
          line: 134,
          column: 31
        },
        end: {
          line: 134,
          column: 50
        }
      },
      "43": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "44": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 79
        }
      },
      "45": {
        start: {
          line: 140,
          column: 37
        },
        end: {
          line: 140,
          column: 94
        }
      },
      "46": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "47": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 79
        }
      },
      "48": {
        start: {
          line: 145,
          column: 35
        },
        end: {
          line: 145,
          column: 70
        }
      },
      "49": {
        start: {
          line: 146,
          column: 34
        },
        end: {
          line: 146,
          column: 68
        }
      },
      "50": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 159,
          column: 15
        }
      },
      "51": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 170,
          column: 15
        }
      },
      "52": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 175,
          column: 67
        }
      },
      "53": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 181,
          column: 35
        }
      },
      "54": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 104
        }
      },
      "55": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 133
        }
      },
      "56": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 190,
          column: 14
        }
      },
      "57": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 79
        }
      },
      "58": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 24
        }
      },
      "59": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "60": {
        start: {
          line: 202,
          column: 32
        },
        end: {
          line: 202,
          column: 61
        }
      },
      "61": {
        start: {
          line: 203,
          column: 35
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "62": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 65
        }
      },
      "63": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 151
        }
      },
      "64": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 76
        }
      },
      "65": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 31
        }
      },
      "66": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 78
        }
      },
      "67": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 24
        }
      },
      "68": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "69": {
        start: {
          line: 224,
          column: 29
        },
        end: {
          line: 224,
          column: 65
        }
      },
      "70": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 227,
          column: 13
        }
      },
      "71": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 78
        }
      },
      "72": {
        start: {
          line: 229,
          column: 31
        },
        end: {
          line: 229,
          column: 85
        }
      },
      "73": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "74": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 86
        }
      },
      "75": {
        start: {
          line: 234,
          column: 33
        },
        end: {
          line: 234,
          column: 107
        }
      },
      "76": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 237,
          column: 13
        }
      },
      "77": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 76
        }
      },
      "78": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 38
        }
      },
      "79": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 156
        }
      },
      "80": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 69
        }
      },
      "81": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 89
        }
      },
      "82": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 62
        }
      },
      "83": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 76
        }
      },
      "84": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 24
        }
      },
      "85": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "86": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "87": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 76
        }
      },
      "88": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 262,
          column: 13
        }
      },
      "89": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 261,
          column: 53
        }
      },
      "90": {
        start: {
          line: 263,
          column: 28
        },
        end: {
          line: 270,
          column: 13
        }
      },
      "91": {
        start: {
          line: 271,
          column: 31
        },
        end: {
          line: 276,
          column: 55
        }
      },
      "92": {
        start: {
          line: 277,
          column: 36
        },
        end: {
          line: 277,
          column: 90
        }
      },
      "93": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 282,
          column: 14
        }
      },
      "94": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 77
        }
      },
      "95": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 24
        }
      },
      "96": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "97": {
        start: {
          line: 294,
          column: 31
        },
        end: {
          line: 294,
          column: 82
        }
      },
      "98": {
        start: {
          line: 295,
          column: 34
        },
        end: {
          line: 295,
          column: 37
        }
      },
      "99": {
        start: {
          line: 296,
          column: 27
        },
        end: {
          line: 296,
          column: 31
        }
      },
      "100": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 310,
          column: 13
        }
      },
      "101": {
        start: {
          line: 299,
          column: 20
        },
        end: {
          line: 299,
          column: 77
        }
      },
      "102": {
        start: {
          line: 300,
          column: 20
        },
        end: {
          line: 300,
          column: 36
        }
      },
      "103": {
        start: {
          line: 301,
          column: 20
        },
        end: {
          line: 301,
          column: 26
        }
      },
      "104": {
        start: {
          line: 303,
          column: 20
        },
        end: {
          line: 303,
          column: 77
        }
      },
      "105": {
        start: {
          line: 304,
          column: 20
        },
        end: {
          line: 304,
          column: 37
        }
      },
      "106": {
        start: {
          line: 305,
          column: 20
        },
        end: {
          line: 305,
          column: 26
        }
      },
      "107": {
        start: {
          line: 307,
          column: 20
        },
        end: {
          line: 307,
          column: 77
        }
      },
      "108": {
        start: {
          line: 308,
          column: 20
        },
        end: {
          line: 308,
          column: 37
        }
      },
      "109": {
        start: {
          line: 309,
          column: 20
        },
        end: {
          line: 309,
          column: 26
        }
      },
      "110": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 318,
          column: 25
        }
      },
      "111": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 122
        }
      },
      "112": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 324,
          column: 14
        }
      },
      "113": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 80
        }
      },
      "114": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 24
        }
      },
      "115": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "116": {
        start: {
          line: 336,
          column: 31
        },
        end: {
          line: 336,
          column: 65
        }
      },
      "117": {
        start: {
          line: 337,
          column: 36
        },
        end: {
          line: 337,
          column: 118
        }
      },
      "118": {
        start: {
          line: 339,
          column: 26
        },
        end: {
          line: 347,
          column: 14
        }
      },
      "119": {
        start: {
          line: 348,
          column: 37
        },
        end: {
          line: 348,
          column: 69
        }
      },
      "120": {
        start: {
          line: 349,
          column: 33
        },
        end: {
          line: 349,
          column: 61
        }
      },
      "121": {
        start: {
          line: 350,
          column: 35
        },
        end: {
          line: 350,
          column: 65
        }
      },
      "122": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 359,
          column: 14
        }
      },
      "123": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 77
        }
      },
      "124": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 24
        }
      },
      "125": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 400,
          column: 9
        }
      },
      "126": {
        start: {
          line: 371,
          column: 28
        },
        end: {
          line: 371,
          column: 65
        }
      },
      "127": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 374,
          column: 13
        }
      },
      "128": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 373,
          column: 53
        }
      },
      "129": {
        start: {
          line: 376,
          column: 34
        },
        end: {
          line: 380,
          column: 24
        }
      },
      "130": {
        start: {
          line: 381,
          column: 34
        },
        end: {
          line: 391,
          column: 15
        }
      },
      "131": {
        start: {
          line: 382,
          column: 35
        },
        end: {
          line: 382,
          column: 96
        }
      },
      "132": {
        start: {
          line: 383,
          column: 39
        },
        end: {
          line: 383,
          column: 96
        }
      },
      "133": {
        start: {
          line: 384,
          column: 40
        },
        end: {
          line: 384,
          column: 72
        }
      },
      "134": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 390,
          column: 18
        }
      },
      "135": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 395,
          column: 14
        }
      },
      "136": {
        start: {
          line: 394,
          column: 59
        },
        end: {
          line: 394,
          column: 79
        }
      },
      "137": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 90
        }
      },
      "138": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 24
        }
      },
      "139": {
        start: {
          line: 404,
          column: 26
        },
        end: {
          line: 443,
          column: 9
        }
      },
      "140": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 446,
          column: 11
        }
      },
      "141": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 445,
          column: 59
        }
      },
      "142": {
        start: {
          line: 449,
          column: 29
        },
        end: {
          line: 464,
          column: 9
        }
      },
      "143": {
        start: {
          line: 465,
          column: 8
        },
        end: {
          line: 465,
          column: 65
        }
      },
      "144": {
        start: {
          line: 468,
          column: 21
        },
        end: {
          line: 468,
          column: 55
        }
      },
      "145": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 470,
          column: 25
        }
      },
      "146": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 25
        }
      },
      "147": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 474,
          column: 9
        }
      },
      "148": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 24
        }
      },
      "149": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 477,
          column: 9
        }
      },
      "150": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 24
        }
      },
      "151": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 20
        }
      },
      "152": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 486,
          column: 11
        }
      },
      "153": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 490,
          column: 41
        }
      },
      "154": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 494,
          column: 42
        }
      },
      "155": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 41
        }
      },
      "156": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 502,
          column: 41
        }
      },
      "157": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 506,
          column: 41
        }
      },
      "158": {
        start: {
          line: 509,
          column: 24
        },
        end: {
          line: 509,
          column: 61
        }
      },
      "159": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 511,
          column: 21
        }
      },
      "160": {
        start: {
          line: 511,
          column: 12
        },
        end: {
          line: 511,
          column: 21
        }
      },
      "161": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 41
        }
      },
      "162": {
        start: {
          line: 515,
          column: 32
        },
        end: {
          line: 515,
          column: 34
        }
      },
      "163": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 518,
          column: 9
        }
      },
      "164": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 517,
          column: 83
        }
      },
      "165": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 521,
          column: 9
        }
      },
      "166": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 520,
          column: 75
        }
      },
      "167": {
        start: {
          line: 522,
          column: 8
        },
        end: {
          line: 524,
          column: 9
        }
      },
      "168": {
        start: {
          line: 523,
          column: 12
        },
        end: {
          line: 523,
          column: 81
        }
      },
      "169": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 527,
          column: 9
        }
      },
      "170": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 526,
          column: 104
        }
      },
      "171": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 31
        }
      },
      "172": {
        start: {
          line: 532,
          column: 8
        },
        end: {
          line: 532,
          column: 75
        }
      },
      "173": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 541,
          column: 10
        }
      },
      "174": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 558,
          column: 10
        }
      },
      "175": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 562,
          column: 41
        }
      },
      "176": {
        start: {
          line: 565,
          column: 0
        },
        end: {
          line: 565,
          column: 48
        }
      },
      "177": {
        start: {
          line: 566,
          column: 0
        },
        end: {
          line: 566,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 48
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 30
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 44
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 46,
            column: 63
          },
          end: {
            line: 46,
            column: 64
          }
        },
        loc: {
          start: {
            line: 46,
            column: 68
          },
          end: {
            line: 46,
            column: 78
          }
        },
        line: 46
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 44
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 48
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 38
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 60
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 71
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 33
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 75
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 40
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 79
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 55
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 83
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 39
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 90
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 57
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 128
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 42
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 200
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 50
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 222
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 54
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 253
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 292,
            column: 5
          }
        },
        loc: {
          start: {
            line: 292,
            column: 55
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 292
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        loc: {
          start: {
            line: 334,
            column: 32
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 334
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        },
        loc: {
          start: {
            line: 369,
            column: 68
          },
          end: {
            line: 401,
            column: 5
          }
        },
        line: 369
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 381,
            column: 70
          },
          end: {
            line: 381,
            column: 71
          }
        },
        loc: {
          start: {
            line: 381,
            column: 94
          },
          end: {
            line: 391,
            column: 13
          }
        },
        line: 381
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 394,
            column: 52
          },
          end: {
            line: 394,
            column: 53
          }
        },
        loc: {
          start: {
            line: 394,
            column: 59
          },
          end: {
            line: 394,
            column: 79
          }
        },
        line: 394
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        },
        loc: {
          start: {
            line: 403,
            column: 37
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 403
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 444,
            column: 26
          },
          end: {
            line: 444,
            column: 27
          }
        },
        loc: {
          start: {
            line: 444,
            column: 38
          },
          end: {
            line: 446,
            column: 9
          }
        },
        line: 444
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 448,
            column: 5
          }
        },
        loc: {
          start: {
            line: 448,
            column: 91
          },
          end: {
            line: 466,
            column: 5
          }
        },
        line: 448
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 467,
            column: 4
          },
          end: {
            line: 467,
            column: 5
          }
        },
        loc: {
          start: {
            line: 467,
            column: 54
          },
          end: {
            line: 479,
            column: 5
          }
        },
        line: 467
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 47
          },
          end: {
            line: 487,
            column: 5
          }
        },
        line: 480
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 488,
            column: 4
          },
          end: {
            line: 488,
            column: 5
          }
        },
        loc: {
          start: {
            line: 488,
            column: 45
          },
          end: {
            line: 491,
            column: 5
          }
        },
        line: 488
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 492,
            column: 4
          },
          end: {
            line: 492,
            column: 5
          }
        },
        loc: {
          start: {
            line: 492,
            column: 40
          },
          end: {
            line: 495,
            column: 5
          }
        },
        line: 492
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 496,
            column: 4
          },
          end: {
            line: 496,
            column: 5
          }
        },
        loc: {
          start: {
            line: 496,
            column: 45
          },
          end: {
            line: 499,
            column: 5
          }
        },
        line: 496
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 500,
            column: 4
          },
          end: {
            line: 500,
            column: 5
          }
        },
        loc: {
          start: {
            line: 500,
            column: 42
          },
          end: {
            line: 503,
            column: 5
          }
        },
        line: 500
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 504,
            column: 4
          },
          end: {
            line: 504,
            column: 5
          }
        },
        loc: {
          start: {
            line: 504,
            column: 40
          },
          end: {
            line: 507,
            column: 5
          }
        },
        line: 504
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 508,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        loc: {
          start: {
            line: 508,
            column: 48
          },
          end: {
            line: 513,
            column: 5
          }
        },
        line: 508
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        },
        loc: {
          start: {
            line: 514,
            column: 54
          },
          end: {
            line: 529,
            column: 5
          }
        },
        line: 514
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 530,
            column: 4
          },
          end: {
            line: 530,
            column: 5
          }
        },
        loc: {
          start: {
            line: 530,
            column: 32
          },
          end: {
            line: 533,
            column: 5
          }
        },
        line: 530
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 534,
            column: 5
          }
        },
        loc: {
          start: {
            line: 534,
            column: 28
          },
          end: {
            line: 542,
            column: 5
          }
        },
        line: 534
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 543,
            column: 4
          },
          end: {
            line: 543,
            column: 5
          }
        },
        loc: {
          start: {
            line: 543,
            column: 30
          },
          end: {
            line: 559,
            column: 5
          }
        },
        line: 543
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 560,
            column: 4
          },
          end: {
            line: 560,
            column: 5
          }
        },
        loc: {
          start: {
            line: 560,
            column: 58
          },
          end: {
            line: 563,
            column: 5
          }
        },
        line: 560
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "4": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "6": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "7": {
        loc: {
          start: {
            line: 206,
            column: 33
          },
          end: {
            line: 206,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 33
          },
          end: {
            line: 206,
            column: 58
          }
        }, {
          start: {
            line: 206,
            column: 62
          },
          end: {
            line: 206,
            column: 65
          }
        }],
        line: 206
      },
      "8": {
        loc: {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 227,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 227,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "9": {
        loc: {
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 225,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 225,
            column: 25
          }
        }, {
          start: {
            line: 225,
            column: 29
          },
          end: {
            line: 225,
            column: 47
          }
        }],
        line: 225
      },
      "10": {
        loc: {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "11": {
        loc: {
          start: {
            line: 234,
            column: 33
          },
          end: {
            line: 234,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 33
          },
          end: {
            line: 234,
            column: 101
          }
        }, {
          start: {
            line: 234,
            column: 105
          },
          end: {
            line: 234,
            column: 107
          }
        }],
        line: 234
      },
      "12": {
        loc: {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 237,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 237,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "13": {
        loc: {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "14": {
        loc: {
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 262,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 262,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "15": {
        loc: {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 310,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 301,
            column: 26
          }
        }, {
          start: {
            line: 302,
            column: 16
          },
          end: {
            line: 305,
            column: 26
          }
        }, {
          start: {
            line: 306,
            column: 16
          },
          end: {
            line: 309,
            column: 26
          }
        }],
        line: 297
      },
      "16": {
        loc: {
          start: {
            line: 299,
            column: 38
          },
          end: {
            line: 299,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 299,
            column: 67
          },
          end: {
            line: 299,
            column: 70
          }
        }, {
          start: {
            line: 299,
            column: 73
          },
          end: {
            line: 299,
            column: 76
          }
        }],
        line: 299
      },
      "17": {
        loc: {
          start: {
            line: 303,
            column: 38
          },
          end: {
            line: 303,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 303,
            column: 67
          },
          end: {
            line: 303,
            column: 70
          }
        }, {
          start: {
            line: 303,
            column: 73
          },
          end: {
            line: 303,
            column: 76
          }
        }],
        line: 303
      },
      "18": {
        loc: {
          start: {
            line: 307,
            column: 38
          },
          end: {
            line: 307,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 307,
            column: 67
          },
          end: {
            line: 307,
            column: 70
          }
        }, {
          start: {
            line: 307,
            column: 73
          },
          end: {
            line: 307,
            column: 76
          }
        }],
        line: 307
      },
      "19": {
        loc: {
          start: {
            line: 354,
            column: 32
          },
          end: {
            line: 354,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 32
          },
          end: {
            line: 354,
            column: 56
          }
        }, {
          start: {
            line: 354,
            column: 60
          },
          end: {
            line: 354,
            column: 61
          }
        }],
        line: 354
      },
      "20": {
        loc: {
          start: {
            line: 355,
            column: 36
          },
          end: {
            line: 355,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 36
          },
          end: {
            line: 355,
            column: 64
          }
        }, {
          start: {
            line: 355,
            column: 68
          },
          end: {
            line: 355,
            column: 69
          }
        }],
        line: 355
      },
      "21": {
        loc: {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 374,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 374,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "22": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 470,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 470,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "23": {
        loc: {
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      },
      "24": {
        loc: {
          start: {
            line: 472,
            column: 12
          },
          end: {
            line: 472,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 472,
            column: 12
          },
          end: {
            line: 472,
            column: 63
          }
        }, {
          start: {
            line: 472,
            column: 67
          },
          end: {
            line: 472,
            column: 130
          }
        }],
        line: 472
      },
      "25": {
        loc: {
          start: {
            line: 475,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 475,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 475
      },
      "26": {
        loc: {
          start: {
            line: 475,
            column: 12
          },
          end: {
            line: 475,
            column: 141
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 475,
            column: 12
          },
          end: {
            line: 475,
            column: 64
          }
        }, {
          start: {
            line: 475,
            column: 68
          },
          end: {
            line: 475,
            column: 141
          }
        }],
        line: 475
      },
      "27": {
        loc: {
          start: {
            line: 510,
            column: 8
          },
          end: {
            line: 511,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 510,
            column: 8
          },
          end: {
            line: 511,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 510
      },
      "28": {
        loc: {
          start: {
            line: 516,
            column: 8
          },
          end: {
            line: 518,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 516,
            column: 8
          },
          end: {
            line: 518,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 516
      },
      "29": {
        loc: {
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 519
      },
      "30": {
        loc: {
          start: {
            line: 522,
            column: 8
          },
          end: {
            line: 524,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 522,
            column: 8
          },
          end: {
            line: 524,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 522
      },
      "31": {
        loc: {
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 527,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 527,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 525
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c73eb600103a74b2e01c102b55d3a5dc5ffffb44"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_3vtcc4fya = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_3vtcc4fya();
var __importDefault =
/* istanbul ignore next */
(cov_3vtcc4fya().s[0]++,
/* istanbul ignore next */
(cov_3vtcc4fya().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_3vtcc4fya().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_3vtcc4fya().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_3vtcc4fya().f[0]++;
  cov_3vtcc4fya().s[1]++;
  return /* istanbul ignore next */(cov_3vtcc4fya().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_3vtcc4fya().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_3vtcc4fya().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_3vtcc4fya().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_3vtcc4fya().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_3vtcc4fya().s[3]++;
exports.viralGrowthService = exports.ViralGrowthService = void 0;
const User_1 =
/* istanbul ignore next */
(cov_3vtcc4fya().s[4]++, require("@/models/User"));
const LiveStream_1 =
/* istanbul ignore next */
(cov_3vtcc4fya().s[5]++, require("@/models/LiveStream"));
const Transaction_1 =
/* istanbul ignore next */
(cov_3vtcc4fya().s[6]++, require("@/models/Transaction"));
const logger_1 =
/* istanbul ignore next */
(cov_3vtcc4fya().s[7]++, require("@/config/logger"));
const redis_1 =
/* istanbul ignore next */
(cov_3vtcc4fya().s[8]++, require("@/config/redis"));
const crypto_1 =
/* istanbul ignore next */
(cov_3vtcc4fya().s[9]++, __importDefault(require("crypto")));
class ViralGrowthService {
  referralProgram =
  /* istanbul ignore next */
  (cov_3vtcc4fya().s[10]++, {
    referrerReward: 100,
    // coins
    refereeReward: 50,
    // coins
    bonusMultiplier: 1.5,
    maxReferrals: 10,
    expirationDays: 30
  });
  viralCampaigns =
  /* istanbul ignore next */
  (cov_3vtcc4fya().s[11]++, new Map());
  constructor() {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[1]++;
    cov_3vtcc4fya().s[12]++;
    this.initializeViralCampaigns();
  }
  async getReferralStats(userId) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[2]++;
    cov_3vtcc4fya().s[13]++;
    // Return referral statistics for a user
    return {
      totalReferrals: 0,
      successfulReferrals: 0,
      totalEarnings: 0,
      pendingReferrals: 0,
      referralCode: `REF_${userId.slice(-8).toUpperCase()}`
    };
  }
  async useReferralCode(userId, referralCode) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[3]++;
    cov_3vtcc4fya().s[14]++;
    // Process referral code usage
    return {
      success: true,
      referrerId: 'user123',
      rewards: {
        coins: 100,
        experience: 50
      },
      message: 'Referral code applied successfully!'
    };
  }
  async getViralCampaigns() {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[4]++;
    cov_3vtcc4fya().s[15]++;
    // Return active viral campaigns
    return Array.from(this.viralCampaigns.values()).filter(c => {
      /* istanbul ignore next */
      cov_3vtcc4fya().f[5]++;
      cov_3vtcc4fya().s[16]++;
      return c.isActive;
    });
  }
  async createViralCampaign(campaignData) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[6]++;
    // Create a new viral campaign
    const campaign =
    /* istanbul ignore next */
    (cov_3vtcc4fya().s[17]++, {
      ...campaignData,
      id: Date.now().toString(),
      isActive: true,
      startDate: new Date(),
      endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000) // 30 days
    });
    /* istanbul ignore next */
    cov_3vtcc4fya().s[18]++;
    this.viralCampaigns.set(campaign.id, campaign);
    /* istanbul ignore next */
    cov_3vtcc4fya().s[19]++;
    return campaign;
  }
  async getGrowthMetrics(timeRange) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[7]++;
    cov_3vtcc4fya().s[20]++;
    // Return growth metrics for the specified time range
    return {
      newUsers: 0,
      activeUsers: 0,
      retentionRate: 0,
      viralCoefficient: 0,
      conversionRate: 0,
      timeRange
    };
  }
  async getViralCoefficient() {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[8]++;
    cov_3vtcc4fya().s[21]++;
    // Calculate and return viral coefficient
    return 1.5; // Placeholder value
  }
  async getTopReferrers(limit) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[9]++;
    cov_3vtcc4fya().s[22]++;
    // Return top referrers
    return [];
  }
  async getReferralLeaderboard(limit) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[10]++;
    cov_3vtcc4fya().s[23]++;
    // Return referral leaderboard
    return [];
  }
  async trackViralEvent(userId, eventType, metadata) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[11]++;
    cov_3vtcc4fya().s[24]++;
    // Track viral events for analytics
    this.logger.log(`Viral event tracked: ${eventType} for user ${userId}`, metadata);
  }
  /**
   * Generate unique referral code for user
   */
  async generateReferralCode(userId) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[12]++;
    cov_3vtcc4fya().s[25]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[26]++, await User_1.User.findById(userId));
      /* istanbul ignore next */
      cov_3vtcc4fya().s[27]++;
      if (!user) {
        /* istanbul ignore next */
        cov_3vtcc4fya().b[3][0]++;
        cov_3vtcc4fya().s[28]++;
        throw new Error('User not found');
      } else
      /* istanbul ignore next */
      {
        cov_3vtcc4fya().b[3][1]++;
      }
      // Generate unique code based on user ID and timestamp
      const timestamp =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[29]++, Date.now().toString(36));
      const hash =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[30]++, crypto_1.default.createHash('md5').update(userId + timestamp).digest('hex'));
      const referralCode =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[31]++, `HB${hash.substring(0, 8).toUpperCase()}`);
      // Store referral code
      /* istanbul ignore next */
      cov_3vtcc4fya().s[32]++;
      await (0, redis_1.setCache)(`referral:${referralCode}`, {
        userId,
        createdAt: new Date(),
        uses: 0,
        maxUses: this.referralProgram.maxReferrals
      }, this.referralProgram.expirationDays * 24 * 60 * 60);
      // Update user with referral code
      /* istanbul ignore next */
      cov_3vtcc4fya().s[33]++;
      await User_1.User.findByIdAndUpdate(userId, {
        referralCode,
        referralStats: {
          totalReferrals: 0,
          successfulReferrals: 0,
          totalEarnings: 0,
          lastReferralAt: null
        }
      });
      /* istanbul ignore next */
      cov_3vtcc4fya().s[34]++;
      logger_1.logger.info(`Generated referral code ${referralCode} for user ${userId}`);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[35]++;
      return referralCode;
    } catch (error) {
      /* istanbul ignore next */
      cov_3vtcc4fya().s[36]++;
      logger_1.logger.error('Failed to generate referral code:', error);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[37]++;
      throw error;
    }
  }
  /**
   * Process referral signup
   */
  async processReferralSignup(referralCode, newUserId) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[13]++;
    cov_3vtcc4fya().s[38]++;
    try {
      const referralData =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[39]++, await (0, redis_1.getCache)(`referral:${referralCode}`));
      /* istanbul ignore next */
      cov_3vtcc4fya().s[40]++;
      if (!referralData) {
        /* istanbul ignore next */
        cov_3vtcc4fya().b[4][0]++;
        cov_3vtcc4fya().s[41]++;
        return {
          success: false,
          referrerReward: 0,
          refereeReward: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_3vtcc4fya().b[4][1]++;
      }
      const referrerId =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[42]++, referralData.userId);
      // Check if referral limit reached
      /* istanbul ignore next */
      cov_3vtcc4fya().s[43]++;
      if (referralData.uses >= referralData.maxUses) {
        /* istanbul ignore next */
        cov_3vtcc4fya().b[5][0]++;
        cov_3vtcc4fya().s[44]++;
        return {
          success: false,
          referrerReward: 0,
          refereeReward: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_3vtcc4fya().b[5][1]++;
      }
      // Check if user already used this referral code
      const existingReferral =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[45]++, await (0, redis_1.getCache)(`referral_used:${newUserId}`));
      /* istanbul ignore next */
      cov_3vtcc4fya().s[46]++;
      if (existingReferral) {
        /* istanbul ignore next */
        cov_3vtcc4fya().b[6][0]++;
        cov_3vtcc4fya().s[47]++;
        return {
          success: false,
          referrerReward: 0,
          refereeReward: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_3vtcc4fya().b[6][1]++;
      }
      // Award rewards
      const referrerReward =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[48]++, this.referralProgram.referrerReward);
      const refereeReward =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[49]++, this.referralProgram.refereeReward);
      // Update referrer
      /* istanbul ignore next */
      cov_3vtcc4fya().s[50]++;
      await User_1.User.findByIdAndUpdate(referrerId, {
        $inc: {
          'coins.balance': referrerReward,
          'coins.totalEarned': referrerReward,
          'referralStats.totalReferrals': 1,
          'referralStats.successfulReferrals': 1,
          'referralStats.totalEarnings': referrerReward
        },
        $set: {
          'referralStats.lastReferralAt': new Date()
        }
      });
      // Update referee
      /* istanbul ignore next */
      cov_3vtcc4fya().s[51]++;
      await User_1.User.findByIdAndUpdate(newUserId, {
        $inc: {
          'coins.balance': refereeReward,
          'coins.totalEarned': refereeReward
        },
        $set: {
          referredBy: referrerId,
          referralCode: referralCode
        }
      });
      // Update referral usage
      /* istanbul ignore next */
      cov_3vtcc4fya().s[52]++;
      await (0, redis_1.setCache)(`referral:${referralCode}`, {
        ...referralData,
        uses: referralData.uses + 1
      }, this.referralProgram.expirationDays * 24 * 60 * 60);
      // Mark referral as used
      /* istanbul ignore next */
      cov_3vtcc4fya().s[53]++;
      await (0, redis_1.setCache)(`referral_used:${newUserId}`, {
        referralCode,
        referrerId,
        usedAt: new Date()
      }, 365 * 24 * 60 * 60); // 1 year
      // Create transaction records
      /* istanbul ignore next */
      cov_3vtcc4fya().s[54]++;
      await this.createReferralTransactions(referrerId, newUserId, referrerReward, refereeReward);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[55]++;
      logger_1.logger.info(`Referral processed: ${referralCode} -> ${newUserId}, rewards: ${referrerReward}/${refereeReward}`);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[56]++;
      return {
        success: true,
        referrerReward,
        refereeReward,
        referrerId
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_3vtcc4fya().s[57]++;
      logger_1.logger.error('Failed to process referral signup:', error);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[58]++;
      throw error;
    }
  }
  /**
   * Create viral challenge
   */
  async createViralChallenge(challenge) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[14]++;
    cov_3vtcc4fya().s[59]++;
    try {
      const challengeId =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[60]++, crypto_1.default.randomUUID());
      const viralChallenge =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[61]++, {
        id: challengeId,
        ...challenge,
        viralMultiplier:
        /* istanbul ignore next */
        (cov_3vtcc4fya().b[7][0]++, challenge.viralMultiplier) ||
        /* istanbul ignore next */
        (cov_3vtcc4fya().b[7][1]++, 2.0)
      });
      /* istanbul ignore next */
      cov_3vtcc4fya().s[62]++;
      this.viralCampaigns.set(challengeId, viralChallenge);
      // Store in Redis for quick access
      /* istanbul ignore next */
      cov_3vtcc4fya().s[63]++;
      await (0, redis_1.setCache)(`viral_campaign:${challengeId}`, viralChallenge, Math.ceil((challenge.endDate.getTime() - Date.now()) / 1000));
      /* istanbul ignore next */
      cov_3vtcc4fya().s[64]++;
      logger_1.logger.info(`Created viral challenge: ${challengeId}`);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[65]++;
      return challengeId;
    } catch (error) {
      /* istanbul ignore next */
      cov_3vtcc4fya().s[66]++;
      logger_1.logger.error('Failed to create viral challenge:', error);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[67]++;
      throw error;
    }
  }
  /**
   * Join viral challenge
   */
  async joinViralChallenge(challengeId, userId) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[15]++;
    cov_3vtcc4fya().s[68]++;
    try {
      const campaign =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[69]++, this.viralCampaigns.get(challengeId));
      /* istanbul ignore next */
      cov_3vtcc4fya().s[70]++;
      if (
      /* istanbul ignore next */
      (cov_3vtcc4fya().b[9][0]++, !campaign) ||
      /* istanbul ignore next */
      (cov_3vtcc4fya().b[9][1]++, !campaign.isActive)) {
        /* istanbul ignore next */
        cov_3vtcc4fya().b[8][0]++;
        cov_3vtcc4fya().s[71]++;
        return {
          success: false,
          message: 'Challenge not available'
        };
      } else
      /* istanbul ignore next */
      {
        cov_3vtcc4fya().b[8][1]++;
      }
      // Check eligibility
      const isEligible =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[72]++, await this.checkChallengeEligibility(campaign, userId));
      /* istanbul ignore next */
      cov_3vtcc4fya().s[73]++;
      if (!isEligible) {
        /* istanbul ignore next */
        cov_3vtcc4fya().b[10][0]++;
        cov_3vtcc4fya().s[74]++;
        return {
          success: false,
          message: 'Not eligible for this challenge'
        };
      } else
      /* istanbul ignore next */
      {
        cov_3vtcc4fya().b[10][1]++;
      }
      // Add user to challenge participants
      const participants =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[75]++,
      /* istanbul ignore next */
      (cov_3vtcc4fya().b[11][0]++, await (0, redis_1.getCache)(`challenge_participants:${challengeId}`)) ||
      /* istanbul ignore next */
      (cov_3vtcc4fya().b[11][1]++, []));
      /* istanbul ignore next */
      cov_3vtcc4fya().s[76]++;
      if (participants.includes(userId)) {
        /* istanbul ignore next */
        cov_3vtcc4fya().b[12][0]++;
        cov_3vtcc4fya().s[77]++;
        return {
          success: false,
          message: 'Already participating'
        };
      } else
      /* istanbul ignore next */
      {
        cov_3vtcc4fya().b[12][1]++;
      }
      cov_3vtcc4fya().s[78]++;
      participants.push(userId);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[79]++;
      await (0, redis_1.setCache)(`challenge_participants:${challengeId}`, participants, Math.ceil((campaign.endDate.getTime() - Date.now()) / 1000));
      // Award initial reward
      /* istanbul ignore next */
      cov_3vtcc4fya().s[80]++;
      await this.awardChallengeReward(userId, campaign.reward);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[81]++;
      logger_1.logger.info(`User ${userId} joined viral challenge ${challengeId}`);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[82]++;
      return {
        success: true,
        reward: campaign.reward
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_3vtcc4fya().s[83]++;
      logger_1.logger.error('Failed to join viral challenge:', error);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[84]++;
      throw error;
    }
  }
  /**
   * Calculate viral score for content
   */
  async calculateViralScore(contentId, contentType) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[16]++;
    cov_3vtcc4fya().s[85]++;
    try {
      let content;
      /* istanbul ignore next */
      cov_3vtcc4fya().s[86]++;
      if (contentType === 'stream') {
        /* istanbul ignore next */
        cov_3vtcc4fya().b[13][0]++;
        cov_3vtcc4fya().s[87]++;
        content = await LiveStream_1.LiveStream.findById(contentId);
      } else
      /* istanbul ignore next */
      {
        cov_3vtcc4fya().b[13][1]++;
      }
      // Add other content types as needed
      cov_3vtcc4fya().s[88]++;
      if (!content) {
        /* istanbul ignore next */
        cov_3vtcc4fya().b[14][0]++;
        cov_3vtcc4fya().s[89]++;
        throw new Error('Content not found');
      } else
      /* istanbul ignore next */
      {
        cov_3vtcc4fya().b[14][1]++;
      }
      const factors =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[90]++, {
        engagementRate: await this.calculateEngagementRate(contentId),
        shareRate: await this.calculateShareRate(contentId),
        completionRate: await this.calculateCompletionRate(contentId),
        socialProof: await this.calculateSocialProof(contentId),
        timing: await this.calculateTimingScore(content),
        creatorReputation: await this.calculateCreatorReputation(content.hostId)
      });
      const viralScore =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[91]++, (factors.engagementRate * 0.3 + factors.shareRate * 0.25 + factors.completionRate * 0.2 + factors.socialProof * 0.15 + factors.timing * 0.05 + factors.creatorReputation * 0.05) * 100);
      const recommendations =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[92]++, this.generateViralRecommendations(factors, viralScore));
      /* istanbul ignore next */
      cov_3vtcc4fya().s[93]++;
      return {
        viralScore: Math.round(viralScore * 100) / 100,
        factors,
        recommendations
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_3vtcc4fya().s[94]++;
      logger_1.logger.error('Failed to calculate viral score:', error);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[95]++;
      throw error;
    }
  }
  /**
   * Boost content visibility based on viral potential
   */
  async boostContentVisibility(contentId, boostType) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[17]++;
    cov_3vtcc4fya().s[96]++;
    try {
      const viralScore =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[97]++, await this.calculateViralScore(contentId, 'stream'));
      let boostMultiplier =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[98]++, 1.0);
      let duration =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[99]++, 3600); // 1 hour default
      /* istanbul ignore next */
      cov_3vtcc4fya().s[100]++;
      switch (boostType) {
        case 'trending':
          /* istanbul ignore next */
          cov_3vtcc4fya().b[15][0]++;
          cov_3vtcc4fya().s[101]++;
          boostMultiplier = viralScore.viralScore > 70 ?
          /* istanbul ignore next */
          (cov_3vtcc4fya().b[16][0]++, 2.0) :
          /* istanbul ignore next */
          (cov_3vtcc4fya().b[16][1]++, 1.5);
          /* istanbul ignore next */
          cov_3vtcc4fya().s[102]++;
          duration = 7200; // 2 hours
          /* istanbul ignore next */
          cov_3vtcc4fya().s[103]++;
          break;
        case 'featured':
          /* istanbul ignore next */
          cov_3vtcc4fya().b[15][1]++;
          cov_3vtcc4fya().s[104]++;
          boostMultiplier = viralScore.viralScore > 80 ?
          /* istanbul ignore next */
          (cov_3vtcc4fya().b[17][0]++, 3.0) :
          /* istanbul ignore next */
          (cov_3vtcc4fya().b[17][1]++, 2.0);
          /* istanbul ignore next */
          cov_3vtcc4fya().s[105]++;
          duration = 14400; // 4 hours
          /* istanbul ignore next */
          cov_3vtcc4fya().s[106]++;
          break;
        case 'viral':
          /* istanbul ignore next */
          cov_3vtcc4fya().b[15][2]++;
          cov_3vtcc4fya().s[107]++;
          boostMultiplier = viralScore.viralScore > 90 ?
          /* istanbul ignore next */
          (cov_3vtcc4fya().b[18][0]++, 5.0) :
          /* istanbul ignore next */
          (cov_3vtcc4fya().b[18][1]++, 3.0);
          /* istanbul ignore next */
          cov_3vtcc4fya().s[108]++;
          duration = 28800; // 8 hours
          /* istanbul ignore next */
          cov_3vtcc4fya().s[109]++;
          break;
      }
      // Store boost data
      /* istanbul ignore next */
      cov_3vtcc4fya().s[110]++;
      await (0, redis_1.setCache)(`content_boost:${contentId}`, {
        boostType,
        boostMultiplier,
        startTime: new Date(),
        endTime: new Date(Date.now() + duration * 1000),
        viralScore: viralScore.viralScore
      }, duration);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[111]++;
      logger_1.logger.info(`Boosted content ${contentId} with ${boostType} (${boostMultiplier}x for ${duration}s)`);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[112]++;
      return {
        success: true,
        boostMultiplier,
        duration
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_3vtcc4fya().s[113]++;
      logger_1.logger.error('Failed to boost content visibility:', error);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[114]++;
      throw error;
    }
  }
  /**
   * Generate social proof data
   */
  async generateSocialProof() {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[18]++;
    cov_3vtcc4fya().s[115]++;
    try {
      const totalUsers =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[116]++, await User_1.User.countDocuments());
      const activeStreamers =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[117]++, await User_1.User.countDocuments({
        'trust.level': {
          $in: ['high', 'verified']
        }
      }));
      // Get aggregated stats
      const stats =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[118]++, await User_1.User.aggregate([{
        $group: {
          _id: null,
          totalGiftsSent: {
            $sum: '$totalCoinsSpent'
          },
          totalHoursStreamed: {
            $sum: '$totalStreams'
          }
        }
      }]));
      const trendingHashtags =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[119]++, await this.getTrendingHashtags());
      const topCountries =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[120]++, await this.getTopCountries());
      const successStories =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[121]++, await this.getSuccessStories());
      /* istanbul ignore next */
      cov_3vtcc4fya().s[122]++;
      return {
        totalUsers,
        activeStreamers,
        totalGiftsSent:
        /* istanbul ignore next */
        (cov_3vtcc4fya().b[19][0]++, stats[0]?.totalGiftsSent) ||
        /* istanbul ignore next */
        (cov_3vtcc4fya().b[19][1]++, 0),
        totalHoursStreamed:
        /* istanbul ignore next */
        (cov_3vtcc4fya().b[20][0]++, stats[0]?.totalHoursStreamed) ||
        /* istanbul ignore next */
        (cov_3vtcc4fya().b[20][1]++, 0),
        trendingHashtags,
        topCountries,
        successStories
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_3vtcc4fya().s[123]++;
      logger_1.logger.error('Failed to generate social proof:', error);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[124]++;
      throw error;
    }
  }
  /**
   * Create collaboration opportunities
   */
  async createCollaborationOpportunity(creatorId, targetAudience) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[19]++;
    cov_3vtcc4fya().s[125]++;
    try {
      const creator =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[126]++, await User_1.User.findById(creatorId));
      /* istanbul ignore next */
      cov_3vtcc4fya().s[127]++;
      if (!creator) {
        /* istanbul ignore next */
        cov_3vtcc4fya().b[21][0]++;
        cov_3vtcc4fya().s[128]++;
        throw new Error('Creator not found');
      } else
      /* istanbul ignore next */
      {
        cov_3vtcc4fya().b[21][1]++;
      }
      // Find potential collaborators based on audience overlap
      const collaborators =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[129]++, await User_1.User.find({
        _id: {
          $ne: creatorId
        },
        'trust.level': {
          $in: ['high', 'verified']
        },
        followers: {
          $gte: creator.followers * 0.5,
          $lte: creator.followers * 2
        }
      }).limit(10));
      const opportunities =
      /* istanbul ignore next */
      (cov_3vtcc4fya().s[130]++, await Promise.all(collaborators.map(async collaborator => {
        /* istanbul ignore next */
        cov_3vtcc4fya().f[20]++;
        const matchScore =
        /* istanbul ignore next */
        (cov_3vtcc4fya().s[131]++, await this.calculateCollaborationMatch(creator, collaborator));
        const potentialReach =
        /* istanbul ignore next */
        (cov_3vtcc4fya().s[132]++, Math.min(creator.followers, collaborator.followers) * 0.8);
        const suggestedReward =
        /* istanbul ignore next */
        (cov_3vtcc4fya().s[133]++, Math.floor(potentialReach * 0.1));
        /* istanbul ignore next */
        cov_3vtcc4fya().s[134]++;
        return {
          collaboratorId: collaborator._id.toString(),
          matchScore,
          potentialReach,
          suggestedReward
        };
      })));
      /* istanbul ignore next */
      cov_3vtcc4fya().s[135]++;
      return {
        success: true,
        opportunities: opportunities.filter(opp => {
          /* istanbul ignore next */
          cov_3vtcc4fya().f[21]++;
          cov_3vtcc4fya().s[136]++;
          return opp.matchScore > 0.6;
        })
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_3vtcc4fya().s[137]++;
      logger_1.logger.error('Failed to create collaboration opportunities:', error);
      /* istanbul ignore next */
      cov_3vtcc4fya().s[138]++;
      throw error;
    }
  }
  // Private helper methods
  async initializeViralCampaigns() {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[22]++;
    const campaigns =
    /* istanbul ignore next */
    (cov_3vtcc4fya().s[139]++, [{
      id: 'new-user-bonus',
      name: 'New User Welcome Bonus',
      type: 'referral',
      startDate: new Date(),
      endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),
      // 30 days
      reward: {
        coins: 100,
        experience: 50,
        specialBadges: ['welcome'],
        exclusiveAccess: []
      },
      requirements: {
        minParticipants: 1,
        eligibilityCriteria: {
          isNewUser: true
        }
      },
      viralMultiplier: 1.5,
      isActive: true
    }, {
      id: 'streaming-streak',
      name: '7-Day Streaming Streak',
      type: 'challenge',
      startDate: new Date(),
      endDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),
      // 7 days
      reward: {
        coins: 500,
        experience: 200,
        specialBadges: ['streak-master'],
        exclusiveAccess: ['premium-features']
      },
      requirements: {
        minParticipants: 10,
        eligibilityCriteria: {
          minStreams: 1
        }
      },
      viralMultiplier: 2.0,
      isActive: true
    }]);
    /* istanbul ignore next */
    cov_3vtcc4fya().s[140]++;
    campaigns.forEach(campaign => {
      /* istanbul ignore next */
      cov_3vtcc4fya().f[23]++;
      cov_3vtcc4fya().s[141]++;
      this.viralCampaigns.set(campaign.id, campaign);
    });
  }
  async createReferralTransactions(referrerId, refereeId, referrerReward, refereeReward) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[24]++;
    const transactions =
    /* istanbul ignore next */
    (cov_3vtcc4fya().s[142]++, [{
      userId: referrerId,
      type: 'referral_bonus',
      amount: referrerReward,
      description: 'Referral bonus for bringing new user',
      metadata: {
        refereeId,
        type: 'referrer'
      }
    }, {
      userId: refereeId,
      type: 'referral_bonus',
      amount: refereeReward,
      description: 'Welcome bonus for joining via referral',
      metadata: {
        referrerId,
        type: 'referee'
      }
    }]);
    /* istanbul ignore next */
    cov_3vtcc4fya().s[143]++;
    await Transaction_1.Transaction.insertMany(transactions);
  }
  async checkChallengeEligibility(campaign, userId) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[25]++;
    const user =
    /* istanbul ignore next */
    (cov_3vtcc4fya().s[144]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_3vtcc4fya().s[145]++;
    if (!user) {
      /* istanbul ignore next */
      cov_3vtcc4fya().b[22][0]++;
      cov_3vtcc4fya().s[146]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_3vtcc4fya().b[22][1]++;
    }
    // Check basic eligibility criteria
    cov_3vtcc4fya().s[147]++;
    if (
    /* istanbul ignore next */
    (cov_3vtcc4fya().b[24][0]++, campaign.requirements.eligibilityCriteria.isNewUser) &&
    /* istanbul ignore next */
    (cov_3vtcc4fya().b[24][1]++, user.createdAt > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000))) {
      /* istanbul ignore next */
      cov_3vtcc4fya().b[23][0]++;
      cov_3vtcc4fya().s[148]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_3vtcc4fya().b[23][1]++;
    }
    cov_3vtcc4fya().s[149]++;
    if (
    /* istanbul ignore next */
    (cov_3vtcc4fya().b[26][0]++, campaign.requirements.eligibilityCriteria.minStreams) &&
    /* istanbul ignore next */
    (cov_3vtcc4fya().b[26][1]++, user.totalStreams >= campaign.requirements.eligibilityCriteria.minStreams)) {
      /* istanbul ignore next */
      cov_3vtcc4fya().b[25][0]++;
      cov_3vtcc4fya().s[150]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_3vtcc4fya().b[25][1]++;
    }
    cov_3vtcc4fya().s[151]++;
    return true; // Default to eligible
  }
  async awardChallengeReward(userId, reward) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[26]++;
    cov_3vtcc4fya().s[152]++;
    await User_1.User.findByIdAndUpdate(userId, {
      $inc: {
        'coins.balance': reward.coins,
        'coins.totalEarned': reward.coins
      }
    });
  }
  async calculateEngagementRate(contentId) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[27]++;
    cov_3vtcc4fya().s[153]++;
    // Mock implementation - would calculate based on likes, comments, shares
    return Math.random() * 0.3 + 0.1; // 10-40%
  }
  async calculateShareRate(contentId) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[28]++;
    cov_3vtcc4fya().s[154]++;
    // Mock implementation - would calculate based on shares
    return Math.random() * 0.2 + 0.05; // 5-25%
  }
  async calculateCompletionRate(contentId) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[29]++;
    cov_3vtcc4fya().s[155]++;
    // Mock implementation - would calculate based on watch time
    return Math.random() * 0.4 + 0.3; // 30-70%
  }
  async calculateSocialProof(contentId) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[30]++;
    cov_3vtcc4fya().s[156]++;
    // Mock implementation - would calculate based on social signals
    return Math.random() * 0.3 + 0.2; // 20-50%
  }
  async calculateTimingScore(content) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[31]++;
    cov_3vtcc4fya().s[157]++;
    // Mock implementation - would calculate based on optimal posting times
    return Math.random() * 0.4 + 0.3; // 30-70%
  }
  async calculateCreatorReputation(creatorId) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[32]++;
    const creator =
    /* istanbul ignore next */
    (cov_3vtcc4fya().s[158]++, await User_1.User.findById(creatorId));
    /* istanbul ignore next */
    cov_3vtcc4fya().s[159]++;
    if (!creator) {
      /* istanbul ignore next */
      cov_3vtcc4fya().b[27][0]++;
      cov_3vtcc4fya().s[160]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_3vtcc4fya().b[27][1]++;
    }
    cov_3vtcc4fya().s[161]++;
    return creator.trust.score / 100; // Convert to 0-1 scale
  }
  generateViralRecommendations(factors, viralScore) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[33]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_3vtcc4fya().s[162]++, []);
    /* istanbul ignore next */
    cov_3vtcc4fya().s[163]++;
    if (factors.engagementRate < 0.2) {
      /* istanbul ignore next */
      cov_3vtcc4fya().b[28][0]++;
      cov_3vtcc4fya().s[164]++;
      recommendations.push('Improve content quality to increase engagement');
    } else
    /* istanbul ignore next */
    {
      cov_3vtcc4fya().b[28][1]++;
    }
    cov_3vtcc4fya().s[165]++;
    if (factors.shareRate < 0.1) {
      /* istanbul ignore next */
      cov_3vtcc4fya().b[29][0]++;
      cov_3vtcc4fya().s[166]++;
      recommendations.push('Add shareable elements to your content');
    } else
    /* istanbul ignore next */
    {
      cov_3vtcc4fya().b[29][1]++;
    }
    cov_3vtcc4fya().s[167]++;
    if (factors.timing < 0.5) {
      /* istanbul ignore next */
      cov_3vtcc4fya().b[30][0]++;
      cov_3vtcc4fya().s[168]++;
      recommendations.push('Post during peak hours for better visibility');
    } else
    /* istanbul ignore next */
    {
      cov_3vtcc4fya().b[30][1]++;
    }
    cov_3vtcc4fya().s[169]++;
    if (viralScore > 80) {
      /* istanbul ignore next */
      cov_3vtcc4fya().b[31][0]++;
      cov_3vtcc4fya().s[170]++;
      recommendations.push('Your content has high viral potential! Consider boosting visibility');
    } else
    /* istanbul ignore next */
    {
      cov_3vtcc4fya().b[31][1]++;
    }
    cov_3vtcc4fya().s[171]++;
    return recommendations;
  }
  async getTrendingHashtags() {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[34]++;
    cov_3vtcc4fya().s[172]++;
    // Mock implementation - would analyze trending hashtags
    return ['#halobuzz', '#livestream', '#gaming', '#nepal', '#viral'];
  }
  async getTopCountries() {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[35]++;
    cov_3vtcc4fya().s[173]++;
    // Mock implementation - would analyze user distribution
    return [{
      country: 'Nepal',
      users: 1500
    }, {
      country: 'India',
      users: 800
    }, {
      country: 'USA',
      users: 300
    }, {
      country: 'UK',
      users: 200
    }];
  }
  async getSuccessStories() {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[36]++;
    cov_3vtcc4fya().s[174]++;
    // Mock implementation - would get real success stories
    return [{
      userId: 'user1',
      achievement: 'Top Streamer of the Month',
      earnings: 5000,
      followers: 10000
    }, {
      userId: 'user2',
      achievement: 'Gaming Champion',
      earnings: 3000,
      followers: 8000
    }];
  }
  async calculateCollaborationMatch(creator1, creator2) {
    /* istanbul ignore next */
    cov_3vtcc4fya().f[37]++;
    cov_3vtcc4fya().s[175]++;
    // Mock implementation - would calculate based on audience overlap, content similarity, etc.
    return Math.random() * 0.4 + 0.6; // 60-100%
  }
}
/* istanbul ignore next */
cov_3vtcc4fya().s[176]++;
exports.ViralGrowthService = ViralGrowthService;
/* istanbul ignore next */
cov_3vtcc4fya().s[177]++;
exports.viralGrowthService = new ViralGrowthService();