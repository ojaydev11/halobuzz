4af459a6512bef0e152973906335d1f6
"use strict";

/* istanbul ignore next */
function cov_1j095dpjlv() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\iap.ts";
  var hash = "57b6d10cee288bd74e4b972afd535b32d21884f0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\iap.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "5": {
        start: {
          line: 8,
          column: 31
        },
        end: {
          line: 8,
          column: 90
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 39
        }
      },
      "7": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 10,
          column: 53
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "9": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 187,
          column: 3
        }
      },
      "10": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "11": {
        start: {
          line: 18,
          column: 88
        },
        end: {
          line: 18,
          column: 96
        }
      },
      "12": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "13": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "14": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 25,
          column: 15
        }
      },
      "15": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 102
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "17": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "19": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "20": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 42,
          column: 19
        }
      },
      "21": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "22": {
        start: {
          line: 50,
          column: 13
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "23": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "24": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 55,
          column: 19
        }
      },
      "25": {
        start: {
          line: 57,
          column: 35
        },
        end: {
          line: 57,
          column: 64
        }
      },
      "26": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "27": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "28": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "29": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 76
        }
      },
      "30": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 77,
          column: 15
        }
      },
      "31": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "32": {
        start: {
          line: 82,
          column: 25
        },
        end: {
          line: 82,
          column: 59
        }
      },
      "33": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "34": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 87,
          column: 19
        }
      },
      "35": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "36": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 45
        }
      },
      "37": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 86
        }
      },
      "38": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 30
        }
      },
      "39": {
        start: {
          line: 96,
          column: 32
        },
        end: {
          line: 112,
          column: 14
        }
      },
      "40": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 37
        }
      },
      "41": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "42": {
        start: {
          line: 123,
          column: 13
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "43": {
        start: {
          line: 125,
          column: 25
        },
        end: {
          line: 125,
          column: 59
        }
      },
      "44": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "45": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 130,
          column: 19
        }
      },
      "46": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "47": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 70
        }
      },
      "48": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 59
        }
      },
      "49": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 44
        }
      },
      "50": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 61
        }
      },
      "51": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 92
        }
      },
      "52": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 30
        }
      },
      "53": {
        start: {
          line: 142,
          column: 32
        },
        end: {
          line: 162,
          column: 14
        }
      },
      "54": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 37
        }
      },
      "55": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 171,
          column: 15
        }
      },
      "56": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "57": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 56
        }
      },
      "58": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 185,
          column: 11
        }
      },
      "59": {
        start: {
          line: 192,
          column: 0
        },
        end: {
          line: 223,
          column: 3
        }
      },
      "60": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "61": {
        start: {
          line: 194,
          column: 29
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "62": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "63": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "64": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 56
        }
      },
      "65": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 221,
          column: 11
        }
      },
      "66": {
        start: {
          line: 224,
          column: 0
        },
        end: {
          line: 224,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 46
          },
          end: {
            line: 16,
            column: 47
          }
        },
        loc: {
          start: {
            line: 16,
            column: 66
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 192,
            column: 47
          },
          end: {
            line: 192,
            column: 48
          }
        },
        loc: {
          start: {
            line: 192,
            column: 67
          },
          end: {
            line: 223,
            column: 1
          }
        },
        line: 192
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 21
          }
        }, {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 35
          }
        }, {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 21,
            column: 53
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: 50,
            column: 13
          },
          end: {
            line: 70,
            column: 9
          }
        }],
        line: 37
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 13
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 13
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: 65,
            column: 13
          },
          end: {
            line: 70,
            column: 9
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "10": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "11": {
        loc: {
          start: {
            line: 76,
            column: 34
          },
          end: {
            line: 76,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 34
          },
          end: {
            line: 76,
            column: 56
          }
        }, {
          start: {
            line: 76,
            column: 60
          },
          end: {
            line: 76,
            column: 87
          }
        }],
        line: 76
      },
      "12": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 178,
            column: 9
          }
        }],
        line: 80
      },
      "13": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "14": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "15": {
        loc: {
          start: {
            line: 93,
            column: 35
          },
          end: {
            line: 93,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 35
          },
          end: {
            line: 93,
            column: 54
          }
        }, {
          start: {
            line: 93,
            column: 58
          },
          end: {
            line: 93,
            column: 59
          }
        }],
        line: 93
      },
      "16": {
        loc: {
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: 173,
            column: 13
          },
          end: {
            line: 178,
            column: 9
          }
        }],
        line: 123
      },
      "17": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "18": {
        loc: {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "19": {
        loc: {
          start: {
            line: 146,
            column: 25
          },
          end: {
            line: 146,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 25
          },
          end: {
            line: 146,
            column: 45
          }
        }, {
          start: {
            line: 146,
            column: 49
          },
          end: {
            line: 146,
            column: 50
          }
        }],
        line: 146
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "57b6d10cee288bd74e4b972afd535b32d21884f0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1j095dpjlv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1j095dpjlv();
var __importDefault =
/* istanbul ignore next */
(cov_1j095dpjlv().s[0]++,
/* istanbul ignore next */
(cov_1j095dpjlv().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1j095dpjlv().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1j095dpjlv().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1j095dpjlv().f[0]++;
  cov_1j095dpjlv().s[1]++;
  return /* istanbul ignore next */(cov_1j095dpjlv().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1j095dpjlv().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1j095dpjlv().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1j095dpjlv().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1j095dpjlv().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1j095dpjlv().s[3]++, __importDefault(require("express")));
const auth_1 =
/* istanbul ignore next */
(cov_1j095dpjlv().s[4]++, require("@/middleware/auth"));
const IAPValidationService_1 =
/* istanbul ignore next */
(cov_1j095dpjlv().s[5]++, __importDefault(require("@/services/IAPValidationService")));
const User_1 =
/* istanbul ignore next */
(cov_1j095dpjlv().s[6]++, require("@/models/User"));
const Transaction_1 =
/* istanbul ignore next */
(cov_1j095dpjlv().s[7]++, require("@/models/Transaction"));
const router =
/* istanbul ignore next */
(cov_1j095dpjlv().s[8]++, express_1.default.Router());
/**
 * Verify IAP receipt and credit coins/subscription
 * POST /api/v1/wallet/iap/verify
 */
/* istanbul ignore next */
cov_1j095dpjlv().s[9]++;
router.post('/verify', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_1j095dpjlv().f[1]++;
  cov_1j095dpjlv().s[10]++;
  try {
    const {
      platform,
      productId,
      transactionId,
      purchaseToken,
      receipt,
      orderId
    } =
    /* istanbul ignore next */
    (cov_1j095dpjlv().s[11]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_1j095dpjlv().s[12]++, req.user.userId);
    // Validate required fields
    /* istanbul ignore next */
    cov_1j095dpjlv().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_1j095dpjlv().b[4][0]++, !platform) ||
    /* istanbul ignore next */
    (cov_1j095dpjlv().b[4][1]++, !productId) ||
    /* istanbul ignore next */
    (cov_1j095dpjlv().b[4][2]++, !transactionId)) {
      /* istanbul ignore next */
      cov_1j095dpjlv().b[3][0]++;
      cov_1j095dpjlv().s[14]++;
      return res.status(400).json({
        success: false,
        error: {
          message: 'Missing required fields'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1j095dpjlv().b[3][1]++;
    }
    // Check for duplicate transaction
    const isDuplicate =
    /* istanbul ignore next */
    (cov_1j095dpjlv().s[15]++, await IAPValidationService_1.default.isDuplicateTransaction(transactionId));
    /* istanbul ignore next */
    cov_1j095dpjlv().s[16]++;
    if (isDuplicate) {
      /* istanbul ignore next */
      cov_1j095dpjlv().b[5][0]++;
      cov_1j095dpjlv().s[17]++;
      return res.status(400).json({
        success: false,
        error: {
          message: 'Transaction already processed'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1j095dpjlv().b[5][1]++;
    }
    let validationResult;
    // Validate receipt based on platform
    /* istanbul ignore next */
    cov_1j095dpjlv().s[18]++;
    if (platform === 'ios') {
      /* istanbul ignore next */
      cov_1j095dpjlv().b[6][0]++;
      cov_1j095dpjlv().s[19]++;
      if (!receipt) {
        /* istanbul ignore next */
        cov_1j095dpjlv().b[7][0]++;
        cov_1j095dpjlv().s[20]++;
        return res.status(400).json({
          success: false,
          error: {
            message: 'Receipt required for iOS'
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1j095dpjlv().b[7][1]++;
      }
      cov_1j095dpjlv().s[21]++;
      validationResult = await IAPValidationService_1.default.validateAppleReceipt({
        receipt,
        productId,
        transactionId
      });
    } else {
      /* istanbul ignore next */
      cov_1j095dpjlv().b[6][1]++;
      cov_1j095dpjlv().s[22]++;
      if (platform === 'android') {
        /* istanbul ignore next */
        cov_1j095dpjlv().b[8][0]++;
        cov_1j095dpjlv().s[23]++;
        if (!purchaseToken) {
          /* istanbul ignore next */
          cov_1j095dpjlv().b[9][0]++;
          cov_1j095dpjlv().s[24]++;
          return res.status(400).json({
            success: false,
            error: {
              message: 'Purchase token required for Android'
            }
          });
        } else
        /* istanbul ignore next */
        {
          cov_1j095dpjlv().b[9][1]++;
        }
        const isSubscription =
        /* istanbul ignore next */
        (cov_1j095dpjlv().s[25]++, productId.includes('og.tier'));
        /* istanbul ignore next */
        cov_1j095dpjlv().s[26]++;
        validationResult = await IAPValidationService_1.default.validateGoogleReceipt({
          packageName: 'com.halobuzz.app',
          productId,
          purchaseToken,
          subscription: isSubscription
        });
      } else {
        /* istanbul ignore next */
        cov_1j095dpjlv().b[8][1]++;
        cov_1j095dpjlv().s[27]++;
        return res.status(400).json({
          success: false,
          error: {
            message: 'Invalid platform'
          }
        });
      }
    }
    // Check validation result
    /* istanbul ignore next */
    cov_1j095dpjlv().s[28]++;
    if (!validationResult.valid) {
      /* istanbul ignore next */
      cov_1j095dpjlv().b[10][0]++;
      cov_1j095dpjlv().s[29]++;
      console.error('IAP validation failed:', validationResult.error);
      /* istanbul ignore next */
      cov_1j095dpjlv().s[30]++;
      return res.status(400).json({
        success: false,
        error: {
          message:
          /* istanbul ignore next */
          (cov_1j095dpjlv().b[11][0]++, validationResult.error) ||
          /* istanbul ignore next */
          (cov_1j095dpjlv().b[11][1]++, 'Receipt validation failed')
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1j095dpjlv().b[10][1]++;
    }
    // Process based on product type
    cov_1j095dpjlv().s[31]++;
    if (validationResult.coins) {
      /* istanbul ignore next */
      cov_1j095dpjlv().b[12][0]++;
      // Coin purchase - credit coins to user's wallet
      const user =
      /* istanbul ignore next */
      (cov_1j095dpjlv().s[32]++, await User_1.User.findById(userId));
      /* istanbul ignore next */
      cov_1j095dpjlv().s[33]++;
      if (!user) {
        /* istanbul ignore next */
        cov_1j095dpjlv().b[13][0]++;
        cov_1j095dpjlv().s[34]++;
        return res.status(404).json({
          success: false,
          error: {
            message: 'User not found'
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1j095dpjlv().b[13][1]++;
      }
      // Add coins to balance
      cov_1j095dpjlv().s[35]++;
      if (!user.wallet) {
        /* istanbul ignore next */
        cov_1j095dpjlv().b[14][0]++;
        cov_1j095dpjlv().s[36]++;
        user.wallet = {
          balance: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_1j095dpjlv().b[14][1]++;
      }
      cov_1j095dpjlv().s[37]++;
      user.wallet.balance = (
      /* istanbul ignore next */
      (cov_1j095dpjlv().b[15][0]++, user.wallet.balance) ||
      /* istanbul ignore next */
      (cov_1j095dpjlv().b[15][1]++, 0)) + validationResult.coins;
      /* istanbul ignore next */
      cov_1j095dpjlv().s[38]++;
      await user.save();
      // Create transaction record
      const transaction =
      /* istanbul ignore next */
      (cov_1j095dpjlv().s[39]++, new Transaction_1.Transaction({
        userId,
        type: 'purchase',
        amount: validationResult.coins,
        balance: user.wallet.balance,
        description: `Purchased ${validationResult.coins} coins via IAP`,
        status: 'completed',
        metadata: {
          iap: {
            platform,
            productId,
            transactionId,
            orderId,
            validatedAt: new Date()
          }
        }
      }));
      /* istanbul ignore next */
      cov_1j095dpjlv().s[40]++;
      await transaction.save();
      /* istanbul ignore next */
      cov_1j095dpjlv().s[41]++;
      return res.json({
        success: true,
        data: {
          coins: validationResult.coins,
          balance: user.wallet.balance,
          transactionId
        }
      });
    } else {
      /* istanbul ignore next */
      cov_1j095dpjlv().b[12][1]++;
      cov_1j095dpjlv().s[42]++;
      if (validationResult.tier) {
        /* istanbul ignore next */
        cov_1j095dpjlv().b[16][0]++;
        // OG Tier subscription - update user's OG tier
        const user =
        /* istanbul ignore next */
        (cov_1j095dpjlv().s[43]++, await User_1.User.findById(userId));
        /* istanbul ignore next */
        cov_1j095dpjlv().s[44]++;
        if (!user) {
          /* istanbul ignore next */
          cov_1j095dpjlv().b[17][0]++;
          cov_1j095dpjlv().s[45]++;
          return res.status(404).json({
            success: false,
            error: {
              message: 'User not found'
            }
          });
        } else
        /* istanbul ignore next */
        {
          cov_1j095dpjlv().b[17][1]++;
        }
        // Update OG tier
        cov_1j095dpjlv().s[46]++;
        if (!user.ogMembership) {
          /* istanbul ignore next */
          cov_1j095dpjlv().b[18][0]++;
          cov_1j095dpjlv().s[47]++;
          user.ogMembership = {
            tier: 0,
            joinedAt: new Date()
          };
        } else
        /* istanbul ignore next */
        {
          cov_1j095dpjlv().b[18][1]++;
        }
        cov_1j095dpjlv().s[48]++;
        user.ogMembership.tier = validationResult.tier;
        /* istanbul ignore next */
        cov_1j095dpjlv().s[49]++;
        user.ogMembership.active = true;
        /* istanbul ignore next */
        cov_1j095dpjlv().s[50]++;
        user.ogMembership.subscriptionId = transactionId;
        /* istanbul ignore next */
        cov_1j095dpjlv().s[51]++;
        user.ogMembership.renewalDate = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000); // 30 days
        /* istanbul ignore next */
        cov_1j095dpjlv().s[52]++;
        await user.save();
        // Create transaction record
        const transaction =
        /* istanbul ignore next */
        (cov_1j095dpjlv().s[53]++, new Transaction_1.Transaction({
          userId,
          type: 'subscription',
          amount: 0,
          balance:
          /* istanbul ignore next */
          (cov_1j095dpjlv().b[19][0]++, user.wallet?.balance) ||
          /* istanbul ignore next */
          (cov_1j095dpjlv().b[19][1]++, 0),
          description: `Subscribed to OG Tier ${validationResult.tier} via IAP`,
          status: 'completed',
          metadata: {
            iap: {
              platform,
              productId,
              transactionId,
              orderId,
              validatedAt: new Date()
            },
            subscription: {
              tier: validationResult.tier,
              renewalDate: user.ogMembership.renewalDate
            }
          }
        }));
        /* istanbul ignore next */
        cov_1j095dpjlv().s[54]++;
        await transaction.save();
        /* istanbul ignore next */
        cov_1j095dpjlv().s[55]++;
        return res.json({
          success: true,
          data: {
            tier: validationResult.tier,
            renewalDate: user.ogMembership.renewalDate,
            transactionId
          }
        });
      } else {
        /* istanbul ignore next */
        cov_1j095dpjlv().b[16][1]++;
        cov_1j095dpjlv().s[56]++;
        return res.status(400).json({
          success: false,
          error: {
            message: 'Unknown product type'
          }
        });
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1j095dpjlv().s[57]++;
    console.error('IAP verification error:', error);
    /* istanbul ignore next */
    cov_1j095dpjlv().s[58]++;
    return res.status(500).json({
      success: false,
      error: {
        message: 'Internal server error'
      }
    });
  }
});
/**
 * Get IAP product details
 * GET /api/v1/wallet/iap/products
 */
/* istanbul ignore next */
cov_1j095dpjlv().s[59]++;
router.get('/products', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_1j095dpjlv().f[2]++;
  cov_1j095dpjlv().s[60]++;
  try {
    const coinPackages =
    /* istanbul ignore next */
    (cov_1j095dpjlv().s[61]++, [{
      id: 'coins_100',
      coins: 100,
      price: 0.99,
      currency: 'USD',
      title: 'Starter Pack'
    }, {
      id: 'coins_500',
      coins: 550,
      price: 4.99,
      currency: 'USD',
      title: 'Popular Pack',
      bonus: 50
    }, {
      id: 'coins_1000',
      coins: 1150,
      price: 9.99,
      currency: 'USD',
      title: 'Value Pack',
      bonus: 150
    }, {
      id: 'coins_5000',
      coins: 6000,
      price: 39.99,
      currency: 'USD',
      title: 'Mega Pack',
      bonus: 1000
    }, {
      id: 'coins_10000',
      coins: 12500,
      price: 79.99,
      currency: 'USD',
      title: 'Ultimate Pack',
      bonus: 2500
    }]);
    const ogTiers =
    /* istanbul ignore next */
    (cov_1j095dpjlv().s[62]++, [{
      id: 'og_tier_1',
      tier: 1,
      price: 4.99,
      currency: 'USD',
      title: 'OG Tier 1 - Bronze'
    }, {
      id: 'og_tier_2',
      tier: 2,
      price: 9.99,
      currency: 'USD',
      title: 'OG Tier 2 - Silver'
    }, {
      id: 'og_tier_3',
      tier: 3,
      price: 19.99,
      currency: 'USD',
      title: 'OG Tier 3 - Gold'
    }, {
      id: 'og_tier_4',
      tier: 4,
      price: 49.99,
      currency: 'USD',
      title: 'OG Tier 4 - Platinum'
    }, {
      id: 'og_tier_5',
      tier: 5,
      price: 99.99,
      currency: 'USD',
      title: 'OG Tier 5 - Diamond'
    }]);
    /* istanbul ignore next */
    cov_1j095dpjlv().s[63]++;
    return res.json({
      success: true,
      data: {
        coinPackages,
        ogTiers
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1j095dpjlv().s[64]++;
    console.error('Get IAP products error:', error);
    /* istanbul ignore next */
    cov_1j095dpjlv().s[65]++;
    return res.status(500).json({
      success: false,
      error: {
        message: 'Internal server error'
      }
    });
  }
});
/* istanbul ignore next */
cov_1j095dpjlv().s[66]++;
exports.default = router;