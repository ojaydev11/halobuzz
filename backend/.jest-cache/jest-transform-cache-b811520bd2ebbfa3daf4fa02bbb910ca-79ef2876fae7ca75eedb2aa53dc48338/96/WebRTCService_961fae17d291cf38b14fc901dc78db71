cef002dfaf42f704834c3a19f3af9590
"use strict";

/* istanbul ignore next */
function cov_10rk1umiw7() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\WebRTCService.ts";
  var hash = "8291c1eae1fe9555dd9f68df936f0a4438be2f0a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\WebRTCService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 55
        }
      },
      "4": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 42
        }
      },
      "6": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 65
        }
      },
      "7": {
        start: {
          line: 11,
          column: 13
        },
        end: {
          line: 11,
          column: 28
        }
      },
      "8": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "9": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "10": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 30
        }
      },
      "11": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "13": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "14": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "15": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "16": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 63,
          column: 64
        }
      },
      "17": {
        start: {
          line: 64,
          column: 34
        },
        end: {
          line: 64,
          column: 68
        }
      },
      "18": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 66,
          column: 70
        }
      },
      "19": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "20": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 86
        }
      },
      "21": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 72,
          column: 18
        }
      },
      "22": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "23": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 50
        }
      },
      "24": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 78
        }
      },
      "25": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 72
        }
      },
      "26": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 92,
          column: 14
        }
      },
      "27": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 69
        }
      },
      "28": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 99,
          column: 14
        }
      },
      "29": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "30": {
        start: {
          line: 107,
          column: 26
        },
        end: {
          line: 107,
          column: 56
        }
      },
      "31": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "32": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 112,
          column: 18
        }
      },
      "33": {
        start: {
          line: 114,
          column: 33
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "34": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 58
        }
      },
      "35": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 122,
          column: 77
        }
      },
      "36": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 47
        }
      },
      "37": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 77
        }
      },
      "38": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 75
        }
      },
      "39": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 37
        }
      },
      "40": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 72
        }
      },
      "41": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 134,
          column: 14
        }
      },
      "42": {
        start: {
          line: 141,
          column: 21
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "43": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 155,
          column: 17
        }
      },
      "44": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 47
        }
      },
      "45": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 79
        }
      },
      "46": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 20
        }
      },
      "47": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 246,
          column: 57
        }
      },
      "48": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 19
        }
      },
      "49": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "50": {
        start: {
          line: 255,
          column: 32
        },
        end: {
          line: 255,
          column: 77
        }
      },
      "51": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 42
        }
      },
      "52": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 82
        }
      },
      "53": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 25
        }
      },
      "54": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 58
        }
      },
      "55": {
        start: {
          line: 273,
          column: 22
        },
        end: {
          line: 273,
          column: 86
        }
      },
      "56": {
        start: {
          line: 274,
          column: 21
        },
        end: {
          line: 274,
          column: 23
        }
      },
      "57": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "58": {
        start: {
          line: 275,
          column: 21
        },
        end: {
          line: 275,
          column: 22
        }
      },
      "59": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 77
        }
      },
      "60": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 22
        }
      },
      "61": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "62": {
        start: {
          line: 285,
          column: 25
        },
        end: {
          line: 285,
          column: 53
        }
      },
      "63": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 288,
          column: 13
        }
      },
      "64": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 287,
          column: 28
        }
      },
      "65": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 39
        }
      },
      "66": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 299,
          column: 14
        }
      },
      "67": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 66
        }
      },
      "68": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 24
        }
      },
      "69": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "70": {
        start: {
          line: 311,
          column: 25
        },
        end: {
          line: 311,
          column: 53
        }
      },
      "71": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 317,
          column: 13
        }
      },
      "72": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 316,
          column: 18
        }
      },
      "73": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 50
        }
      },
      "74": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 44
        }
      },
      "75": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 46
        }
      },
      "76": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 47
        }
      },
      "77": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 74
        }
      },
      "78": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 75
        }
      },
      "79": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 69
        }
      },
      "80": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 37
        }
      },
      "81": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 71
        }
      },
      "82": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 336,
          column: 14
        }
      },
      "83": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 53
        }
      },
      "84": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 361,
          column: 9
        }
      },
      "85": {
        start: {
          line: 350,
          column: 24
        },
        end: {
          line: 350,
          column: 34
        }
      },
      "86": {
        start: {
          line: 351,
          column: 38
        },
        end: {
          line: 351,
          column: 51
        }
      },
      "87": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 357,
          column: 13
        }
      },
      "88": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 356,
          column: 17
        }
      },
      "89": {
        start: {
          line: 354,
          column: 20
        },
        end: {
          line: 354,
          column: 59
        }
      },
      "90": {
        start: {
          line: 355,
          column: 20
        },
        end: {
          line: 355,
          column: 76
        }
      },
      "91": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 74
        }
      },
      "92": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 377,
          column: 10
        }
      },
      "93": {
        start: {
          line: 380,
          column: 0
        },
        end: {
          line: 380,
          column: 38
        }
      },
      "94": {
        start: {
          line: 381,
          column: 0
        },
        end: {
          line: 381,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 60
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 55
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 40
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 105
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 46
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 140
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 152,
            column: 19
          },
          end: {
            line: 152,
            column: 20
          }
        },
        loc: {
          start: {
            line: 152,
            column: 25
          },
          end: {
            line: 155,
            column: 9
          }
        },
        line: 152
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 31
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 161
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 35
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 252
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 266,
            column: 4
          },
          end: {
            line: 266,
            column: 5
          }
        },
        loc: {
          start: {
            line: 266,
            column: 37
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 266
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 33
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 272
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 31
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 283
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        loc: {
          start: {
            line: 309,
            column: 38
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 309
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        },
        loc: {
          start: {
            line: 342,
            column: 27
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 342
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        loc: {
          start: {
            line: 348,
            column: 33
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 348
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        },
        loc: {
          start: {
            line: 366,
            column: 29
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 366
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 20
          },
          end: {
            line: 29,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 47
          },
          end: {
            line: 29,
            column: 83
          }
        }, {
          start: {
            line: 29,
            column: 86
          },
          end: {
            line: 29,
            column: 88
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 40
          },
          end: {
            line: 55,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 50
          },
          end: {
            line: 55,
            column: 58
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "7": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 113,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 113,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "8": {
        loc: {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 288,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 288,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "9": {
        loc: {
          start: {
            line: 312,
            column: 12
          },
          end: {
            line: 317,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 12
          },
          end: {
            line: 317,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "10": {
        loc: {
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 356,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 356,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8291c1eae1fe9555dd9f68df936f0a4438be2f0a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10rk1umiw7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10rk1umiw7();
var __importDefault =
/* istanbul ignore next */
(cov_10rk1umiw7().s[0]++,
/* istanbul ignore next */
(cov_10rk1umiw7().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_10rk1umiw7().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_10rk1umiw7().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_10rk1umiw7().f[0]++;
  cov_10rk1umiw7().s[1]++;
  return /* istanbul ignore next */(cov_10rk1umiw7().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_10rk1umiw7().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_10rk1umiw7().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_10rk1umiw7().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_10rk1umiw7().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_10rk1umiw7().s[3]++;
exports.webRTCService = exports.WebRTCService = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_10rk1umiw7().s[4]++, require("../config/logger"));
const redis_1 =
/* istanbul ignore next */
(cov_10rk1umiw7().s[5]++, require("../config/redis"));
const AgoraService_1 =
/* istanbul ignore next */
(cov_10rk1umiw7().s[6]++, __importDefault(require("./AgoraService")));
class WebRTCService {
  logger =
  /* istanbul ignore next */
  (cov_10rk1umiw7().s[7]++, logger_1.logger);
  config;
  activePeers =
  /* istanbul ignore next */
  (cov_10rk1umiw7().s[8]++, new Map());
  pendingOffers =
  /* istanbul ignore next */
  (cov_10rk1umiw7().s[9]++, new Map());
  pendingAnswers =
  /* istanbul ignore next */
  (cov_10rk1umiw7().s[10]++, new Map());
  constructor() {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[1]++;
    cov_10rk1umiw7().s[11]++;
    this.config = this.initializeConfig();
  }
  /**
   * Initialize WebRTC configuration
   */
  initializeConfig() {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[2]++;
    cov_10rk1umiw7().s[12]++;
    return {
      iceServers: [{
        urls: 'stun:stun.l.google.com:19302'
      }, {
        urls: 'stun:stun1.l.google.com:19302'
      }, {
        urls: 'stun:stun2.l.google.com:19302'
      },
      // Add TURN servers for production
      ...(process.env.TURN_SERVERS ?
      /* istanbul ignore next */
      (cov_10rk1umiw7().b[3][0]++, JSON.parse(process.env.TURN_SERVERS)) :
      /* istanbul ignore next */
      (cov_10rk1umiw7().b[3][1]++, []))],
      maxBitrate: 2500000,
      // 2.5 Mbps
      fallbackEnabled: process.env.WEBRTC_FALLBACK_ENABLED === 'true',
      qualityLevels: {
        low: {
          resolution: '480p',
          bitrate: 500000,
          framerate: 15
        },
        medium: {
          resolution: '720p',
          bitrate: 1500000,
          framerate: 30
        },
        high: {
          resolution: '1080p',
          bitrate: 2500000,
          framerate: 30
        }
      }
    };
  }
  /**
   * Create WebRTC offer for streaming
   */
  async createOffer(userId, streamId, quality =
  /* istanbul ignore next */
  (cov_10rk1umiw7().b[4][0]++, 'medium')) {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[3]++;
    cov_10rk1umiw7().s[13]++;
    try {
      /* istanbul ignore next */
      cov_10rk1umiw7().s[14]++;
      if (!this.config.fallbackEnabled) {
        /* istanbul ignore next */
        cov_10rk1umiw7().b[5][0]++;
        cov_10rk1umiw7().s[15]++;
        return {
          success: false,
          error: 'WebRTC fallback is disabled'
        };
      } else
      /* istanbul ignore next */
      {
        cov_10rk1umiw7().b[5][1]++;
      }
      const peerId =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[16]++, this.generatePeerId(userId, streamId));
      const streamQuality =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[17]++, this.config.qualityLevels[quality]);
      // Check if Agora is available first
      const agoraAvailable =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[18]++, await this.checkAgoraAvailability());
      /* istanbul ignore next */
      cov_10rk1umiw7().s[19]++;
      if (agoraAvailable) {
        /* istanbul ignore next */
        cov_10rk1umiw7().b[6][0]++;
        cov_10rk1umiw7().s[20]++;
        this.logger.info('Agora is available, using Agora instead of WebRTC');
        /* istanbul ignore next */
        cov_10rk1umiw7().s[21]++;
        return {
          success: false,
          error: 'Agora is available, use Agora instead'
        };
      } else
      /* istanbul ignore next */
      {
        cov_10rk1umiw7().b[6][1]++;
      }
      const offer =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[22]++, {
        offer: {
          type: 'offer',
          sdp: await this.generateSDP(streamQuality)
        },
        peerId,
        userId,
        streamId,
        quality: streamQuality
      });
      // Store pending offer
      /* istanbul ignore next */
      cov_10rk1umiw7().s[23]++;
      this.pendingOffers.set(peerId, offer);
      // Cache offer for retrieval
      /* istanbul ignore next */
      cov_10rk1umiw7().s[24]++;
      await (0, redis_1.setCache)(`webrtc_offer:${peerId}`, offer, 300); // 5 minutes
      /* istanbul ignore next */
      cov_10rk1umiw7().s[25]++;
      this.logger.info(`WebRTC offer created for peer ${peerId}`);
      /* istanbul ignore next */
      cov_10rk1umiw7().s[26]++;
      return {
        success: true,
        offer
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_10rk1umiw7().s[27]++;
      this.logger.error('Error creating WebRTC offer:', error);
      /* istanbul ignore next */
      cov_10rk1umiw7().s[28]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  /**
   * Process WebRTC answer
   */
  async processAnswer(peerId, answer) {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[4]++;
    cov_10rk1umiw7().s[29]++;
    try {
      const offer =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[30]++, this.pendingOffers.get(peerId));
      /* istanbul ignore next */
      cov_10rk1umiw7().s[31]++;
      if (!offer) {
        /* istanbul ignore next */
        cov_10rk1umiw7().b[7][0]++;
        cov_10rk1umiw7().s[32]++;
        return {
          success: false,
          error: 'Offer not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_10rk1umiw7().b[7][1]++;
      }
      const webrtcAnswer =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[33]++, {
        answer,
        peerId,
        accepted: true
      });
      // Store pending answer
      /* istanbul ignore next */
      cov_10rk1umiw7().s[34]++;
      this.pendingAnswers.set(peerId, webrtcAnswer);
      // Create peer connection
      const peer =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[35]++, await this.createPeerConnection(offer, webrtcAnswer));
      /* istanbul ignore next */
      cov_10rk1umiw7().s[36]++;
      this.activePeers.set(peerId, peer);
      // Cache peer info
      /* istanbul ignore next */
      cov_10rk1umiw7().s[37]++;
      await (0, redis_1.setCache)(`webrtc_peer:${peerId}`, peer, 3600); // 1 hour
      /* istanbul ignore next */
      cov_10rk1umiw7().s[38]++;
      this.logger.info(`WebRTC answer processed for peer ${peerId}`);
      /* istanbul ignore next */
      cov_10rk1umiw7().s[39]++;
      return {
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_10rk1umiw7().s[40]++;
      this.logger.error('Error processing WebRTC answer:', error);
      /* istanbul ignore next */
      cov_10rk1umiw7().s[41]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  /**
   * Create peer connection
   */
  async createPeerConnection(offer, answer) {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[5]++;
    const peer =
    /* istanbul ignore next */
    (cov_10rk1umiw7().s[42]++, {
      peerId: offer.peerId,
      userId: offer.userId,
      streamId: offer.streamId,
      connectionState: 'connecting',
      quality: offer.quality,
      stats: {},
      lastSeen: new Date()
    });
    // Simulate peer connection creation
    // In a real implementation, this would create actual WebRTC connections
    /* istanbul ignore next */
    cov_10rk1umiw7().s[43]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_10rk1umiw7().f[6]++;
      cov_10rk1umiw7().s[44]++;
      peer.connectionState = 'connected';
      /* istanbul ignore next */
      cov_10rk1umiw7().s[45]++;
      this.logger.info(`Peer connection established for ${peer.peerId}`);
    }, 1000);
    /* istanbul ignore next */
    cov_10rk1umiw7().s[46]++;
    return peer;
  }
  /**
   * Generate SDP offer
   */
  async generateSDP(quality) {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[7]++;
    // Simulate SDP generation
    // In a real implementation, this would generate actual SDP
    const sdp =
    /* istanbul ignore next */
    (cov_10rk1umiw7().s[47]++, `v=0
o=- ${Date.now()} 2 IN IP4 127.0.0.1
s=-
t=0 0
a=group:BUNDLE 0 1
a=msid-semantic: WMS
m=video 9 UDP/TLS/RTP/SAVPF 96 97 98 99 100 101 102
c=IN IP4 0.0.0.0
a=rtcp:9 IN IP4 0.0.0.0
a=ice-ufrag:${this.generateRandomString(8)}
a=ice-pwd:${this.generateRandomString(22)}
a=ice-options:trickle
a=fingerprint:sha-256 ${this.generateRandomString(64)}
a=setup:actpass
a=mid:0
a=sendrecv
a=rtcp-mux
a=rtpmap:96 VP8/90000
a=rtcp-fb:96 goog-remb
a=rtcp-fb:96 transport-cc
a=rtcp-fb:96 ccm fir
a=rtcp-fb:96 nack
a=rtcp-fb:96 nack pli
a=rtpmap:97 rtx/90000
a=fmtp:97 apt=96
a=rtpmap:98 VP9/90000
a=rtcp-fb:98 goog-remb
a=rtcp-fb:98 transport-cc
a=rtcp-fb:98 ccm fir
a=rtcp-fb:98 nack
a=rtcp-fb:98 nack pli
a=rtpmap:99 rtx/90000
a=fmtp:99 apt=98
a=rtpmap:100 H264/90000
a=rtcp-fb:100 goog-remb
a=rtcp-fb:100 transport-cc
a=rtcp-fb:100 ccm fir
a=rtcp-fb:100 nack
a=rtcp-fb:100 nack pli
a=rtpmap:101 rtx/90000
a=fmtp:101 apt=100
a=rtpmap:102 red/90000
a=rtpmap:103 rtx/90000
a=fmtp:103 apt=102
a=ssrc-group:FID 1234567890 1234567891
a=ssrc:1234567890 cname:${this.generateRandomString(16)}
a=ssrc:1234567890 msid:${this.generateRandomString(16)} ${this.generateRandomString(16)}
a=ssrc:1234567890 mslabel:${this.generateRandomString(16)}
a=ssrc:1234567890 label:${this.generateRandomString(16)}
a=ssrc:1234567891 cname:${this.generateRandomString(16)}
a=ssrc:1234567891 msid:${this.generateRandomString(16)} ${this.generateRandomString(16)}
a=ssrc:1234567891 mslabel:${this.generateRandomString(16)}
a=ssrc:1234567891 label:${this.generateRandomString(16)}
m=audio 9 UDP/TLS/RTP/SAVPF 111 103 104 9 0 8 106 105 13 110 112 113 126
c=IN IP4 0.0.0.0
a=rtcp:9 IN IP4 0.0.0.0
a=ice-ufrag:${this.generateRandomString(8)}
a=ice-pwd:${this.generateRandomString(22)}
a=ice-options:trickle
a=fingerprint:sha-256 ${this.generateRandomString(64)}
a=setup:actpass
a=mid:1
a=sendrecv
a=rtcp-mux
a=rtpmap:111 opus/48000/2
a=rtcp-fb:111 transport-cc
a=fmtp:111 minptime=10;useinbandfec=1
a=rtpmap:103 ISAC/16000
a=rtpmap:104 ISAC/32000
a=rtpmap:9 G722/8000
a=rtpmap:0 PCMU/8000
a=rtpmap:8 PCMA/8000
a=rtpmap:106 CN/32000
a=rtpmap:105 CN/16000
a=rtpmap:13 CN/8000
a=rtpmap:110 telephone-event/48000
a=rtpmap:112 telephone-event/16000
a=rtpmap:113 telephone-event/8000
a=rtpmap:126 telephone-event/8000
a=ssrc:1234567892 cname:${this.generateRandomString(16)}
a=ssrc:1234567892 msid:${this.generateRandomString(16)} ${this.generateRandomString(16)}
a=ssrc:1234567892 mslabel:${this.generateRandomString(16)}
a=ssrc:1234567892 label:${this.generateRandomString(16)}`);
    /* istanbul ignore next */
    cov_10rk1umiw7().s[48]++;
    return sdp;
  }
  /**
   * Check Agora availability
   */
  async checkAgoraAvailability() {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[8]++;
    cov_10rk1umiw7().s[49]++;
    try {
      // Check if Agora service is available
      const agoraHealth =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[50]++, await AgoraService_1.default.getRegionStats());
      /* istanbul ignore next */
      cov_10rk1umiw7().s[51]++;
      return agoraHealth.length > 0;
    } catch (error) {
      /* istanbul ignore next */
      cov_10rk1umiw7().s[52]++;
      this.logger.warn('Agora service unavailable, falling back to WebRTC');
      /* istanbul ignore next */
      cov_10rk1umiw7().s[53]++;
      return false;
    }
  }
  /**
   * Generate peer ID
   */
  generatePeerId(userId, streamId) {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[9]++;
    cov_10rk1umiw7().s[54]++;
    return `peer_${userId}_${streamId}_${Date.now()}`;
  }
  /**
   * Generate random string
   */
  generateRandomString(length) {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[10]++;
    const chars =
    /* istanbul ignore next */
    (cov_10rk1umiw7().s[55]++, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789');
    let result =
    /* istanbul ignore next */
    (cov_10rk1umiw7().s[56]++, '');
    /* istanbul ignore next */
    cov_10rk1umiw7().s[57]++;
    for (let i =
    /* istanbul ignore next */
    (cov_10rk1umiw7().s[58]++, 0); i < length; i++) {
      /* istanbul ignore next */
      cov_10rk1umiw7().s[59]++;
      result += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    /* istanbul ignore next */
    cov_10rk1umiw7().s[60]++;
    return result;
  }
  /**
   * Get peer connection stats
   */
  async getPeerStats(peerId) {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[11]++;
    cov_10rk1umiw7().s[61]++;
    try {
      const peer =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[62]++, this.activePeers.get(peerId));
      /* istanbul ignore next */
      cov_10rk1umiw7().s[63]++;
      if (!peer) {
        /* istanbul ignore next */
        cov_10rk1umiw7().b[8][0]++;
        cov_10rk1umiw7().s[64]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_10rk1umiw7().b[8][1]++;
      }
      // Update last seen
      cov_10rk1umiw7().s[65]++;
      peer.lastSeen = new Date();
      /* istanbul ignore next */
      cov_10rk1umiw7().s[66]++;
      return {
        peerId: peer.peerId,
        userId: peer.userId,
        streamId: peer.streamId,
        connectionState: peer.connectionState,
        quality: peer.quality,
        uptime: Date.now() - peer.lastSeen.getTime(),
        stats: peer.stats
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_10rk1umiw7().s[67]++;
      this.logger.error('Error getting peer stats:', error);
      /* istanbul ignore next */
      cov_10rk1umiw7().s[68]++;
      return null;
    }
  }
  /**
   * Close peer connection
   */
  async closePeerConnection(peerId) {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[12]++;
    cov_10rk1umiw7().s[69]++;
    try {
      const peer =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[70]++, this.activePeers.get(peerId));
      /* istanbul ignore next */
      cov_10rk1umiw7().s[71]++;
      if (!peer) {
        /* istanbul ignore next */
        cov_10rk1umiw7().b[9][0]++;
        cov_10rk1umiw7().s[72]++;
        return {
          success: false,
          error: 'Peer not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_10rk1umiw7().b[9][1]++;
      }
      // Update connection state
      cov_10rk1umiw7().s[73]++;
      peer.connectionState = 'disconnected';
      // Remove from active peers
      /* istanbul ignore next */
      cov_10rk1umiw7().s[74]++;
      this.activePeers.delete(peerId);
      // Remove from pending offers/answers
      /* istanbul ignore next */
      cov_10rk1umiw7().s[75]++;
      this.pendingOffers.delete(peerId);
      /* istanbul ignore next */
      cov_10rk1umiw7().s[76]++;
      this.pendingAnswers.delete(peerId);
      // Remove from cache
      /* istanbul ignore next */
      cov_10rk1umiw7().s[77]++;
      await (0, redis_1.setCache)(`webrtc_peer:${peerId}`, null, 0);
      /* istanbul ignore next */
      cov_10rk1umiw7().s[78]++;
      await (0, redis_1.setCache)(`webrtc_offer:${peerId}`, null, 0);
      /* istanbul ignore next */
      cov_10rk1umiw7().s[79]++;
      this.logger.info(`Peer connection closed for ${peerId}`);
      /* istanbul ignore next */
      cov_10rk1umiw7().s[80]++;
      return {
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_10rk1umiw7().s[81]++;
      this.logger.error('Error closing peer connection:', error);
      /* istanbul ignore next */
      cov_10rk1umiw7().s[82]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  /**
   * Get all active peers
   */
  async getActivePeers() {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[13]++;
    cov_10rk1umiw7().s[83]++;
    return Array.from(this.activePeers.values());
  }
  /**
   * Cleanup inactive peers
   */
  async cleanupInactivePeers() {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[14]++;
    cov_10rk1umiw7().s[84]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[85]++, new Date());
      const inactiveThreshold =
      /* istanbul ignore next */
      (cov_10rk1umiw7().s[86]++, 5 * 60 * 1000); // 5 minutes
      /* istanbul ignore next */
      cov_10rk1umiw7().s[87]++;
      for (const [peerId, peer] of this.activePeers) {
        /* istanbul ignore next */
        cov_10rk1umiw7().s[88]++;
        if (now.getTime() - peer.lastSeen.getTime() > inactiveThreshold) {
          /* istanbul ignore next */
          cov_10rk1umiw7().b[10][0]++;
          cov_10rk1umiw7().s[89]++;
          await this.closePeerConnection(peerId);
          /* istanbul ignore next */
          cov_10rk1umiw7().s[90]++;
          this.logger.info(`Cleaned up inactive peer: ${peerId}`);
        } else
        /* istanbul ignore next */
        {
          cov_10rk1umiw7().b[10][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_10rk1umiw7().s[91]++;
      this.logger.error('Error cleaning up inactive peers:', error);
    }
  }
  /**
   * Get WebRTC service status
   */
  async getServiceStatus() {
    /* istanbul ignore next */
    cov_10rk1umiw7().f[15]++;
    cov_10rk1umiw7().s[92]++;
    return {
      enabled: this.config.fallbackEnabled,
      activePeers: this.activePeers.size,
      pendingOffers: this.pendingOffers.size,
      pendingAnswers: this.pendingAnswers.size,
      config: {
        maxBitrate: this.config.maxBitrate,
        qualityLevels: Object.keys(this.config.qualityLevels),
        iceServers: this.config.iceServers.length
      }
    };
  }
}
/* istanbul ignore next */
cov_10rk1umiw7().s[93]++;
exports.WebRTCService = WebRTCService;
/* istanbul ignore next */
cov_10rk1umiw7().s[94]++;
exports.webRTCService = new WebRTCService();