95326c6b5b7d974803d832885ad83148
"use strict";

/* istanbul ignore next */
function cov_18vb0uvxb8() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\ai-games.ts";
  var hash = "00799d0f51ed476ae437f1361a65fe21acd38699";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\ai-games.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 44
        }
      },
      "6": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 77
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 40
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 40
        }
      },
      "9": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 41
        }
      },
      "10": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 116,
          column: 3
        }
      },
      "11": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "12": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 69
        }
      },
      "13": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "14": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 40,
          column: 15
        }
      },
      "15": {
        start: {
          line: 42,
          column: 57
        },
        end: {
          line: 42,
          column: 65
        }
      },
      "16": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "17": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "18": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "19": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 51,
          column: 55
        }
      },
      "20": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "21": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "22": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "23": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "24": {
        start: {
          line: 66,
          column: 33
        },
        end: {
          line: 66,
          column: 35
        }
      },
      "25": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "26": {
        start: {
          line: 68,
          column: 25
        },
        end: {
          line: 68,
          column: 66
        }
      },
      "27": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "28": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 73,
          column: 19
        }
      },
      "29": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "30": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 79,
          column: 19
        }
      },
      "31": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 85,
          column: 15
        }
      },
      "32": {
        start: {
          line: 88,
          column: 23
        },
        end: {
          line: 88,
          column: 106
        }
      },
      "33": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "34": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "35": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 96
        }
      },
      "36": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "37": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 72
        }
      },
      "38": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "39": {
        start: {
          line: 118,
          column: 0
        },
        end: {
          line: 149,
          column: 3
        }
      },
      "40": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "41": {
        start: {
          line: 120,
          column: 30
        },
        end: {
          line: 120,
          column: 40
        }
      },
      "42": {
        start: {
          line: 121,
          column: 23
        },
        end: {
          line: 121,
          column: 39
        }
      },
      "43": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "44": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "45": {
        start: {
          line: 129,
          column: 23
        },
        end: {
          line: 129,
          column: 80
        }
      },
      "46": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "47": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 134,
          column: 15
        }
      },
      "48": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 70
        }
      },
      "49": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "50": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 72
        }
      },
      "51": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "52": {
        start: {
          line: 151,
          column: 0
        },
        end: {
          line: 204,
          column: 3
        }
      },
      "53": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "54": {
        start: {
          line: 163,
          column: 23
        },
        end: {
          line: 163,
          column: 69
        }
      },
      "55": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "56": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 168,
          column: 15
        }
      },
      "57": {
        start: {
          line: 170,
          column: 30
        },
        end: {
          line: 170,
          column: 40
        }
      },
      "58": {
        start: {
          line: 171,
          column: 34
        },
        end: {
          line: 171,
          column: 42
        }
      },
      "59": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 172,
          column: 39
        }
      },
      "60": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "61": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "62": {
        start: {
          line: 180,
          column: 23
        },
        end: {
          line: 180,
          column: 95
        }
      },
      "63": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "64": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 185,
          column: 15
        }
      },
      "65": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 67
        }
      },
      "66": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 195,
          column: 11
        }
      },
      "67": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 69
        }
      },
      "68": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 202,
          column: 11
        }
      },
      "69": {
        start: {
          line: 206,
          column: 0
        },
        end: {
          line: 255,
          column: 3
        }
      },
      "70": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 254,
          column: 5
        }
      },
      "71": {
        start: {
          line: 208,
          column: 30
        },
        end: {
          line: 208,
          column: 40
        }
      },
      "72": {
        start: {
          line: 209,
          column: 23
        },
        end: {
          line: 209,
          column: 39
        }
      },
      "73": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "74": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 214,
          column: 15
        }
      },
      "75": {
        start: {
          line: 217,
          column: 24
        },
        end: {
          line: 217,
          column: 75
        }
      },
      "76": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "77": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 222,
          column: 15
        }
      },
      "78": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 246,
          column: 11
        }
      },
      "79": {
        start: {
          line: 232,
          column: 56
        },
        end: {
          line: 239,
          column: 17
        }
      },
      "80": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 70
        }
      },
      "81": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 253,
          column: 11
        }
      },
      "82": {
        start: {
          line: 257,
          column: 0
        },
        end: {
          line: 280,
          column: 3
        }
      },
      "83": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 279,
          column: 5
        }
      },
      "84": {
        start: {
          line: 259,
          column: 23
        },
        end: {
          line: 259,
          column: 39
        }
      },
      "85": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "86": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 264,
          column: 15
        }
      },
      "87": {
        start: {
          line: 267,
          column: 22
        },
        end: {
          line: 267,
          column: 74
        }
      },
      "88": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 271,
          column: 11
        }
      },
      "89": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 74
        }
      },
      "90": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 278,
          column: 11
        }
      },
      "91": {
        start: {
          line: 282,
          column: 0
        },
        end: {
          line: 308,
          column: 3
        }
      },
      "92": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 307,
          column: 5
        }
      },
      "93": {
        start: {
          line: 284,
          column: 23
        },
        end: {
          line: 284,
          column: 39
        }
      },
      "94": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "95": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 289,
          column: 15
        }
      },
      "96": {
        start: {
          line: 292,
          column: 22
        },
        end: {
          line: 295,
          column: 93
        }
      },
      "97": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 299,
          column: 11
        }
      },
      "98": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 64
        }
      },
      "99": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 306,
          column: 11
        }
      },
      "100": {
        start: {
          line: 310,
          column: 0
        },
        end: {
          line: 358,
          column: 3
        }
      },
      "101": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 357,
          column: 5
        }
      },
      "102": {
        start: {
          line: 323,
          column: 23
        },
        end: {
          line: 323,
          column: 69
        }
      },
      "103": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "104": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 328,
          column: 15
        }
      },
      "105": {
        start: {
          line: 330,
          column: 47
        },
        end: {
          line: 330,
          column: 55
        }
      },
      "106": {
        start: {
          line: 331,
          column: 23
        },
        end: {
          line: 331,
          column: 39
        }
      },
      "107": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "108": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 336,
          column: 15
        }
      },
      "109": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 345,
          column: 11
        }
      },
      "110": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 349,
          column: 11
        }
      },
      "111": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 77
        }
      },
      "112": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 356,
          column: 11
        }
      },
      "113": {
        start: {
          line: 359,
          column: 0
        },
        end: {
          line: 359,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 3
          },
          end: {
            line: 33,
            column: 4
          }
        },
        loc: {
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 118,
            column: 41
          },
          end: {
            line: 118,
            column: 42
          }
        },
        loc: {
          start: {
            line: 118,
            column: 61
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 118
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 161,
            column: 3
          },
          end: {
            line: 161,
            column: 4
          }
        },
        loc: {
          start: {
            line: 161,
            column: 23
          },
          end: {
            line: 204,
            column: 1
          }
        },
        line: 161
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 206,
            column: 34
          },
          end: {
            line: 206,
            column: 35
          }
        },
        loc: {
          start: {
            line: 206,
            column: 54
          },
          end: {
            line: 255,
            column: 1
          }
        },
        line: 206
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 232,
            column: 45
          },
          end: {
            line: 232,
            column: 46
          }
        },
        loc: {
          start: {
            line: 232,
            column: 56
          },
          end: {
            line: 239,
            column: 17
          }
        },
        line: 232
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 257,
            column: 26
          },
          end: {
            line: 257,
            column: 27
          }
        },
        loc: {
          start: {
            line: 257,
            column: 46
          },
          end: {
            line: 280,
            column: 1
          }
        },
        line: 257
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 282,
            column: 21
          },
          end: {
            line: 282,
            column: 22
          }
        },
        loc: {
          start: {
            line: 282,
            column: 41
          },
          end: {
            line: 308,
            column: 1
          }
        },
        line: 282
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 321,
            column: 3
          },
          end: {
            line: 321,
            column: 4
          }
        },
        loc: {
          start: {
            line: 321,
            column: 23
          },
          end: {
            line: 358,
            column: 1
          }
        },
        line: 321
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 42,
            column: 44
          },
          end: {
            line: 42,
            column: 52
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 17
          }
        }, {
          start: {
            line: 52,
            column: 21
          },
          end: {
            line: 52,
            column: 35
          }
        }],
        line: 52
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 31
          }
        }, {
          start: {
            line: 59,
            column: 35
          },
          end: {
            line: 59,
            column: 54
          }
        }],
        line: 59
      },
      "10": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "11": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "12": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "13": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "14": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "15": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "16": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "17": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "18": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "19": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "20": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "21": {
        loc: {
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "22": {
        loc: {
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "23": {
        loc: {
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "00799d0f51ed476ae437f1361a65fe21acd38699"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18vb0uvxb8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18vb0uvxb8();
var __importDefault =
/* istanbul ignore next */
(cov_18vb0uvxb8().s[0]++,
/* istanbul ignore next */
(cov_18vb0uvxb8().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_18vb0uvxb8().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_18vb0uvxb8().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_18vb0uvxb8().f[0]++;
  cov_18vb0uvxb8().s[1]++;
  return /* istanbul ignore next */(cov_18vb0uvxb8().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_18vb0uvxb8().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_18vb0uvxb8().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_18vb0uvxb8().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_18vb0uvxb8().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_18vb0uvxb8().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_18vb0uvxb8().s[4]++, require("express-validator"));
const logger_1 =
/* istanbul ignore next */
(cov_18vb0uvxb8().s[5]++, require("../config/logger"));
const AIGameService_1 =
/* istanbul ignore next */
(cov_18vb0uvxb8().s[6]++, __importDefault(require("../services/AIGameService")));
const Game_1 =
/* istanbul ignore next */
(cov_18vb0uvxb8().s[7]++, require("../models/Game"));
const User_1 =
/* istanbul ignore next */
(cov_18vb0uvxb8().s[8]++, require("../models/User"));
const router =
/* istanbul ignore next */
(cov_18vb0uvxb8().s[9]++, express_1.default.Router());
// Create AI game session
/* istanbul ignore next */
cov_18vb0uvxb8().s[10]++;
router.post('/session/create', [(0, express_validator_1.body)('gameId').notEmpty().withMessage('Game ID is required').isMongoId().withMessage('Invalid game ID'), (0, express_validator_1.body)('players').isArray({
  min: 1
}).withMessage('At least one player is required'), (0, express_validator_1.body)('players.*.userId').notEmpty().withMessage('Player user ID is required'), (0, express_validator_1.body)('players.*.betAmount').isInt({
  min: 1
}).withMessage('Valid bet amount is required'), (0, express_validator_1.body)('gameType').optional().isIn(['single', 'multiplayer']).withMessage('Game type must be single or multiplayer')], async (req, res) => {
  /* istanbul ignore next */
  cov_18vb0uvxb8().f[1]++;
  cov_18vb0uvxb8().s[11]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[12]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[13]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[3][0]++;
      cov_18vb0uvxb8().s[14]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[3][1]++;
    }
    const {
      gameId,
      players,
      gameType =
      /* istanbul ignore next */
      (cov_18vb0uvxb8().b[4][0]++, 'single')
    } =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[15]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[16]++, req.user?.userId);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[17]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[5][0]++;
      cov_18vb0uvxb8().s[18]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[5][1]++;
    }
    // Validate game exists and is active
    const game =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[19]++, await Game_1.Game.findById(gameId));
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_18vb0uvxb8().b[7][0]++, !game) ||
    /* istanbul ignore next */
    (cov_18vb0uvxb8().b[7][1]++, !game.isActive)) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[6][0]++;
      cov_18vb0uvxb8().s[21]++;
      return res.status(404).json({
        success: false,
        error: 'Game not found or inactive'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[6][1]++;
    }
    // Validate AI win rate is within bounds
    cov_18vb0uvxb8().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_18vb0uvxb8().b[9][0]++, game.aiWinRate < 35) ||
    /* istanbul ignore next */
    (cov_18vb0uvxb8().b[9][1]++, game.aiWinRate > 55)) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[8][0]++;
      cov_18vb0uvxb8().s[23]++;
      return res.status(400).json({
        success: false,
        error: 'Game configuration invalid - AI win rate out of bounds'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[8][1]++;
    }
    // Validate players and check balances
    const validatedPlayers =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[24]++, []);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[25]++;
    for (const player of players) {
      const user =
      /* istanbul ignore next */
      (cov_18vb0uvxb8().s[26]++, await User_1.User.findById(player.userId));
      /* istanbul ignore next */
      cov_18vb0uvxb8().s[27]++;
      if (!user) {
        /* istanbul ignore next */
        cov_18vb0uvxb8().b[10][0]++;
        cov_18vb0uvxb8().s[28]++;
        return res.status(404).json({
          success: false,
          error: `User ${player.userId} not found`
        });
      } else
      /* istanbul ignore next */
      {
        cov_18vb0uvxb8().b[10][1]++;
      }
      cov_18vb0uvxb8().s[29]++;
      if (user.coins?.balance < player.betAmount) {
        /* istanbul ignore next */
        cov_18vb0uvxb8().b[11][0]++;
        cov_18vb0uvxb8().s[30]++;
        return res.status(400).json({
          success: false,
          error: `User ${user.username} has insufficient coins`
        });
      } else
      /* istanbul ignore next */
      {
        cov_18vb0uvxb8().b[11][1]++;
      }
      cov_18vb0uvxb8().s[31]++;
      validatedPlayers.push({
        userId: player.userId,
        username: user.username,
        betAmount: player.betAmount
      });
    }
    // Create AI game session
    const result =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[32]++, await AIGameService_1.default.createGameSession(gameId, validatedPlayers, gameType));
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[33]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[12][0]++;
      cov_18vb0uvxb8().s[34]++;
      return res.status(500).json({
        success: false,
        error: result.error
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[12][1]++;
    }
    cov_18vb0uvxb8().s[35]++;
    logger_1.logger.info(`AI game session created: ${result.sessionId} for game ${gameId}`);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[36]++;
    res.json({
      success: true,
      data: {
        sessionId: result.sessionId,
        gameId,
        gameType,
        players: validatedPlayers,
        aiWinRate: game.aiWinRate,
        targetRTP: 60,
        houseEdge: 40
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[37]++;
    logger_1.logger.error('Error creating AI game session:', error);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[38]++;
    res.status(500).json({
      success: false,
      error: 'Failed to create game session'
    });
  }
});
// Start AI game session
/* istanbul ignore next */
cov_18vb0uvxb8().s[39]++;
router.post('/session/:sessionId/start', async (req, res) => {
  /* istanbul ignore next */
  cov_18vb0uvxb8().f[2]++;
  cov_18vb0uvxb8().s[40]++;
  try {
    const {
      sessionId
    } =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[41]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[42]++, req.user?.userId);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[43]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[13][0]++;
      cov_18vb0uvxb8().s[44]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[13][1]++;
    }
    // Start the game session
    const result =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[45]++, await AIGameService_1.default.startGameSession(sessionId));
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[46]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[14][0]++;
      cov_18vb0uvxb8().s[47]++;
      return res.status(400).json({
        success: false,
        error: result.error
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[14][1]++;
    }
    cov_18vb0uvxb8().s[48]++;
    logger_1.logger.info(`AI game session started: ${sessionId}`);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[49]++;
    res.json({
      success: true,
      message: 'Game session started successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[50]++;
    logger_1.logger.error('Error starting AI game session:', error);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[51]++;
    res.status(500).json({
      success: false,
      error: 'Failed to start game session'
    });
  }
});
// Process game round
/* istanbul ignore next */
cov_18vb0uvxb8().s[52]++;
router.post('/session/:sessionId/round', [(0, express_validator_1.body)('playerActions').isArray({
  min: 1
}).withMessage('Player actions are required'), (0, express_validator_1.body)('playerActions.*.playerId').notEmpty().withMessage('Player ID is required'), (0, express_validator_1.body)('playerActions.*.action').notEmpty().withMessage('Action data is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_18vb0uvxb8().f[3]++;
  cov_18vb0uvxb8().s[53]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[54]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[55]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[15][0]++;
      cov_18vb0uvxb8().s[56]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[15][1]++;
    }
    const {
      sessionId
    } =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[57]++, req.params);
    const {
      playerActions
    } =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[58]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[59]++, req.user?.userId);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[60]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[16][0]++;
      cov_18vb0uvxb8().s[61]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[16][1]++;
    }
    // Process the game round
    const result =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[62]++, await AIGameService_1.default.processGameRound(sessionId, playerActions));
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[63]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[17][0]++;
      cov_18vb0uvxb8().s[64]++;
      return res.status(400).json({
        success: false,
        error: result.error
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[17][1]++;
    }
    cov_18vb0uvxb8().s[65]++;
    logger_1.logger.info(`Game round processed: ${sessionId}`);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[66]++;
    res.json({
      success: true,
      data: {
        outcome: result.outcome,
        roundCompleted: true,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[67]++;
    logger_1.logger.error('Error processing game round:', error);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[68]++;
    res.status(500).json({
      success: false,
      error: 'Failed to process game round'
    });
  }
});
// Get session status
/* istanbul ignore next */
cov_18vb0uvxb8().s[69]++;
router.get('/session/:sessionId', async (req, res) => {
  /* istanbul ignore next */
  cov_18vb0uvxb8().f[4]++;
  cov_18vb0uvxb8().s[70]++;
  try {
    const {
      sessionId
    } =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[71]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[72]++, req.user?.userId);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[73]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[18][0]++;
      cov_18vb0uvxb8().s[74]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[18][1]++;
    }
    // Get session from cache
    const session =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[75]++, await AIGameService_1.default.getSession(sessionId));
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[76]++;
    if (!session) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[19][0]++;
      cov_18vb0uvxb8().s[77]++;
      return res.status(404).json({
        success: false,
        error: 'Session not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[19][1]++;
    }
    cov_18vb0uvxb8().s[78]++;
    res.json({
      success: true,
      data: {
        sessionId: session.sessionId,
        gameId: session.gameId,
        status: session.status,
        roundNumber: session.roundNumber,
        totalRounds: session.totalRounds,
        players: session.players.map(player => {
          /* istanbul ignore next */
          cov_18vb0uvxb8().f[5]++;
          cov_18vb0uvxb8().s[79]++;
          return {
            userId: player.userId,
            username: player.username,
            currentScore: player.currentScore,
            totalWinnings: player.totalWinnings,
            isAI: player.isAI,
            aiDifficulty: player.aiDifficulty
          };
        }),
        aiWinRate: session.aiWinRate,
        antiCheatData: {
          riskScore: session.antiCheatData.riskScore,
          flags: session.antiCheatData.flags
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[80]++;
    logger_1.logger.error('Error getting session status:', error);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[81]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get session status'
    });
  }
});
// Get AI game statistics
/* istanbul ignore next */
cov_18vb0uvxb8().s[82]++;
router.get('/statistics', async (req, res) => {
  /* istanbul ignore next */
  cov_18vb0uvxb8().f[6]++;
  cov_18vb0uvxb8().s[83]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[84]++, req.user?.userId);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[85]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[20][0]++;
      cov_18vb0uvxb8().s[86]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[20][1]++;
    }
    // Get statistics
    const stats =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[87]++, await AIGameService_1.default.getSessionStatistics());
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[88]++;
    res.json({
      success: true,
      data: stats
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[89]++;
    logger_1.logger.error('Error getting AI game statistics:', error);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[90]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get statistics'
    });
  }
});
// Get available AI games
/* istanbul ignore next */
cov_18vb0uvxb8().s[91]++;
router.get('/games', async (req, res) => {
  /* istanbul ignore next */
  cov_18vb0uvxb8().f[7]++;
  cov_18vb0uvxb8().s[92]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[93]++, req.user?.userId);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[94]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[21][0]++;
      cov_18vb0uvxb8().s[95]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[21][1]++;
    }
    // Get active games with AI support
    const games =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[96]++, await Game_1.Game.find({
      isActive: true,
      aiWinRate: {
        $gte: 35,
        $lte: 55
      }
    }).select('name code description type category aiWinRate entryFee minStake maxStake'));
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[97]++;
    res.json({
      success: true,
      data: games
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[98]++;
    logger_1.logger.error('Error getting AI games:', error);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[99]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get games'
    });
  }
});
// Report suspicious activity
/* istanbul ignore next */
cov_18vb0uvxb8().s[100]++;
router.post('/report/suspicious', [(0, express_validator_1.body)('sessionId').notEmpty().withMessage('Session ID is required'), (0, express_validator_1.body)('reason').notEmpty().withMessage('Reason is required'), (0, express_validator_1.body)('details').optional().isString().withMessage('Details must be a string')], async (req, res) => {
  /* istanbul ignore next */
  cov_18vb0uvxb8().f[8]++;
  cov_18vb0uvxb8().s[101]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[102]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[103]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[22][0]++;
      cov_18vb0uvxb8().s[104]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[22][1]++;
    }
    const {
      sessionId,
      reason,
      details
    } =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[105]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_18vb0uvxb8().s[106]++, req.user?.userId);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[107]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_18vb0uvxb8().b[23][0]++;
      cov_18vb0uvxb8().s[108]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_18vb0uvxb8().b[23][1]++;
    }
    // Log suspicious activity report
    cov_18vb0uvxb8().s[109]++;
    logger_1.logger.warn(`Suspicious activity reported: ${sessionId} - ${reason}`, {
      sessionId,
      reporterId: userId,
      reason,
      details,
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[110]++;
    res.json({
      success: true,
      message: 'Suspicious activity reported successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[111]++;
    logger_1.logger.error('Error reporting suspicious activity:', error);
    /* istanbul ignore next */
    cov_18vb0uvxb8().s[112]++;
    res.status(500).json({
      success: false,
      error: 'Failed to report suspicious activity'
    });
  }
});
/* istanbul ignore next */
cov_18vb0uvxb8().s[113]++;
exports.default = router;