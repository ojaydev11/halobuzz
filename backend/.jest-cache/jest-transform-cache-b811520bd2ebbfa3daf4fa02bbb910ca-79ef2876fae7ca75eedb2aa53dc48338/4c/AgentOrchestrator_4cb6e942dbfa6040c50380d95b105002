4756fcd386416a69851b87f3be5f89a7
"use strict";

/* istanbul ignore next */
function cov_58mt9m1tn() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\agents\\AgentOrchestrator.ts";
  var hash = "192d7553744038957359adcf617aaebad66ba436";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\agents\\AgentOrchestrator.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 83
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 34
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 6,
          column: 29
        },
        end: {
          line: 6,
          column: 67
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 16
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 66
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 22,
          column: 10
        }
      },
      "9": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "10": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 32
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 35
        }
      },
      "12": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 38
        }
      },
      "13": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 47
        }
      },
      "14": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 49
        }
      },
      "15": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 109
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "17": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 88
        }
      },
      "18": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 84
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 37
        }
      },
      "20": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 71
        }
      },
      "21": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 52,
          column: 30
        }
      },
      "22": {
        start: {
          line: 55,
          column: 13
        },
        end: {
          line: 55,
          column: 22
        }
      },
      "23": {
        start: {
          line: 56,
          column: 19
        },
        end: {
          line: 56,
          column: 21
        }
      },
      "24": {
        start: {
          line: 57,
          column: 19
        },
        end: {
          line: 57,
          column: 24
        }
      },
      "25": {
        start: {
          line: 58,
          column: 13
        },
        end: {
          line: 58,
          column: 53
        }
      },
      "26": {
        start: {
          line: 59,
          column: 14
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "27": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 16
        }
      },
      "28": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 37
        }
      },
      "29": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 37
        }
      },
      "30": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "31": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 67
        }
      },
      "32": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 33
        }
      },
      "33": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "34": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 41
        }
      },
      "35": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "36": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 50
        }
      },
      "37": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 40
        }
      },
      "38": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 53
        }
      },
      "39": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 65
        }
      },
      "40": {
        start: {
          line: 89,
          column: 28
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "41": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 41
        }
      },
      "42": {
        start: {
          line: 98,
          column: 28
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "43": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 41
        }
      },
      "44": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 108,
          column: 26
        }
      },
      "45": {
        start: {
          line: 109,
          column: 25
        },
        end: {
          line: 109,
          column: 27
        }
      },
      "46": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 88
        }
      },
      "47": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "48": {
        start: {
          line: 112,
          column: 26
        },
        end: {
          line: 112,
          column: 50
        }
      },
      "49": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "50": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 62
        }
      },
      "51": {
        start: {
          line: 116,
          column: 28
        },
        end: {
          line: 123,
          column: 14
        }
      },
      "52": {
        start: {
          line: 118,
          column: 43
        },
        end: {
          line: 118,
          column: 115
        }
      },
      "53": {
        start: {
          line: 118,
          column: 60
        },
        end: {
          line: 118,
          column: 105
        }
      },
      "54": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 42
        }
      },
      "55": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 60
        }
      },
      "56": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 35
        }
      },
      "57": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 36
        }
      },
      "58": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 86
        }
      },
      "59": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 23
        }
      },
      "60": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 140,
          column: 10
        }
      },
      "61": {
        start: {
          line: 134,
          column: 67
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "62": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 58
        }
      },
      "63": {
        start: {
          line: 145,
          column: 33
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "64": {
        start: {
          line: 145,
          column: 79
        },
        end: {
          line: 147,
          column: 10
        }
      },
      "65": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 86
        }
      },
      "66": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 44
        }
      },
      "67": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 28
        }
      },
      "68": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 38
        }
      },
      "69": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 59
        }
      },
      "70": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 40
        }
      },
      "71": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 37
        }
      },
      "72": {
        start: {
          line: 159,
          column: 24
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "73": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 45
        }
      },
      "74": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 187,
          column: 15
        }
      },
      "75": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "76": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 23
        }
      },
      "77": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 37
        }
      },
      "78": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "79": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 179,
          column: 17
        }
      },
      "80": {
        start: {
          line: 177,
          column: 36
        },
        end: {
          line: 177,
          column: 61
        }
      },
      "81": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 178,
          column: 55
        }
      },
      "82": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 70
        }
      },
      "83": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 42
        }
      },
      "84": {
        start: {
          line: 190,
          column: 26
        },
        end: {
          line: 190,
          column: 36
        }
      },
      "85": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "86": {
        start: {
          line: 192,
          column: 28
        },
        end: {
          line: 192,
          column: 81
        }
      },
      "87": {
        start: {
          line: 193,
          column: 29
        },
        end: {
          line: 221,
          column: 14
        }
      },
      "88": {
        start: {
          line: 194,
          column: 30
        },
        end: {
          line: 194,
          column: 55
        }
      },
      "89": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 198,
          column: 17
        }
      },
      "90": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 196,
          column: 78
        }
      },
      "91": {
        start: {
          line: 197,
          column: 20
        },
        end: {
          line: 197,
          column: 27
        }
      },
      "92": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 220,
          column: 17
        }
      },
      "93": {
        start: {
          line: 200,
          column: 37
        },
        end: {
          line: 200,
          column: 72
        }
      },
      "94": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 203,
          column: 21
        }
      },
      "95": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 202,
          column: 54
        }
      },
      "96": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 206,
          column: 92
        }
      },
      "97": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 219,
          column: 21
        }
      },
      "98": {
        start: {
          line: 209,
          column: 46
        },
        end: {
          line: 217,
          column: 25
        }
      },
      "99": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 218,
          column: 59
        }
      },
      "100": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 40
        }
      },
      "101": {
        start: {
          line: 224,
          column: 28
        },
        end: {
          line: 224,
          column: 50
        }
      },
      "102": {
        start: {
          line: 225,
          column: 26
        },
        end: {
          line: 225,
          column: 52
        }
      },
      "103": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 106
        }
      },
      "104": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 75
        }
      },
      "105": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 78
        }
      },
      "106": {
        start: {
          line: 236,
          column: 0
        },
        end: {
          line: 236,
          column: 46
        }
      },
      "107": {
        start: {
          line: 239,
          column: 17
        },
        end: {
          line: 239,
          column: 26
        }
      },
      "108": {
        start: {
          line: 240,
          column: 17
        },
        end: {
          line: 240,
          column: 26
        }
      },
      "109": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 60
        }
      },
      "110": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 31
        }
      },
      "111": {
        start: {
          line: 246,
          column: 26
        },
        end: {
          line: 246,
          column: 36
        }
      },
      "112": {
        start: {
          line: 247,
          column: 22
        },
        end: {
          line: 247,
          column: 26
        }
      },
      "113": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "114": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 35
        }
      },
      "115": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 261,
          column: 13
        }
      },
      "116": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 252,
          column: 61
        }
      },
      "117": {
        start: {
          line: 254,
          column: 20
        },
        end: {
          line: 254,
          column: 59
        }
      },
      "118": {
        start: {
          line: 256,
          column: 20
        },
        end: {
          line: 256,
          column: 52
        }
      },
      "119": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 258,
          column: 52
        }
      },
      "120": {
        start: {
          line: 260,
          column: 20
        },
        end: {
          line: 260,
          column: 78
        }
      },
      "121": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 28
        }
      },
      "122": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 72
        }
      },
      "123": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 274,
          column: 14
        }
      },
      "124": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 64
        }
      },
      "125": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 35
        }
      },
      "126": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 62
        }
      },
      "127": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 34
        }
      },
      "128": {
        start: {
          line: 286,
          column: 42
        },
        end: {
          line: 286,
          column: 54
        }
      },
      "129": {
        start: {
          line: 288,
          column: 25
        },
        end: {
          line: 288,
          column: 70
        }
      },
      "130": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 293,
          column: 11
        }
      },
      "131": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 302,
          column: 10
        }
      },
      "132": {
        start: {
          line: 305,
          column: 35
        },
        end: {
          line: 305,
          column: 47
        }
      },
      "133": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 75
        }
      },
      "134": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 315,
          column: 11
        }
      },
      "135": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 324,
          column: 10
        }
      },
      "136": {
        start: {
          line: 328,
          column: 24
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "137": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 349,
          column: 10
        }
      },
      "138": {
        start: {
          line: 352,
          column: 21
        },
        end: {
          line: 352,
          column: 38
        }
      },
      "139": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 357,
          column: 11
        }
      },
      "140": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 366,
          column: 10
        }
      },
      "141": {
        start: {
          line: 370,
          column: 29
        },
        end: {
          line: 375,
          column: 9
        }
      },
      "142": {
        start: {
          line: 376,
          column: 25
        },
        end: {
          line: 376,
          column: 56
        }
      },
      "143": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 61
        }
      },
      "144": {
        start: {
          line: 377,
          column: 37
        },
        end: {
          line: 377,
          column: 59
        }
      },
      "145": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 78
        }
      },
      "146": {
        start: {
          line: 383,
          column: 0
        },
        end: {
          line: 383,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 14
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 41
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 33
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 22
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 47
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 18
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 31
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 69
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 77,
            column: 28
          },
          end: {
            line: 77,
            column: 29
          }
        },
        loc: {
          start: {
            line: 77,
            column: 41
          },
          end: {
            line: 79,
            column: 9
          }
        },
        line: 77
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 80,
            column: 33
          },
          end: {
            line: 80,
            column: 34
          }
        },
        loc: {
          start: {
            line: 80,
            column: 44
          },
          end: {
            line: 82,
            column: 9
          }
        },
        line: 80
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 31
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 88
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        loc: {
          start: {
            line: 97,
            column: 29
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 97
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 53
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 107
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 118,
            column: 28
          },
          end: {
            line: 118,
            column: 29
          }
        },
        loc: {
          start: {
            line: 118,
            column: 43
          },
          end: {
            line: 118,
            column: 115
          }
        },
        line: 118
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 118,
            column: 54
          },
          end: {
            line: 118,
            column: 55
          }
        },
        loc: {
          start: {
            line: 118,
            column: 60
          },
          end: {
            line: 118,
            column: 105
          }
        },
        line: 118
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 119,
            column: 21
          }
        },
        loc: {
          start: {
            line: 119,
            column: 30
          },
          end: {
            line: 121,
            column: 13
          }
        },
        line: 119
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 121,
            column: 21
          },
          end: {
            line: 121,
            column: 22
          }
        },
        loc: {
          start: {
            line: 121,
            column: 30
          },
          end: {
            line: 123,
            column: 13
          }
        },
        line: 121
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 17
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 131
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 134,
            column: 57
          },
          end: {
            line: 134,
            column: 58
          }
        },
        loc: {
          start: {
            line: 134,
            column: 67
          },
          end: {
            line: 138,
            column: 13
          }
        },
        line: 134
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 21
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 143
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 145,
            column: 70
          },
          end: {
            line: 145,
            column: 71
          }
        },
        loc: {
          start: {
            line: 145,
            column: 79
          },
          end: {
            line: 147,
            column: 10
          }
        },
        line: 145
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 145,
            column: 102
          },
          end: {
            line: 145,
            column: 103
          }
        },
        loc: {
          start: {
            line: 145,
            column: 111
          },
          end: {
            line: 147,
            column: 9
          }
        },
        line: 145
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 28
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 154
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 40
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 158
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 28
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 169
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 170,
            column: 20
          },
          end: {
            line: 170,
            column: 21
          }
        },
        loc: {
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 187,
            column: 9
          }
        },
        line: 170
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 34
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 189
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 193,
            column: 41
          },
          end: {
            line: 193,
            column: 42
          }
        },
        loc: {
          start: {
            line: 193,
            column: 61
          },
          end: {
            line: 221,
            column: 13
          }
        },
        line: 193
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 24
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 232
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 23
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 241
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        loc: {
          start: {
            line: 245,
            column: 34
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 245
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        },
        loc: {
          start: {
            line: 281,
            column: 21
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 281
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 285,
            column: 5
          }
        },
        loc: {
          start: {
            line: 285,
            column: 33
          },
          end: {
            line: 303,
            column: 5
          }
        },
        line: 285
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 31
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 304
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 24
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 326
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 351,
            column: 4
          },
          end: {
            line: 351,
            column: 5
          }
        },
        loc: {
          start: {
            line: 351,
            column: 24
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 351
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 45
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 368
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 377,
            column: 30
          },
          end: {
            line: 377,
            column: 31
          }
        },
        loc: {
          start: {
            line: 377,
            column: 37
          },
          end: {
            line: 377,
            column: 59
          }
        },
        line: 377
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 379,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        },
        loc: {
          start: {
            line: 379,
            column: 24
          },
          end: {
            line: 381,
            column: 5
          }
        },
        line: 379
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: 43,
            column: 13
          },
          end: {
            line: 45,
            column: 9
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "2": {
        loc: {
          start: {
            line: 111,
            column: 36
          },
          end: {
            line: 111,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 111,
            column: 46
          },
          end: {
            line: 111,
            column: 51
          }
        }],
        line: 111
      },
      "3": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "4": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "5": {
        loc: {
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 171,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 171,
            column: 33
          }
        }, {
          start: {
            line: 171,
            column: 37
          },
          end: {
            line: 171,
            column: 67
          }
        }],
        line: 171
      },
      "6": {
        loc: {
          start: {
            line: 192,
            column: 28
          },
          end: {
            line: 192,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 192,
            column: 56
          },
          end: {
            line: 192,
            column: 66
          }
        }, {
          start: {
            line: 192,
            column: 69
          },
          end: {
            line: 192,
            column: 81
          }
        }],
        line: 192
      },
      "7": {
        loc: {
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 198,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 198,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "8": {
        loc: {
          start: {
            line: 201,
            column: 20
          },
          end: {
            line: 203,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 20
          },
          end: {
            line: 203,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "9": {
        loc: {
          start: {
            line: 208,
            column: 20
          },
          end: {
            line: 219,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 20
          },
          end: {
            line: 219,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "10": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 261,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 251,
            column: 16
          },
          end: {
            line: 252,
            column: 61
          }
        }, {
          start: {
            line: 253,
            column: 16
          },
          end: {
            line: 254,
            column: 59
          }
        }, {
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 256,
            column: 52
          }
        }, {
          start: {
            line: 257,
            column: 16
          },
          end: {
            line: 258,
            column: 52
          }
        }, {
          start: {
            line: 259,
            column: 16
          },
          end: {
            line: 260,
            column: 78
          }
        }],
        line: 250
      },
      "11": {
        loc: {
          start: {
            line: 290,
            column: 20
          },
          end: {
            line: 290,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 290,
            column: 31
          },
          end: {
            line: 290,
            column: 41
          }
        }, {
          start: {
            line: 290,
            column: 44
          },
          end: {
            line: 290,
            column: 54
          }
        }],
        line: 290
      },
      "12": {
        loc: {
          start: {
            line: 376,
            column: 25
          },
          end: {
            line: 376,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 25
          },
          end: {
            line: 376,
            column: 50
          }
        }, {
          start: {
            line: 376,
            column: 54
          },
          end: {
            line: 376,
            column: 56
          }
        }],
        line: 376
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "192d7553744038957359adcf617aaebad66ba436"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_58mt9m1tn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_58mt9m1tn();
cov_58mt9m1tn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_58mt9m1tn().s[1]++;
exports.GameDirectorAgent = exports.AgentOrchestrator = exports.BaseAgent = void 0;
const events_1 =
/* istanbul ignore next */
(cov_58mt9m1tn().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_58mt9m1tn().s[3]++, require("../utils/logger"));
const performanceMonitor_1 =
/* istanbul ignore next */
(cov_58mt9m1tn().s[4]++, require("../utils/performanceMonitor"));
// Base Agent Interface
class BaseAgent extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  config;
  metrics;
  logger;
  constructor(config) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[0]++;
    cov_58mt9m1tn().s[5]++;
    super();
    /* istanbul ignore next */
    cov_58mt9m1tn().s[6]++;
    this.config = config;
    /* istanbul ignore next */
    cov_58mt9m1tn().s[7]++;
    this.logger = new logger_1.Logger(`Agent:${config.name}`);
    /* istanbul ignore next */
    cov_58mt9m1tn().s[8]++;
    this.metrics = {
      tasksCompleted: 0,
      avgResponseTime: 0,
      errorRate: 0,
      lastActivity: Date.now(),
      status: 'idle'
    };
  }
  getId() {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[1]++;
    cov_58mt9m1tn().s[9]++;
    return this.config.id;
  }
  getName() {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[2]++;
    cov_58mt9m1tn().s[10]++;
    return this.config.name;
  }
  getMetrics() {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[3]++;
    cov_58mt9m1tn().s[11]++;
    return {
      ...this.metrics
    };
  }
  updateMetrics(responseTime, success) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[4]++;
    cov_58mt9m1tn().s[12]++;
    this.metrics.tasksCompleted++;
    /* istanbul ignore next */
    cov_58mt9m1tn().s[13]++;
    this.metrics.lastActivity = Date.now();
    // Update average response time
    const count =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[14]++, this.metrics.tasksCompleted);
    /* istanbul ignore next */
    cov_58mt9m1tn().s[15]++;
    this.metrics.avgResponseTime = (this.metrics.avgResponseTime * (count - 1) + responseTime) / count;
    // Update error rate
    /* istanbul ignore next */
    cov_58mt9m1tn().s[16]++;
    if (!success) {
      /* istanbul ignore next */
      cov_58mt9m1tn().b[0][0]++;
      cov_58mt9m1tn().s[17]++;
      this.metrics.errorRate = (this.metrics.errorRate * (count - 1) + 1) / count;
    } else {
      /* istanbul ignore next */
      cov_58mt9m1tn().b[0][1]++;
      cov_58mt9m1tn().s[18]++;
      this.metrics.errorRate = this.metrics.errorRate * (count - 1) / count;
    }
  }
  setStatus(status) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[5]++;
    cov_58mt9m1tn().s[19]++;
    this.metrics.status = status;
    /* istanbul ignore next */
    cov_58mt9m1tn().s[20]++;
    this.emit('statusChange', {
      agentId: this.config.id,
      status
    });
  }
}
/* istanbul ignore next */
cov_58mt9m1tn().s[21]++;
exports.BaseAgent = BaseAgent;
// Main Agent Orchestrator
class AgentOrchestrator extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  agents =
  /* istanbul ignore next */
  (cov_58mt9m1tn().s[22]++, new Map());
  messageQueue =
  /* istanbul ignore next */
  (cov_58mt9m1tn().s[23]++, []);
  isProcessing =
  /* istanbul ignore next */
  (cov_58mt9m1tn().s[24]++, false);
  logger =
  /* istanbul ignore next */
  (cov_58mt9m1tn().s[25]++, new logger_1.Logger('AgentOrchestrator'));
  metrics =
  /* istanbul ignore next */
  (cov_58mt9m1tn().s[26]++, {
    totalMessages: 0,
    averageLatency: 0,
    activeAgents: 0
  });
  constructor() {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[6]++;
    cov_58mt9m1tn().s[27]++;
    super();
    /* istanbul ignore next */
    cov_58mt9m1tn().s[28]++;
    this.startMessageProcessor();
  }
  // Register an agent
  async registerAgent(agent) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[7]++;
    const agentId =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[29]++, agent.getId());
    /* istanbul ignore next */
    cov_58mt9m1tn().s[30]++;
    if (this.agents.has(agentId)) {
      /* istanbul ignore next */
      cov_58mt9m1tn().b[1][0]++;
      cov_58mt9m1tn().s[31]++;
      throw new Error(`Agent ${agentId} already registered`);
    } else
    /* istanbul ignore next */
    {
      cov_58mt9m1tn().b[1][1]++;
    }
    // Initialize agent
    cov_58mt9m1tn().s[32]++;
    await agent.initialize();
    // Set up event listeners
    /* istanbul ignore next */
    cov_58mt9m1tn().s[33]++;
    agent.on('message', message => {
      /* istanbul ignore next */
      cov_58mt9m1tn().f[8]++;
      cov_58mt9m1tn().s[34]++;
      this.enqueueMessage(message);
    });
    /* istanbul ignore next */
    cov_58mt9m1tn().s[35]++;
    agent.on('statusChange', event => {
      /* istanbul ignore next */
      cov_58mt9m1tn().f[9]++;
      cov_58mt9m1tn().s[36]++;
      this.emit('agentStatusChange', event);
    });
    /* istanbul ignore next */
    cov_58mt9m1tn().s[37]++;
    this.agents.set(agentId, agent);
    /* istanbul ignore next */
    cov_58mt9m1tn().s[38]++;
    this.metrics.activeAgents = this.agents.size;
    /* istanbul ignore next */
    cov_58mt9m1tn().s[39]++;
    this.logger.info(`Agent registered: ${agent.getName()}`);
  }
  // Send message to specific agent(s)
  async sendMessage(message) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[10]++;
    const fullMessage =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[40]++, {
      ...message,
      id: this.generateMessageId(),
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_58mt9m1tn().s[41]++;
    this.enqueueMessage(fullMessage);
  }
  // Broadcast message to all agents
  async broadcast(message) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[11]++;
    const fullMessage =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[42]++, {
      ...message,
      id: this.generateMessageId(),
      timestamp: Date.now(),
      to: Array.from(this.agents.keys())
    });
    /* istanbul ignore next */
    cov_58mt9m1tn().s[43]++;
    this.enqueueMessage(fullMessage);
  }
  // Execute coordinated task across multiple agents
  async executeCoordinatedTask(taskId, agentTasks) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[12]++;
    const results =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[44]++, {});
    const promises =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[45]++, []);
    /* istanbul ignore next */
    cov_58mt9m1tn().s[46]++;
    performanceMonitor_1.PerformanceMonitor.markStart(`coordinated_task_${taskId}`);
    /* istanbul ignore next */
    cov_58mt9m1tn().s[47]++;
    for (const {
      agentId,
      task,
      timeout =
      /* istanbul ignore next */
      (cov_58mt9m1tn().b[2][0]++, 30000)
    } of agentTasks) {
      const agent =
      /* istanbul ignore next */
      (cov_58mt9m1tn().s[48]++, this.agents.get(agentId));
      /* istanbul ignore next */
      cov_58mt9m1tn().s[49]++;
      if (!agent) {
        /* istanbul ignore next */
        cov_58mt9m1tn().b[3][0]++;
        cov_58mt9m1tn().s[50]++;
        throw new Error(`Agent ${agentId} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_58mt9m1tn().b[3][1]++;
      }
      const promise =
      /* istanbul ignore next */
      (cov_58mt9m1tn().s[51]++, Promise.race([this.executeAgentTask(agent, task), new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_58mt9m1tn().f[13]++;
        cov_58mt9m1tn().s[52]++;
        return setTimeout(() => {
          /* istanbul ignore next */
          cov_58mt9m1tn().f[14]++;
          cov_58mt9m1tn().s[53]++;
          return reject(new Error(`Task timeout: ${agentId}`));
        }, timeout);
      })]).then(result => {
        /* istanbul ignore next */
        cov_58mt9m1tn().f[15]++;
        cov_58mt9m1tn().s[54]++;
        results[agentId] = result;
      }).catch(error => {
        /* istanbul ignore next */
        cov_58mt9m1tn().f[16]++;
        cov_58mt9m1tn().s[55]++;
        results[agentId] = {
          error: error.message
        };
      }));
      /* istanbul ignore next */
      cov_58mt9m1tn().s[56]++;
      promises.push(promise);
    }
    /* istanbul ignore next */
    cov_58mt9m1tn().s[57]++;
    await Promise.all(promises);
    /* istanbul ignore next */
    cov_58mt9m1tn().s[58]++;
    performanceMonitor_1.PerformanceMonitor.markEnd(`coordinated_task_${taskId}`);
    /* istanbul ignore next */
    cov_58mt9m1tn().s[59]++;
    return results;
  }
  // Get orchestrator metrics
  getMetrics() {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[17]++;
    cov_58mt9m1tn().s[60]++;
    return {
      ...this.metrics,
      agents: Array.from(this.agents.values()).map(agent => {
        /* istanbul ignore next */
        cov_58mt9m1tn().f[18]++;
        cov_58mt9m1tn().s[61]++;
        return {
          id: agent.getId(),
          name: agent.getName(),
          metrics: agent.getMetrics()
        };
      }),
      queueLength: this.messageQueue.length
    };
  }
  // Shutdown orchestrator and all agents
  async shutdown() {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[19]++;
    cov_58mt9m1tn().s[62]++;
    this.logger.info('Shutting down orchestrator...');
    const shutdownPromises =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[63]++, Array.from(this.agents.values()).map(agent => {
      /* istanbul ignore next */
      cov_58mt9m1tn().f[20]++;
      cov_58mt9m1tn().s[64]++;
      return agent.shutdown().catch(error => {
        /* istanbul ignore next */
        cov_58mt9m1tn().f[21]++;
        cov_58mt9m1tn().s[65]++;
        this.logger.error(`Error shutting down agent ${agent.getName()}:`, error);
      });
    }));
    /* istanbul ignore next */
    cov_58mt9m1tn().s[66]++;
    await Promise.all(shutdownPromises);
    /* istanbul ignore next */
    cov_58mt9m1tn().s[67]++;
    this.agents.clear();
    /* istanbul ignore next */
    cov_58mt9m1tn().s[68]++;
    this.metrics.activeAgents = 0;
    /* istanbul ignore next */
    cov_58mt9m1tn().s[69]++;
    this.logger.info('Orchestrator shutdown complete');
  }
  // Private methods
  enqueueMessage(message) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[22]++;
    cov_58mt9m1tn().s[70]++;
    this.messageQueue.push(message);
    /* istanbul ignore next */
    cov_58mt9m1tn().s[71]++;
    this.metrics.totalMessages++;
  }
  async executeAgentTask(agent, task) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[23]++;
    const message =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[72]++, {
      id: this.generateMessageId(),
      type: 'command',
      from: 'orchestrator',
      to: agent.getId(),
      data: task,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_58mt9m1tn().s[73]++;
    return agent.processMessage(message);
  }
  startMessageProcessor() {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[24]++;
    cov_58mt9m1tn().s[74]++;
    setInterval(async () => {
      /* istanbul ignore next */
      cov_58mt9m1tn().f[25]++;
      cov_58mt9m1tn().s[75]++;
      if (
      /* istanbul ignore next */
      (cov_58mt9m1tn().b[5][0]++, this.isProcessing) ||
      /* istanbul ignore next */
      (cov_58mt9m1tn().b[5][1]++, this.messageQueue.length === 0)) {
        /* istanbul ignore next */
        cov_58mt9m1tn().b[4][0]++;
        cov_58mt9m1tn().s[76]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_58mt9m1tn().b[4][1]++;
      }
      cov_58mt9m1tn().s[77]++;
      this.isProcessing = true;
      /* istanbul ignore next */
      cov_58mt9m1tn().s[78]++;
      try {
        /* istanbul ignore next */
        cov_58mt9m1tn().s[79]++;
        while (this.messageQueue.length > 0) {
          const message =
          /* istanbul ignore next */
          (cov_58mt9m1tn().s[80]++, this.messageQueue.shift());
          /* istanbul ignore next */
          cov_58mt9m1tn().s[81]++;
          await this.processMessage(message);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_58mt9m1tn().s[82]++;
        this.logger.error('Message processing error:', error);
      } finally {
        /* istanbul ignore next */
        cov_58mt9m1tn().s[83]++;
        this.isProcessing = false;
      }
    }, 10); // Process every 10ms
  }
  async processMessage(message) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[26]++;
    const startTime =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[84]++, Date.now());
    /* istanbul ignore next */
    cov_58mt9m1tn().s[85]++;
    try {
      const targets =
      /* istanbul ignore next */
      (cov_58mt9m1tn().s[86]++, Array.isArray(message.to) ?
      /* istanbul ignore next */
      (cov_58mt9m1tn().b[6][0]++, message.to) :
      /* istanbul ignore next */
      (cov_58mt9m1tn().b[6][1]++, [message.to]));
      const promises =
      /* istanbul ignore next */
      (cov_58mt9m1tn().s[87]++, targets.map(async targetId => {
        /* istanbul ignore next */
        cov_58mt9m1tn().f[27]++;
        const agent =
        /* istanbul ignore next */
        (cov_58mt9m1tn().s[88]++, this.agents.get(targetId));
        /* istanbul ignore next */
        cov_58mt9m1tn().s[89]++;
        if (!agent) {
          /* istanbul ignore next */
          cov_58mt9m1tn().b[7][0]++;
          cov_58mt9m1tn().s[90]++;
          this.logger.warn(`Message target not found: ${targetId}`);
          /* istanbul ignore next */
          cov_58mt9m1tn().s[91]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_58mt9m1tn().b[7][1]++;
        }
        cov_58mt9m1tn().s[92]++;
        try {
          const response =
          /* istanbul ignore next */
          (cov_58mt9m1tn().s[93]++, await agent.processMessage(message));
          /* istanbul ignore next */
          cov_58mt9m1tn().s[94]++;
          if (response) {
            /* istanbul ignore next */
            cov_58mt9m1tn().b[8][0]++;
            cov_58mt9m1tn().s[95]++;
            this.enqueueMessage(response);
          } else
          /* istanbul ignore next */
          {
            cov_58mt9m1tn().b[8][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_58mt9m1tn().s[96]++;
          this.logger.error(`Agent ${targetId} message processing error:`, error);
          // Send error response if original message expects one
          /* istanbul ignore next */
          cov_58mt9m1tn().s[97]++;
          if (message.type === 'request') {
            /* istanbul ignore next */
            cov_58mt9m1tn().b[9][0]++;
            const errorResponse =
            /* istanbul ignore next */
            (cov_58mt9m1tn().s[98]++, {
              id: this.generateMessageId(),
              type: 'response',
              from: targetId,
              to: message.from,
              data: {
                error: error.message
              },
              timestamp: Date.now(),
              correlationId: message.id
            });
            /* istanbul ignore next */
            cov_58mt9m1tn().s[99]++;
            this.enqueueMessage(errorResponse);
          } else
          /* istanbul ignore next */
          {
            cov_58mt9m1tn().b[9][1]++;
          }
        }
      }));
      /* istanbul ignore next */
      cov_58mt9m1tn().s[100]++;
      await Promise.all(promises);
      // Update metrics
      const latency =
      /* istanbul ignore next */
      (cov_58mt9m1tn().s[101]++, Date.now() - startTime);
      const count =
      /* istanbul ignore next */
      (cov_58mt9m1tn().s[102]++, this.metrics.totalMessages);
      /* istanbul ignore next */
      cov_58mt9m1tn().s[103]++;
      this.metrics.averageLatency = (this.metrics.averageLatency * (count - 1) + latency) / count;
    } catch (error) {
      /* istanbul ignore next */
      cov_58mt9m1tn().s[104]++;
      this.logger.error('Critical message processing error:', error);
    }
  }
  generateMessageId() {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[28]++;
    cov_58mt9m1tn().s[105]++;
    return `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
}
/* istanbul ignore next */
cov_58mt9m1tn().s[106]++;
exports.AgentOrchestrator = AgentOrchestrator;
// Game Director Agent (Lead Orchestrator)
class GameDirectorAgent extends BaseAgent {
  gameStates =
  /* istanbul ignore next */
  (cov_58mt9m1tn().s[107]++, new Map());
  milestones =
  /* istanbul ignore next */
  (cov_58mt9m1tn().s[108]++, new Map());
  async initialize() {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[29]++;
    cov_58mt9m1tn().s[109]++;
    this.logger.info('Game Director Agent initialized');
    /* istanbul ignore next */
    cov_58mt9m1tn().s[110]++;
    this.setStatus('idle');
  }
  async processMessage(message) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[30]++;
    const startTime =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[111]++, Date.now());
    let success =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[112]++, true);
    /* istanbul ignore next */
    cov_58mt9m1tn().s[113]++;
    try {
      /* istanbul ignore next */
      cov_58mt9m1tn().s[114]++;
      this.setStatus('busy');
      /* istanbul ignore next */
      cov_58mt9m1tn().s[115]++;
      switch (message.data.action) {
        case 'greenlight_milestone':
          /* istanbul ignore next */
          cov_58mt9m1tn().b[10][0]++;
          cov_58mt9m1tn().s[116]++;
          return this.greenlightMilestone(message);
        case 'kill_switch':
          /* istanbul ignore next */
          cov_58mt9m1tn().b[10][1]++;
          cov_58mt9m1tn().s[117]++;
          return this.executeKillSwitch(message);
        case 'get_roadmap':
          /* istanbul ignore next */
          cov_58mt9m1tn().b[10][2]++;
          cov_58mt9m1tn().s[118]++;
          return this.getRoadmap(message);
        case 'update_kpis':
          /* istanbul ignore next */
          cov_58mt9m1tn().b[10][3]++;
          cov_58mt9m1tn().s[119]++;
          return this.updateKPIs(message);
        default:
          /* istanbul ignore next */
          cov_58mt9m1tn().b[10][4]++;
          cov_58mt9m1tn().s[120]++;
          throw new Error(`Unknown action: ${message.data.action}`);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_58mt9m1tn().s[121]++;
      success = false;
      /* istanbul ignore next */
      cov_58mt9m1tn().s[122]++;
      this.logger.error('Game Director processing error:', error);
      /* istanbul ignore next */
      cov_58mt9m1tn().s[123]++;
      return {
        id: this.generateMessageId(),
        type: 'response',
        from: this.config.id,
        to: message.from,
        data: {
          error: error.message
        },
        timestamp: Date.now(),
        correlationId: message.id
      };
    } finally {
      /* istanbul ignore next */
      cov_58mt9m1tn().s[124]++;
      this.updateMetrics(Date.now() - startTime, success);
      /* istanbul ignore next */
      cov_58mt9m1tn().s[125]++;
      this.setStatus('idle');
    }
  }
  async shutdown() {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[31]++;
    cov_58mt9m1tn().s[126]++;
    this.logger.info('Game Director Agent shutting down');
    /* istanbul ignore next */
    cov_58mt9m1tn().s[127]++;
    this.setStatus('offline');
  }
  greenlightMilestone(message) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[32]++;
    const {
      milestoneId,
      criteria
    } =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[128]++, message.data);
    // Evaluate milestone criteria
    const approved =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[129]++, this.evaluateMilestone(milestoneId, criteria));
    /* istanbul ignore next */
    cov_58mt9m1tn().s[130]++;
    this.milestones.set(milestoneId, {
      status: approved ?
      /* istanbul ignore next */
      (cov_58mt9m1tn().b[11][0]++, 'approved') :
      /* istanbul ignore next */
      (cov_58mt9m1tn().b[11][1]++, 'rejected'),
      timestamp: Date.now(),
      criteria
    });
    /* istanbul ignore next */
    cov_58mt9m1tn().s[131]++;
    return {
      id: this.generateMessageId(),
      type: 'response',
      from: this.config.id,
      to: message.from,
      data: {
        approved,
        milestoneId
      },
      timestamp: Date.now(),
      correlationId: message.id
    };
  }
  executeKillSwitch(message) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[33]++;
    const {
      gameId,
      reason
    } =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[132]++, message.data);
    /* istanbul ignore next */
    cov_58mt9m1tn().s[133]++;
    this.logger.warn(`Kill switch activated for ${gameId}: ${reason}`);
    // Broadcast kill switch to all agents
    /* istanbul ignore next */
    cov_58mt9m1tn().s[134]++;
    this.emit('message', {
      id: this.generateMessageId(),
      type: 'event',
      from: this.config.id,
      to: Array.from(['netcode', 'matchmaking', 'telemetry']),
      // Target critical agents
      data: {
        event: 'kill_switch',
        gameId,
        reason
      },
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_58mt9m1tn().s[135]++;
    return {
      id: this.generateMessageId(),
      type: 'response',
      from: this.config.id,
      to: message.from,
      data: {
        success: true,
        gameId
      },
      timestamp: Date.now(),
      correlationId: message.id
    };
  }
  getRoadmap(message) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[34]++;
    // Return current roadmap with milestones
    const roadmap =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[136]++, {
      sprint1: {
        status: 'in_progress',
        completion: 0.75
      },
      sprint2: {
        status: 'planned',
        completion: 0
      },
      sprint3: {
        status: 'planned',
        completion: 0
      },
      sprint4: {
        status: 'planned',
        completion: 0
      },
      games: {
        haloArena: {
          status: 'vertical_slice',
          priority: 'high'
        },
        haloRoyale: {
          status: 'prototype',
          priority: 'high'
        },
        haloRally: {
          status: 'concept',
          priority: 'medium'
        },
        haloRaids: {
          status: 'concept',
          priority: 'medium'
        },
        haloTactics: {
          status: 'concept',
          priority: 'low'
        }
      }
    });
    /* istanbul ignore next */
    cov_58mt9m1tn().s[137]++;
    return {
      id: this.generateMessageId(),
      type: 'response',
      from: this.config.id,
      to: message.from,
      data: {
        roadmap
      },
      timestamp: Date.now(),
      correlationId: message.id
    };
  }
  updateKPIs(message) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[35]++;
    const kpis =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[138]++, message.data.kpis);
    // Store KPI update
    /* istanbul ignore next */
    cov_58mt9m1tn().s[139]++;
    this.gameStates.set('current_kpis', {
      ...kpis,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_58mt9m1tn().s[140]++;
    return {
      id: this.generateMessageId(),
      type: 'response',
      from: this.config.id,
      to: message.from,
      data: {
        success: true
      },
      timestamp: Date.now(),
      correlationId: message.id
    };
  }
  evaluateMilestone(milestoneId, criteria) {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[36]++;
    // Mock milestone evaluation logic
    const requirements =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[141]++, {
      sprint1: ['netcode_ready', 'matchmaking_prototype', 'telemetry_live'],
      sprint2: ['arena_vertical_slice', 'bots_implemented', 'ui_controller_ready'],
      sprint3: ['rally_prototype', 'physics_sync', 'anticheat_basic'],
      sprint4: ['royale_prealpha', 'server_autoscale', 'liveops_ready']
    });
    const required =
    /* istanbul ignore next */
    (cov_58mt9m1tn().s[142]++,
    /* istanbul ignore next */
    (cov_58mt9m1tn().b[12][0]++, requirements[milestoneId]) ||
    /* istanbul ignore next */
    (cov_58mt9m1tn().b[12][1]++, []));
    /* istanbul ignore next */
    cov_58mt9m1tn().s[143]++;
    return required.every(req => {
      /* istanbul ignore next */
      cov_58mt9m1tn().f[37]++;
      cov_58mt9m1tn().s[144]++;
      return criteria[req] === true;
    });
  }
  generateMessageId() {
    /* istanbul ignore next */
    cov_58mt9m1tn().f[38]++;
    cov_58mt9m1tn().s[145]++;
    return `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
}
/* istanbul ignore next */
cov_58mt9m1tn().s[146]++;
exports.GameDirectorAgent = GameDirectorAgent;