9f1c99a4b2aba5467bffc863728f2e7b
"use strict";

/* istanbul ignore next */
function cov_9s9tnk2ii() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\config\\redis.ts";
  var hash = "1b7bfeb06ac51f54efc036378668b987c5c3aff0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\config\\redis.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 334
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 36
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 42
        }
      },
      "5": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 49
        }
      },
      "6": {
        start: {
          line: 9,
          column: 18
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "7": {
        start: {
          line: 10,
          column: 21
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 5
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 63
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 15
        }
      },
      "11": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "12": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "13": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 80
        }
      },
      "14": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 76
        }
      },
      "15": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 136
        }
      },
      "16": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "17": {
        start: {
          line: 23,
          column: 29
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "18": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "19": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 34,
          column: 14
        }
      },
      "20": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "21": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 52
        }
      },
      "22": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 66
        }
      },
      "23": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 43,
          column: 14
        }
      },
      "24": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "25": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 62
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "27": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 59
        }
      },
      "28": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "29": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 56
        }
      },
      "30": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "31": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 46
        }
      },
      "32": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "33": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "34": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 36
        }
      },
      "35": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 68
        }
      },
      "36": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "37": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "38": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 86
        }
      },
      "39": {
        start: {
          line: 70,
          column: 36
        },
        end: {
          line: 70,
          column: 77
        }
      },
      "40": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 77,
          column: 19
        }
      },
      "41": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 80,
          column: 19
        }
      },
      "42": {
        start: {
          line: 79,
          column: 20
        },
        end: {
          line: 79,
          column: 74
        }
      },
      "43": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 44
        }
      },
      "44": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 72
        }
      },
      "45": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 23
        }
      },
      "46": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 86
        }
      },
      "47": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 98
        }
      },
      "48": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 27
        }
      },
      "49": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 94,
          column: 36
        }
      },
      "50": {
        start: {
          line: 95,
          column: 23
        },
        end: {
          line: 103,
          column: 1
        }
      },
      "51": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "52": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 20
        }
      },
      "53": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "54": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 56
        }
      },
      "55": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 23
        }
      },
      "56": {
        start: {
          line: 104,
          column: 0
        },
        end: {
          line: 104,
          column: 40
        }
      },
      "57": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 116,
          column: 1
        }
      },
      "58": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "59": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "60": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 37
        }
      },
      "61": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 59
        }
      },
      "62": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 63
        }
      },
      "63": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 20
        }
      },
      "64": {
        start: {
          line: 117,
          column: 0
        },
        end: {
          line: 117,
          column: 42
        }
      },
      "65": {
        start: {
          line: 119,
          column: 17
        },
        end: {
          line: 135,
          column: 1
        }
      },
      "66": {
        start: {
          line: 120,
          column: 19
        },
        end: {
          line: 120,
          column: 48
        }
      },
      "67": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "68": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "69": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "70": {
        start: {
          line: 124,
          column: 32
        },
        end: {
          line: 124,
          column: 53
        }
      },
      "71": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "72": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 58
        }
      },
      "73": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 51
        }
      },
      "74": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 52
        }
      },
      "75": {
        start: {
          line: 136,
          column: 0
        },
        end: {
          line: 136,
          column: 28
        }
      },
      "76": {
        start: {
          line: 137,
          column: 17
        },
        end: {
          line: 152,
          column: 1
        }
      },
      "77": {
        start: {
          line: 138,
          column: 19
        },
        end: {
          line: 138,
          column: 48
        }
      },
      "78": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 140,
          column: 20
        }
      },
      "79": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 20
        }
      },
      "80": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "81": {
        start: {
          line: 142,
          column: 22
        },
        end: {
          line: 142,
          column: 43
        }
      },
      "82": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "83": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 37
        }
      },
      "84": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 20
        }
      },
      "85": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 52
        }
      },
      "86": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 20
        }
      },
      "87": {
        start: {
          line: 153,
          column: 0
        },
        end: {
          line: 153,
          column: 28
        }
      },
      "88": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 164,
          column: 1
        }
      },
      "89": {
        start: {
          line: 155,
          column: 19
        },
        end: {
          line: 155,
          column: 48
        }
      },
      "90": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "91": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "92": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "93": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 30
        }
      },
      "94": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 53
        }
      },
      "95": {
        start: {
          line: 165,
          column: 0
        },
        end: {
          line: 165,
          column: 34
        }
      },
      "96": {
        start: {
          line: 166,
          column: 19
        },
        end: {
          line: 179,
          column: 1
        }
      },
      "97": {
        start: {
          line: 167,
          column: 19
        },
        end: {
          line: 167,
          column: 48
        }
      },
      "98": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 169,
          column: 15
        }
      },
      "99": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 15
        }
      },
      "100": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "101": {
        start: {
          line: 171,
          column: 21
        },
        end: {
          line: 171,
          column: 47
        }
      },
      "102": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "103": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 35
        }
      },
      "104": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 53
        }
      },
      "105": {
        start: {
          line: 180,
          column: 0
        },
        end: {
          line: 180,
          column: 32
        }
      },
      "106": {
        start: {
          line: 182,
          column: 25
        },
        end: {
          line: 204,
          column: 1
        }
      },
      "107": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "108": {
        start: {
          line: 184,
          column: 23
        },
        end: {
          line: 184,
          column: 52
        }
      },
      "109": {
        start: {
          line: 185,
          column: 32
        },
        end: {
          line: 185,
          column: 53
        }
      },
      "110": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "111": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 58
        }
      },
      "112": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 51
        }
      },
      "113": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "114": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 49
        }
      },
      "115": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "116": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 55
        }
      },
      "117": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 62
        }
      },
      "118": {
        start: {
          line: 205,
          column: 0
        },
        end: {
          line: 205,
          column: 44
        }
      },
      "119": {
        start: {
          line: 206,
          column: 30
        },
        end: {
          line: 220,
          column: 1
        }
      },
      "120": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "121": {
        start: {
          line: 208,
          column: 23
        },
        end: {
          line: 208,
          column: 52
        }
      },
      "122": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "123": {
        start: {
          line: 210,
          column: 25
        },
        end: {
          line: 210,
          column: 60
        }
      },
      "124": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "125": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 39
        }
      },
      "126": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 47
        }
      },
      "127": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 65
        }
      },
      "128": {
        start: {
          line: 221,
          column: 0
        },
        end: {
          line: 221,
          column: 54
        }
      },
      "129": {
        start: {
          line: 223,
          column: 18
        },
        end: {
          line: 240,
          column: 1
        }
      },
      "130": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "131": {
        start: {
          line: 226,
          column: 23
        },
        end: {
          line: 226,
          column: 55
        }
      },
      "132": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "133": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 26
        }
      },
      "134": {
        start: {
          line: 231,
          column: 21
        },
        end: {
          line: 231,
          column: 42
        }
      },
      "135": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 52
        }
      },
      "136": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 20
        }
      },
      "137": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 52
        }
      },
      "138": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 37
        }
      },
      "139": {
        start: {
          line: 241,
          column: 0
        },
        end: {
          line: 241,
          column: 30
        }
      },
      "140": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 257,
          column: 1
        }
      },
      "141": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "142": {
        start: {
          line: 245,
          column: 23
        },
        end: {
          line: 245,
          column: 52
        }
      },
      "143": {
        start: {
          line: 246,
          column: 23
        },
        end: {
          line: 246,
          column: 55
        }
      },
      "144": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "145": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 46
        }
      },
      "146": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 24
        }
      },
      "147": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 21
        }
      },
      "148": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 53
        }
      },
      "149": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 21
        }
      },
      "150": {
        start: {
          line: 258,
          column: 0
        },
        end: {
          line: 258,
          column: 34
        }
      },
      "151": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 267,
          column: 1
        }
      },
      "152": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 266,
          column: 5
        }
      },
      "153": {
        start: {
          line: 261,
          column: 23
        },
        end: {
          line: 261,
          column: 52
        }
      },
      "154": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 34
        }
      },
      "155": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 53
        }
      },
      "156": {
        start: {
          line: 268,
          column: 0
        },
        end: {
          line: 268,
          column: 34
        }
      },
      "157": {
        start: {
          line: 270,
          column: 22
        },
        end: {
          line: 297,
          column: 1
        }
      },
      "158": {
        start: {
          line: 271,
          column: 19
        },
        end: {
          line: 271,
          column: 48
        }
      },
      "159": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 278,
          column: 5
        }
      },
      "160": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 277,
          column: 10
        }
      },
      "161": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 296,
          column: 5
        }
      },
      "162": {
        start: {
          line: 280,
          column: 21
        },
        end: {
          line: 280,
          column: 48
        }
      },
      "163": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 281,
          column: 54
        }
      },
      "164": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 287,
          column: 10
        }
      },
      "165": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 58
        }
      },
      "166": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 295,
          column: 10
        }
      },
      "167": {
        start: {
          line: 298,
          column: 0
        },
        end: {
          line: 298,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 21
          },
          end: {
            line: 10,
            column: 22
          }
        },
        loc: {
          start: {
            line: 10,
            column: 33
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 33
          }
        },
        loc: {
          start: {
            line: 49,
            column: 43
          },
          end: {
            line: 52,
            column: 9
          }
        },
        line: 49
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 53,
            column: 34
          },
          end: {
            line: 53,
            column: 35
          }
        },
        loc: {
          start: {
            line: 53,
            column: 40
          },
          end: {
            line: 55,
            column: 9
          }
        },
        line: 53
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 33
          }
        },
        loc: {
          start: {
            line: 56,
            column: 38
          },
          end: {
            line: 58,
            column: 9
          }
        },
        line: 56
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 59,
            column: 31
          }
        },
        loc: {
          start: {
            line: 59,
            column: 36
          },
          end: {
            line: 61,
            column: 9
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 78,
            column: 40
          },
          end: {
            line: 78,
            column: 41
          }
        },
        loc: {
          start: {
            line: 78,
            column: 49
          },
          end: {
            line: 80,
            column: 17
          }
        },
        line: 78
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 95,
            column: 23
          },
          end: {
            line: 95,
            column: 24
          }
        },
        loc: {
          start: {
            line: 95,
            column: 29
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 95
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 105,
            column: 24
          },
          end: {
            line: 105,
            column: 25
          }
        },
        loc: {
          start: {
            line: 105,
            column: 36
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 105
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 119,
            column: 17
          },
          end: {
            line: 119,
            column: 18
          }
        },
        loc: {
          start: {
            line: 119,
            column: 44
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 119
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 137,
            column: 17
          },
          end: {
            line: 137,
            column: 18
          }
        },
        loc: {
          start: {
            line: 137,
            column: 32
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 137
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 154,
            column: 21
          }
        },
        loc: {
          start: {
            line: 154,
            column: 35
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 154
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 166,
            column: 20
          }
        },
        loc: {
          start: {
            line: 166,
            column: 38
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 166
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 182,
            column: 25
          },
          end: {
            line: 182,
            column: 26
          }
        },
        loc: {
          start: {
            line: 182,
            column: 58
          },
          end: {
            line: 204,
            column: 1
          }
        },
        line: 182
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 206,
            column: 30
          },
          end: {
            line: 206,
            column: 31
          }
        },
        loc: {
          start: {
            line: 206,
            column: 46
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 206
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 223,
            column: 18
          },
          end: {
            line: 223,
            column: 19
          }
        },
        loc: {
          start: {
            line: 223,
            column: 60
          },
          end: {
            line: 240,
            column: 1
          }
        },
        line: 223
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 243,
            column: 20
          },
          end: {
            line: 243,
            column: 21
          }
        },
        loc: {
          start: {
            line: 243,
            column: 49
          },
          end: {
            line: 257,
            column: 1
          }
        },
        line: 243
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 259,
            column: 20
          },
          end: {
            line: 259,
            column: 21
          }
        },
        loc: {
          start: {
            line: 259,
            column: 39
          },
          end: {
            line: 267,
            column: 1
          }
        },
        line: 259
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 270,
            column: 22
          },
          end: {
            line: 270,
            column: 23
          }
        },
        loc: {
          start: {
            line: 270,
            column: 34
          },
          end: {
            line: 297,
            column: 1
          }
        },
        line: 270
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 47
          }
        }, {
          start: {
            line: 17,
            column: 51
          },
          end: {
            line: 17,
            column: 80
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 33
          }
        }, {
          start: {
            line: 19,
            column: 37
          },
          end: {
            line: 19,
            column: 63
          }
        }, {
          start: {
            line: 19,
            column: 67
          },
          end: {
            line: 19,
            column: 76
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 73
          },
          end: {
            line: 20,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 73
          },
          end: {
            line: 20,
            column: 81
          }
        }, {
          start: {
            line: 20,
            column: 86
          },
          end: {
            line: 20,
            column: 112
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 20,
            column: 86
          },
          end: {
            line: 20,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 97
          },
          end: {
            line: 20,
            column: 103
          }
        }, {
          start: {
            line: 20,
            column: 106
          },
          end: {
            line: 20,
            column: 112
          }
        }],
        line: 20
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: 45,
            column: 13
          },
          end: {
            line: 47,
            column: 9
          }
        }],
        line: 37
      },
      "7": {
        loc: {
          start: {
            line: 39,
            column: 39
          },
          end: {
            line: 39,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 39
          },
          end: {
            line: 39,
            column: 57
          }
        }, {
          start: {
            line: 39,
            column: 61
          },
          end: {
            line: 39,
            column: 65
          }
        }],
        line: 39
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "10": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 122,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 122,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "13": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: 128,
            column: 13
          },
          end: {
            line: 130,
            column: 9
          }
        }],
        line: 125
      },
      "14": {
        loc: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 140,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 140,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "15": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "16": {
        loc: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 157,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 157,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "17": {
        loc: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 169,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 169,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "18": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "19": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: 190,
            column: 13
          },
          end: {
            line: 192,
            column: 9
          }
        }],
        line: 187
      },
      "20": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "21": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "22": {
        loc: {
          start: {
            line: 223,
            column: 45
          },
          end: {
            line: 223,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 223,
            column: 51
          },
          end: {
            line: 223,
            column: 55
          }
        }],
        line: 223
      },
      "23": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "24": {
        loc: {
          start: {
            line: 243,
            column: 36
          },
          end: {
            line: 243,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 243,
            column: 42
          },
          end: {
            line: 243,
            column: 44
          }
        }],
        line: 243
      },
      "25": {
        loc: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "26": {
        loc: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "27": {
        loc: {
          start: {
            line: 293,
            column: 19
          },
          end: {
            line: 293,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 44
          },
          end: {
            line: 293,
            column: 57
          }
        }, {
          start: {
            line: 293,
            column: 60
          },
          end: {
            line: 293,
            column: 73
          }
        }],
        line: 293
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1b7bfeb06ac51f54efc036378668b987c5c3aff0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9s9tnk2ii = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9s9tnk2ii();
cov_9s9tnk2ii().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_9s9tnk2ii().s[1]++;
exports.getCacheStats = exports.releaseLock = exports.acquireLock = exports.warmCache = exports.invalidateCacheByTags = exports.setCacheWithTags = exports.clearCache = exports.deleteCache = exports.getCache = exports.setCache = exports.disconnectRedis = exports.getRedisClient = exports.connectRedis = exports.isRedisEnabled = void 0;
const redis_1 =
/* istanbul ignore next */
(cov_9s9tnk2ii().s[2]++, require("redis"));
const logger_1 =
/* istanbul ignore next */
(cov_9s9tnk2ii().s[3]++, require("./logger"));
const logger =
/* istanbul ignore next */
(cov_9s9tnk2ii().s[4]++, (0, logger_1.setupLogger)());
// Check if Redis is enabled
/* istanbul ignore next */
cov_9s9tnk2ii().s[5]++;
exports.isRedisEnabled = !!process.env.REDIS_URL;
let redisClient =
/* istanbul ignore next */
(cov_9s9tnk2ii().s[6]++, null);
/* istanbul ignore next */
cov_9s9tnk2ii().s[7]++;
const connectRedis = async () => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[0]++;
  cov_9s9tnk2ii().s[8]++;
  if (!exports.isRedisEnabled) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().b[0][0]++;
    cov_9s9tnk2ii().s[9]++;
    logger.warn('Redis is disabled - skipping connection');
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[10]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_9s9tnk2ii().b[0][1]++;
  }
  const redisUrl =
  /* istanbul ignore next */
  (cov_9s9tnk2ii().s[11]++, process.env.REDIS_URL);
  const url =
  /* istanbul ignore next */
  (cov_9s9tnk2ii().s[12]++, new URL(redisUrl));
  const isSecure =
  /* istanbul ignore next */
  (cov_9s9tnk2ii().s[13]++,
  /* istanbul ignore next */
  (cov_9s9tnk2ii().b[1][0]++, url.protocol === 'rediss:') ||
  /* istanbul ignore next */
  (cov_9s9tnk2ii().b[1][1]++, url.protocol === 'redis+tls:'));
  // Extract password from URL if present, otherwise use environment variable
  const password =
  /* istanbul ignore next */
  (cov_9s9tnk2ii().s[14]++,
  /* istanbul ignore next */
  (cov_9s9tnk2ii().b[2][0]++, url.password) ||
  /* istanbul ignore next */
  (cov_9s9tnk2ii().b[2][1]++, process.env.REDIS_PASSWORD) ||
  /* istanbul ignore next */
  (cov_9s9tnk2ii().b[2][2]++, undefined));
  /* istanbul ignore next */
  cov_9s9tnk2ii().s[15]++;
  logger.info(`Connecting to Redis: ${url.protocol}//${url.hostname}:${
  /* istanbul ignore next */
  (cov_9s9tnk2ii().b[3][0]++, url.port) ||
  /* istanbul ignore next */
  (cov_9s9tnk2ii().b[3][1]++, isSecure ?
  /* istanbul ignore next */
  (cov_9s9tnk2ii().b[4][0]++, '6380') :
  /* istanbul ignore next */
  (cov_9s9tnk2ii().b[4][1]++, '6379'))} (SSL: ${isSecure})`);
  /* istanbul ignore next */
  cov_9s9tnk2ii().s[16]++;
  try {
    // Create Redis client with proper SSL handling
    const clientConfig =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[17]++, {
      password: password,
      socket: {
        connectTimeout: 10000
      }
    });
    // Handle SSL/TLS configuration
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[18]++;
    if (isSecure) {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[5][0]++;
      cov_9s9tnk2ii().s[19]++;
      clientConfig.socket.tls = {
        rejectUnauthorized: false,
        servername: url.hostname
      };
    } else
    /* istanbul ignore next */
    {
      cov_9s9tnk2ii().b[5][1]++;
    }
    // Use URL or individual components
    cov_9s9tnk2ii().s[20]++;
    if (isSecure) {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[6][0]++;
      cov_9s9tnk2ii().s[21]++;
      clientConfig.socket.host = url.hostname;
      /* istanbul ignore next */
      cov_9s9tnk2ii().s[22]++;
      clientConfig.socket.port =
      /* istanbul ignore next */
      (cov_9s9tnk2ii().b[7][0]++, parseInt(url.port)) ||
      /* istanbul ignore next */
      (cov_9s9tnk2ii().b[7][1]++, 6380);
      /* istanbul ignore next */
      cov_9s9tnk2ii().s[23]++;
      clientConfig.socket.tls = {
        rejectUnauthorized: false,
        servername: url.hostname
      };
    } else {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[6][1]++;
      cov_9s9tnk2ii().s[24]++;
      clientConfig.url = redisUrl;
    }
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[25]++;
    redisClient = (0, redis_1.createClient)(clientConfig);
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[26]++;
    redisClient.on('error', error => {
      /* istanbul ignore next */
      cov_9s9tnk2ii().f[1]++;
      cov_9s9tnk2ii().s[27]++;
      logger.error('Redis connection error:', error);
      // Don't throw here, let the application continue without Redis
    });
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[28]++;
    redisClient.on('connect', () => {
      /* istanbul ignore next */
      cov_9s9tnk2ii().f[2]++;
      cov_9s9tnk2ii().s[29]++;
      logger.info('Redis connected successfully');
    });
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[30]++;
    redisClient.on('ready', () => {
      /* istanbul ignore next */
      cov_9s9tnk2ii().f[3]++;
      cov_9s9tnk2ii().s[31]++;
      logger.info('Redis client ready');
    });
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[32]++;
    redisClient.on('end', () => {
      /* istanbul ignore next */
      cov_9s9tnk2ii().f[4]++;
      cov_9s9tnk2ii().s[33]++;
      logger.warn('Redis connection ended');
    });
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[34]++;
    await redisClient.connect();
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[35]++;
    logger.error('Failed to connect to Redis with SSL:', error);
    // If SSL connection failed, try without SSL as fallback
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[36]++;
    if (isSecure) {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[8][0]++;
      cov_9s9tnk2ii().s[37]++;
      try {
        /* istanbul ignore next */
        cov_9s9tnk2ii().s[38]++;
        logger.info('Attempting Redis connection without SSL as fallback...');
        const fallbackUrl =
        /* istanbul ignore next */
        (cov_9s9tnk2ii().s[39]++, redisUrl.replace('rediss://', 'redis://'));
        /* istanbul ignore next */
        cov_9s9tnk2ii().s[40]++;
        redisClient = (0, redis_1.createClient)({
          url: fallbackUrl,
          password: password,
          socket: {
            connectTimeout: 10000
          }
        });
        /* istanbul ignore next */
        cov_9s9tnk2ii().s[41]++;
        redisClient.on('error', err => {
          /* istanbul ignore next */
          cov_9s9tnk2ii().f[5]++;
          cov_9s9tnk2ii().s[42]++;
          logger.error('Redis fallback connection error:', err);
        });
        /* istanbul ignore next */
        cov_9s9tnk2ii().s[43]++;
        await redisClient.connect();
        /* istanbul ignore next */
        cov_9s9tnk2ii().s[44]++;
        logger.info('Redis connected successfully without SSL');
        /* istanbul ignore next */
        cov_9s9tnk2ii().s[45]++;
        return;
      } catch (fallbackError) {
        /* istanbul ignore next */
        cov_9s9tnk2ii().s[46]++;
        logger.error('Redis fallback connection also failed:', fallbackError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_9s9tnk2ii().b[8][1]++;
    }
    // If all connection attempts failed
    cov_9s9tnk2ii().s[47]++;
    logger.warn('Continuing without Redis - caching and real-time features will be disabled');
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[48]++;
    redisClient = null;
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[49]++;
exports.connectRedis = connectRedis;
/* istanbul ignore next */
cov_9s9tnk2ii().s[50]++;
const getRedisClient = () => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[6]++;
  cov_9s9tnk2ii().s[51]++;
  if (!exports.isRedisEnabled) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().b[9][0]++;
    cov_9s9tnk2ii().s[52]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_9s9tnk2ii().b[9][1]++;
  }
  cov_9s9tnk2ii().s[53]++;
  if (!redisClient) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().b[10][0]++;
    cov_9s9tnk2ii().s[54]++;
    throw new Error('Redis client not initialized');
  } else
  /* istanbul ignore next */
  {
    cov_9s9tnk2ii().b[10][1]++;
  }
  cov_9s9tnk2ii().s[55]++;
  return redisClient;
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[56]++;
exports.getRedisClient = getRedisClient;
/* istanbul ignore next */
cov_9s9tnk2ii().s[57]++;
const disconnectRedis = async () => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[7]++;
  cov_9s9tnk2ii().s[58]++;
  try {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[59]++;
    if (redisClient) {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[11][0]++;
      cov_9s9tnk2ii().s[60]++;
      await redisClient.quit();
      /* istanbul ignore next */
      cov_9s9tnk2ii().s[61]++;
      logger.info('Redis disconnected successfully');
    } else
    /* istanbul ignore next */
    {
      cov_9s9tnk2ii().b[11][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[62]++;
    logger.error('Error disconnecting from Redis:', error);
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[63]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[64]++;
exports.disconnectRedis = disconnectRedis;
// Cache utility functions
/* istanbul ignore next */
cov_9s9tnk2ii().s[65]++;
const setCache = async (key, value, ttl) => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[8]++;
  const client =
  /* istanbul ignore next */
  (cov_9s9tnk2ii().s[66]++, (0, exports.getRedisClient)());
  /* istanbul ignore next */
  cov_9s9tnk2ii().s[67]++;
  if (!client) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().b[12][0]++;
    cov_9s9tnk2ii().s[68]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_9s9tnk2ii().b[12][1]++;
  }
  cov_9s9tnk2ii().s[69]++;
  try {
    const serializedValue =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[70]++, JSON.stringify(value));
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[71]++;
    if (ttl) {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[13][0]++;
      cov_9s9tnk2ii().s[72]++;
      await client.setEx(key, ttl, serializedValue);
    } else {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[13][1]++;
      cov_9s9tnk2ii().s[73]++;
      await client.set(key, serializedValue);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[74]++;
    logger.error('Error setting cache:', error);
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[75]++;
exports.setCache = setCache;
/* istanbul ignore next */
cov_9s9tnk2ii().s[76]++;
const getCache = async key => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[9]++;
  const client =
  /* istanbul ignore next */
  (cov_9s9tnk2ii().s[77]++, (0, exports.getRedisClient)());
  /* istanbul ignore next */
  cov_9s9tnk2ii().s[78]++;
  if (!client) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().b[14][0]++;
    cov_9s9tnk2ii().s[79]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_9s9tnk2ii().b[14][1]++;
  }
  cov_9s9tnk2ii().s[80]++;
  try {
    const value =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[81]++, await client.get(key));
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[82]++;
    if (value) {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[15][0]++;
      cov_9s9tnk2ii().s[83]++;
      return JSON.parse(value);
    } else
    /* istanbul ignore next */
    {
      cov_9s9tnk2ii().b[15][1]++;
    }
    cov_9s9tnk2ii().s[84]++;
    return null;
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[85]++;
    logger.error('Error getting cache:', error);
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[86]++;
    return null;
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[87]++;
exports.getCache = getCache;
/* istanbul ignore next */
cov_9s9tnk2ii().s[88]++;
const deleteCache = async key => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[10]++;
  const client =
  /* istanbul ignore next */
  (cov_9s9tnk2ii().s[89]++, (0, exports.getRedisClient)());
  /* istanbul ignore next */
  cov_9s9tnk2ii().s[90]++;
  if (!client) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().b[16][0]++;
    cov_9s9tnk2ii().s[91]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_9s9tnk2ii().b[16][1]++;
  }
  cov_9s9tnk2ii().s[92]++;
  try {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[93]++;
    await client.del(key);
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[94]++;
    logger.error('Error deleting cache:', error);
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[95]++;
exports.deleteCache = deleteCache;
/* istanbul ignore next */
cov_9s9tnk2ii().s[96]++;
const clearCache = async pattern => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[11]++;
  const client =
  /* istanbul ignore next */
  (cov_9s9tnk2ii().s[97]++, (0, exports.getRedisClient)());
  /* istanbul ignore next */
  cov_9s9tnk2ii().s[98]++;
  if (!client) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().b[17][0]++;
    cov_9s9tnk2ii().s[99]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_9s9tnk2ii().b[17][1]++;
  }
  cov_9s9tnk2ii().s[100]++;
  try {
    const keys =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[101]++, await client.keys(pattern));
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[102]++;
    if (keys.length > 0) {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[18][0]++;
      cov_9s9tnk2ii().s[103]++;
      await client.del(keys);
    } else
    /* istanbul ignore next */
    {
      cov_9s9tnk2ii().b[18][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[104]++;
    logger.error('Error clearing cache:', error);
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[105]++;
exports.clearCache = clearCache;
// Advanced caching utilities for production optimization
/* istanbul ignore next */
cov_9s9tnk2ii().s[106]++;
const setCacheWithTags = async (key, value, tags, ttl) => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[12]++;
  cov_9s9tnk2ii().s[107]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[108]++, (0, exports.getRedisClient)());
    const serializedValue =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[109]++, JSON.stringify(value));
    // Set the main cache entry
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[110]++;
    if (ttl) {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[19][0]++;
      cov_9s9tnk2ii().s[111]++;
      await client.setEx(key, ttl, serializedValue);
    } else {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[19][1]++;
      cov_9s9tnk2ii().s[112]++;
      await client.set(key, serializedValue);
    }
    // Set tag associations for cache invalidation
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[113]++;
    for (const tag of tags) {
      /* istanbul ignore next */
      cov_9s9tnk2ii().s[114]++;
      await client.sAdd(`tag:${tag}`, key);
      /* istanbul ignore next */
      cov_9s9tnk2ii().s[115]++;
      if (ttl) {
        /* istanbul ignore next */
        cov_9s9tnk2ii().b[20][0]++;
        cov_9s9tnk2ii().s[116]++;
        await client.expire(`tag:${tag}`, ttl);
      } else
      /* istanbul ignore next */
      {
        cov_9s9tnk2ii().b[20][1]++;
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[117]++;
    logger.error('Error setting cache with tags:', error);
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[118]++;
exports.setCacheWithTags = setCacheWithTags;
/* istanbul ignore next */
cov_9s9tnk2ii().s[119]++;
const invalidateCacheByTags = async tags => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[13]++;
  cov_9s9tnk2ii().s[120]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[121]++, (0, exports.getRedisClient)());
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[122]++;
    for (const tag of tags) {
      const keys =
      /* istanbul ignore next */
      (cov_9s9tnk2ii().s[123]++, await client.sMembers(`tag:${tag}`));
      /* istanbul ignore next */
      cov_9s9tnk2ii().s[124]++;
      if (keys.length > 0) {
        /* istanbul ignore next */
        cov_9s9tnk2ii().b[21][0]++;
        cov_9s9tnk2ii().s[125]++;
        await client.del(keys);
        /* istanbul ignore next */
        cov_9s9tnk2ii().s[126]++;
        await client.del(`tag:${tag}`);
      } else
      /* istanbul ignore next */
      {
        cov_9s9tnk2ii().b[21][1]++;
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[127]++;
    logger.error('Error invalidating cache by tags:', error);
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[128]++;
exports.invalidateCacheByTags = invalidateCacheByTags;
// Cache warming utilities
/* istanbul ignore next */
cov_9s9tnk2ii().s[129]++;
const warmCache = async (key, fetchFunction, ttl =
/* istanbul ignore next */
(cov_9s9tnk2ii().b[22][0]++, 3600)) => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[14]++;
  cov_9s9tnk2ii().s[130]++;
  try {
    // Try to get from cache first
    const cached =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[131]++, await (0, exports.getCache)(key));
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[132]++;
    if (cached) {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[23][0]++;
      cov_9s9tnk2ii().s[133]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_9s9tnk2ii().b[23][1]++;
    }
    // If not in cache, fetch and cache
    const data =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[134]++, await fetchFunction());
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[135]++;
    await (0, exports.setCache)(key, data, ttl);
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[136]++;
    return data;
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[137]++;
    logger.error('Error warming cache:', error);
    // Fallback to direct fetch
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[138]++;
    return await fetchFunction();
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[139]++;
exports.warmCache = warmCache;
// Distributed locking for cache consistency
/* istanbul ignore next */
cov_9s9tnk2ii().s[140]++;
const acquireLock = async (lockKey, ttl =
/* istanbul ignore next */
(cov_9s9tnk2ii().b[24][0]++, 10)) => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[15]++;
  cov_9s9tnk2ii().s[141]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[142]++, (0, exports.getRedisClient)());
    const result =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[143]++, await client.setNX(lockKey, '1'));
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[144]++;
    if (result) {
      /* istanbul ignore next */
      cov_9s9tnk2ii().b[25][0]++;
      cov_9s9tnk2ii().s[145]++;
      await client.expire(lockKey, ttl);
      /* istanbul ignore next */
      cov_9s9tnk2ii().s[146]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_9s9tnk2ii().b[25][1]++;
    }
    cov_9s9tnk2ii().s[147]++;
    return false;
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[148]++;
    logger.error('Error acquiring lock:', error);
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[149]++;
    return false;
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[150]++;
exports.acquireLock = acquireLock;
/* istanbul ignore next */
cov_9s9tnk2ii().s[151]++;
const releaseLock = async lockKey => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[16]++;
  cov_9s9tnk2ii().s[152]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[153]++, (0, exports.getRedisClient)());
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[154]++;
    await client.del(lockKey);
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[155]++;
    logger.error('Error releasing lock:', error);
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[156]++;
exports.releaseLock = releaseLock;
// Cache statistics and monitoring
/* istanbul ignore next */
cov_9s9tnk2ii().s[157]++;
const getCacheStats = async () => {
  /* istanbul ignore next */
  cov_9s9tnk2ii().f[17]++;
  const client =
  /* istanbul ignore next */
  (cov_9s9tnk2ii().s[158]++, (0, exports.getRedisClient)());
  /* istanbul ignore next */
  cov_9s9tnk2ii().s[159]++;
  if (!client) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().b[26][0]++;
    cov_9s9tnk2ii().s[160]++;
    return {
      enabled: false,
      message: 'Redis not configured',
      timestamp: new Date().toISOString()
    };
  } else
  /* istanbul ignore next */
  {
    cov_9s9tnk2ii().b[26][1]++;
  }
  cov_9s9tnk2ii().s[161]++;
  try {
    const info =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[162]++, await client.info('memory'));
    const keyspace =
    /* istanbul ignore next */
    (cov_9s9tnk2ii().s[163]++, await client.info('keyspace'));
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[164]++;
    return {
      enabled: true,
      memory: info,
      keyspace: keyspace,
      timestamp: new Date().toISOString()
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[165]++;
    logger.error('Error getting cache stats:', error);
    /* istanbul ignore next */
    cov_9s9tnk2ii().s[166]++;
    return {
      enabled: true,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_9s9tnk2ii().b[27][0]++, error.message) :
      /* istanbul ignore next */
      (cov_9s9tnk2ii().b[27][1]++, String(error)),
      timestamp: new Date().toISOString()
    };
  }
};
/* istanbul ignore next */
cov_9s9tnk2ii().s[167]++;
exports.getCacheStats = getCacheStats;