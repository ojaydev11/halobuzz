4413f5221e26f14dbadc3d34f08553d8
"use strict";

/* istanbul ignore next */
function cov_2khnvq858o() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\cron\\festivalActivation.ts";
  var hash = "e9a87d1dd2298d7130c3961aa36dcf009d78663b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\cron\\festivalActivation.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 54
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 48
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 40
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 71
        }
      },
      "7": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "8": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 16,
          column: 10
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 90
        }
      },
      "10": {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 18,
          column: 30
        }
      },
      "11": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "12": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "13": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 29,
          column: 13
        }
      },
      "14": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 49
        }
      },
      "15": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "16": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 89
        }
      },
      "17": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "18": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 94
        }
      },
      "19": {
        start: {
          line: 32,
          column: 38
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "20": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 94
        }
      },
      "21": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "22": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "23": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 51
        }
      },
      "24": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 91
        }
      },
      "25": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 29
        }
      },
      "26": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 96
        }
      },
      "27": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 117
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 72
        }
      },
      "29": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 20
        }
      },
      "30": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "31": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 33
        }
      },
      "32": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 30
        }
      },
      "33": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "34": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 95
        }
      },
      "35": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 107
        }
      },
      "36": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 43
        }
      },
      "37": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 52
        }
      },
      "38": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 86
        }
      },
      "39": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 20
        }
      },
      "40": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "41": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 34
        }
      },
      "42": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 30
        }
      },
      "43": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "44": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 96
        }
      },
      "45": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 109
        }
      },
      "46": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 44
        }
      },
      "47": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 54
        }
      },
      "48": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 88
        }
      },
      "49": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 20
        }
      },
      "50": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "51": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 109
        }
      },
      "52": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 93
        }
      },
      "53": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 20
        }
      },
      "54": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "55": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 77
        }
      },
      "56": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 94
        }
      },
      "57": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 20
        }
      },
      "58": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "59": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 83
        }
      },
      "60": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 81
        }
      },
      "61": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "62": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 85
        }
      },
      "63": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "festivalActivationJob",
        decl: {
          start: {
            line: 7,
            column: 15
          },
          end: {
            line: 7,
            column: 36
          }
        },
        loc: {
          start: {
            line: 7,
            column: 39
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "activateFestival",
        decl: {
          start: {
            line: 54,
            column: 15
          },
          end: {
            line: 54,
            column: 31
          }
        },
        loc: {
          start: {
            line: 54,
            column: 42
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 54
      },
      "2": {
        name: "deactivateFestival",
        decl: {
          start: {
            line: 74,
            column: 15
          },
          end: {
            line: 74,
            column: 33
          }
        },
        loc: {
          start: {
            line: 74,
            column: 44
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 74
      },
      "3": {
        name: "applyFestivalTheme",
        decl: {
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 33
          }
        },
        loc: {
          start: {
            line: 94,
            column: 44
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 94
      },
      "4": {
        name: "removeFestivalTheme",
        decl: {
          start: {
            line: 110,
            column: 15
          },
          end: {
            line: 110,
            column: 34
          }
        },
        loc: {
          start: {
            line: 110,
            column: 45
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 110
      },
      "5": {
        name: "broadcastFestivalActivation",
        decl: {
          start: {
            line: 125,
            column: 15
          },
          end: {
            line: 125,
            column: 42
          }
        },
        loc: {
          start: {
            line: 125,
            column: 53
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 125
      },
      "6": {
        name: "broadcastFestivalDeactivation",
        decl: {
          start: {
            line: 142,
            column: 15
          },
          end: {
            line: 142,
            column: 44
          }
        },
        loc: {
          start: {
            line: 142,
            column: 55
          },
          end: {
            line: 155,
            column: 1
          }
        },
        line: 142
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 26
          }
        }, {
          start: {
            line: 60,
            column: 30
          },
          end: {
            line: 60,
            column: 55
          }
        }],
        line: 60
      },
      "2": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 80,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 80,
            column: 26
          }
        }, {
          start: {
            line: 80,
            column: 30
          },
          end: {
            line: 80,
            column: 55
          }
        }],
        line: 80
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e9a87d1dd2298d7130c3961aa36dcf009d78663b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2khnvq858o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2khnvq858o();
cov_2khnvq858o().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2khnvq858o().s[1]++;
exports.festivalActivationJob = festivalActivationJob;
const Festival_1 =
/* istanbul ignore next */
(cov_2khnvq858o().s[2]++, require("../models/Festival"));
const Gift_1 =
/* istanbul ignore next */
(cov_2khnvq858o().s[3]++, require("../models/Gift"));
const logger_1 =
/* istanbul ignore next */
(cov_2khnvq858o().s[4]++, require("../config/logger"));
async function festivalActivationJob() {
  /* istanbul ignore next */
  cov_2khnvq858o().f[0]++;
  cov_2khnvq858o().s[5]++;
  try {
    /* istanbul ignore next */
    cov_2khnvq858o().s[6]++;
    logger_1.logger.info('Starting festival activation check job');
    const now =
    /* istanbul ignore next */
    (cov_2khnvq858o().s[7]++, new Date());
    // Check for festivals that need to be activated
    const festivalsToActivate =
    /* istanbul ignore next */
    (cov_2khnvq858o().s[8]++, await Festival_1.Festival.find({
      startDate: {
        $lte: now
      },
      endDate: {
        $gte: now
      },
      isActive: false
    }));
    /* istanbul ignore next */
    cov_2khnvq858o().s[9]++;
    logger_1.logger.info(`Found ${festivalsToActivate.length} festivals to activate`);
    let activatedCount =
    /* istanbul ignore next */
    (cov_2khnvq858o().s[10]++, 0);
    let errorCount =
    /* istanbul ignore next */
    (cov_2khnvq858o().s[11]++, 0);
    /* istanbul ignore next */
    cov_2khnvq858o().s[12]++;
    for (const festival of festivalsToActivate) {
      /* istanbul ignore next */
      cov_2khnvq858o().s[13]++;
      try {
        /* istanbul ignore next */
        cov_2khnvq858o().s[14]++;
        await activateFestival(festival);
        /* istanbul ignore next */
        cov_2khnvq858o().s[15]++;
        activatedCount++;
        /* istanbul ignore next */
        cov_2khnvq858o().s[16]++;
        logger_1.logger.info(`Festival ${festival.name} activated successfully`);
      } catch (error) {
        /* istanbul ignore next */
        cov_2khnvq858o().s[17]++;
        errorCount++;
        /* istanbul ignore next */
        cov_2khnvq858o().s[18]++;
        logger_1.logger.error(`Failed to activate festival ${festival.name}:`, error);
      }
    }
    // Check for festivals that need to be deactivated
    const festivalsToDeactivate =
    /* istanbul ignore next */
    (cov_2khnvq858o().s[19]++, await Festival_1.Festival.find({
      endDate: {
        $lt: now
      },
      isActive: true
    }));
    /* istanbul ignore next */
    cov_2khnvq858o().s[20]++;
    logger_1.logger.info(`Found ${festivalsToDeactivate.length} festivals to deactivate`);
    /* istanbul ignore next */
    cov_2khnvq858o().s[21]++;
    for (const festival of festivalsToDeactivate) {
      /* istanbul ignore next */
      cov_2khnvq858o().s[22]++;
      try {
        /* istanbul ignore next */
        cov_2khnvq858o().s[23]++;
        await deactivateFestival(festival);
        /* istanbul ignore next */
        cov_2khnvq858o().s[24]++;
        logger_1.logger.info(`Festival ${festival.name} deactivated successfully`);
      } catch (error) {
        /* istanbul ignore next */
        cov_2khnvq858o().s[25]++;
        errorCount++;
        /* istanbul ignore next */
        cov_2khnvq858o().s[26]++;
        logger_1.logger.error(`Failed to deactivate festival ${festival.name}:`, error);
      }
    }
    /* istanbul ignore next */
    cov_2khnvq858o().s[27]++;
    logger_1.logger.info(`Festival activation job completed: ${activatedCount} activated, ${errorCount} errors`);
  } catch (error) {
    /* istanbul ignore next */
    cov_2khnvq858o().s[28]++;
    logger_1.logger.error('Festival activation job failed:', error);
    /* istanbul ignore next */
    cov_2khnvq858o().s[29]++;
    throw error;
  }
}
async function activateFestival(festival) {
  /* istanbul ignore next */
  cov_2khnvq858o().f[1]++;
  cov_2khnvq858o().s[30]++;
  try {
    /* istanbul ignore next */
    cov_2khnvq858o().s[31]++;
    // Activate the festival
    festival.isActive = true;
    /* istanbul ignore next */
    cov_2khnvq858o().s[32]++;
    await festival.save();
    // Activate festival gifts
    /* istanbul ignore next */
    cov_2khnvq858o().s[33]++;
    if (
    /* istanbul ignore next */
    (cov_2khnvq858o().b[1][0]++, festival.gifts) &&
    /* istanbul ignore next */
    (cov_2khnvq858o().b[1][1]++, festival.gifts.length > 0)) {
      /* istanbul ignore next */
      cov_2khnvq858o().b[0][0]++;
      cov_2khnvq858o().s[34]++;
      await Gift_1.Gift.updateMany({
        _id: {
          $in: festival.gifts
        }
      }, {
        isActive: true
      });
      /* istanbul ignore next */
      cov_2khnvq858o().s[35]++;
      logger_1.logger.info(`Activated ${festival.gifts.length} festival gifts for ${festival.name}`);
    } else
    /* istanbul ignore next */
    {
      cov_2khnvq858o().b[0][1]++;
    }
    // Apply festival theme and bonuses
    cov_2khnvq858o().s[36]++;
    await applyFestivalTheme(festival);
    // TODO: Broadcast festival activation event via Socket.IO
    /* istanbul ignore next */
    cov_2khnvq858o().s[37]++;
    await broadcastFestivalActivation(festival);
  } catch (error) {
    /* istanbul ignore next */
    cov_2khnvq858o().s[38]++;
    logger_1.logger.error(`Failed to activate festival ${festival.name}:`, error);
    /* istanbul ignore next */
    cov_2khnvq858o().s[39]++;
    throw error;
  }
}
async function deactivateFestival(festival) {
  /* istanbul ignore next */
  cov_2khnvq858o().f[2]++;
  cov_2khnvq858o().s[40]++;
  try {
    /* istanbul ignore next */
    cov_2khnvq858o().s[41]++;
    // Deactivate the festival
    festival.isActive = false;
    /* istanbul ignore next */
    cov_2khnvq858o().s[42]++;
    await festival.save();
    // Deactivate festival gifts
    /* istanbul ignore next */
    cov_2khnvq858o().s[43]++;
    if (
    /* istanbul ignore next */
    (cov_2khnvq858o().b[3][0]++, festival.gifts) &&
    /* istanbul ignore next */
    (cov_2khnvq858o().b[3][1]++, festival.gifts.length > 0)) {
      /* istanbul ignore next */
      cov_2khnvq858o().b[2][0]++;
      cov_2khnvq858o().s[44]++;
      await Gift_1.Gift.updateMany({
        _id: {
          $in: festival.gifts
        }
      }, {
        isActive: false
      });
      /* istanbul ignore next */
      cov_2khnvq858o().s[45]++;
      logger_1.logger.info(`Deactivated ${festival.gifts.length} festival gifts for ${festival.name}`);
    } else
    /* istanbul ignore next */
    {
      cov_2khnvq858o().b[2][1]++;
    }
    // Remove festival theme and bonuses
    cov_2khnvq858o().s[46]++;
    await removeFestivalTheme(festival);
    // TODO: Broadcast festival deactivation event via Socket.IO
    /* istanbul ignore next */
    cov_2khnvq858o().s[47]++;
    await broadcastFestivalDeactivation(festival);
  } catch (error) {
    /* istanbul ignore next */
    cov_2khnvq858o().s[48]++;
    logger_1.logger.error(`Failed to deactivate festival ${festival.name}:`, error);
    /* istanbul ignore next */
    cov_2khnvq858o().s[49]++;
    throw error;
  }
}
async function applyFestivalTheme(festival) {
  /* istanbul ignore next */
  cov_2khnvq858o().f[3]++;
  cov_2khnvq858o().s[50]++;
  try {
    /* istanbul ignore next */
    cov_2khnvq858o().s[51]++;
    // Apply festival theme to the platform
    // This could involve updating global settings, applying CSS themes, etc.
    logger_1.logger.info(`Applying festival theme for ${festival.name}: ${festival.theme.primaryColor}`);
    // TODO: Implement theme application logic
    // This could involve:
    // - Updating global CSS variables
    // - Applying festival skins to streams
    // - Setting up festival-specific UI elements
  } catch (error) {
    /* istanbul ignore next */
    cov_2khnvq858o().s[52]++;
    logger_1.logger.error(`Failed to apply festival theme for ${festival.name}:`, error);
    /* istanbul ignore next */
    cov_2khnvq858o().s[53]++;
    throw error;
  }
}
async function removeFestivalTheme(festival) {
  /* istanbul ignore next */
  cov_2khnvq858o().f[4]++;
  cov_2khnvq858o().s[54]++;
  try {
    /* istanbul ignore next */
    cov_2khnvq858o().s[55]++;
    // Remove festival theme from the platform
    logger_1.logger.info(`Removing festival theme for ${festival.name}`);
    // TODO: Implement theme removal logic
    // This could involve:
    // - Reverting to default theme
    // - Removing festival-specific UI elements
    // - Cleaning up festival skins
  } catch (error) {
    /* istanbul ignore next */
    cov_2khnvq858o().s[56]++;
    logger_1.logger.error(`Failed to remove festival theme for ${festival.name}:`, error);
    /* istanbul ignore next */
    cov_2khnvq858o().s[57]++;
    throw error;
  }
}
async function broadcastFestivalActivation(festival) {
  /* istanbul ignore next */
  cov_2khnvq858o().f[5]++;
  cov_2khnvq858o().s[58]++;
  try {
    /* istanbul ignore next */
    cov_2khnvq858o().s[59]++;
    // This would be implemented with Socket.IO to broadcast to all connected clients
    logger_1.logger.info(`Broadcasting festival activation: ${festival.name}`);
    // TODO: Implement Socket.IO broadcast
    // io.emit('festival:activated', {
    //   festivalId: festival._id,
    //   name: festival.name,
    //   theme: festival.theme,
    //   bonuses: festival.bonuses,
    //   endDate: festival.endDate
    // });
  } catch (error) {
    /* istanbul ignore next */
    cov_2khnvq858o().s[60]++;
    logger_1.logger.error('Failed to broadcast festival activation:', error);
  }
}
async function broadcastFestivalDeactivation(festival) {
  /* istanbul ignore next */
  cov_2khnvq858o().f[6]++;
  cov_2khnvq858o().s[61]++;
  try {
    /* istanbul ignore next */
    cov_2khnvq858o().s[62]++;
    // This would be implemented with Socket.IO to broadcast to all connected clients
    logger_1.logger.info(`Broadcasting festival deactivation: ${festival.name}`);
    // TODO: Implement Socket.IO broadcast
    // io.emit('festival:deactivated', {
    //   festivalId: festival._id,
    //   name: festival.name
    // });
  } catch (error) {
    /* istanbul ignore next */
    cov_2khnvq858o().s[63]++;
    logger_1.logger.error('Failed to broadcast festival deactivation:', error);
  }
}