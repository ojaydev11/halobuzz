5c766520ed359c55b6d3198e7dae5027
"use strict";

/* istanbul ignore next */
function cov_ibvpczjf1() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\games.ts";
  var hash = "65e123419782a8189f6e2e9dd1d734f0ce517efb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\games.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 40
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 10,
          column: 54
        }
      },
      "8": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 68
        }
      },
      "9": {
        start: {
          line: 12,
          column: 32
        },
        end: {
          line: 12,
          column: 76
        }
      },
      "10": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 44
        }
      },
      "11": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 14,
          column: 69
        }
      },
      "12": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "13": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 76,
          column: 3
        }
      },
      "14": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "15": {
        start: {
          line: 19,
          column: 70
        },
        end: {
          line: 19,
          column: 79
        }
      },
      "16": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 59
        }
      },
      "17": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "18": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "19": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "20": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 29
        }
      },
      "21": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "22": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 43
        }
      },
      "23": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 22
        }
      },
      "24": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 47
        }
      },
      "25": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 22
        }
      },
      "26": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 62
        }
      },
      "27": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 22
        }
      },
      "28": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 40,
          column: 35
        }
      },
      "29": {
        start: {
          line: 41,
          column: 22
        },
        end: {
          line: 41,
          column: 62
        }
      },
      "30": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 67,
          column: 11
        }
      },
      "31": {
        start: {
          line: 45,
          column: 42
        },
        end: {
          line: 59,
          column: 17
        }
      },
      "32": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 58
        }
      },
      "33": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "34": {
        start: {
          line: 78,
          column: 0
        },
        end: {
          line: 104,
          column: 3
        }
      },
      "35": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "36": {
        start: {
          line: 80,
          column: 31
        },
        end: {
          line: 80,
          column: 40
        }
      },
      "37": {
        start: {
          line: 81,
          column: 22
        },
        end: {
          line: 81,
          column: 123
        }
      },
      "38": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 95,
          column: 11
        }
      },
      "39": {
        start: {
          line: 85,
          column: 42
        },
        end: {
          line: 93,
          column: 17
        }
      },
      "40": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 66
        }
      },
      "41": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      },
      "42": {
        start: {
          line: 106,
          column: 0
        },
        end: {
          line: 144,
          column: 3
        }
      },
      "43": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "44": {
        start: {
          line: 108,
          column: 23
        },
        end: {
          line: 108,
          column: 33
        }
      },
      "45": {
        start: {
          line: 109,
          column: 21
        },
        end: {
          line: 109,
          column: 51
        }
      },
      "46": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "47": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 114,
          column: 15
        }
      },
      "48": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "49": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 57
        }
      },
      "50": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "51": {
        start: {
          line: 146,
          column: 0
        },
        end: {
          line: 336,
          column: 3
        }
      },
      "52": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "53": {
        start: {
          line: 158,
          column: 23
        },
        end: {
          line: 158,
          column: 69
        }
      },
      "54": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "55": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 163,
          column: 15
        }
      },
      "56": {
        start: {
          line: 165,
          column: 23
        },
        end: {
          line: 165,
          column: 33
        }
      },
      "57": {
        start: {
          line: 166,
          column: 28
        },
        end: {
          line: 166,
          column: 36
        }
      },
      "58": {
        start: {
          line: 167,
          column: 23
        },
        end: {
          line: 167,
          column: 39
        }
      },
      "59": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "60": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 172,
          column: 15
        }
      },
      "61": {
        start: {
          line: 175,
          column: 21
        },
        end: {
          line: 175,
          column: 51
        }
      },
      "62": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "63": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "64": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "65": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 186,
          column: 15
        }
      },
      "66": {
        start: {
          line: 189,
          column: 23
        },
        end: {
          line: 189,
          column: 50
        }
      },
      "67": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "68": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 194,
          column: 15
        }
      },
      "69": {
        start: {
          line: 197,
          column: 31
        },
        end: {
          line: 197,
          column: 89
        }
      },
      "70": {
        start: {
          line: 197,
          column: 63
        },
        end: {
          line: 197,
          column: 85
        }
      },
      "71": {
        start: {
          line: 198,
          column: 28
        },
        end: {
          line: 198,
          column: 119
        }
      },
      "72": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "73": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 204,
          column: 15
        }
      },
      "74": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "75": {
        start: {
          line: 207,
          column: 89
        },
        end: {
          line: 207,
          column: 108
        }
      },
      "76": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 79
        }
      },
      "77": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "78": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "79": {
        start: {
          line: 218,
          column: 33
        },
        end: {
          line: 218,
          column: 35
        }
      },
      "80": {
        start: {
          line: 219,
          column: 31
        },
        end: {
          line: 219,
          column: 45
        }
      },
      "81": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "82": {
        start: {
          line: 221,
          column: 25
        },
        end: {
          line: 221,
          column: 66
        }
      },
      "83": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 227,
          column: 13
        }
      },
      "84": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 226,
          column: 19
        }
      },
      "85": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 233,
          column: 13
        }
      },
      "86": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 232,
          column: 19
        }
      },
      "87": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 240,
          column: 15
        }
      },
      "88": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 245,
          column: 15
        }
      },
      "89": {
        start: {
          line: 248,
          column: 29
        },
        end: {
          line: 248,
          column: 70
        }
      },
      "90": {
        start: {
          line: 249,
          column: 22
        },
        end: {
          line: 249,
          column: 137
        }
      },
      "91": {
        start: {
          line: 251,
          column: 29
        },
        end: {
          line: 251,
          column: 73
        }
      },
      "92": {
        start: {
          line: 252,
          column: 32
        },
        end: {
          line: 252,
          column: 89
        }
      },
      "93": {
        start: {
          line: 252,
          column: 68
        },
        end: {
          line: 252,
          column: 85
        }
      },
      "94": {
        start: {
          line: 253,
          column: 26
        },
        end: {
          line: 253,
          column: 65
        }
      },
      "95": {
        start: {
          line: 254,
          column: 23
        },
        end: {
          line: 254,
          column: 53
        }
      },
      "96": {
        start: {
          line: 255,
          column: 25
        },
        end: {
          line: 255,
          column: 52
        }
      },
      "97": {
        start: {
          line: 256,
          column: 22
        },
        end: {
          line: 256,
          column: 42
        }
      },
      "98": {
        start: {
          line: 257,
          column: 27
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "99": {
        start: {
          line: 267,
          column: 24
        },
        end: {
          line: 267,
          column: 42
        }
      },
      "100": {
        start: {
          line: 268,
          column: 30
        },
        end: {
          line: 268,
          column: 54
        }
      },
      "101": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "102": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 275,
          column: 15
        }
      },
      "103": {
        start: {
          line: 277,
          column: 32
        },
        end: {
          line: 291,
          column: 14
        }
      },
      "104": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 37
        }
      },
      "105": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 298,
          column: 15
        }
      },
      "106": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 36
        }
      },
      "107": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 53
        }
      },
      "108": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 54
        }
      },
      "109": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 26
        }
      },
      "110": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 92
        }
      },
      "111": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 327,
          column: 11
        }
      },
      "112": {
        start: {
          line: 317,
          column: 52
        },
        end: {
          line: 322,
          column: 21
        }
      },
      "113": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 58
        }
      },
      "114": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 334,
          column: 11
        }
      },
      "115": {
        start: {
          line: 338,
          column: 0
        },
        end: {
          line: 366,
          column: 3
        }
      },
      "116": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 365,
          column: 5
        }
      },
      "117": {
        start: {
          line: 340,
          column: 25
        },
        end: {
          line: 340,
          column: 35
        }
      },
      "118": {
        start: {
          line: 341,
          column: 31
        },
        end: {
          line: 341,
          column: 40
        }
      },
      "119": {
        start: {
          line: 342,
          column: 22
        },
        end: {
          line: 342,
          column: 94
        }
      },
      "120": {
        start: {
          line: 343,
          column: 29
        },
        end: {
          line: 343,
          column: 60
        }
      },
      "121": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 357,
          column: 11
        }
      },
      "122": {
        start: {
          line: 348,
          column: 49
        },
        end: {
          line: 355,
          column: 17
        }
      },
      "123": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 66
        }
      },
      "124": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 364,
          column: 11
        }
      },
      "125": {
        start: {
          line: 368,
          column: 0
        },
        end: {
          line: 416,
          column: 3
        }
      },
      "126": {
        start: {
          line: 369,
          column: 4
        },
        end: {
          line: 415,
          column: 5
        }
      },
      "127": {
        start: {
          line: 370,
          column: 27
        },
        end: {
          line: 370,
          column: 37
        }
      },
      "128": {
        start: {
          line: 371,
          column: 41
        },
        end: {
          line: 371,
          column: 50
        }
      },
      "129": {
        start: {
          line: 372,
          column: 21
        },
        end: {
          line: 372,
          column: 59
        }
      },
      "130": {
        start: {
          line: 373,
          column: 29
        },
        end: {
          line: 381,
          column: 53
        }
      },
      "131": {
        start: {
          line: 382,
          column: 22
        },
        end: {
          line: 386,
          column: 10
        }
      },
      "132": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 407,
          column: 11
        }
      },
      "133": {
        start: {
          line: 390,
          column: 58
        },
        end: {
          line: 399,
          column: 17
        }
      },
      "134": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 70
        }
      },
      "135": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 414,
          column: 11
        }
      },
      "136": {
        start: {
          line: 419,
          column: 22
        },
        end: {
          line: 419,
          column: 42
        }
      },
      "137": {
        start: {
          line: 420,
          column: 19
        },
        end: {
          line: 420,
          column: 32
        }
      },
      "138": {
        start: {
          line: 421,
          column: 18
        },
        end: {
          line: 421,
          column: 20
        }
      },
      "139": {
        start: {
          line: 422,
          column: 24
        },
        end: {
          line: 422,
          column: 25
        }
      },
      "140": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 442,
          column: 5
        }
      },
      "141": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 21
        }
      },
      "142": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 26
        }
      },
      "143": {
        start: {
          line: 430,
          column: 31
        },
        end: {
          line: 430,
          column: 89
        }
      },
      "144": {
        start: {
          line: 430,
          column: 63
        },
        end: {
          line: 430,
          column: 85
        }
      },
      "145": {
        start: {
          line: 431,
          column: 26
        },
        end: {
          line: 431,
          column: 57
        }
      },
      "146": {
        start: {
          line: 433,
          column: 28
        },
        end: {
          line: 433,
          column: 87
        }
      },
      "147": {
        start: {
          line: 434,
          column: 32
        },
        end: {
          line: 434,
          column: 71
        }
      },
      "148": {
        start: {
          line: 434,
          column: 51
        },
        end: {
          line: 434,
          column: 70
        }
      },
      "149": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 440,
          column: 12
        }
      },
      "150": {
        start: {
          line: 435,
          column: 71
        },
        end: {
          line: 440,
          column: 9
        }
      },
      "151": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 441,
          column: 82
        }
      },
      "152": {
        start: {
          line: 441,
          column: 56
        },
        end: {
          line: 441,
          column: 77
        }
      },
      "153": {
        start: {
          line: 443,
          column: 4
        },
        end: {
          line: 443,
          column: 38
        }
      },
      "154": {
        start: {
          line: 445,
          column: 0
        },
        end: {
          line: 445,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 17
          }
        },
        loc: {
          start: {
            line: 17,
            column: 36
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 34
          }
        },
        loc: {
          start: {
            line: 45,
            column: 42
          },
          end: {
            line: 59,
            column: 17
          }
        },
        line: 45
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 78,
            column: 23
          },
          end: {
            line: 78,
            column: 24
          }
        },
        loc: {
          start: {
            line: 78,
            column: 43
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 78
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 85,
            column: 33
          },
          end: {
            line: 85,
            column: 34
          }
        },
        loc: {
          start: {
            line: 85,
            column: 42
          },
          end: {
            line: 93,
            column: 17
          }
        },
        line: 85
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 106,
            column: 19
          },
          end: {
            line: 106,
            column: 20
          }
        },
        loc: {
          start: {
            line: 106,
            column: 39
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 106
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 156,
            column: 3
          },
          end: {
            line: 156,
            column: 4
          }
        },
        loc: {
          start: {
            line: 156,
            column: 23
          },
          end: {
            line: 336,
            column: 1
          }
        },
        line: 156
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 197,
            column: 46
          },
          end: {
            line: 197,
            column: 47
          }
        },
        loc: {
          start: {
            line: 197,
            column: 63
          },
          end: {
            line: 197,
            column: 85
          }
        },
        line: 197
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 207,
            column: 84
          },
          end: {
            line: 207,
            column: 85
          }
        },
        loc: {
          start: {
            line: 207,
            column: 89
          },
          end: {
            line: 207,
            column: 108
          }
        },
        line: 207
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 252,
            column: 56
          },
          end: {
            line: 252,
            column: 57
          }
        },
        loc: {
          start: {
            line: 252,
            column: 68
          },
          end: {
            line: 252,
            column: 85
          }
        },
        line: 252
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 317,
            column: 41
          },
          end: {
            line: 317,
            column: 42
          }
        },
        loc: {
          start: {
            line: 317,
            column: 52
          },
          end: {
            line: 322,
            column: 21
          }
        },
        line: 317
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 338,
            column: 26
          },
          end: {
            line: 338,
            column: 27
          }
        },
        loc: {
          start: {
            line: 338,
            column: 46
          },
          end: {
            line: 366,
            column: 1
          }
        },
        line: 338
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 348,
            column: 40
          },
          end: {
            line: 348,
            column: 41
          }
        },
        loc: {
          start: {
            line: 348,
            column: 49
          },
          end: {
            line: 355,
            column: 17
          }
        },
        line: 348
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 368,
            column: 36
          },
          end: {
            line: 368,
            column: 37
          }
        },
        loc: {
          start: {
            line: 368,
            column: 56
          },
          end: {
            line: 416,
            column: 1
          }
        },
        line: 368
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 390,
            column: 42
          },
          end: {
            line: 390,
            column: 43
          }
        },
        loc: {
          start: {
            line: 390,
            column: 58
          },
          end: {
            line: 399,
            column: 17
          }
        },
        line: 390
      },
      "15": {
        name: "simulateGame",
        decl: {
          start: {
            line: 418,
            column: 15
          },
          end: {
            line: 418,
            column: 27
          }
        },
        loc: {
          start: {
            line: 418,
            column: 43
          },
          end: {
            line: 444,
            column: 1
          }
        },
        line: 418
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 430,
            column: 46
          },
          end: {
            line: 430,
            column: 47
          }
        },
        loc: {
          start: {
            line: 430,
            column: 63
          },
          end: {
            line: 430,
            column: 85
          }
        },
        line: 430
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 434,
            column: 45
          },
          end: {
            line: 434,
            column: 46
          }
        },
        loc: {
          start: {
            line: 434,
            column: 51
          },
          end: {
            line: 434,
            column: 70
          }
        },
        line: 434
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 435,
            column: 60
          },
          end: {
            line: 435,
            column: 61
          }
        },
        loc: {
          start: {
            line: 435,
            column: 71
          },
          end: {
            line: 440,
            column: 9
          }
        },
        line: 435
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 441,
            column: 39
          },
          end: {
            line: 441,
            column: 40
          }
        },
        loc: {
          start: {
            line: 441,
            column: 56
          },
          end: {
            line: 441,
            column: 77
          }
        },
        line: 441
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 19,
            column: 32
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 19,
            column: 42
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 44
          },
          end: {
            line: 19,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 53
          },
          end: {
            line: 19,
            column: 65
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "7": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 28,
            column: 22
          }
        }, {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 31,
            column: 22
          }
        }, {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 30
          }
        }, {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 35,
            column: 22
          }
        }],
        line: 25
      },
      "8": {
        loc: {
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 80,
            column: 24
          },
          end: {
            line: 80,
            column: 26
          }
        }],
        line: 80
      },
      "9": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "10": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "11": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "12": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "13": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "14": {
        loc: {
          start: {
            line: 189,
            column: 24
          },
          end: {
            line: 189,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 24
          },
          end: {
            line: 189,
            column: 38
          }
        }, {
          start: {
            line: 189,
            column: 42
          },
          end: {
            line: 189,
            column: 43
          }
        }],
        line: 189
      },
      "15": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "16": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 25
          }
        }, {
          start: {
            line: 190,
            column: 29
          },
          end: {
            line: 190,
            column: 42
          }
        }],
        line: 190
      },
      "17": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "18": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "19": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "20": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 44
          }
        }, {
          start: {
            line: 211,
            column: 48
          },
          end: {
            line: 211,
            column: 80
          }
        }],
        line: 211
      },
      "21": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 227,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 227,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "22": {
        loc: {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 233,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 233,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "23": {
        loc: {
          start: {
            line: 249,
            column: 103
          },
          end: {
            line: 249,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 103
          },
          end: {
            line: 249,
            column: 116
          }
        }, {
          start: {
            line: 249,
            column: 120
          },
          end: {
            line: 249,
            column: 122
          }
        }],
        line: 249
      },
      "24": {
        loc: {
          start: {
            line: 253,
            column: 45
          },
          end: {
            line: 253,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 45
          },
          end: {
            line: 253,
            column: 59
          }
        }, {
          start: {
            line: 253,
            column: 63
          },
          end: {
            line: 253,
            column: 64
          }
        }],
        line: 253
      },
      "25": {
        loc: {
          start: {
            line: 341,
            column: 16
          },
          end: {
            line: 341,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 341,
            column: 24
          },
          end: {
            line: 341,
            column: 26
          }
        }],
        line: 341
      },
      "26": {
        loc: {
          start: {
            line: 371,
            column: 16
          },
          end: {
            line: 371,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 371,
            column: 24
          },
          end: {
            line: 371,
            column: 26
          }
        }],
        line: 371
      },
      "27": {
        loc: {
          start: {
            line: 371,
            column: 28
          },
          end: {
            line: 371,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 371,
            column: 35
          },
          end: {
            line: 371,
            column: 36
          }
        }],
        line: 371
      },
      "28": {
        loc: {
          start: {
            line: 423,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        }, {
          start: {
            line: 428,
            column: 9
          },
          end: {
            line: 442,
            column: 5
          }
        }],
        line: 423
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0, 0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0],
      "27": [0],
      "28": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "65e123419782a8189f6e2e9dd1d734f0ce517efb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ibvpczjf1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ibvpczjf1();
var __importDefault =
/* istanbul ignore next */
(cov_ibvpczjf1().s[0]++,
/* istanbul ignore next */
(cov_ibvpczjf1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_ibvpczjf1().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_ibvpczjf1().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_ibvpczjf1().f[0]++;
  cov_ibvpczjf1().s[1]++;
  return /* istanbul ignore next */(cov_ibvpczjf1().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_ibvpczjf1().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_ibvpczjf1().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_ibvpczjf1().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_ibvpczjf1().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_ibvpczjf1().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_ibvpczjf1().s[4]++, require("express-validator"));
const Game_1 =
/* istanbul ignore next */
(cov_ibvpczjf1().s[5]++, require("../models/Game"));
const User_1 =
/* istanbul ignore next */
(cov_ibvpczjf1().s[6]++, require("../models/User"));
const Transaction_1 =
/* istanbul ignore next */
(cov_ibvpczjf1().s[7]++, require("../models/Transaction"));
const ReputationService_1 =
/* istanbul ignore next */
(cov_ibvpczjf1().s[8]++, require("../services/ReputationService"));
const GamingControlsService_1 =
/* istanbul ignore next */
(cov_ibvpczjf1().s[9]++, require("../services/GamingControlsService"));
const logger_1 =
/* istanbul ignore next */
(cov_ibvpczjf1().s[10]++, require("../config/logger"));
const GamesEngineService_1 =
/* istanbul ignore next */
(cov_ibvpczjf1().s[11]++, require("@/services/GamesEngineService"));
const router =
/* istanbul ignore next */
(cov_ibvpczjf1().s[12]++, express_1.default.Router());
// Get games list
/* istanbul ignore next */
cov_ibvpczjf1().s[13]++;
router.get('/', async (req, res) => {
  /* istanbul ignore next */
  cov_ibvpczjf1().f[1]++;
  cov_ibvpczjf1().s[14]++;
  try {
    const {
      type,
      limit =
      /* istanbul ignore next */
      (cov_ibvpczjf1().b[3][0]++, 20),
      page =
      /* istanbul ignore next */
      (cov_ibvpczjf1().b[4][0]++, 1),
      sortBy =
      /* istanbul ignore next */
      (cov_ibvpczjf1().b[5][0]++, 'popularity')
    } =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[15]++, req.query);
    const skip =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[16]++, (parseInt(page) - 1) * parseInt(limit));
    const filter =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[17]++, {
      isActive: true
    });
    /* istanbul ignore next */
    cov_ibvpczjf1().s[18]++;
    if (type) {
      /* istanbul ignore next */
      cov_ibvpczjf1().b[6][0]++;
      cov_ibvpczjf1().s[19]++;
      filter.type = type;
    } else
    /* istanbul ignore next */
    {
      cov_ibvpczjf1().b[6][1]++;
    }
    let sortCriteria =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[20]++, {});
    /* istanbul ignore next */
    cov_ibvpczjf1().s[21]++;
    switch (sortBy) {
      case 'name':
        /* istanbul ignore next */
        cov_ibvpczjf1().b[7][0]++;
        cov_ibvpczjf1().s[22]++;
        sortCriteria = {
          name: 1
        };
        /* istanbul ignore next */
        cov_ibvpczjf1().s[23]++;
        break;
      case 'entryFee':
        /* istanbul ignore next */
        cov_ibvpczjf1().b[7][1]++;
        cov_ibvpczjf1().s[24]++;
        sortCriteria = {
          entryFee: 1
        };
        /* istanbul ignore next */
        cov_ibvpczjf1().s[25]++;
        break;
      case 'popularity':
        /* istanbul ignore next */
        cov_ibvpczjf1().b[7][2]++;
      default:
        /* istanbul ignore next */
        cov_ibvpczjf1().b[7][3]++;
        cov_ibvpczjf1().s[26]++;
        sortCriteria = {
          'metadata.totalPlayed': -1
        };
        /* istanbul ignore next */
        cov_ibvpczjf1().s[27]++;
        break;
    }
    const games =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[28]++, await Game_1.Game.find(filter).sort(sortCriteria).skip(skip).limit(parseInt(limit)));
    const total =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[29]++, await Game_1.Game.countDocuments(filter));
    /* istanbul ignore next */
    cov_ibvpczjf1().s[30]++;
    res.json({
      success: true,
      data: {
        games: games.map(game => {
          /* istanbul ignore next */
          cov_ibvpczjf1().f[2]++;
          cov_ibvpczjf1().s[31]++;
          return {
            id: game._id,
            name: game.name,
            description: game.description,
            type: game.type,
            minPlayers: game.minPlayers,
            maxPlayers: game.maxPlayers,
            entryFee: game.entryFee,
            prizePool: game.prizePool,
            duration: game.duration,
            aiWinRate: game.aiWinRate,
            rules: game.rules,
            rewards: game.rewards,
            metadata: game.metadata
          };
        }),
        pagination: {
          page: parseInt(page),
          limit: parseInt(limit),
          total,
          pages: Math.ceil(total / parseInt(limit))
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ibvpczjf1().s[32]++;
    logger_1.logger.error('Get games failed:', error);
    /* istanbul ignore next */
    cov_ibvpczjf1().s[33]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get games'
    });
  }
});
// Get popular games
/* istanbul ignore next */
cov_ibvpczjf1().s[34]++;
router.get('/popular', async (req, res) => {
  /* istanbul ignore next */
  cov_ibvpczjf1().f[3]++;
  cov_ibvpczjf1().s[35]++;
  try {
    const {
      limit =
      /* istanbul ignore next */
      (cov_ibvpczjf1().b[8][0]++, 10)
    } =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[36]++, req.query);
    const games =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[37]++, await Game_1.Game.find({
      isActive: true
    }).sort({
      playCount: -1,
      rating: -1
    }).limit(parseInt(limit)));
    /* istanbul ignore next */
    cov_ibvpczjf1().s[38]++;
    res.json({
      success: true,
      data: {
        games: games.map(game => {
          /* istanbul ignore next */
          cov_ibvpczjf1().f[4]++;
          cov_ibvpczjf1().s[39]++;
          return {
            id: game._id,
            name: game.name,
            description: game.description,
            type: game.type,
            entryFee: game.entryFee,
            prizePool: game.prizePool,
            metadata: game.metadata
          };
        })
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ibvpczjf1().s[40]++;
    logger_1.logger.error('Get popular games failed:', error);
    /* istanbul ignore next */
    cov_ibvpczjf1().s[41]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get popular games'
    });
  }
});
// Get game by ID
/* istanbul ignore next */
cov_ibvpczjf1().s[42]++;
router.get('/:id', async (req, res) => {
  /* istanbul ignore next */
  cov_ibvpczjf1().f[5]++;
  cov_ibvpczjf1().s[43]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[44]++, req.params);
    const game =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[45]++, await Game_1.Game.findById(id));
    /* istanbul ignore next */
    cov_ibvpczjf1().s[46]++;
    if (!game) {
      /* istanbul ignore next */
      cov_ibvpczjf1().b[9][0]++;
      cov_ibvpczjf1().s[47]++;
      return res.status(404).json({
        success: false,
        error: 'Game not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_ibvpczjf1().b[9][1]++;
    }
    cov_ibvpczjf1().s[48]++;
    res.json({
      success: true,
      data: {
        game: {
          id: game._id,
          name: game.name,
          description: game.description,
          type: game.type,
          minPlayers: game.minPlayers,
          maxPlayers: game.maxPlayers,
          entryFee: game.entryFee,
          prizePool: game.prizePool,
          duration: game.duration,
          aiWinRate: game.aiWinRate,
          rules: game.rules,
          rewards: game.rewards,
          metadata: game.metadata
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ibvpczjf1().s[49]++;
    logger_1.logger.error('Get game failed:', error);
    /* istanbul ignore next */
    cov_ibvpczjf1().s[50]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get game'
    });
  }
});
// Play game
/* istanbul ignore next */
cov_ibvpczjf1().s[51]++;
router.post('/:id/play', [(0, express_validator_1.body)('players').isArray({
  min: 1
}).withMessage('At least one player is required'), (0, express_validator_1.body)('players.*.userId').isMongoId().withMessage('Valid user ID is required'), (0, express_validator_1.body)('players.*.betAmount').isInt({
  min: 1
}).withMessage('Valid bet amount is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_ibvpczjf1().f[6]++;
  cov_ibvpczjf1().s[52]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[53]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_ibvpczjf1().s[54]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_ibvpczjf1().b[10][0]++;
      cov_ibvpczjf1().s[55]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_ibvpczjf1().b[10][1]++;
    }
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[56]++, req.params);
    const {
      players
    } =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[57]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[58]++, req.user?.userId);
    /* istanbul ignore next */
    cov_ibvpczjf1().s[59]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_ibvpczjf1().b[11][0]++;
      cov_ibvpczjf1().s[60]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_ibvpczjf1().b[11][1]++;
    }
    // Validate game
    const game =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[61]++, await Game_1.Game.findById(id));
    /* istanbul ignore next */
    cov_ibvpczjf1().s[62]++;
    if (!game) {
      /* istanbul ignore next */
      cov_ibvpczjf1().b[12][0]++;
      cov_ibvpczjf1().s[63]++;
      return res.status(404).json({
        success: false,
        error: 'Game not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_ibvpczjf1().b[12][1]++;
    }
    cov_ibvpczjf1().s[64]++;
    if (!game.isActive) {
      /* istanbul ignore next */
      cov_ibvpczjf1().b[13][0]++;
      cov_ibvpczjf1().s[65]++;
      return res.status(400).json({
        success: false,
        error: 'Game is not available'
      });
    } else
    /* istanbul ignore next */
    {
      cov_ibvpczjf1().b[13][1]++;
    }
    // Enforce AI win rate bounds 0.35–0.55
    const aiRate =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[66]++, (
    /* istanbul ignore next */
    (cov_ibvpczjf1().b[14][0]++, game.aiWinRate) ||
    /* istanbul ignore next */
    (cov_ibvpczjf1().b[14][1]++, 0)) / 100);
    /* istanbul ignore next */
    cov_ibvpczjf1().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_ibvpczjf1().b[16][0]++, aiRate < 0.35) ||
    /* istanbul ignore next */
    (cov_ibvpczjf1().b[16][1]++, aiRate > 0.55)) {
      /* istanbul ignore next */
      cov_ibvpczjf1().b[15][0]++;
      cov_ibvpczjf1().s[68]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid game configuration: aiWinRate must be between 35% and 55%'
      });
    } else
    /* istanbul ignore next */
    {
      cov_ibvpczjf1().b[15][1]++;
    }
    // Check gaming controls
    const totalBetAmount =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[69]++, players.reduce((sum, player) => {
      /* istanbul ignore next */
      cov_ibvpczjf1().f[7]++;
      cov_ibvpczjf1().s[70]++;
      return sum + player.betAmount;
    }, 0));
    const gamingCheck =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[71]++, await GamingControlsService_1.gamingControlsService.canPlayGame(userId, id, totalBetAmount));
    /* istanbul ignore next */
    cov_ibvpczjf1().s[72]++;
    if (!gamingCheck.allowed) {
      /* istanbul ignore next */
      cov_ibvpczjf1().b[17][0]++;
      cov_ibvpczjf1().s[73]++;
      return res.status(400).json({
        success: false,
        error: gamingCheck.reason,
        limits: gamingCheck.limits
      });
    } else
    /* istanbul ignore next */
    {
      cov_ibvpczjf1().b[17][1]++;
    }
    // Start gaming session if not already active
    cov_ibvpczjf1().s[74]++;
    if (!GamingControlsService_1.gamingControlsService.getActiveSessions().find(s => {
      /* istanbul ignore next */
      cov_ibvpczjf1().f[8]++;
      cov_ibvpczjf1().s[75]++;
      return s.userId === userId;
    })) {
      /* istanbul ignore next */
      cov_ibvpczjf1().b[18][0]++;
      cov_ibvpczjf1().s[76]++;
      GamingControlsService_1.gamingControlsService.startSession(userId);
    } else
    /* istanbul ignore next */
    {
      cov_ibvpczjf1().b[18][1]++;
    }
    // Validate player count
    cov_ibvpczjf1().s[77]++;
    if (
    /* istanbul ignore next */
    (cov_ibvpczjf1().b[20][0]++, players.length < game.minPlayers) ||
    /* istanbul ignore next */
    (cov_ibvpczjf1().b[20][1]++, players.length > game.maxPlayers)) {
      /* istanbul ignore next */
      cov_ibvpczjf1().b[19][0]++;
      cov_ibvpczjf1().s[78]++;
      return res.status(400).json({
        success: false,
        error: `Game requires ${game.minPlayers}-${game.maxPlayers} players`
      });
    } else
    /* istanbul ignore next */
    {
      cov_ibvpczjf1().b[19][1]++;
    }
    // Validate players and deduct entry fees
    const validatedPlayers =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[79]++, []);
    const totalPrizePool =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[80]++, game.prizePool);
    /* istanbul ignore next */
    cov_ibvpczjf1().s[81]++;
    for (const player of players) {
      const user =
      /* istanbul ignore next */
      (cov_ibvpczjf1().s[82]++, await User_1.User.findById(player.userId));
      /* istanbul ignore next */
      cov_ibvpczjf1().s[83]++;
      if (!user) {
        /* istanbul ignore next */
        cov_ibvpczjf1().b[21][0]++;
        cov_ibvpczjf1().s[84]++;
        return res.status(404).json({
          success: false,
          error: `User ${player.userId} not found`
        });
      } else
      /* istanbul ignore next */
      {
        cov_ibvpczjf1().b[21][1]++;
      }
      cov_ibvpczjf1().s[85]++;
      if (user.coins?.balance < player.betAmount) {
        /* istanbul ignore next */
        cov_ibvpczjf1().b[22][0]++;
        cov_ibvpczjf1().s[86]++;
        return res.status(400).json({
          success: false,
          error: `User ${user.username} has insufficient coins`
        });
      } else
      /* istanbul ignore next */
      {
        cov_ibvpczjf1().b[22][1]++;
      }
      // Deduct entry fee
      cov_ibvpczjf1().s[87]++;
      await User_1.User.findByIdAndUpdate(player.userId, {
        $inc: {
          'coins.balance': -player.betAmount,
          'coins.totalSpent': player.betAmount
        }
      });
      /* istanbul ignore next */
      cov_ibvpczjf1().s[88]++;
      validatedPlayers.push({
        userId: player.userId,
        username: user.username,
        betAmount: player.betAmount
      });
    }
    // Use global deterministic round outcome so all users see same result
    const optionsCount =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[89]++, Math.max(2, Math.min(players.length, 10)));
    const round =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[90]++, await GamesEngineService_1.gamesEngineService.getOrCreateRound(String(game._id),
    /* istanbul ignore next */
    (cov_ibvpczjf1().b[23][0]++, game.duration) ||
    /* istanbul ignore next */
    (cov_ibvpczjf1().b[23][1]++, 60), optionsCount));
    // Determine winners based on round outcome
    const outcomeIndex =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[91]++, round.outcomeIndex % validatedPlayers.length);
    const totalPlayerBets =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[92]++, validatedPlayers.reduce((sum, p) => {
      /* istanbul ignore next */
      cov_ibvpczjf1().f[9]++;
      cov_ibvpczjf1().s[93]++;
      return sum + p.betAmount;
    }, 0));
    const prizePool =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[94]++, totalPlayerBets + (
    /* istanbul ignore next */
    (cov_ibvpczjf1().b[24][0]++, game.prizePool) ||
    /* istanbul ignore next */
    (cov_ibvpczjf1().b[24][1]++, 0)));
    const winner =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[95]++, validatedPlayers[outcomeIndex]);
    const winnings =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[96]++, Math.floor(prizePool * 0.6)); // 60% to players as specified
    const house =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[97]++, prizePool - winnings); // 40% to house
    const gameResult =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[98]++, {
      winners: [{
        userId: winner.userId,
        username: winner.username,
        betAmount: winner.betAmount,
        winnings
      }],
      totalWinnings: winnings
    });
    // Distribute prizes
    const winners =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[99]++, gameResult.winners);
    const totalWinnings =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[100]++, gameResult.totalWinnings);
    /* istanbul ignore next */
    cov_ibvpczjf1().s[101]++;
    for (const winner of winners) {
      /* istanbul ignore next */
      cov_ibvpczjf1().s[102]++;
      await User_1.User.findByIdAndUpdate(winner.userId, {
        $inc: {
          'coins.balance': winner.winnings,
          'coins.totalEarned': winner.winnings
        }
      });
      // Create transaction record
      const transaction =
      /* istanbul ignore next */
      (cov_ibvpczjf1().s[103]++, new Transaction_1.Transaction({
        userId: winner.userId,
        type: 'game_won',
        amount: winner.winnings,
        currency: 'coins',
        status: 'completed',
        description: `Won ${game.name} game`,
        metadata: {
          gameId: game._id,
          gameName: game.name,
          betAmount: winner.betAmount,
          winnings: winner.winnings
        },
        netAmount: winner.winnings
      }));
      /* istanbul ignore next */
      cov_ibvpczjf1().s[104]++;
      await transaction.save();
      // Apply reputation bonus
      /* istanbul ignore next */
      cov_ibvpczjf1().s[105]++;
      await ReputationService_1.reputationService.applyReputationDelta(winner.userId, 'game_won', {
        count: 1,
        gameId: game._id,
        winnings: winner.winnings
      });
    }
    // Update game statistics
    /* istanbul ignore next */
    cov_ibvpczjf1().s[106]++;
    game.metadata.totalPlayed++;
    /* istanbul ignore next */
    cov_ibvpczjf1().s[107]++;
    game.metadata.totalWinners += winners.length;
    /* istanbul ignore next */
    cov_ibvpczjf1().s[108]++;
    game.metadata.totalPrizePool += totalWinnings;
    /* istanbul ignore next */
    cov_ibvpczjf1().s[109]++;
    await game.save();
    // Update gaming session
    /* istanbul ignore next */
    cov_ibvpczjf1().s[110]++;
    GamingControlsService_1.gamingControlsService.updateSession(userId, totalBetAmount);
    /* istanbul ignore next */
    cov_ibvpczjf1().s[111]++;
    res.json({
      success: true,
      message: 'Game completed successfully',
      data: {
        game: {
          id: game._id,
          name: game.name,
          type: game.type
        },
        result: {
          winners: winners.map(winner => {
            /* istanbul ignore next */
            cov_ibvpczjf1().f[10]++;
            cov_ibvpczjf1().s[112]++;
            return {
              userId: winner.userId,
              username: winner.username,
              betAmount: winner.betAmount,
              winnings: winner.winnings
            };
          }),
          totalWinnings,
          gameDuration: game.duration
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ibvpczjf1().s[113]++;
    logger_1.logger.error('Play game failed:', error);
    /* istanbul ignore next */
    cov_ibvpczjf1().s[114]++;
    res.status(500).json({
      success: false,
      error: 'Failed to play game'
    });
  }
});
// Get games by type
/* istanbul ignore next */
cov_ibvpczjf1().s[115]++;
router.get('/type/:type', async (req, res) => {
  /* istanbul ignore next */
  cov_ibvpczjf1().f[11]++;
  cov_ibvpczjf1().s[116]++;
  try {
    const {
      type
    } =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[117]++, req.params);
    const {
      limit =
      /* istanbul ignore next */
      (cov_ibvpczjf1().b[25][0]++, 20)
    } =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[118]++, req.query);
    const games =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[119]++, await Game_1.Game.find({
      type,
      isActive: true
    }).sort({
      playCount: -1
    }));
    const limitedGames =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[120]++, games.slice(0, parseInt(limit)));
    /* istanbul ignore next */
    cov_ibvpczjf1().s[121]++;
    res.json({
      success: true,
      data: {
        type,
        games: limitedGames.map(game => {
          /* istanbul ignore next */
          cov_ibvpczjf1().f[12]++;
          cov_ibvpczjf1().s[122]++;
          return {
            id: game._id,
            name: game.name,
            description: game.description,
            entryFee: game.entryFee,
            prizePool: game.prizePool,
            metadata: game.metadata
          };
        })
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ibvpczjf1().s[123]++;
    logger_1.logger.error('Get games by type failed:', error);
    /* istanbul ignore next */
    cov_ibvpczjf1().s[124]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get games by type'
    });
  }
});
// Get user's game history
/* istanbul ignore next */
cov_ibvpczjf1().s[125]++;
router.get('/user/:userId/history', async (req, res) => {
  /* istanbul ignore next */
  cov_ibvpczjf1().f[13]++;
  cov_ibvpczjf1().s[126]++;
  try {
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[127]++, req.params);
    const {
      limit =
      /* istanbul ignore next */
      (cov_ibvpczjf1().b[26][0]++, 20),
      page =
      /* istanbul ignore next */
      (cov_ibvpczjf1().b[27][0]++, 1)
    } =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[128]++, req.query);
    const skip =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[129]++, (parseInt(page) - 1) * parseInt(limit));
    const transactions =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[130]++, await Transaction_1.Transaction.find({
      userId,
      type: {
        $in: ['game_won', 'gift_sent']
      },
      'metadata.gameId': {
        $exists: true
      }
    }).sort({
      createdAt: -1
    }).skip(skip).limit(parseInt(limit)).populate('metadata.gameId', 'name type'));
    const total =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[131]++, await Transaction_1.Transaction.countDocuments({
      userId,
      type: {
        $in: ['game_won', 'gift_sent']
      },
      'metadata.gameId': {
        $exists: true
      }
    }));
    /* istanbul ignore next */
    cov_ibvpczjf1().s[132]++;
    res.json({
      success: true,
      data: {
        history: transactions.map(transaction => {
          /* istanbul ignore next */
          cov_ibvpczjf1().f[14]++;
          cov_ibvpczjf1().s[133]++;
          return {
            id: transaction._id,
            type: transaction.type,
            amount: transaction.amount,
            gameName: transaction.metadata?.gameId?.name,
            gameType: transaction.metadata?.gameId?.type,
            betAmount: transaction.metadata?.betAmount,
            winnings: transaction.metadata?.winnings,
            createdAt: transaction.createdAt
          };
        }),
        pagination: {
          page: parseInt(page),
          limit: parseInt(limit),
          total,
          pages: Math.ceil(total / parseInt(limit))
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ibvpczjf1().s[134]++;
    logger_1.logger.error('Get user game history failed:', error);
    /* istanbul ignore next */
    cov_ibvpczjf1().s[135]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get game history'
    });
  }
});
// Helper function to simulate game with AI win rate enforcement
async function simulateGame(game, players) {
  /* istanbul ignore next */
  cov_ibvpczjf1().f[15]++;
  const aiWinRate =
  /* istanbul ignore next */
  (cov_ibvpczjf1().s[136]++, game.aiWinRate / 100); // Convert to decimal
  const random =
  /* istanbul ignore next */
  (cov_ibvpczjf1().s[137]++, Math.random());
  let winners =
  /* istanbul ignore next */
  (cov_ibvpczjf1().s[138]++, []);
  let totalWinnings =
  /* istanbul ignore next */
  (cov_ibvpczjf1().s[139]++, 0);
  /* istanbul ignore next */
  cov_ibvpczjf1().s[140]++;
  if (random < aiWinRate) {
    /* istanbul ignore next */
    cov_ibvpczjf1().b[28][0]++;
    cov_ibvpczjf1().s[141]++;
    // AI wins - no human players win
    winners = [];
    /* istanbul ignore next */
    cov_ibvpczjf1().s[142]++;
    totalWinnings = 0;
  } else {
    /* istanbul ignore next */
    cov_ibvpczjf1().b[28][1]++;
    // Human players can win
    const totalBetAmount =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[143]++, players.reduce((sum, player) => {
      /* istanbul ignore next */
      cov_ibvpczjf1().f[16]++;
      cov_ibvpczjf1().s[144]++;
      return sum + player.betAmount;
    }, 0));
    const prizePool =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[145]++, totalBetAmount + game.prizePool);
    // Randomly select winners (1-3 winners)
    const winnerCount =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[146]++, Math.min(Math.floor(Math.random() * 3) + 1, players.length));
    const shuffledPlayers =
    /* istanbul ignore next */
    (cov_ibvpczjf1().s[147]++, players.sort(() => {
      /* istanbul ignore next */
      cov_ibvpczjf1().f[17]++;
      cov_ibvpczjf1().s[148]++;
      return Math.random() - 0.5;
    }));
    /* istanbul ignore next */
    cov_ibvpczjf1().s[149]++;
    winners = shuffledPlayers.slice(0, winnerCount).map(player => {
      /* istanbul ignore next */
      cov_ibvpczjf1().f[18]++;
      cov_ibvpczjf1().s[150]++;
      return {
        userId: player.userId,
        username: player.username,
        betAmount: player.betAmount,
        winnings: Math.floor(prizePool / winnerCount)
      };
    });
    /* istanbul ignore next */
    cov_ibvpczjf1().s[151]++;
    totalWinnings = winners.reduce((sum, winner) => {
      /* istanbul ignore next */
      cov_ibvpczjf1().f[19]++;
      cov_ibvpczjf1().s[152]++;
      return sum + winner.winnings;
    }, 0);
  }
  /* istanbul ignore next */
  cov_ibvpczjf1().s[153]++;
  return {
    winners,
    totalWinnings
  };
}
/* istanbul ignore next */
cov_ibvpczjf1().s[154]++;
exports.default = router;