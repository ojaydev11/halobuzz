7efc1faef85315a8f631657451ccf847
"use strict";

/* istanbul ignore next */
function cov_l0e52mb4x() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\webhooks.ts";
  var hash = "df02becf5070c0173c5e4f414f68fb641aa26b7d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\webhooks.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 51
        }
      },
      "5": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 55
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 10,
          column: 54
        }
      },
      "8": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 44
        }
      },
      "9": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 41
        }
      },
      "10": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 16,
          column: 2
        }
      },
      "11": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 17,
          column: 69
        }
      },
      "12": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "13": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 62,
          column: 3
        }
      },
      "14": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 47
        }
      },
      "15": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "16": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 58
        }
      },
      "17": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 57
        }
      },
      "18": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "19": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 85
        }
      },
      "20": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 77
        }
      },
      "21": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 110
        }
      },
      "22": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "23": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "24": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 65
        }
      },
      "25": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 22
        }
      },
      "26": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 64
        }
      },
      "27": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 22
        }
      },
      "28": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 61
        }
      },
      "29": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 22
        }
      },
      "30": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 62
        }
      },
      "31": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 22
        }
      },
      "32": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 84
        }
      },
      "33": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 37
        }
      },
      "34": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 66
        }
      },
      "35": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 69
        }
      },
      "36": {
        start: {
          line: 67,
          column: 19
        },
        end: {
          line: 67,
          column: 43
        }
      },
      "37": {
        start: {
          line: 68,
          column: 26
        },
        end: {
          line: 68,
          column: 57
        }
      },
      "38": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 70
        }
      },
      "39": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "40": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 83
        }
      },
      "41": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 15
        }
      },
      "42": {
        start: {
          line: 75,
          column: 32
        },
        end: {
          line: 77,
          column: 6
        }
      },
      "43": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "44": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 82
        }
      },
      "45": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 15
        }
      },
      "46": {
        start: {
          line: 82,
          column: 25
        },
        end: {
          line: 82,
          column: 64
        }
      },
      "47": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 36
        }
      },
      "48": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "49": {
        start: {
          line: 85,
          column: 21
        },
        end: {
          line: 85,
          column: 77
        }
      },
      "50": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "51": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 63
        }
      },
      "52": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 50
        }
      },
      "53": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 19
        }
      },
      "54": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "55": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 88
        }
      },
      "56": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 42
        }
      },
      "57": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 46
        }
      },
      "58": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 51
        }
      },
      "59": {
        start: {
          line: 99,
          column: 28
        },
        end: {
          line: 116,
          column: 10
        }
      },
      "60": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 58
        }
      },
      "61": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 47
        }
      },
      "62": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 110
        }
      },
      "63": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 46
        }
      },
      "64": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 78
        }
      },
      "65": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 20
        }
      },
      "66": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 34
        }
      },
      "67": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 101
        }
      },
      "68": {
        start: {
          line: 142,
          column: 19
        },
        end: {
          line: 142,
          column: 49
        }
      },
      "69": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 83
        }
      },
      "70": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "71": {
        start: {
          line: 146,
          column: 28
        },
        end: {
          line: 161,
          column: 10
        }
      },
      "72": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 33
        }
      },
      "73": {
        start: {
          line: 169,
          column: 28
        },
        end: {
          line: 169,
          column: 49
        }
      },
      "74": {
        start: {
          line: 171,
          column: 32
        },
        end: {
          line: 175,
          column: 6
        }
      },
      "75": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "76": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 94
        }
      },
      "77": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "78": {
        start: {
          line: 180,
          column: 25
        },
        end: {
          line: 180,
          column: 64
        }
      },
      "79": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 36
        }
      },
      "80": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "81": {
        start: {
          line: 183,
          column: 21
        },
        end: {
          line: 183,
          column: 97
        }
      },
      "82": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "83": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 94
        }
      },
      "84": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 50
        }
      },
      "85": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 19
        }
      },
      "86": {
        start: {
          line: 189,
          column: 29
        },
        end: {
          line: 189,
          column: 55
        }
      },
      "87": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "88": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 47
        }
      },
      "89": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 51
        }
      },
      "90": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 55
        }
      },
      "91": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 146
        }
      },
      "92": {
        start: {
          line: 200,
          column: 34
        },
        end: {
          line: 216,
          column: 10
        }
      },
      "93": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 64
        }
      },
      "94": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 47
        }
      },
      "95": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 113
        }
      },
      "96": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 46
        }
      },
      "97": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 65
        }
      },
      "98": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 20
        }
      },
      "99": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 34
        }
      },
      "100": {
        start: {
          line: 234,
          column: 0
        },
        end: {
          line: 242,
          column: 1
        }
      },
      "101": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 241,
          column: 7
        }
      },
      "102": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 240,
          column: 11
        }
      },
      "103": {
        start: {
          line: 243,
          column: 0
        },
        end: {
          line: 243,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 76
          },
          end: {
            line: 23,
            column: 77
          }
        },
        loc: {
          start: {
            line: 23,
            column: 96
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 23
      },
      "2": {
        name: "handleCheckoutCompleted",
        decl: {
          start: {
            line: 66,
            column: 15
          },
          end: {
            line: 66,
            column: 38
          }
        },
        loc: {
          start: {
            line: 66,
            column: 48
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 66
      },
      "3": {
        name: "handlePaymentSucceeded",
        decl: {
          start: {
            line: 133,
            column: 15
          },
          end: {
            line: 133,
            column: 37
          }
        },
        loc: {
          start: {
            line: 133,
            column: 53
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 133
      },
      "4": {
        name: "handlePaymentFailed",
        decl: {
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 141,
            column: 34
          }
        },
        loc: {
          start: {
            line: 141,
            column: 50
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 141
      },
      "5": {
        name: "handleChargeRefunded",
        decl: {
          start: {
            line: 168,
            column: 15
          },
          end: {
            line: 168,
            column: 35
          }
        },
        loc: {
          start: {
            line: 168,
            column: 44
          },
          end: {
            line: 229,
            column: 1
          }
        },
        line: 168
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 235,
            column: 31
          },
          end: {
            line: 235,
            column: 32
          }
        },
        loc: {
          start: {
            line: 235,
            column: 45
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 235
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 36
          },
          end: {
            line: 14,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 36
          },
          end: {
            line: 14,
            column: 65
          }
        }, {
          start: {
            line: 14,
            column: 69
          },
          end: {
            line: 14,
            column: 71
          }
        }],
        line: 14
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 30
          },
          end: {
            line: 17,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 30
          },
          end: {
            line: 17,
            column: 63
          }
        }, {
          start: {
            line: 17,
            column: 67
          },
          end: {
            line: 17,
            column: 69
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 18,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 18,
            column: 56
          }
        }, {
          start: {
            line: 18,
            column: 60
          },
          end: {
            line: 18,
            column: 65
          }
        }],
        line: 18
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 54
          },
          end: {
            line: 36,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 77
          },
          end: {
            line: 36,
            column: 88
          }
        }, {
          start: {
            line: 36,
            column: 91
          },
          end: {
            line: 36,
            column: 106
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 22
          }
        }, {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 46,
            column: 22
          }
        }, {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 49,
            column: 22
          }
        }, {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 52,
            column: 22
          }
        }, {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 54,
            column: 84
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 69,
            column: 33
          },
          end: {
            line: 69,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 33
          },
          end: {
            line: 69,
            column: 62
          }
        }, {
          start: {
            line: 69,
            column: 66
          },
          end: {
            line: 69,
            column: 69
          }
        }],
        line: 69
      },
      "10": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "11": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 15
          }
        }, {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 70,
            column: 31
          }
        }],
        line: 70
      },
      "12": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "13": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "14": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "15": {
        loc: {
          start: {
            line: 111,
            column: 28
          },
          end: {
            line: 111,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 51
          },
          end: {
            line: 111,
            column: 77
          }
        }, {
          start: {
            line: 111,
            column: 80
          },
          end: {
            line: 111,
            column: 81
          }
        }],
        line: 111
      },
      "16": {
        loc: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "17": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "18": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "19": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: 196,
            column: 13
          },
          end: {
            line: 198,
            column: 9
          }
        }],
        line: 191
      },
      "20": {
        loc: {
          start: {
            line: 234,
            column: 0
          },
          end: {
            line: 242,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 0
          },
          end: {
            line: 242,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "21": {
        loc: {
          start: {
            line: 238,
            column: 27
          },
          end: {
            line: 238,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 27
          },
          end: {
            line: 238,
            column: 46
          }
        }, {
          start: {
            line: 238,
            column: 50
          },
          end: {
            line: 238,
            column: 73
          }
        }],
        line: 238
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "df02becf5070c0173c5e4f414f68fb641aa26b7d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_l0e52mb4x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_l0e52mb4x();
var __importDefault =
/* istanbul ignore next */
(cov_l0e52mb4x().s[0]++,
/* istanbul ignore next */
(cov_l0e52mb4x().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_l0e52mb4x().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_l0e52mb4x().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_l0e52mb4x().f[0]++;
  cov_l0e52mb4x().s[1]++;
  return /* istanbul ignore next */(cov_l0e52mb4x().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_l0e52mb4x().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_l0e52mb4x().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_l0e52mb4x().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_l0e52mb4x().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_l0e52mb4x().s[3]++, __importDefault(require("express")));
const stripe_1 =
/* istanbul ignore next */
(cov_l0e52mb4x().s[4]++, __importDefault(require("stripe")));
const mongoose_1 =
/* istanbul ignore next */
(cov_l0e52mb4x().s[5]++, __importDefault(require("mongoose")));
const User_1 =
/* istanbul ignore next */
(cov_l0e52mb4x().s[6]++, require("../models/User"));
const Transaction_1 =
/* istanbul ignore next */
(cov_l0e52mb4x().s[7]++, require("../models/Transaction"));
const logger_1 =
/* istanbul ignore next */
(cov_l0e52mb4x().s[8]++, require("../config/logger"));
const router =
/* istanbul ignore next */
(cov_l0e52mb4x().s[9]++, express_1.default.Router());
// Initialize Stripe
const stripe =
/* istanbul ignore next */
(cov_l0e52mb4x().s[10]++, new stripe_1.default(
/* istanbul ignore next */
(cov_l0e52mb4x().b[3][0]++, process.env.STRIPE_SECRET_KEY) ||
/* istanbul ignore next */
(cov_l0e52mb4x().b[3][1]++, ''), {
  apiVersion: '2023-10-16'
}));
const STRIPE_WEBHOOK_SECRET =
/* istanbul ignore next */
(cov_l0e52mb4x().s[11]++,
/* istanbul ignore next */
(cov_l0e52mb4x().b[4][0]++, process.env.STRIPE_WEBHOOK_SECRET) ||
/* istanbul ignore next */
(cov_l0e52mb4x().b[4][1]++, ''));
const COINS_PER_USD =
/* istanbul ignore next */
(cov_l0e52mb4x().s[12]++, parseInt(
/* istanbul ignore next */
(cov_l0e52mb4x().b[5][0]++, process.env.COINS_PER_USD) ||
/* istanbul ignore next */
(cov_l0e52mb4x().b[5][1]++, '100')));
/**
 * POST /api/v1/webhooks/stripe
 * Handle Stripe webhook events
 */
/* istanbul ignore next */
cov_l0e52mb4x().s[13]++;
router.post('/stripe', express_1.default.raw({
  type: 'application/json'
}), async (req, res) => {
  /* istanbul ignore next */
  cov_l0e52mb4x().f[1]++;
  const sig =
  /* istanbul ignore next */
  (cov_l0e52mb4x().s[14]++, req.headers['stripe-signature']);
  /* istanbul ignore next */
  cov_l0e52mb4x().s[15]++;
  if (!sig) {
    /* istanbul ignore next */
    cov_l0e52mb4x().b[6][0]++;
    cov_l0e52mb4x().s[16]++;
    logger_1.logger.error('Missing Stripe signature');
    /* istanbul ignore next */
    cov_l0e52mb4x().s[17]++;
    return res.status(400).send('Missing signature');
  } else
  /* istanbul ignore next */
  {
    cov_l0e52mb4x().b[6][1]++;
  }
  let event;
  /* istanbul ignore next */
  cov_l0e52mb4x().s[18]++;
  try {
    /* istanbul ignore next */
    cov_l0e52mb4x().s[19]++;
    // Verify webhook signature
    event = stripe.webhooks.constructEvent(req.body, sig, STRIPE_WEBHOOK_SECRET);
  } catch (err) {
    /* istanbul ignore next */
    cov_l0e52mb4x().s[20]++;
    logger_1.logger.error('Webhook signature verification failed:', err);
    /* istanbul ignore next */
    cov_l0e52mb4x().s[21]++;
    return res.status(400).send(`Webhook Error: ${err instanceof Error ?
    /* istanbul ignore next */
    (cov_l0e52mb4x().b[7][0]++, err.message) :
    /* istanbul ignore next */
    (cov_l0e52mb4x().b[7][1]++, 'Unknown error')}`);
  }
  // Handle the event
  /* istanbul ignore next */
  cov_l0e52mb4x().s[22]++;
  try {
    /* istanbul ignore next */
    cov_l0e52mb4x().s[23]++;
    switch (event.type) {
      case 'checkout.session.completed':
        /* istanbul ignore next */
        cov_l0e52mb4x().b[8][0]++;
        cov_l0e52mb4x().s[24]++;
        await handleCheckoutCompleted(event.data.object);
        /* istanbul ignore next */
        cov_l0e52mb4x().s[25]++;
        break;
      case 'payment_intent.succeeded':
        /* istanbul ignore next */
        cov_l0e52mb4x().b[8][1]++;
        cov_l0e52mb4x().s[26]++;
        await handlePaymentSucceeded(event.data.object);
        /* istanbul ignore next */
        cov_l0e52mb4x().s[27]++;
        break;
      case 'payment_intent.payment_failed':
        /* istanbul ignore next */
        cov_l0e52mb4x().b[8][2]++;
        cov_l0e52mb4x().s[28]++;
        await handlePaymentFailed(event.data.object);
        /* istanbul ignore next */
        cov_l0e52mb4x().s[29]++;
        break;
      case 'charge.refunded':
        /* istanbul ignore next */
        cov_l0e52mb4x().b[8][3]++;
        cov_l0e52mb4x().s[30]++;
        await handleChargeRefunded(event.data.object);
        /* istanbul ignore next */
        cov_l0e52mb4x().s[31]++;
        break;
      default:
        /* istanbul ignore next */
        cov_l0e52mb4x().b[8][4]++;
        cov_l0e52mb4x().s[32]++;
        logger_1.logger.info(`Unhandled webhook event type: ${event.type}`);
    }
    /* istanbul ignore next */
    cov_l0e52mb4x().s[33]++;
    res.json({
      received: true
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_l0e52mb4x().s[34]++;
    logger_1.logger.error('Error processing webhook:', error);
    /* istanbul ignore next */
    cov_l0e52mb4x().s[35]++;
    res.status(500).json({
      error: 'Webhook processing failed'
    });
  }
});
/**
 * Handle successful checkout session
 */
async function handleCheckoutCompleted(session) {
  /* istanbul ignore next */
  cov_l0e52mb4x().f[2]++;
  const userId =
  /* istanbul ignore next */
  (cov_l0e52mb4x().s[36]++, session.metadata?.userId);
  const coinPackageId =
  /* istanbul ignore next */
  (cov_l0e52mb4x().s[37]++, session.metadata?.coinPackageId);
  const coinsAmount =
  /* istanbul ignore next */
  (cov_l0e52mb4x().s[38]++, parseInt(
  /* istanbul ignore next */
  (cov_l0e52mb4x().b[9][0]++, session.metadata?.coinsAmount) ||
  /* istanbul ignore next */
  (cov_l0e52mb4x().b[9][1]++, '0')));
  /* istanbul ignore next */
  cov_l0e52mb4x().s[39]++;
  if (
  /* istanbul ignore next */
  (cov_l0e52mb4x().b[11][0]++, !userId) ||
  /* istanbul ignore next */
  (cov_l0e52mb4x().b[11][1]++, !coinsAmount)) {
    /* istanbul ignore next */
    cov_l0e52mb4x().b[10][0]++;
    cov_l0e52mb4x().s[40]++;
    logger_1.logger.error('Missing metadata in checkout session:', session.id);
    /* istanbul ignore next */
    cov_l0e52mb4x().s[41]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_l0e52mb4x().b[10][1]++;
  }
  // Check for duplicate processing using idempotency
  const existingTransaction =
  /* istanbul ignore next */
  (cov_l0e52mb4x().s[42]++, await Transaction_1.Transaction.findOne({
    'metadata.stripeSessionId': session.id
  }));
  /* istanbul ignore next */
  cov_l0e52mb4x().s[43]++;
  if (existingTransaction) {
    /* istanbul ignore next */
    cov_l0e52mb4x().b[12][0]++;
    cov_l0e52mb4x().s[44]++;
    logger_1.logger.info(`Checkout session already processed: ${session.id}`);
    /* istanbul ignore next */
    cov_l0e52mb4x().s[45]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_l0e52mb4x().b[12][1]++;
  }
  const mongoSession =
  /* istanbul ignore next */
  (cov_l0e52mb4x().s[46]++, await mongoose_1.default.startSession());
  /* istanbul ignore next */
  cov_l0e52mb4x().s[47]++;
  mongoSession.startTransaction();
  /* istanbul ignore next */
  cov_l0e52mb4x().s[48]++;
  try {
    const user =
    /* istanbul ignore next */
    (cov_l0e52mb4x().s[49]++, await User_1.User.findById(userId).session(mongoSession));
    /* istanbul ignore next */
    cov_l0e52mb4x().s[50]++;
    if (!user) {
      /* istanbul ignore next */
      cov_l0e52mb4x().b[13][0]++;
      cov_l0e52mb4x().s[51]++;
      logger_1.logger.error(`User not found: ${userId}`);
      /* istanbul ignore next */
      cov_l0e52mb4x().s[52]++;
      await mongoSession.abortTransaction();
      /* istanbul ignore next */
      cov_l0e52mb4x().s[53]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_l0e52mb4x().b[13][1]++;
    }
    // Update user coins
    cov_l0e52mb4x().s[54]++;
    if (!user.coins) {
      /* istanbul ignore next */
      cov_l0e52mb4x().b[14][0]++;
      cov_l0e52mb4x().s[55]++;
      user.coins = {
        balance: 0,
        bonusBalance: 0,
        totalEarned: 0,
        totalSpent: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_l0e52mb4x().b[14][1]++;
    }
    cov_l0e52mb4x().s[56]++;
    user.coins.balance += coinsAmount;
    /* istanbul ignore next */
    cov_l0e52mb4x().s[57]++;
    user.coins.totalEarned += coinsAmount;
    /* istanbul ignore next */
    cov_l0e52mb4x().s[58]++;
    await user.save({
      session: mongoSession
    });
    // Create transaction record
    const transaction =
    /* istanbul ignore next */
    (cov_l0e52mb4x().s[59]++, new Transaction_1.Transaction({
      userId,
      type: 'recharge',
      amount: coinsAmount,
      currency: 'coins',
      status: 'completed',
      paymentMethod: 'stripe',
      transactionId: session.payment_intent,
      description: `Purchased ${coinsAmount} coins via Stripe`,
      metadata: {
        stripeSessionId: session.id,
        coinPackageId,
        amountPaid: session.amount_total ?
        /* istanbul ignore next */
        (cov_l0e52mb4x().b[15][0]++, session.amount_total / 100) :
        /* istanbul ignore next */
        (cov_l0e52mb4x().b[15][1]++, 0),
        currency: session.currency
      },
      fees: 0,
      netAmount: coinsAmount
    }));
    /* istanbul ignore next */
    cov_l0e52mb4x().s[60]++;
    await transaction.save({
      session: mongoSession
    });
    /* istanbul ignore next */
    cov_l0e52mb4x().s[61]++;
    await mongoSession.commitTransaction();
    /* istanbul ignore next */
    cov_l0e52mb4x().s[62]++;
    logger_1.logger.info(`Coins credited: User ${userId} - ${coinsAmount} coins - Session ${session.id}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_l0e52mb4x().s[63]++;
    await mongoSession.abortTransaction();
    /* istanbul ignore next */
    cov_l0e52mb4x().s[64]++;
    logger_1.logger.error('Error processing checkout completion:', error);
    /* istanbul ignore next */
    cov_l0e52mb4x().s[65]++;
    throw error;
  } finally {
    /* istanbul ignore next */
    cov_l0e52mb4x().s[66]++;
    mongoSession.endSession();
  }
}
/**
 * Handle successful payment intent
 */
async function handlePaymentSucceeded(paymentIntent) {
  /* istanbul ignore next */
  cov_l0e52mb4x().f[3]++;
  cov_l0e52mb4x().s[67]++;
  logger_1.logger.info(`Payment succeeded: ${paymentIntent.id} - Amount: ${paymentIntent.amount}`);
  // Additional processing if needed
  // Most coin crediting happens in checkout.session.completed
}
/**
 * Handle failed payment
 */
async function handlePaymentFailed(paymentIntent) {
  /* istanbul ignore next */
  cov_l0e52mb4x().f[4]++;
  const userId =
  /* istanbul ignore next */
  (cov_l0e52mb4x().s[68]++, paymentIntent.metadata?.userId);
  /* istanbul ignore next */
  cov_l0e52mb4x().s[69]++;
  logger_1.logger.error(`Payment failed: ${paymentIntent.id} - User: ${userId}`);
  /* istanbul ignore next */
  cov_l0e52mb4x().s[70]++;
  if (userId) {
    /* istanbul ignore next */
    cov_l0e52mb4x().b[16][0]++;
    // Create failed transaction record for audit
    const transaction =
    /* istanbul ignore next */
    (cov_l0e52mb4x().s[71]++, new Transaction_1.Transaction({
      userId,
      type: 'recharge',
      amount: 0,
      currency: 'coins',
      status: 'failed',
      paymentMethod: 'stripe',
      transactionId: paymentIntent.id,
      description: 'Stripe payment failed',
      metadata: {
        error: paymentIntent.last_payment_error?.message,
        failureCode: paymentIntent.last_payment_error?.code
      },
      fees: 0,
      netAmount: 0
    }));
    /* istanbul ignore next */
    cov_l0e52mb4x().s[72]++;
    await transaction.save();
  } else
  /* istanbul ignore next */
  {
    cov_l0e52mb4x().b[16][1]++;
  }
}
/**
 * Handle charge refund
 */
async function handleChargeRefunded(charge) {
  /* istanbul ignore next */
  cov_l0e52mb4x().f[5]++;
  const paymentIntentId =
  /* istanbul ignore next */
  (cov_l0e52mb4x().s[73]++, charge.payment_intent);
  // Find original transaction
  const originalTransaction =
  /* istanbul ignore next */
  (cov_l0e52mb4x().s[74]++, await Transaction_1.Transaction.findOne({
    transactionId: paymentIntentId,
    type: 'recharge',
    status: 'completed'
  }));
  /* istanbul ignore next */
  cov_l0e52mb4x().s[75]++;
  if (!originalTransaction) {
    /* istanbul ignore next */
    cov_l0e52mb4x().b[17][0]++;
    cov_l0e52mb4x().s[76]++;
    logger_1.logger.warn(`Original transaction not found for refund: ${paymentIntentId}`);
    /* istanbul ignore next */
    cov_l0e52mb4x().s[77]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_l0e52mb4x().b[17][1]++;
  }
  const mongoSession =
  /* istanbul ignore next */
  (cov_l0e52mb4x().s[78]++, await mongoose_1.default.startSession());
  /* istanbul ignore next */
  cov_l0e52mb4x().s[79]++;
  mongoSession.startTransaction();
  /* istanbul ignore next */
  cov_l0e52mb4x().s[80]++;
  try {
    const user =
    /* istanbul ignore next */
    (cov_l0e52mb4x().s[81]++, await User_1.User.findById(originalTransaction.userId).session(mongoSession));
    /* istanbul ignore next */
    cov_l0e52mb4x().s[82]++;
    if (!user) {
      /* istanbul ignore next */
      cov_l0e52mb4x().b[18][0]++;
      cov_l0e52mb4x().s[83]++;
      logger_1.logger.error(`User not found for refund: ${originalTransaction.userId}`);
      /* istanbul ignore next */
      cov_l0e52mb4x().s[84]++;
      await mongoSession.abortTransaction();
      /* istanbul ignore next */
      cov_l0e52mb4x().s[85]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_l0e52mb4x().b[18][1]++;
    }
    const refundAmount =
    /* istanbul ignore next */
    (cov_l0e52mb4x().s[86]++, originalTransaction.amount);
    // Deduct coins from user (if they have enough)
    /* istanbul ignore next */
    cov_l0e52mb4x().s[87]++;
    if (user.coins.balance >= refundAmount) {
      /* istanbul ignore next */
      cov_l0e52mb4x().b[19][0]++;
      cov_l0e52mb4x().s[88]++;
      user.coins.balance -= refundAmount;
      /* istanbul ignore next */
      cov_l0e52mb4x().s[89]++;
      user.coins.totalEarned -= refundAmount;
      /* istanbul ignore next */
      cov_l0e52mb4x().s[90]++;
      await user.save({
        session: mongoSession
      });
    } else {
      /* istanbul ignore next */
      cov_l0e52mb4x().b[19][1]++;
      cov_l0e52mb4x().s[91]++;
      logger_1.logger.warn(`User ${user._id} has insufficient balance for refund. Balance: ${user.coins.balance}, Refund: ${refundAmount}`);
    }
    // Create refund transaction record
    const refundTransaction =
    /* istanbul ignore next */
    (cov_l0e52mb4x().s[92]++, new Transaction_1.Transaction({
      userId: originalTransaction.userId,
      type: 'refund',
      amount: -refundAmount,
      currency: 'coins',
      status: 'completed',
      paymentMethod: 'stripe',
      transactionId: charge.id,
      description: `Refund for transaction ${originalTransaction._id}`,
      metadata: {
        originalTransactionId: originalTransaction._id,
        stripeChargeId: charge.id,
        refundReason: charge.refunds?.data[0]?.reason
      },
      fees: 0,
      netAmount: -refundAmount
    }));
    /* istanbul ignore next */
    cov_l0e52mb4x().s[93]++;
    await refundTransaction.save({
      session: mongoSession
    });
    /* istanbul ignore next */
    cov_l0e52mb4x().s[94]++;
    await mongoSession.commitTransaction();
    /* istanbul ignore next */
    cov_l0e52mb4x().s[95]++;
    logger_1.logger.info(`Refund processed: User ${user._id} - ${refundAmount} coins - Charge ${charge.id}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_l0e52mb4x().s[96]++;
    await mongoSession.abortTransaction();
    /* istanbul ignore next */
    cov_l0e52mb4x().s[97]++;
    logger_1.logger.error('Error processing refund:', error);
    /* istanbul ignore next */
    cov_l0e52mb4x().s[98]++;
    throw error;
  } finally {
    /* istanbul ignore next */
    cov_l0e52mb4x().s[99]++;
    mongoSession.endSession();
  }
}
/**
 * GET /api/v1/webhooks/stripe/test
 * Test endpoint for webhook setup (dev only)
 */
/* istanbul ignore next */
cov_l0e52mb4x().s[100]++;
if (process.env.NODE_ENV !== 'production') {
  /* istanbul ignore next */
  cov_l0e52mb4x().b[20][0]++;
  cov_l0e52mb4x().s[101]++;
  router.get('/stripe/test', (req, res) => {
    /* istanbul ignore next */
    cov_l0e52mb4x().f[6]++;
    cov_l0e52mb4x().s[102]++;
    res.json({
      message: 'Stripe webhook endpoint is accessible',
      webhookUrl: `${
      /* istanbul ignore next */
      (cov_l0e52mb4x().b[21][0]++, process.env.API_URL) ||
      /* istanbul ignore next */
      (cov_l0e52mb4x().b[21][1]++, 'http://localhost:4000')}/api/v1/webhooks/stripe`,
      configured: !!STRIPE_WEBHOOK_SECRET
    });
  });
} else
/* istanbul ignore next */
{
  cov_l0e52mb4x().b[20][1]++;
}
cov_l0e52mb4x().s[103]++;
exports.default = router;