586240cd53106ce7452a867818e2c2d5
"use strict";

/* istanbul ignore next */
function cov_2q2mqmf2zb() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\chatService.ts";
  var hash = "c557317672b556293cbed3ef17f58cc383671106";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\chatService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 29
        }
      },
      "4": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 43
        }
      },
      "7": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 49
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "9": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "10": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 19,
          column: 13
        }
      },
      "11": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 81
        }
      },
      "12": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 68
        }
      },
      "13": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 29,
          column: 14
        }
      },
      "14": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 46
        }
      },
      "15": {
        start: {
          line: 31,
          column: 26
        },
        end: {
          line: 31,
          column: 95
        }
      },
      "16": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 34,
          column: 63
        }
      },
      "17": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 63
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 36,
          column: 64
        }
      },
      "19": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 64
        }
      },
      "20": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 61
        }
      },
      "21": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 61
        }
      },
      "22": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 64
        }
      },
      "23": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "24": {
        start: {
          line: 48,
          column: 67
        },
        end: {
          line: 48,
          column: 71
        }
      },
      "25": {
        start: {
          line: 49,
          column: 33
        },
        end: {
          line: 55,
          column: 14
        }
      },
      "26": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 32
        }
      },
      "27": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 57
        }
      },
      "28": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 24
        }
      },
      "29": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "30": {
        start: {
          line: 66,
          column: 29
        },
        end: {
          line: 71,
          column: 23
        }
      },
      "31": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 38
        }
      },
      "32": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 59
        }
      },
      "33": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 24
        }
      },
      "34": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "35": {
        start: {
          line: 82,
          column: 25
        },
        end: {
          line: 82,
          column: 59
        }
      },
      "36": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "37": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 60
        }
      },
      "38": {
        start: {
          line: 86,
          column: 28
        },
        end: {
          line: 86,
          column: 71
        }
      },
      "39": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "40": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 53
        }
      },
      "41": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "42": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 72
        }
      },
      "43": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 43
        }
      },
      "44": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 39
        }
      },
      "45": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 99,
          column: 15
        }
      },
      "46": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 24
        }
      },
      "47": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 59
        }
      },
      "48": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 24
        }
      },
      "49": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "50": {
        start: {
          line: 110,
          column: 29
        },
        end: {
          line: 117,
          column: 23
        }
      },
      "51": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 28
        }
      },
      "52": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 71
        }
      },
      "53": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 24
        }
      },
      "54": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "55": {
        start: {
          line: 128,
          column: 26
        },
        end: {
          line: 147,
          column: 14
        }
      },
      "56": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 152,
          column: 14
        }
      },
      "57": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 64
        }
      },
      "58": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 24
        }
      },
      "59": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "60": {
        start: {
          line: 162,
          column: 29
        },
        end: {
          line: 170,
          column: 23
        }
      },
      "61": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 28
        }
      },
      "62": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 61
        }
      },
      "63": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 24
        }
      },
      "64": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "65": {
        start: {
          line: 181,
          column: 33
        },
        end: {
          line: 181,
          column: 67
        }
      },
      "66": {
        start: {
          line: 182,
          column: 35
        },
        end: {
          line: 182,
          column: 69
        }
      },
      "67": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 189,
          column: 14
        }
      },
      "68": {
        start: {
          line: 188,
          column: 56
        },
        end: {
          line: 188,
          column: 81
        }
      },
      "69": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 65
        }
      },
      "70": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 24
        }
      },
      "71": {
        start: {
          line: 197,
          column: 0
        },
        end: {
          line: 197,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 42
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 35
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 46
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 59
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 64
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 50
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 80
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 59
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 108
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        loc: {
          start: {
            line: 126,
            column: 41
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 126
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        loc: {
          start: {
            line: 160,
            column: 59
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 160
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 41
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 179
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 188,
            column: 51
          },
          end: {
            line: 188,
            column: 52
          }
        },
        loc: {
          start: {
            line: 188,
            column: 56
          },
          end: {
            line: 188,
            column: 81
          }
        },
        line: 188
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 19,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 19,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 30,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 30,
            column: 40
          }
        }, {
          start: {
            line: 30,
            column: 44
          },
          end: {
            line: 30,
            column: 46
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 31,
            column: 26
          },
          end: {
            line: 31,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 70
          },
          end: {
            line: 31,
            column: 91
          }
        }, {
          start: {
            line: 31,
            column: 94
          },
          end: {
            line: 31,
            column: 95
          }
        }],
        line: 31
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 34,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 34,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 36,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 36,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 64,
            column: 37
          },
          end: {
            line: 64,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 64,
            column: 45
          },
          end: {
            line: 64,
            column: 47
          }
        }],
        line: 64
      },
      "9": {
        loc: {
          start: {
            line: 64,
            column: 49
          },
          end: {
            line: 64,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 64,
            column: 56
          },
          end: {
            line: 64,
            column: 57
          }
        }],
        line: 64
      },
      "10": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "11": {
        loc: {
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 83,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 83,
            column: 21
          }
        }, {
          start: {
            line: 83,
            column: 25
          },
          end: {
            line: 83,
            column: 41
          }
        }],
        line: 83
      },
      "12": {
        loc: {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "13": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "14": {
        loc: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 54
          }
        }, {
          start: {
            line: 91,
            column: 58
          },
          end: {
            line: 91,
            column: 74
          }
        }],
        line: 91
      },
      "15": {
        loc: {
          start: {
            line: 108,
            column: 47
          },
          end: {
            line: 108,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 108,
            column: 55
          },
          end: {
            line: 108,
            column: 57
          }
        }],
        line: 108
      },
      "16": {
        loc: {
          start: {
            line: 148,
            column: 19
          },
          end: {
            line: 152,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 19
          },
          end: {
            line: 148,
            column: 27
          }
        }, {
          start: {
            line: 148,
            column: 31
          },
          end: {
            line: 152,
            column: 13
          }
        }],
        line: 148
      },
      "17": {
        loc: {
          start: {
            line: 160,
            column: 47
          },
          end: {
            line: 160,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 160,
            column: 55
          },
          end: {
            line: 160,
            column: 57
          }
        }],
        line: 160
      },
      "18": {
        loc: {
          start: {
            line: 187,
            column: 29
          },
          end: {
            line: 188,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 188,
            column: 84
          }
        }, {
          start: {
            line: 188,
            column: 87
          },
          end: {
            line: 188,
            column: 89
          }
        }],
        line: 187
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c557317672b556293cbed3ef17f58cc383671106"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2q2mqmf2zb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2q2mqmf2zb();
var __importDefault =
/* istanbul ignore next */
(cov_2q2mqmf2zb().s[0]++,
/* istanbul ignore next */
(cov_2q2mqmf2zb().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2q2mqmf2zb().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2q2mqmf2zb().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2q2mqmf2zb().f[0]++;
  cov_2q2mqmf2zb().s[1]++;
  return /* istanbul ignore next */(cov_2q2mqmf2zb().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2q2mqmf2zb().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2q2mqmf2zb().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2q2mqmf2zb().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2q2mqmf2zb().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2q2mqmf2zb().s[3]++;
exports.ChatService = void 0;
const Message_1 =
/* istanbul ignore next */
(cov_2q2mqmf2zb().s[4]++, require("@/models/Message"));
const User_1 =
/* istanbul ignore next */
(cov_2q2mqmf2zb().s[5]++, require("@/models/User"));
const logger_1 =
/* istanbul ignore next */
(cov_2q2mqmf2zb().s[6]++, require("@/config/logger"));
const axios_1 =
/* istanbul ignore next */
(cov_2q2mqmf2zb().s[7]++, __importDefault(require("axios")));
const logger =
/* istanbul ignore next */
(cov_2q2mqmf2zb().s[8]++, (0, logger_1.setupLogger)());
class ChatService {
  // Moderate message using AI engine; returns whether to block and a score
  static async moderateMessage(message) {
    /* istanbul ignore next */
    cov_2q2mqmf2zb().f[1]++;
    cov_2q2mqmf2zb().s[9]++;
    try {
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[10]++;
      if (!process.env.AI_ENGINE_URL) {
        /* istanbul ignore next */
        cov_2q2mqmf2zb().b[3][0]++;
        cov_2q2mqmf2zb().s[11]++;
        logger.warn('AI engine URL not configured, skipping moderation');
        /* istanbul ignore next */
        cov_2q2mqmf2zb().s[12]++;
        return {
          blocked: false,
          score: 0,
          action: 'none'
        };
      } else
      /* istanbul ignore next */
      {
        cov_2q2mqmf2zb().b[3][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[13]++, await axios_1.default.post(`${process.env.AI_ENGINE_URL}/internal/moderation/analyze`, {
        text: message,
        type: 'chat'
      }, {
        headers: {
          'Authorization': `Bearer ${process.env.AI_ENGINE_SECRET}`,
          'Content-Type': 'application/json'
        },
        timeout: 5000
      }));
      const result =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[14]++,
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().b[4][0]++, response.data) ||
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().b[4][1]++, {}));
      const score =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[15]++, typeof result.profanityScore === 'number' ?
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().b[5][0]++, result.profanityScore) :
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().b[5][1]++, 0));
      // Thresholds: warn at >=0.6 via ai:warning, ban at >=0.9
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[16]++;
      if (score >= 0.9) {
        /* istanbul ignore next */
        cov_2q2mqmf2zb().b[6][0]++;
        cov_2q2mqmf2zb().s[17]++;
        return {
          blocked: true,
          score,
          action: 'ban'
        };
      } else
      /* istanbul ignore next */
      {
        cov_2q2mqmf2zb().b[6][1]++;
      }
      cov_2q2mqmf2zb().s[18]++;
      if (score >= 0.6) {
        /* istanbul ignore next */
        cov_2q2mqmf2zb().b[7][0]++;
        cov_2q2mqmf2zb().s[19]++;
        return {
          blocked: true,
          score,
          action: 'warn'
        };
      } else
      /* istanbul ignore next */
      {
        cov_2q2mqmf2zb().b[7][1]++;
      }
      cov_2q2mqmf2zb().s[20]++;
      return {
        blocked: false,
        score,
        action: 'none'
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[21]++;
      logger.error('Error moderating message:', error);
      // If moderation fails, allow the message (fail open)
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[22]++;
      return {
        blocked: false,
        score: 0,
        action: 'none'
      };
    }
  }
  // Save message to database
  static async saveMessage(data) {
    /* istanbul ignore next */
    cov_2q2mqmf2zb().f[2]++;
    cov_2q2mqmf2zb().s[23]++;
    try {
      const {
        streamId,
        userId,
        message,
        type,
        timestamp
      } =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[24]++, data);
      const savedMessage =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[25]++, await Message_1.Message.create({
        roomId: streamId,
        senderId: userId,
        text: message,
        type,
        timestamp
      }));
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[26]++;
      return savedMessage;
    } catch (error) {
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[27]++;
      logger.error('Error saving message:', error);
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[28]++;
      throw error;
    }
  }
  // Get messages for a room
  static async getMessages(roomId, limit =
  /* istanbul ignore next */
  (cov_2q2mqmf2zb().b[8][0]++, 50), skip =
  /* istanbul ignore next */
  (cov_2q2mqmf2zb().b[9][0]++, 0)) {
    /* istanbul ignore next */
    cov_2q2mqmf2zb().f[3]++;
    cov_2q2mqmf2zb().s[29]++;
    try {
      const messages =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[30]++, await Message_1.Message.find({
        roomId
      }).sort({
        createdAt: -1
      }).skip(skip).limit(limit).populate('senderId', 'username avatar ogLevel').lean());
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[31]++;
      return messages.reverse(); // Return in chronological order
    } catch (error) {
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[32]++;
      logger.error('Error getting messages:', error);
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[33]++;
      throw error;
    }
  }
  // Delete message (for OG4/5 users)
  static async deleteMessage(messageId, userId) {
    /* istanbul ignore next */
    cov_2q2mqmf2zb().f[4]++;
    cov_2q2mqmf2zb().s[34]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[35]++, await User_1.User.findById(userId));
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().b[11][0]++, !user) ||
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().b[11][1]++, user.ogLevel < 4)) {
        /* istanbul ignore next */
        cov_2q2mqmf2zb().b[10][0]++;
        cov_2q2mqmf2zb().s[37]++;
        throw new Error('Insufficient permissions');
      } else
      /* istanbul ignore next */
      {
        cov_2q2mqmf2zb().b[10][1]++;
      }
      const message =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[38]++, await Message_1.Message.findById(messageId));
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[39]++;
      if (!message) {
        /* istanbul ignore next */
        cov_2q2mqmf2zb().b[12][0]++;
        cov_2q2mqmf2zb().s[40]++;
        throw new Error('Message not found');
      } else
      /* istanbul ignore next */
      {
        cov_2q2mqmf2zb().b[12][1]++;
      }
      // Check if user is the sender or has OG4/5 privileges
      cov_2q2mqmf2zb().s[41]++;
      if (
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().b[14][0]++, message.senderId.toString() !== userId) &&
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().b[14][1]++, user.ogLevel < 4)) {
        /* istanbul ignore next */
        cov_2q2mqmf2zb().b[13][0]++;
        cov_2q2mqmf2zb().s[42]++;
        throw new Error('Cannot delete other users\' messages');
      } else
      /* istanbul ignore next */
      {
        cov_2q2mqmf2zb().b[13][1]++;
      }
      cov_2q2mqmf2zb().s[43]++;
      message.deletedAt = new Date();
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[44]++;
      message.deletedBy = userId;
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[45]++;
      await Message_1.Message.findByIdAndUpdate(message._id, {
        deletedAt: new Date(),
        deletedBy: userId
      });
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[46]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[47]++;
      logger.error('Error deleting message:', error);
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[48]++;
      throw error;
    }
  }
  // Get recent messages for a user
  static async getUserRecentMessages(userId, limit =
  /* istanbul ignore next */
  (cov_2q2mqmf2zb().b[15][0]++, 20)) {
    /* istanbul ignore next */
    cov_2q2mqmf2zb().f[5]++;
    cov_2q2mqmf2zb().s[49]++;
    try {
      const messages =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[50]++, await Message_1.Message.find({
        senderId: userId,
        deleted: {
          $ne: true
        }
      }).sort({
        createdAt: -1
      }).limit(limit).populate('roomId', 'title').lean());
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[51]++;
      return messages;
    } catch (error) {
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[52]++;
      logger.error('Error getting user recent messages:', error);
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[53]++;
      throw error;
    }
  }
  // Get message statistics
  static async getMessageStats(roomId) {
    /* istanbul ignore next */
    cov_2q2mqmf2zb().f[6]++;
    cov_2q2mqmf2zb().s[54]++;
    try {
      const stats =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[55]++, await Message_1.Message.aggregate([{
        $match: {
          roomId: roomId
        }
      }, {
        $group: {
          _id: null,
          totalMessages: {
            $sum: 1
          },
          uniqueSenders: {
            $addToSet: '$senderId'
          },
          giftMessages: {
            $sum: {
              $cond: [{
                $eq: ['$type', 'gift']
              }, 1, 0]
            }
          }
        }
      }, {
        $project: {
          totalMessages: 1,
          uniqueSenders: {
            $size: '$uniqueSenders'
          },
          giftMessages: 1
        }
      }]));
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[56]++;
      return /* istanbul ignore next */(cov_2q2mqmf2zb().b[16][0]++, stats[0]) ||
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().b[16][1]++, {
        totalMessages: 0,
        uniqueSenders: 0,
        giftMessages: 0
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[57]++;
      logger.error('Error getting message stats:', error);
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[58]++;
      throw error;
    }
  }
  // Search messages
  static async searchMessages(roomId, query, limit =
  /* istanbul ignore next */
  (cov_2q2mqmf2zb().b[17][0]++, 20)) {
    /* istanbul ignore next */
    cov_2q2mqmf2zb().f[7]++;
    cov_2q2mqmf2zb().s[59]++;
    try {
      const messages =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[60]++, await Message_1.Message.find({
        roomId,
        text: {
          $regex: query,
          $options: 'i'
        },
        deleted: {
          $ne: true
        }
      }).sort({
        createdAt: -1
      }).limit(limit).populate('senderId', 'username avatar').lean());
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[61]++;
      return messages;
    } catch (error) {
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[62]++;
      logger.error('Error searching messages:', error);
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[63]++;
      throw error;
    }
  }
  // Get chat room info
  static async getChatRoomInfo(roomId) {
    /* istanbul ignore next */
    cov_2q2mqmf2zb().f[8]++;
    cov_2q2mqmf2zb().s[64]++;
    try {
      const messageStats =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[65]++, await this.getMessageStats(roomId));
      const recentMessages =
      /* istanbul ignore next */
      (cov_2q2mqmf2zb().s[66]++, await this.getMessages(roomId, 10));
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[67]++;
      return {
        roomId,
        messageStats,
        recentMessages,
        activeUsers: recentMessages.length > 0 ?
        /* istanbul ignore next */
        (cov_2q2mqmf2zb().b[18][0]++, [...new Set(recentMessages.map(m => {
          /* istanbul ignore next */
          cov_2q2mqmf2zb().f[9]++;
          cov_2q2mqmf2zb().s[68]++;
          return m.senderId._id.toString();
        }))]) :
        /* istanbul ignore next */
        (cov_2q2mqmf2zb().b[18][1]++, [])
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[69]++;
      logger.error('Error getting chat room info:', error);
      /* istanbul ignore next */
      cov_2q2mqmf2zb().s[70]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_2q2mqmf2zb().s[71]++;
exports.ChatService = ChatService;