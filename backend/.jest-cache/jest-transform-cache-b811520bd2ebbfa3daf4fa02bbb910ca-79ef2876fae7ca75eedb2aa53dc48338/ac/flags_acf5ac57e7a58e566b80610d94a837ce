16f62f8d5a9d20afa32874fe0d46c203
"use strict";

/* istanbul ignore next */
function cov_12eo1jzwi4() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\config\\flags.ts";
  var hash = "87eb674bb7cbcdd24c78f9bf795f917f02da8548";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\config\\flags.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 52
        }
      },
      "4": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 36
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 42
        }
      },
      "6": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 55
        }
      },
      "8": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 19,
          column: 2
        }
      },
      "9": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 71
        }
      },
      "10": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 34
        }
      },
      "11": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 99,
          column: 1
        }
      },
      "12": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 21
        }
      },
      "13": {
        start: {
          line: 102,
          column: 22
        },
        end: {
          line: 102,
          column: 23
        }
      },
      "14": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 21
        }
      },
      "15": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "16": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "17": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 56
        }
      },
      "18": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "19": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 117,
          column: 64
        }
      },
      "20": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 66
        }
      },
      "21": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 71
        }
      },
      "22": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 24
        }
      },
      "23": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "24": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "25": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 43
        }
      },
      "26": {
        start: {
          line: 133,
          column: 25
        },
        end: {
          line: 133,
          column: 59
        }
      },
      "27": {
        start: {
          line: 134,
          column: 26
        },
        end: {
          line: 134,
          column: 71
        }
      },
      "28": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 39
        }
      },
      "29": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 46
        }
      },
      "30": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 25
        }
      },
      "31": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 70
        }
      },
      "32": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 45
        }
      },
      "33": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "34": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 150,
          column: 34
        }
      },
      "35": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 39
        }
      },
      "36": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 46
        }
      },
      "37": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 84
        }
      },
      "38": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 70
        }
      },
      "39": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 24
        }
      },
      "40": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "41": {
        start: {
          line: 163,
          column: 26
        },
        end: {
          line: 163,
          column: 82
        }
      },
      "42": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 25
        }
      },
      "43": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 68
        }
      },
      "44": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 22
        }
      },
      "45": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "46": {
        start: {
          line: 173,
          column: 26
        },
        end: {
          line: 173,
          column: 52
        }
      },
      "47": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 31
        }
      },
      "48": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "49": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 53
        }
      },
      "50": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 46
        }
      },
      "51": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 57
        }
      },
      "52": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 74
        }
      },
      "53": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 66
        }
      },
      "54": {
        start: {
          line: 189,
          column: 28
        },
        end: {
          line: 189,
          column: 46
        }
      },
      "55": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 55
        }
      },
      "56": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 50
        }
      },
      "57": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 47
        }
      },
      "58": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 52
        }
      },
      "59": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 47
        }
      },
      "60": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 51
        }
      },
      "61": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 55
        }
      },
      "62": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 51
        }
      },
      "63": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 50
        }
      },
      "64": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "65": {
        start: {
          line: 220,
          column: 34
        },
        end: {
          line: 226,
          column: 13
        }
      },
      "66": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "67": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 63
        }
      },
      "68": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 68
        }
      },
      "69": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 95
        }
      },
      "70": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 76
        }
      },
      "71": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 24
        }
      },
      "72": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "73": {
        start: {
          line: 242,
          column: 30
        },
        end: {
          line: 248,
          column: 13
        }
      },
      "74": {
        start: {
          line: 249,
          column: 27
        },
        end: {
          line: 249,
          column: 29
        }
      },
      "75": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "76": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 62
        }
      },
      "77": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 257,
          column: 14
        }
      },
      "78": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 26
        }
      },
      "79": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 62
        }
      },
      "80": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 272,
          column: 14
        }
      },
      "81": {
        start: {
          line: 276,
          column: 0
        },
        end: {
          line: 276,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        loc: {
          start: {
            line: 104,
            column: 28
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 104
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        loc: {
          start: {
            line: 126,
            column: 23
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 126
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 53
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 144
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 24
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 161
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 25
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 171
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 19
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 185
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 25
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 188
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 27
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 193
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 30
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 196
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 33
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 199
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        loc: {
          start: {
            line: 202,
            column: 30
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 202
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        loc: {
          start: {
            line: 205,
            column: 41
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 205
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 38
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 208
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 34
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 211
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 214,
            column: 33
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 214
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 64
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 218
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        loc: {
          start: {
            line: 240,
            column: 26
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 240
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "4": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "5": {
        loc: {
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 35
          }
        }, {
          start: {
            line: 129,
            column: 39
          },
          end: {
            line: 129,
            column: 58
          }
        }],
        line: 129
      },
      "6": {
        loc: {
          start: {
            line: 134,
            column: 26
          },
          end: {
            line: 134,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 134,
            column: 33
          },
          end: {
            line: 134,
            column: 43
          }
        }, {
          start: {
            line: 134,
            column: 46
          },
          end: {
            line: 134,
            column: 71
          }
        }],
        line: 134
      },
      "7": {
        loc: {
          start: {
            line: 144,
            column: 30
          },
          end: {
            line: 144,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 144,
            column: 43
          },
          end: {
            line: 144,
            column: 51
          }
        }],
        line: 144
      },
      "8": {
        loc: {
          start: {
            line: 190,
            column: 15
          },
          end: {
            line: 190,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 29
          },
          end: {
            line: 190,
            column: 46
          }
        }, {
          start: {
            line: 190,
            column: 49
          },
          end: {
            line: 190,
            column: 54
          }
        }],
        line: 190
      },
      "9": {
        loc: {
          start: {
            line: 218,
            column: 38
          },
          end: {
            line: 218,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 218,
            column: 51
          },
          end: {
            line: 218,
            column: 62
          }
        }],
        line: 218
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "87eb674bb7cbcdd24c78f9bf795f917f02da8548"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12eo1jzwi4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12eo1jzwi4();
var __importDefault =
/* istanbul ignore next */
(cov_12eo1jzwi4().s[0]++,
/* istanbul ignore next */
(cov_12eo1jzwi4().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_12eo1jzwi4().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_12eo1jzwi4().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_12eo1jzwi4().f[0]++;
  cov_12eo1jzwi4().s[1]++;
  return /* istanbul ignore next */(cov_12eo1jzwi4().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_12eo1jzwi4().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_12eo1jzwi4().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_12eo1jzwi4().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_12eo1jzwi4().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_12eo1jzwi4().s[3]++;
exports.FeatureFlag = exports.featureFlags = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_12eo1jzwi4().s[4]++, require("./logger"));
const logger =
/* istanbul ignore next */
(cov_12eo1jzwi4().s[5]++, (0, logger_1.setupLogger)());
const database_1 =
/* istanbul ignore next */
(cov_12eo1jzwi4().s[6]++, require("./database"));
const mongoose_1 =
/* istanbul ignore next */
(cov_12eo1jzwi4().s[7]++, __importDefault(require("mongoose")));
// Feature flags schema
const flagSchema =
/* istanbul ignore next */
(cov_12eo1jzwi4().s[8]++, new mongoose_1.default.Schema({
  key: {
    type: String,
    required: true,
    unique: true
  },
  value: {
    type: Boolean,
    required: true
  },
  description: {
    type: String,
    required: true
  },
  category: {
    type: String,
    required: true
  },
  lastModified: {
    type: Date,
    default: Date.now
  },
  modifiedBy: {
    type: String,
    default: 'system'
  }
}));
const FeatureFlag =
/* istanbul ignore next */
(cov_12eo1jzwi4().s[9]++, mongoose_1.default.model('FeatureFlag', flagSchema));
/* istanbul ignore next */
cov_12eo1jzwi4().s[10]++;
exports.FeatureFlag = FeatureFlag;
// Default feature flags
const DEFAULT_FLAGS =
/* istanbul ignore next */
(cov_12eo1jzwi4().s[11]++, {
  // Core features
  gamesEnabledGlobal: {
    value: true,
    description: 'Enable games globally',
    category: 'core'
  },
  giftsEnabled: {
    value: true,
    description: 'Enable gift sending',
    category: 'core'
  },
  battleBoostEnabled: {
    value: true,
    description: 'Enable battle boost feature',
    category: 'core'
  },
  festivalMode: {
    value: false,
    description: 'Enable festival mode',
    category: 'events'
  },
  // Moderation and safety
  aiModerationStrict: {
    value: true,
    description: 'Use strict AI moderation',
    category: 'safety'
  },
  ageVerificationRequired: {
    value: true,
    description: 'Require age verification for restricted features',
    category: 'safety'
  },
  kycRequiredForHosts: {
    value: true,
    description: 'Require KYC verification for live streaming',
    category: 'safety'
  },
  // Registration and access
  newRegistrationPause: {
    value: false,
    description: 'Pause new user registrations',
    category: 'access'
  },
  maintenanceMode: {
    value: false,
    description: 'Enable maintenance mode',
    category: 'system'
  },
  // Payment and financial
  paymentsEnabled: {
    value: true,
    description: 'Enable payment processing',
    category: 'payments'
  },
  highSpenderControls: {
    value: true,
    description: 'Enable high spender protection controls',
    category: 'payments'
  },
  fraudDetectionEnabled: {
    value: true,
    description: 'Enable payment fraud detection',
    category: 'payments'
  },
  // Regional compliance
  nepalComplianceMode: {
    value: true,
    description: 'Enable Nepal-specific compliance features',
    category: 'compliance'
  },
  globalAgeGate: {
    value: true,
    description: 'Enable global 18+ age gate',
    category: 'compliance'
  }
});
class FeatureFlagsService {
  cache =
  /* istanbul ignore next */
  (cov_12eo1jzwi4().s[12]++, new Map());
  lastCacheUpdate =
  /* istanbul ignore next */
  (cov_12eo1jzwi4().s[13]++, 0);
  CACHE_TTL =
  /* istanbul ignore next */
  (cov_12eo1jzwi4().s[14]++, 60000); // 1 minute
  async initializeFlags() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[1]++;
    cov_12eo1jzwi4().s[15]++;
    try {
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[16]++;
      // Ensure database is connected
      if (mongoose_1.default.connection.readyState !== 1) {
        /* istanbul ignore next */
        cov_12eo1jzwi4().b[3][0]++;
        cov_12eo1jzwi4().s[17]++;
        await (0, database_1.connectDatabase)();
      } else
      /* istanbul ignore next */
      {
        cov_12eo1jzwi4().b[3][1]++;
      }
      // Initialize default flags if they don't exist
      cov_12eo1jzwi4().s[18]++;
      for (const [key, config] of Object.entries(DEFAULT_FLAGS)) {
        /* istanbul ignore next */
        cov_12eo1jzwi4().s[19]++;
        await FeatureFlag.findOneAndUpdate({
          key
        }, {
          key,
          value: config.value,
          description: config.description,
          category: config.category
        }, {
          upsert: true,
          setDefaultsOnInsert: true
        });
      }
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[20]++;
      logger.info('Feature flags initialized successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[21]++;
      logger.error('Failed to initialize feature flags:', error);
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[22]++;
      throw error;
    }
  }
  async getFlag(key) {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[2]++;
    cov_12eo1jzwi4().s[23]++;
    try {
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[24]++;
      // Check cache first
      if (
      /* istanbul ignore next */
      (cov_12eo1jzwi4().b[5][0]++, this.isCacheValid()) &&
      /* istanbul ignore next */
      (cov_12eo1jzwi4().b[5][1]++, this.cache.has(key))) {
        /* istanbul ignore next */
        cov_12eo1jzwi4().b[4][0]++;
        cov_12eo1jzwi4().s[25]++;
        return this.cache.get(key);
      } else
      /* istanbul ignore next */
      {
        cov_12eo1jzwi4().b[4][1]++;
      }
      // Fetch from database
      const flag =
      /* istanbul ignore next */
      (cov_12eo1jzwi4().s[26]++, await FeatureFlag.findOne({
        key
      }));
      const value =
      /* istanbul ignore next */
      (cov_12eo1jzwi4().s[27]++, flag ?
      /* istanbul ignore next */
      (cov_12eo1jzwi4().b[6][0]++, flag.value) :
      /* istanbul ignore next */
      (cov_12eo1jzwi4().b[6][1]++, this.getDefaultValue(key)));
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[28]++;
      this.cache.set(key, value);
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[29]++;
      this.lastCacheUpdate = Date.now();
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[30]++;
      return value;
    } catch (error) {
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[31]++;
      logger.error(`Failed to get feature flag ${key}:`, error);
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[32]++;
      return this.getDefaultValue(key);
    }
  }
  async setFlag(key, value, modifiedBy =
  /* istanbul ignore next */
  (cov_12eo1jzwi4().b[7][0]++, 'system')) {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[3]++;
    cov_12eo1jzwi4().s[33]++;
    try {
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[34]++;
      await FeatureFlag.findOneAndUpdate({
        key
      }, {
        value,
        lastModified: new Date(),
        modifiedBy
      }, {
        upsert: false
      });
      // Update cache
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[35]++;
      this.cache.set(key, value);
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[36]++;
      this.lastCacheUpdate = Date.now();
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[37]++;
      logger.info(`Feature flag ${key} updated to ${value} by ${modifiedBy}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[38]++;
      logger.error(`Failed to set feature flag ${key}:`, error);
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[39]++;
      throw error;
    }
  }
  async getAllFlags() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[4]++;
    cov_12eo1jzwi4().s[40]++;
    try {
      const flags =
      /* istanbul ignore next */
      (cov_12eo1jzwi4().s[41]++, await FeatureFlag.find({}).sort({
        category: 1,
        key: 1
      }));
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[42]++;
      return flags;
    } catch (error) {
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[43]++;
      logger.error('Failed to get all feature flags:', error);
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[44]++;
      return [];
    }
  }
  async refreshCache() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[5]++;
    cov_12eo1jzwi4().s[45]++;
    try {
      const flags =
      /* istanbul ignore next */
      (cov_12eo1jzwi4().s[46]++, await FeatureFlag.find({}));
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[47]++;
      this.cache.clear();
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[48]++;
      for (const flag of flags) {
        /* istanbul ignore next */
        cov_12eo1jzwi4().s[49]++;
        this.cache.set(flag.key, flag.value);
      }
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[50]++;
      this.lastCacheUpdate = Date.now();
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[51]++;
      logger.info('Feature flags cache refreshed');
    } catch (error) {
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[52]++;
      logger.error('Failed to refresh feature flags cache:', error);
    }
  }
  isCacheValid() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[6]++;
    cov_12eo1jzwi4().s[53]++;
    return Date.now() - this.lastCacheUpdate < this.CACHE_TTL;
  }
  getDefaultValue(key) {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[7]++;
    const defaultFlag =
    /* istanbul ignore next */
    (cov_12eo1jzwi4().s[54]++, DEFAULT_FLAGS[key]);
    /* istanbul ignore next */
    cov_12eo1jzwi4().s[55]++;
    return defaultFlag ?
    /* istanbul ignore next */
    (cov_12eo1jzwi4().b[8][0]++, defaultFlag.value) :
    /* istanbul ignore next */
    (cov_12eo1jzwi4().b[8][1]++, false);
  }
  // Convenience methods for common flags
  async isGamesEnabled() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[8]++;
    cov_12eo1jzwi4().s[56]++;
    return this.getFlag('gamesEnabledGlobal');
  }
  async isMaintenanceMode() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[9]++;
    cov_12eo1jzwi4().s[57]++;
    return this.getFlag('maintenanceMode');
  }
  async isRegistrationPaused() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[10]++;
    cov_12eo1jzwi4().s[58]++;
    return this.getFlag('newRegistrationPause');
  }
  async isPaymentsEnabled() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[11]++;
    cov_12eo1jzwi4().s[59]++;
    return this.getFlag('paymentsEnabled');
  }
  async isHighSpenderControlsEnabled() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[12]++;
    cov_12eo1jzwi4().s[60]++;
    return this.getFlag('highSpenderControls');
  }
  async isAgeVerificationRequired() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[13]++;
    cov_12eo1jzwi4().s[61]++;
    return this.getFlag('ageVerificationRequired');
  }
  async isKycRequiredForHosts() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[14]++;
    cov_12eo1jzwi4().s[62]++;
    return this.getFlag('kycRequiredForHosts');
  }
  async isBattleBoostEnabled() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[15]++;
    cov_12eo1jzwi4().s[63]++;
    return this.getFlag('battleBoostEnabled');
  }
  // Emergency disable all features
  async emergencyDisableAll(reason, modifiedBy =
  /* istanbul ignore next */
  (cov_12eo1jzwi4().b[9][0]++, 'emergency')) {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[16]++;
    cov_12eo1jzwi4().s[64]++;
    try {
      const criticalFlags =
      /* istanbul ignore next */
      (cov_12eo1jzwi4().s[65]++, ['gamesEnabledGlobal', 'battleBoostEnabled', 'giftsEnabled', 'paymentsEnabled', 'newRegistrationPause']);
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[66]++;
      for (const flagKey of criticalFlags) {
        /* istanbul ignore next */
        cov_12eo1jzwi4().s[67]++;
        await this.setFlag(flagKey, false, modifiedBy);
      }
      // Set maintenance mode
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[68]++;
      await this.setFlag('maintenanceMode', true, modifiedBy);
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[69]++;
      logger.warn(`EMERGENCY DISABLE ALL triggered by ${modifiedBy}. Reason: ${reason}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[70]++;
      logger.error('Failed to execute emergency disable all:', error);
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[71]++;
      throw error;
    }
  }
  // Get safe config subset for public API
  async getSafeConfig() {
    /* istanbul ignore next */
    cov_12eo1jzwi4().f[17]++;
    cov_12eo1jzwi4().s[72]++;
    try {
      const safeFlags =
      /* istanbul ignore next */
      (cov_12eo1jzwi4().s[73]++, ['gamesEnabledGlobal', 'battleBoostEnabled', 'festivalMode', 'aiModerationStrict', 'newRegistrationPause']);
      const config =
      /* istanbul ignore next */
      (cov_12eo1jzwi4().s[74]++, {});
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[75]++;
      for (const flagKey of safeFlags) {
        /* istanbul ignore next */
        cov_12eo1jzwi4().s[76]++;
        config[flagKey] = await this.getFlag(flagKey);
      }
      // Add per-country toggles
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[77]++;
      config.perCountryToggles = {
        nepal: await this.getFlag('nepalComplianceMode'),
        global: await this.getFlag('globalAgeGate')
      };
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[78]++;
      return config;
    } catch (error) {
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[79]++;
      logger.error('Failed to get safe config:', error);
      /* istanbul ignore next */
      cov_12eo1jzwi4().s[80]++;
      return {
        gamesEnabledGlobal: false,
        battleBoostEnabled: false,
        festivalMode: false,
        aiModerationStrict: true,
        newRegistrationPause: true,
        perCountryToggles: {
          nepal: true,
          global: true
        }
      };
    }
  }
}
/* istanbul ignore next */
cov_12eo1jzwi4().s[81]++;
exports.featureFlags = new FeatureFlagsService();