b4ac7f0f140ea64373bddb9d2d5cf9e2
"use strict";

/* istanbul ignore next */
function cov_b12l835bl() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\realtime\\socket.ts";
  var hash = "2906400f90d0670e6208d421e9953c3026146223";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\realtime\\socket.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 40
        }
      },
      "4": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 40
        }
      },
      "5": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 63
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 43
        }
      },
      "7": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "8": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 25,
          column: 32
        }
      },
      "9": {
        start: {
          line: 27,
          column: 15
        },
        end: {
          line: 34,
          column: 6
        }
      },
      "10": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "11": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 36
        }
      },
      "12": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 53,
          column: 7
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "14": {
        start: {
          line: 42,
          column: 27
        },
        end: {
          line: 42,
          column: 121
        }
      },
      "15": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 44,
          column: 55
        }
      },
      "16": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 55
        }
      },
      "17": {
        start: {
          line: 45,
          column: 28
        },
        end: {
          line: 45,
          column: 88
        }
      },
      "18": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "19": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 26
        }
      },
      "20": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 60
        }
      },
      "21": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 51
        }
      },
      "22": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "23": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "24": {
        start: {
          line: 60,
          column: 27
        },
        end: {
          line: 60,
          column: 98
        }
      },
      "25": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "26": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 36
        }
      },
      "27": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 33
        }
      },
      "28": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 39
        }
      },
      "29": {
        start: {
          line: 67,
          column: 22
        },
        end: {
          line: 67,
          column: 51
        }
      },
      "30": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "31": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 25
        }
      },
      "32": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 27
        }
      },
      "33": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 47
        }
      },
      "34": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 20
        }
      },
      "35": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 89,
          column: 7
        }
      },
      "36": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "37": {
        start: {
          line: 78,
          column: 27
        },
        end: {
          line: 78,
          column: 121
        }
      },
      "38": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 80,
          column: 55
        }
      },
      "39": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 55
        }
      },
      "40": {
        start: {
          line: 81,
          column: 28
        },
        end: {
          line: 81,
          column: 88
        }
      },
      "41": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 39
        }
      },
      "42": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 26
        }
      },
      "43": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 60
        }
      },
      "44": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 51
        }
      },
      "45": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 255,
          column: 7
        }
      },
      "46": {
        start: {
          line: 91,
          column: 21
        },
        end: {
          line: 91,
          column: 37
        }
      },
      "47": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 71
        }
      },
      "48": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 90
        }
      },
      "49": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "50": {
        start: {
          line: 98,
          column: 30
        },
        end: {
          line: 98,
          column: 40
        }
      },
      "51": {
        start: {
          line: 99,
          column: 25
        },
        end: {
          line: 99,
          column: 49
        }
      },
      "52": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 30
        }
      },
      "53": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 110,
          column: 15
        }
      },
      "54": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 118,
          column: 15
        }
      },
      "55": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 46
        }
      },
      "56": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 88
        }
      },
      "57": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "58": {
        start: {
          line: 126,
          column: 30
        },
        end: {
          line: 126,
          column: 40
        }
      },
      "59": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 127,
          column: 49
        }
      },
      "60": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 31
        }
      },
      "61": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "62": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 145,
          column: 15
        }
      },
      "63": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 75
        }
      },
      "64": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "65": {
        start: {
          line: 152,
          column: 30
        },
        end: {
          line: 152,
          column: 40
        }
      },
      "66": {
        start: {
          line: 153,
          column: 25
        },
        end: {
          line: 153,
          column: 49
        }
      },
      "67": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "68": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 76
        }
      },
      "69": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 23
        }
      },
      "70": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "71": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 86
        }
      },
      "72": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 23
        }
      },
      "73": {
        start: {
          line: 169,
          column: 37
        },
        end: {
          line: 169,
          column: 75
        }
      },
      "74": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "75": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 77
        }
      },
      "76": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 23
        }
      },
      "77": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 181,
          column: 15
        }
      },
      "78": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 94
        }
      },
      "79": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 216,
          column: 11
        }
      },
      "80": {
        start: {
          line: 189,
          column: 30
        },
        end: {
          line: 189,
          column: 40
        }
      },
      "81": {
        start: {
          line: 190,
          column: 25
        },
        end: {
          line: 190,
          column: 49
        }
      },
      "82": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "83": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 83
        }
      },
      "84": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 23
        }
      },
      "85": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 204,
          column: 13
        }
      },
      "86": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 71
        }
      },
      "87": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 23
        }
      },
      "88": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 211,
          column: 15
        }
      },
      "89": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 91
        }
      },
      "90": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "91": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "92": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 221,
          column: 92
        }
      },
      "93": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 23
        }
      },
      "94": {
        start: {
          line: 224,
          column: 25
        },
        end: {
          line: 224,
          column: 49
        }
      },
      "95": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 231,
          column: 15
        }
      },
      "96": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 104
        }
      },
      "97": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 241,
          column: 11
        }
      },
      "98": {
        start: {
          line: 236,
          column: 25
        },
        end: {
          line: 236,
          column: 49
        }
      },
      "99": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 240,
          column: 15
        }
      },
      "100": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 250,
          column: 11
        }
      },
      "101": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 80
        }
      },
      "102": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 47
        }
      },
      "103": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 254,
          column: 11
        }
      },
      "104": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 73
        }
      },
      "105": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 259,
          column: 7
        }
      },
      "106": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 57
        }
      },
      "107": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 260,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "createRealtime",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 23
          }
        },
        loc: {
          start: {
            line: 26,
            column: 36
          },
          end: {
            line: 261,
            column: 1
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 18
          }
        },
        loc: {
          start: {
            line: 40,
            column: 35
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 27
          },
          end: {
            line: 58,
            column: 28
          }
        },
        loc: {
          start: {
            line: 58,
            column: 45
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 58
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        loc: {
          start: {
            line: 76,
            column: 30
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 76
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 90,
            column: 25
          },
          end: {
            line: 90,
            column: 26
          }
        },
        loc: {
          start: {
            line: 90,
            column: 37
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 90
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 97,
            column: 27
          }
        },
        loc: {
          start: {
            line: 97,
            column: 53
          },
          end: {
            line: 124,
            column: 9
          }
        },
        line: 97
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 28
          }
        },
        loc: {
          start: {
            line: 125,
            column: 48
          },
          end: {
            line: 149,
            column: 9
          }
        },
        line: 125
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 151,
            column: 31
          },
          end: {
            line: 151,
            column: 32
          }
        },
        loc: {
          start: {
            line: 151,
            column: 61
          },
          end: {
            line: 186,
            column: 9
          }
        },
        line: 151
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 188,
            column: 35
          },
          end: {
            line: 188,
            column: 36
          }
        },
        loc: {
          start: {
            line: 188,
            column: 69
          },
          end: {
            line: 216,
            column: 9
          }
        },
        line: 188
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 218,
            column: 34
          },
          end: {
            line: 218,
            column: 35
          }
        },
        loc: {
          start: {
            line: 218,
            column: 71
          },
          end: {
            line: 233,
            column: 9
          }
        },
        line: 218
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 235,
            column: 31
          },
          end: {
            line: 235,
            column: 32
          }
        },
        loc: {
          start: {
            line: 235,
            column: 52
          },
          end: {
            line: 241,
            column: 9
          }
        },
        line: 235
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 243,
            column: 32
          },
          end: {
            line: 243,
            column: 33
          }
        },
        loc: {
          start: {
            line: 243,
            column: 38
          },
          end: {
            line: 250,
            column: 9
          }
        },
        line: 243
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 252,
            column: 27
          },
          end: {
            line: 252,
            column: 28
          }
        },
        loc: {
          start: {
            line: 252,
            column: 38
          },
          end: {
            line: 254,
            column: 9
          }
        },
        line: 252
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 257,
            column: 31
          },
          end: {
            line: 257,
            column: 32
          }
        },
        loc: {
          start: {
            line: 257,
            column: 40
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 257
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 30,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 30,
            column: 54
          }
        }, {
          start: {
            line: 30,
            column: 58
          },
          end: {
            line: 30,
            column: 63
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 42,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 42,
            column: 55
          }
        }, {
          start: {
            line: 42,
            column: 59
          },
          end: {
            line: 42,
            column: 121
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 44,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 44,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 27
          },
          end: {
            line: 60,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 27
          },
          end: {
            line: 60,
            column: 53
          }
        }, {
          start: {
            line: 60,
            column: 57
          },
          end: {
            line: 60,
            column: 98
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 44
          },
          end: {
            line: 67,
            column: 46
          }
        }, {
          start: {
            line: 67,
            column: 49
          },
          end: {
            line: 67,
            column: 51
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "10": {
        loc: {
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 55
          }
        }, {
          start: {
            line: 78,
            column: 59
          },
          end: {
            line: 78,
            column: 121
          }
        }],
        line: 78
      },
      "11": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 80,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 80,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "12": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "13": {
        loc: {
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 157,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 157,
            column: 24
          }
        }, {
          start: {
            line: 157,
            column: 28
          },
          end: {
            line: 157,
            column: 48
          }
        }],
        line: 157
      },
      "14": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "15": {
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "16": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "17": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 204,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 204,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "18": {
        loc: {
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 200,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 200,
            column: 23
          }
        }, {
          start: {
            line: 200,
            column: 27
          },
          end: {
            line: 200,
            column: 35
          }
        }, {
          start: {
            line: 200,
            column: 39
          },
          end: {
            line: 200,
            column: 48
          }
        }],
        line: 200
      },
      "19": {
        loc: {
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "20": {
        loc: {
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 220,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 220,
            column: 34
          }
        }, {
          start: {
            line: 220,
            column: 38
          },
          end: {
            line: 220,
            column: 59
          }
        }],
        line: 220
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2906400f90d0670e6208d421e9953c3026146223"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b12l835bl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b12l835bl();
var __importDefault =
/* istanbul ignore next */
(cov_b12l835bl().s[0]++,
/* istanbul ignore next */
(cov_b12l835bl().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_b12l835bl().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_b12l835bl().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_b12l835bl().f[0]++;
  cov_b12l835bl().s[1]++;
  return /* istanbul ignore next */(cov_b12l835bl().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_b12l835bl().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_b12l835bl().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_b12l835bl().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_b12l835bl().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_b12l835bl().s[3]++;
exports.createRealtime = createRealtime;
const socket_io_1 =
/* istanbul ignore next */
(cov_b12l835bl().s[4]++, require("socket.io"));
const jsonwebtoken_1 =
/* istanbul ignore next */
(cov_b12l835bl().s[5]++, __importDefault(require("jsonwebtoken")));
const logger_1 =
/* istanbul ignore next */
(cov_b12l835bl().s[6]++, require("@/config/logger"));
// import { setupGameMatchmaking } from "./game-matchmaking"; // TEMPORARILY DISABLED - not implemented
// import { setupGameRooms } from "./game-rooms"; // TEMPORARILY DISABLED - not implemented
// Metrics temporarily disabled
// import { 
//   recordConnection, 
//   recordDisconnection, 
//   recordMessage, 
//   recordMessageDuration, 
//   recordPresenceDelta, 
//   recordRateLimitHit, 
//   recordError,
//   updateRoomMetrics
// } from "./metrics";
const logger =
/* istanbul ignore next */
(cov_b12l835bl().s[7]++, (0, logger_1.setupLogger)());
// Rate limiting storage (in production, use Redis)
const rateLimitStore =
/* istanbul ignore next */
(cov_b12l835bl().s[8]++, new Map());
function createRealtime(httpServer) {
  /* istanbul ignore next */
  cov_b12l835bl().f[1]++;
  const io =
  /* istanbul ignore next */
  (cov_b12l835bl().s[9]++, new socket_io_1.Server(httpServer, {
    path: "/ws",
    cors: {
      origin:
      /* istanbul ignore next */
      (cov_b12l835bl().b[3][0]++, process.env.CORS_ALLOW?.split(",")) ??
      /* istanbul ignore next */
      (cov_b12l835bl().b[3][1]++, ["*"]),
      credentials: true
    },
    transports: ["websocket", "polling"]
  }));
  // Setup /live namespace for streaming
  const nsp =
  /* istanbul ignore next */
  (cov_b12l835bl().s[10]++, io.of("/live"));
  // Setup /games namespace for multiplayer games
  const gamesNsp =
  /* istanbul ignore next */
  (cov_b12l835bl().s[11]++, io.of("/games"));
  // Add JWT authentication middleware for games namespace
  /* istanbul ignore next */
  cov_b12l835bl().s[12]++;
  gamesNsp.use((socket, next) => {
    /* istanbul ignore next */
    cov_b12l835bl().f[2]++;
    cov_b12l835bl().s[13]++;
    try {
      const token =
      /* istanbul ignore next */
      (cov_b12l835bl().s[14]++,
      /* istanbul ignore next */
      (cov_b12l835bl().b[4][0]++, socket.handshake.auth?.token) ||
      /* istanbul ignore next */
      (cov_b12l835bl().b[4][1]++, socket.handshake.headers.authorization?.replace("Bearer ", "")));
      /* istanbul ignore next */
      cov_b12l835bl().s[15]++;
      if (!token) {
        /* istanbul ignore next */
        cov_b12l835bl().b[5][0]++;
        cov_b12l835bl().s[16]++;
        return next(new Error("unauthorized"));
      } else
      /* istanbul ignore next */
      {
        cov_b12l835bl().b[5][1]++;
      }
      const payload =
      /* istanbul ignore next */
      (cov_b12l835bl().s[17]++, jsonwebtoken_1.default.verify(token, process.env.JWT_SECRET));
      /* istanbul ignore next */
      cov_b12l835bl().s[18]++;
      socket.data.user = payload;
      /* istanbul ignore next */
      cov_b12l835bl().s[19]++;
      return next();
    } catch (e) {
      /* istanbul ignore next */
      cov_b12l835bl().s[20]++;
      logger.error('Socket authentication error:', e);
      /* istanbul ignore next */
      cov_b12l835bl().s[21]++;
      return next(new Error("unauthorized"));
    }
  });
  // Initialize game matchmaking and room handlers - TEMPORARILY DISABLED
  // setupGameMatchmaking(io);
  // setupGameRooms(io);
  // Rate limiting helper
  /* istanbul ignore next */
  cov_b12l835bl().s[22]++;
  const checkRateLimit = (userId, type) => {
    /* istanbul ignore next */
    cov_b12l835bl().f[3]++;
    const now =
    /* istanbul ignore next */
    (cov_b12l835bl().s[23]++, Date.now());
    const userLimits =
    /* istanbul ignore next */
    (cov_b12l835bl().s[24]++,
    /* istanbul ignore next */
    (cov_b12l835bl().b[6][0]++, rateLimitStore.get(userId)) ||
    /* istanbul ignore next */
    (cov_b12l835bl().b[6][1]++, {
      messages: 0,
      gifts: 0,
      lastReset: now
    }));
    // Reset counters every minute
    /* istanbul ignore next */
    cov_b12l835bl().s[25]++;
    if (now - userLimits.lastReset > 60000) {
      /* istanbul ignore next */
      cov_b12l835bl().b[7][0]++;
      cov_b12l835bl().s[26]++;
      userLimits.messages = 0;
      /* istanbul ignore next */
      cov_b12l835bl().s[27]++;
      userLimits.gifts = 0;
      /* istanbul ignore next */
      cov_b12l835bl().s[28]++;
      userLimits.lastReset = now;
    } else
    /* istanbul ignore next */
    {
      cov_b12l835bl().b[7][1]++;
    }
    const limit =
    /* istanbul ignore next */
    (cov_b12l835bl().s[29]++, type === 'messages' ?
    /* istanbul ignore next */
    (cov_b12l835bl().b[8][0]++, 30) :
    /* istanbul ignore next */
    (cov_b12l835bl().b[8][1]++, 30)); // 30 per minute
    /* istanbul ignore next */
    cov_b12l835bl().s[30]++;
    if (userLimits[type] >= limit) {
      /* istanbul ignore next */
      cov_b12l835bl().b[9][0]++;
      cov_b12l835bl().s[31]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_b12l835bl().b[9][1]++;
    }
    cov_b12l835bl().s[32]++;
    userLimits[type]++;
    /* istanbul ignore next */
    cov_b12l835bl().s[33]++;
    rateLimitStore.set(userId, userLimits);
    /* istanbul ignore next */
    cov_b12l835bl().s[34]++;
    return true;
  };
  // handshake auth (JWT in query or header)
  /* istanbul ignore next */
  cov_b12l835bl().s[35]++;
  nsp.use((socket, next) => {
    /* istanbul ignore next */
    cov_b12l835bl().f[4]++;
    cov_b12l835bl().s[36]++;
    try {
      const token =
      /* istanbul ignore next */
      (cov_b12l835bl().s[37]++,
      /* istanbul ignore next */
      (cov_b12l835bl().b[10][0]++, socket.handshake.auth?.token) ||
      /* istanbul ignore next */
      (cov_b12l835bl().b[10][1]++, socket.handshake.headers.authorization?.replace("Bearer ", "")));
      /* istanbul ignore next */
      cov_b12l835bl().s[38]++;
      if (!token) {
        /* istanbul ignore next */
        cov_b12l835bl().b[11][0]++;
        cov_b12l835bl().s[39]++;
        return next(new Error("unauthorized"));
      } else
      /* istanbul ignore next */
      {
        cov_b12l835bl().b[11][1]++;
      }
      const payload =
      /* istanbul ignore next */
      (cov_b12l835bl().s[40]++, jsonwebtoken_1.default.verify(token, process.env.JWT_SECRET));
      /* istanbul ignore next */
      cov_b12l835bl().s[41]++;
      socket.data.user = payload;
      /* istanbul ignore next */
      cov_b12l835bl().s[42]++;
      return next();
    } catch (e) {
      /* istanbul ignore next */
      cov_b12l835bl().s[43]++;
      logger.error('Socket authentication error:', e);
      /* istanbul ignore next */
      cov_b12l835bl().s[44]++;
      return next(new Error("unauthorized"));
    }
  });
  /* istanbul ignore next */
  cov_b12l835bl().s[45]++;
  nsp.on("connection", socket => {
    /* istanbul ignore next */
    cov_b12l835bl().f[5]++;
    const user =
    /* istanbul ignore next */
    (cov_b12l835bl().s[46]++, socket.data.user);
    /* istanbul ignore next */
    cov_b12l835bl().s[47]++;
    logger.info(`User ${user.userId} connected to live namespace`);
    // Record connection metrics
    // recordConnection("/live", "success");
    // Initialize rate limiting for user
    /* istanbul ignore next */
    cov_b12l835bl().s[48]++;
    rateLimitStore.set(user.userId, {
      messages: 0,
      gifts: 0,
      lastReset: Date.now()
    });
    /* istanbul ignore next */
    cov_b12l835bl().s[49]++;
    socket.on("join", ({
      channelName,
      role
    }) => {
      /* istanbul ignore next */
      cov_b12l835bl().f[6]++;
      const startTime =
      /* istanbul ignore next */
      (cov_b12l835bl().s[50]++, Date.now());
      const room =
      /* istanbul ignore next */
      (cov_b12l835bl().s[51]++, `channel:${channelName}`);
      /* istanbul ignore next */
      cov_b12l835bl().s[52]++;
      socket.join(room);
      // Record metrics
      // recordMessage("/live", "join", "in");
      // recordPresenceDelta("/live", channelName, +1);
      // Emit presence update
      /* istanbul ignore next */
      cov_b12l835bl().s[53]++;
      nsp.to(room).emit("presence:update", {
        channelName,
        delta: +1,
        userId: user.userId,
        timestamp: Date.now()
      });
      // Emit system event
      /* istanbul ignore next */
      cov_b12l835bl().s[54]++;
      nsp.to(room).emit("system:event", {
        type: "join",
        userId: user.userId,
        username: user.username,
        role,
        timestamp: Date.now()
      });
      // Optional metrics ping
      /* istanbul ignore next */
      cov_b12l835bl().s[55]++;
      nsp.to(room).emit("metrics:ping");
      // Record message duration
      // recordMessageDuration("/live", "join", (Date.now() - startTime) / 1000);
      /* istanbul ignore next */
      cov_b12l835bl().s[56]++;
      logger.info(`User ${user.userId} joined channel ${channelName} as ${role}`);
    });
    /* istanbul ignore next */
    cov_b12l835bl().s[57]++;
    socket.on("leave", ({
      channelName
    }) => {
      /* istanbul ignore next */
      cov_b12l835bl().f[7]++;
      const startTime =
      /* istanbul ignore next */
      (cov_b12l835bl().s[58]++, Date.now());
      const room =
      /* istanbul ignore next */
      (cov_b12l835bl().s[59]++, `channel:${channelName}`);
      /* istanbul ignore next */
      cov_b12l835bl().s[60]++;
      socket.leave(room);
      // Record metrics
      // recordMessage("/live", "leave", "in");
      // recordPresenceDelta("/live", channelName, -1);
      // Emit presence update
      /* istanbul ignore next */
      cov_b12l835bl().s[61]++;
      nsp.to(room).emit("presence:update", {
        channelName,
        delta: -1,
        userId: user.userId,
        timestamp: Date.now()
      });
      // Emit system event
      /* istanbul ignore next */
      cov_b12l835bl().s[62]++;
      nsp.to(room).emit("system:event", {
        type: "leave",
        userId: user.userId,
        username: user.username,
        timestamp: Date.now()
      });
      // Record message duration
      // recordMessageDuration("/live", "leave", (Date.now() - startTime) / 1000);
      /* istanbul ignore next */
      cov_b12l835bl().s[63]++;
      logger.info(`User ${user.userId} left channel ${channelName}`);
    });
    // chat (rate limited client-side; server also guards)
    /* istanbul ignore next */
    cov_b12l835bl().s[64]++;
    socket.on("chat:send", ({
      channelName,
      message
    }) => {
      /* istanbul ignore next */
      cov_b12l835bl().f[8]++;
      const startTime =
      /* istanbul ignore next */
      (cov_b12l835bl().s[65]++, Date.now());
      const room =
      /* istanbul ignore next */
      (cov_b12l835bl().s[66]++, `channel:${channelName}`);
      // Record metrics
      // recordMessage("/live", "chat", "in");
      // Validate message
      /* istanbul ignore next */
      cov_b12l835bl().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_b12l835bl().b[13][0]++, !message) ||
      /* istanbul ignore next */
      (cov_b12l835bl().b[13][1]++, message.length > 500)) {
        /* istanbul ignore next */
        cov_b12l835bl().b[12][0]++;
        cov_b12l835bl().s[68]++;
        // recordError("/live", "invalid_message_length");
        socket.emit("error", {
          message: "Invalid message length"
        });
        /* istanbul ignore next */
        cov_b12l835bl().s[69]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_b12l835bl().b[12][1]++;
      }
      // Check rate limit
      cov_b12l835bl().s[70]++;
      if (!checkRateLimit(user.userId, 'messages')) {
        /* istanbul ignore next */
        cov_b12l835bl().b[14][0]++;
        cov_b12l835bl().s[71]++;
        // recordRateLimitHit("/live", "messages", user.userId);
        socket.emit("error", {
          message: "Rate limit exceeded for messages"
        });
        /* istanbul ignore next */
        cov_b12l835bl().s[72]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_b12l835bl().b[14][1]++;
      }
      // Strip HTML and sanitize
      const sanitizedMessage =
      /* istanbul ignore next */
      (cov_b12l835bl().s[73]++, message.replace(/<[^>]*>/g, '').trim());
      /* istanbul ignore next */
      cov_b12l835bl().s[74]++;
      if (!sanitizedMessage) {
        /* istanbul ignore next */
        cov_b12l835bl().b[15][0]++;
        cov_b12l835bl().s[75]++;
        // recordError("/live", "empty_message");
        socket.emit("error", {
          message: "Message cannot be empty"
        });
        /* istanbul ignore next */
        cov_b12l835bl().s[76]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_b12l835bl().b[15][1]++;
      }
      // Broadcast to room
      cov_b12l835bl().s[77]++;
      nsp.to(room).emit("chat:new", {
        userId: user.userId,
        username: user.username,
        message: sanitizedMessage,
        timestamp: Date.now()
      });
      // Record outgoing message
      // recordMessage("/live", "chat", "out");
      // recordMessageDuration("/live", "chat", (Date.now() - startTime) / 1000);
      /* istanbul ignore next */
      cov_b12l835bl().s[78]++;
      logger.info(`Chat message sent in channel ${channelName} by user ${user.userId}`);
    });
    // gift events coming from API (server) should re-broadcast; this listener allows host tools
    /* istanbul ignore next */
    cov_b12l835bl().s[79]++;
    socket.on("gift:announce", ({
      channelName,
      giftId,
      qty
    }) => {
      /* istanbul ignore next */
      cov_b12l835bl().f[9]++;
      const startTime =
      /* istanbul ignore next */
      (cov_b12l835bl().s[80]++, Date.now());
      const room =
      /* istanbul ignore next */
      (cov_b12l835bl().s[81]++, `channel:${channelName}`);
      // Record metrics
      // recordMessage("/live", "gift", "in");
      // Check rate limit
      /* istanbul ignore next */
      cov_b12l835bl().s[82]++;
      if (!checkRateLimit(user.userId, 'gifts')) {
        /* istanbul ignore next */
        cov_b12l835bl().b[16][0]++;
        cov_b12l835bl().s[83]++;
        // recordRateLimitHit("/live", "gifts", user.userId);
        socket.emit("error", {
          message: "Rate limit exceeded for gifts"
        });
        /* istanbul ignore next */
        cov_b12l835bl().s[84]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_b12l835bl().b[16][1]++;
      }
      // Validate gift data
      cov_b12l835bl().s[85]++;
      if (
      /* istanbul ignore next */
      (cov_b12l835bl().b[18][0]++, !giftId) ||
      /* istanbul ignore next */
      (cov_b12l835bl().b[18][1]++, qty <= 0) ||
      /* istanbul ignore next */
      (cov_b12l835bl().b[18][2]++, qty > 100)) {
        /* istanbul ignore next */
        cov_b12l835bl().b[17][0]++;
        cov_b12l835bl().s[86]++;
        // recordError("/live", "invalid_gift_data");
        socket.emit("error", {
          message: "Invalid gift data"
        });
        /* istanbul ignore next */
        cov_b12l835bl().s[87]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_b12l835bl().b[17][1]++;
      }
      cov_b12l835bl().s[88]++;
      nsp.to(room).emit("gift:new", {
        from: user.userId,
        fromUsername: user.username,
        giftId,
        qty,
        timestamp: Date.now()
      });
      // Record outgoing message
      // recordMessage("/live", "gift", "out");
      // recordMessageDuration("/live", "gift", (Date.now() - startTime) / 1000);
      /* istanbul ignore next */
      cov_b12l835bl().s[89]++;
      logger.info(`Gift announced in channel ${channelName} by user ${user.userId}`);
    });
    // moderation pings (admin/AI only)
    /* istanbul ignore next */
    cov_b12l835bl().s[90]++;
    socket.on("mod:decision", ({
      channelName,
      action,
      reason
    }) => {
      /* istanbul ignore next */
      cov_b12l835bl().f[10]++;
      cov_b12l835bl().s[91]++;
      // Check if user has moderation privileges
      if (
      /* istanbul ignore next */
      (cov_b12l835bl().b[20][0]++, user.ogLevel !== 5) &&
      /* istanbul ignore next */
      (cov_b12l835bl().b[20][1]++, user.role !== "admin")) {
        /* istanbul ignore next */
        cov_b12l835bl().b[19][0]++;
        cov_b12l835bl().s[92]++;
        socket.emit("error", {
          message: "Insufficient privileges for moderation"
        });
        /* istanbul ignore next */
        cov_b12l835bl().s[93]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_b12l835bl().b[19][1]++;
      }
      const room =
      /* istanbul ignore next */
      (cov_b12l835bl().s[94]++, `channel:${channelName}`);
      /* istanbul ignore next */
      cov_b12l835bl().s[95]++;
      nsp.to(room).emit("mod:event", {
        action,
        by: user.userId,
        byUsername: user.username,
        reason,
        timestamp: Date.now()
      });
      /* istanbul ignore next */
      cov_b12l835bl().s[96]++;
      logger.info(`Moderation action ${action} in channel ${channelName} by user ${user.userId}`);
    });
    // heartbeat
    /* istanbul ignore next */
    cov_b12l835bl().s[97]++;
    socket.on("heartbeat", ({
      channelName
    }) => {
      /* istanbul ignore next */
      cov_b12l835bl().f[11]++;
      const room =
      /* istanbul ignore next */
      (cov_b12l835bl().s[98]++, `channel:${channelName}`);
      /* istanbul ignore next */
      cov_b12l835bl().s[99]++;
      nsp.to(room).emit("heartbeat:ack", {
        timestamp: Date.now(),
        userId: user.userId
      });
    });
    // Disconnect handling
    /* istanbul ignore next */
    cov_b12l835bl().s[100]++;
    socket.on("disconnect", () => {
      /* istanbul ignore next */
      cov_b12l835bl().f[12]++;
      cov_b12l835bl().s[101]++;
      logger.info(`User ${user.userId} disconnected from live namespace`);
      // Record disconnection metrics
      // recordDisconnection("/live", "client_disconnect");
      // Clean up rate limiting data
      /* istanbul ignore next */
      cov_b12l835bl().s[102]++;
      rateLimitStore.delete(user.userId);
      // Note: presence updates are handled by client leave events or timeout
    });
    // Error handling
    /* istanbul ignore next */
    cov_b12l835bl().s[103]++;
    socket.on("error", error => {
      /* istanbul ignore next */
      cov_b12l835bl().f[13]++;
      cov_b12l835bl().s[104]++;
      logger.error(`Socket error for user ${user.userId}:`, error);
    });
  });
  // Global error handling
  /* istanbul ignore next */
  cov_b12l835bl().s[105]++;
  nsp.on('connection_error', err => {
    /* istanbul ignore next */
    cov_b12l835bl().f[14]++;
    cov_b12l835bl().s[106]++;
    logger.error('Socket.IO connection error:', err);
  });
  /* istanbul ignore next */
  cov_b12l835bl().s[107]++;
  return io;
}