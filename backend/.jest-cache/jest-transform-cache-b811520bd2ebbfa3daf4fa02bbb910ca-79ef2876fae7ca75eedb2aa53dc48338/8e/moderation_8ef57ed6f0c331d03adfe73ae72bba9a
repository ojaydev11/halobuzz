bfac17427c819a8f4279bc6fe17ef597
"use strict";

/* istanbul ignore next */
function cov_2qkzhm9uyo() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\admin\\moderation.ts";
  var hash = "b27e8bb9c679e31186aedf04217876d28d3f88c3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\admin\\moderation.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 25
        },
        end: {
          line: 4,
          column: 63
        }
      },
      "3": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 51
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 47
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 47
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "7": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 51,
          column: 3
        }
      },
      "8": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "9": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "10": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "11": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 39
        }
      },
      "12": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "13": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "14": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 21,
          column: 24
        }
      },
      "15": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "16": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "17": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "18": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "19": {
        start: {
          line: 26,
          column: 31
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "20": {
        start: {
          line: 36,
          column: 22
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "21": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      },
      "22": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "23": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "24": {
        start: {
          line: 57,
          column: 0
        },
        end: {
          line: 97,
          column: 3
        }
      },
      "25": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "26": {
        start: {
          line: 59,
          column: 35
        },
        end: {
          line: 59,
          column: 43
        }
      },
      "27": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "28": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 85
        }
      },
      "29": {
        start: {
          line: 63,
          column: 21
        },
        end: {
          line: 63,
          column: 82
        }
      },
      "30": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "31": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 69
        }
      },
      "32": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "33": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 74
        }
      },
      "34": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 33
        }
      },
      "35": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 42
        }
      },
      "36": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 37
        }
      },
      "37": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 49
        }
      },
      "38": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 26
        }
      },
      "39": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "40": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "41": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 58
        }
      },
      "42": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 11
        }
      },
      "43": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 98,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 83
          },
          end: {
            line: 14,
            column: 84
          }
        },
        loc: {
          start: {
            line: 14,
            column: 103
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 57,
            column: 97
          },
          end: {
            line: 57,
            column: 98
          }
        },
        loc: {
          start: {
            line: 57,
            column: 117
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 45
          }
        }, {
          start: {
            line: 16,
            column: 49
          },
          end: {
            line: 16,
            column: 50
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 22
          },
          end: {
            line: 17,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 22
          },
          end: {
            line: 17,
            column: 47
          }
        }, {
          start: {
            line: 17,
            column: 51
          },
          end: {
            line: 17,
            column: 53
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 25,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 25,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 48,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 46
          },
          end: {
            line: 48,
            column: 59
          }
        }, {
          start: {
            line: 48,
            column: 62
          },
          end: {
            line: 48,
            column: 77
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 19
          }
        }, {
          start: {
            line: 60,
            column: 23
          },
          end: {
            line: 60,
            column: 30
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 94,
            column: 21
          },
          end: {
            line: 94,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 46
          },
          end: {
            line: 94,
            column: 59
          }
        }, {
          start: {
            line: 94,
            column: 62
          },
          end: {
            line: 94,
            column: 77
          }
        }],
        line: 94
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b27e8bb9c679e31186aedf04217876d28d3f88c3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qkzhm9uyo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qkzhm9uyo();
cov_2qkzhm9uyo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2qkzhm9uyo().s[1]++, require("express"));
const ModerationFlag_1 =
/* istanbul ignore next */
(cov_2qkzhm9uyo().s[2]++, require("../../models/ModerationFlag"));
const AuditLog_1 =
/* istanbul ignore next */
(cov_2qkzhm9uyo().s[3]++, require("../../models/AuditLog"));
const auth_1 =
/* istanbul ignore next */
(cov_2qkzhm9uyo().s[4]++, require("../../middleware/auth"));
const rbac_1 =
/* istanbul ignore next */
(cov_2qkzhm9uyo().s[5]++, require("../../middleware/rbac"));
const router =
/* istanbul ignore next */
(cov_2qkzhm9uyo().s[6]++, (0, express_1.Router)());
/**
 * GET /api/v1/admin/moderation/flags
 * Get paginated moderation flags
 * Requires: admin:read scope
 */
/* istanbul ignore next */
cov_2qkzhm9uyo().s[7]++;
router.get('/flags', auth_1.requireAuth, (0, rbac_1.requireScope)(['admin:read']), async (req, res) => {
  /* istanbul ignore next */
  cov_2qkzhm9uyo().f[0]++;
  cov_2qkzhm9uyo().s[8]++;
  try {
    const page =
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().s[9]++,
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().b[0][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().b[0][1]++, 1));
    const limit =
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().s[10]++,
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().b[1][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().b[1][1]++, 20));
    const status =
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().s[11]++, req.query.status);
    const type =
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().s[12]++, req.query.type);
    const skip =
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().s[13]++, (page - 1) * limit);
    const query =
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().s[14]++, {});
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[15]++;
    if (status) {
      /* istanbul ignore next */
      cov_2qkzhm9uyo().b[2][0]++;
      cov_2qkzhm9uyo().s[16]++;
      query.status = status;
    } else
    /* istanbul ignore next */
    {
      cov_2qkzhm9uyo().b[2][1]++;
    }
    cov_2qkzhm9uyo().s[17]++;
    if (type) {
      /* istanbul ignore next */
      cov_2qkzhm9uyo().b[3][0]++;
      cov_2qkzhm9uyo().s[18]++;
      query.type = type;
    } else
    /* istanbul ignore next */
    {
      cov_2qkzhm9uyo().b[3][1]++;
    }
    const [flags, total] =
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().s[19]++, await Promise.all([ModerationFlag_1.ModerationFlag.find(query).populate('reporter', 'username avatar').populate('target').sort('-createdAt').skip(skip).limit(limit).lean(), ModerationFlag_1.ModerationFlag.countDocuments(query)]));
    const pages =
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().s[20]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[21]++;
    res.json({
      data: flags,
      total,
      page,
      pages
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[22]++;
    console.error('Admin get moderation flags error:', error);
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[23]++;
    res.status(500).json({
      error: 'Failed to fetch moderation flags',
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2qkzhm9uyo().b[4][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2qkzhm9uyo().b[4][1]++, 'Unknown error')
    });
  }
});
/**
 * POST /api/v1/admin/moderation/flags/:id/resolve
 * Resolve a moderation flag
 * Requires: admin:write scope
 */
/* istanbul ignore next */
cov_2qkzhm9uyo().s[24]++;
router.post('/flags/:id/resolve', auth_1.requireAuth, (0, rbac_1.requireScope)(['admin:write']), async (req, res) => {
  /* istanbul ignore next */
  cov_2qkzhm9uyo().f[1]++;
  cov_2qkzhm9uyo().s[25]++;
  try {
    const {
      action,
      reason
    } =
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().s[26]++, req.body);
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().b[6][0]++, !action) ||
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().b[6][1]++, !reason)) {
      /* istanbul ignore next */
      cov_2qkzhm9uyo().b[5][0]++;
      cov_2qkzhm9uyo().s[28]++;
      return res.status(400).json({
        error: 'Action and reason are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2qkzhm9uyo().b[5][1]++;
    }
    const flag =
    /* istanbul ignore next */
    (cov_2qkzhm9uyo().s[29]++, await ModerationFlag_1.ModerationFlag.findById(req.params.id));
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[30]++;
    if (!flag) {
      /* istanbul ignore next */
      cov_2qkzhm9uyo().b[7][0]++;
      cov_2qkzhm9uyo().s[31]++;
      return res.status(404).json({
        error: 'Flag not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2qkzhm9uyo().b[7][1]++;
    }
    cov_2qkzhm9uyo().s[32]++;
    if (flag.status !== 'pending') {
      /* istanbul ignore next */
      cov_2qkzhm9uyo().b[8][0]++;
      cov_2qkzhm9uyo().s[33]++;
      return res.status(400).json({
        error: 'Flag is not pending'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2qkzhm9uyo().b[8][1]++;
    }
    cov_2qkzhm9uyo().s[34]++;
    flag.status = 'resolved';
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[35]++;
    flag.reviewedBy = req.user.userId;
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[36]++;
    flag.reviewedAt = new Date();
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[37]++;
    flag.resolution = `${action}: ${reason}`;
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[38]++;
    await flag.save();
    // Log action
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[39]++;
    await AuditLog_1.AuditLog.create({
      admin: req.user.userId,
      action: 'moderation.resolve',
      resource: 'flag',
      resourceId: flag._id,
      details: {
        action,
        reason,
        flagType: flag.contentType
      },
      ip: req.ip,
      userAgent: req.get('user-agent')
    });
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[40]++;
    res.json({
      message: 'Flag resolved successfully',
      flag
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[41]++;
    console.error('Admin resolve flag error:', error);
    /* istanbul ignore next */
    cov_2qkzhm9uyo().s[42]++;
    res.status(500).json({
      error: 'Failed to resolve flag',
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2qkzhm9uyo().b[9][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2qkzhm9uyo().b[9][1]++, 'Unknown error')
    });
  }
});
/* istanbul ignore next */
cov_2qkzhm9uyo().s[43]++;
exports.default = router;