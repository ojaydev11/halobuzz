87b805414011a4f3928de048d0c645e3
"use strict";

/* istanbul ignore next */
function cov_20cso3vjpj() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\admin.ts";
  var hash = "a249e419c59c047c766993e76bbc05d8453729bd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\admin.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "6": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 9,
          column: 47
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "8": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 11,
          column: 53
        }
      },
      "9": {
        start: {
          line: 12,
          column: 25
        },
        end: {
          line: 12,
          column: 59
        }
      },
      "10": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 43
        }
      },
      "11": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "12": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 67
        }
      },
      "13": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "14": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "15": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 18,
          column: 57
        }
      },
      "16": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "17": {
        start: {
          line: 20,
          column: 24
        },
        end: {
          line: 20,
          column: 59
        }
      },
      "18": {
        start: {
          line: 21,
          column: 32
        },
        end: {
          line: 21,
          column: 75
        }
      },
      "19": {
        start: {
          line: 22,
          column: 32
        },
        end: {
          line: 22,
          column: 75
        }
      },
      "20": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 71
        }
      },
      "21": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 67
        }
      },
      "22": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "23": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 65
        }
      },
      "24": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 57
        }
      },
      "25": {
        start: {
          line: 29,
          column: 18
        },
        end: {
          line: 29,
          column: 61
        }
      },
      "26": {
        start: {
          line: 30,
          column: 15
        },
        end: {
          line: 30,
          column: 55
        }
      },
      "27": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 57
        }
      },
      "28": {
        start: {
          line: 32,
          column: 21
        },
        end: {
          line: 32,
          column: 67
        }
      },
      "29": {
        start: {
          line: 33,
          column: 15
        },
        end: {
          line: 33,
          column: 42
        }
      },
      "30": {
        start: {
          line: 34,
          column: 15
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "31": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 36
        }
      },
      "32": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 46
        }
      },
      "33": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 38
        }
      },
      "34": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 42
        }
      },
      "35": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 36
        }
      },
      "36": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 37
        }
      },
      "37": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 44
        }
      },
      "38": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "39": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 48
        }
      },
      "40": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 38
        }
      },
      "41": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 57,
          column: 3
        }
      },
      "42": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 52,
          column: 72
        }
      },
      "43": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 56,
          column: 7
        }
      },
      "44": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 91,
          column: 3
        }
      },
      "45": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "46": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 39
        }
      },
      "47": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "48": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 94
        }
      },
      "49": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 55
        }
      },
      "50": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "51": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 85
        }
      },
      "52": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "53": {
        start: {
          line: 75,
          column: 26
        },
        end: {
          line: 75,
          column: 78
        }
      },
      "54": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 79
        }
      },
      "55": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "56": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 48
        }
      },
      "57": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 79
        }
      },
      "58": {
        start: {
          line: 93,
          column: 0
        },
        end: {
          line: 135,
          column: 3
        }
      },
      "59": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "60": {
        start: {
          line: 98,
          column: 23
        },
        end: {
          line: 98,
          column: 69
        }
      },
      "61": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "62": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 84
        }
      },
      "63": {
        start: {
          line: 102,
          column: 23
        },
        end: {
          line: 102,
          column: 39
        }
      },
      "64": {
        start: {
          line: 103,
          column: 26
        },
        end: {
          line: 103,
          column: 34
        }
      },
      "65": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "66": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 94
        }
      },
      "67": {
        start: {
          line: 108,
          column: 27
        },
        end: {
          line: 108,
          column: 77
        }
      },
      "68": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "69": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 96
        }
      },
      "70": {
        start: {
          line: 113,
          column: 25
        },
        end: {
          line: 118,
          column: 10
        }
      },
      "71": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "72": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 84
        }
      },
      "73": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 80
        }
      },
      "74": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 66
        }
      },
      "75": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "76": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 55
        }
      },
      "77": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 80
        }
      },
      "78": {
        start: {
          line: 137,
          column: 0
        },
        end: {
          line: 174,
          column: 3
        }
      },
      "79": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "80": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 140,
          column: 30
        }
      },
      "81": {
        start: {
          line: 141,
          column: 23
        },
        end: {
          line: 141,
          column: 68
        }
      },
      "82": {
        start: {
          line: 142,
          column: 25
        },
        end: {
          line: 142,
          column: 75
        }
      },
      "83": {
        start: {
          line: 143,
          column: 84
        },
        end: {
          line: 156,
          column: 10
        }
      },
      "84": {
        start: {
          line: 157,
          column: 26
        },
        end: {
          line: 157,
          column: 53
        }
      },
      "85": {
        start: {
          line: 158,
          column: 27
        },
        end: {
          line: 158,
          column: 55
        }
      },
      "86": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 168,
          column: 11
        }
      },
      "87": {
        start: {
          line: 165,
          column: 45
        },
        end: {
          line: 165,
          column: 120
        }
      },
      "88": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 50
        }
      },
      "89": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 80
        }
      },
      "90": {
        start: {
          line: 176,
          column: 0
        },
        end: {
          line: 185,
          column: 3
        }
      },
      "91": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "92": {
        start: {
          line: 178,
          column: 22
        },
        end: {
          line: 178,
          column: 72
        }
      },
      "93": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 49
        }
      },
      "94": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 49
        }
      },
      "95": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 80
        }
      },
      "96": {
        start: {
          line: 186,
          column: 0
        },
        end: {
          line: 227,
          column: 3
        }
      },
      "97": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "98": {
        start: {
          line: 203,
          column: 23
        },
        end: {
          line: 203,
          column: 69
        }
      },
      "99": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "100": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 84
        }
      },
      "101": {
        start: {
          line: 207,
          column: 21
        },
        end: {
          line: 220,
          column: 10
        }
      },
      "102": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 60
        }
      },
      "103": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 50
        }
      },
      "104": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 81
        }
      },
      "105": {
        start: {
          line: 228,
          column: 0
        },
        end: {
          line: 244,
          column: 3
        }
      },
      "106": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 243,
          column: 5
        }
      },
      "107": {
        start: {
          line: 230,
          column: 23
        },
        end: {
          line: 230,
          column: 38
        }
      },
      "108": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "109": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 57
        }
      },
      "110": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 45
        }
      },
      "111": {
        start: {
          line: 235,
          column: 21
        },
        end: {
          line: 235,
          column: 94
        }
      },
      "112": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 237,
          column: 85
        }
      },
      "113": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 85
        }
      },
      "114": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 48
        }
      },
      "115": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 50
        }
      },
      "116": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 81
        }
      },
      "117": {
        start: {
          line: 246,
          column: 0
        },
        end: {
          line: 255,
          column: 3
        }
      },
      "118": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 254,
          column: 5
        }
      },
      "119": {
        start: {
          line: 248,
          column: 26
        },
        end: {
          line: 248,
          column: 110
        }
      },
      "120": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 53
        }
      },
      "121": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 53
        }
      },
      "122": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 84
        }
      },
      "123": {
        start: {
          line: 256,
          column: 0
        },
        end: {
          line: 269,
          column: 3
        }
      },
      "124": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "125": {
        start: {
          line: 258,
          column: 21
        },
        end: {
          line: 258,
          column: 70
        }
      },
      "126": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 260,
          column: 89
        }
      },
      "127": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 89
        }
      },
      "128": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 39
        }
      },
      "129": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 26
        }
      },
      "130": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 48
        }
      },
      "131": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 54
        }
      },
      "132": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 85
        }
      },
      "133": {
        start: {
          line: 270,
          column: 0
        },
        end: {
          line: 282,
          column: 3
        }
      },
      "134": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 281,
          column: 5
        }
      },
      "135": {
        start: {
          line: 272,
          column: 23
        },
        end: {
          line: 272,
          column: 38
        }
      },
      "136": {
        start: {
          line: 273,
          column: 21
        },
        end: {
          line: 273,
          column: 102
        }
      },
      "137": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 275,
          column: 89
        }
      },
      "138": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 89
        }
      },
      "139": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 48
        }
      },
      "140": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 54
        }
      },
      "141": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 85
        }
      },
      "142": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 38
        }
      },
      "143": {
        start: {
          line: 285,
          column: 0
        },
        end: {
          line: 294,
          column: 3
        }
      },
      "144": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 293,
          column: 5
        }
      },
      "145": {
        start: {
          line: 287,
          column: 24
        },
        end: {
          line: 287,
          column: 64
        }
      },
      "146": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 128
        }
      },
      "147": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 50
        }
      },
      "148": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 81
        }
      },
      "149": {
        start: {
          line: 295,
          column: 0
        },
        end: {
          line: 314,
          column: 3
        }
      },
      "150": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 313,
          column: 5
        }
      },
      "151": {
        start: {
          line: 301,
          column: 23
        },
        end: {
          line: 301,
          column: 69
        }
      },
      "152": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "153": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 84
        }
      },
      "154": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 305,
          column: 72
        }
      },
      "155": {
        start: {
          line: 306,
          column: 24
        },
        end: {
          line: 306,
          column: 51
        }
      },
      "156": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 58
        }
      },
      "157": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 51
        }
      },
      "158": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 53
        }
      },
      "159": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 84
        }
      },
      "160": {
        start: {
          line: 318,
          column: 0
        },
        end: {
          line: 335,
          column: 3
        }
      },
      "161": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 334,
          column: 5
        }
      },
      "162": {
        start: {
          line: 323,
          column: 26
        },
        end: {
          line: 323,
          column: 34
        }
      },
      "163": {
        start: {
          line: 325,
          column: 21
        },
        end: {
          line: 325,
          column: 40
        }
      },
      "164": {
        start: {
          line: 326,
          column: 25
        },
        end: {
          line: 326,
          column: 40
        }
      },
      "165": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 150
        }
      },
      "166": {
        start: {
          line: 328,
          column: 28
        },
        end: {
          line: 328,
          column: 69
        }
      },
      "167": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 55
        }
      },
      "168": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 51
        }
      },
      "169": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 82
        }
      },
      "170": {
        start: {
          line: 337,
          column: 0
        },
        end: {
          line: 358,
          column: 3
        }
      },
      "171": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 357,
          column: 5
        }
      },
      "172": {
        start: {
          line: 339,
          column: 56
        },
        end: {
          line: 339,
          column: 65
        }
      },
      "173": {
        start: {
          line: 340,
          column: 23
        },
        end: {
          line: 340,
          column: 25
        }
      },
      "174": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 342,
          column: 31
        }
      },
      "175": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 31
        }
      },
      "176": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 344,
          column: 35
        }
      },
      "177": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 35
        }
      },
      "178": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 346,
          column: 43
        }
      },
      "179": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 43
        }
      },
      "180": {
        start: {
          line: 347,
          column: 19
        },
        end: {
          line: 347,
          column: 110
        }
      },
      "181": {
        start: {
          line: 348,
          column: 23
        },
        end: {
          line: 351,
          column: 10
        }
      },
      "182": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 72
        }
      },
      "183": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 56
        }
      },
      "184": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 87
        }
      },
      "185": {
        start: {
          line: 360,
          column: 0
        },
        end: {
          line: 369,
          column: 3
        }
      },
      "186": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 368,
          column: 5
        }
      },
      "187": {
        start: {
          line: 362,
          column: 35
        },
        end: {
          line: 362,
          column: 97
        }
      },
      "188": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 62
        }
      },
      "189": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 66
        }
      },
      "190": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 97
        }
      },
      "191": {
        start: {
          line: 370,
          column: 0
        },
        end: {
          line: 379,
          column: 3
        }
      },
      "192": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 378,
          column: 5
        }
      },
      "193": {
        start: {
          line: 372,
          column: 22
        },
        end: {
          line: 372,
          column: 76
        }
      },
      "194": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 49
        }
      },
      "195": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 57
        }
      },
      "196": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 88
        }
      },
      "197": {
        start: {
          line: 380,
          column: 0
        },
        end: {
          line: 404,
          column: 3
        }
      },
      "198": {
        start: {
          line: 384,
          column: 4
        },
        end: {
          line: 403,
          column: 5
        }
      },
      "199": {
        start: {
          line: 385,
          column: 23
        },
        end: {
          line: 385,
          column: 69
        }
      },
      "200": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 388,
          column: 9
        }
      },
      "201": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 84
        }
      },
      "202": {
        start: {
          line: 389,
          column: 27
        },
        end: {
          line: 389,
          column: 37
        }
      },
      "203": {
        start: {
          line: 390,
          column: 24
        },
        end: {
          line: 390,
          column: 53
        }
      },
      "204": {
        start: {
          line: 391,
          column: 27
        },
        end: {
          line: 391,
          column: 35
        }
      },
      "205": {
        start: {
          line: 392,
          column: 23
        },
        end: {
          line: 392,
          column: 86
        }
      },
      "206": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 398,
          column: 9
        }
      },
      "207": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 65
        }
      },
      "208": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 397,
          column: 76
        }
      },
      "209": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 401,
          column: 51
        }
      },
      "210": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 402,
          column: 81
        }
      },
      "211": {
        start: {
          line: 405,
          column: 0
        },
        end: {
          line: 429,
          column: 3
        }
      },
      "212": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 428,
          column: 5
        }
      },
      "213": {
        start: {
          line: 410,
          column: 23
        },
        end: {
          line: 410,
          column: 69
        }
      },
      "214": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 413,
          column: 9
        }
      },
      "215": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 84
        }
      },
      "216": {
        start: {
          line: 414,
          column: 27
        },
        end: {
          line: 414,
          column: 37
        }
      },
      "217": {
        start: {
          line: 415,
          column: 24
        },
        end: {
          line: 415,
          column: 53
        }
      },
      "218": {
        start: {
          line: 416,
          column: 27
        },
        end: {
          line: 416,
          column: 35
        }
      },
      "219": {
        start: {
          line: 417,
          column: 23
        },
        end: {
          line: 417,
          column: 93
        }
      },
      "220": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "221": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 65
        }
      },
      "222": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 76
        }
      },
      "223": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 52
        }
      },
      "224": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 427,
          column: 80
        }
      },
      "225": {
        start: {
          line: 431,
          column: 0
        },
        end: {
          line: 440,
          column: 3
        }
      },
      "226": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 439,
          column: 5
        }
      },
      "227": {
        start: {
          line: 433,
          column: 23
        },
        end: {
          line: 433,
          column: 80
        }
      },
      "228": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 434,
          column: 54
        }
      },
      "229": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 437,
          column: 56
        }
      },
      "230": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 87
        }
      },
      "231": {
        start: {
          line: 441,
          column: 0
        },
        end: {
          line: 454,
          column: 3
        }
      },
      "232": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 453,
          column: 5
        }
      },
      "233": {
        start: {
          line: 443,
          column: 27
        },
        end: {
          line: 443,
          column: 35
        }
      },
      "234": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "235": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 445,
          column: 90
        }
      },
      "236": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 447,
          column: 75
        }
      },
      "237": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 448,
          column: 83
        }
      },
      "238": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 451,
          column: 59
        }
      },
      "239": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 452,
          column: 90
        }
      },
      "240": {
        start: {
          line: 455,
          column: 0
        },
        end: {
          line: 464,
          column: 3
        }
      },
      "241": {
        start: {
          line: 456,
          column: 4
        },
        end: {
          line: 463,
          column: 5
        }
      },
      "242": {
        start: {
          line: 457,
          column: 25
        },
        end: {
          line: 457,
          column: 90
        }
      },
      "243": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 458,
          column: 56
        }
      },
      "244": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 461,
          column: 58
        }
      },
      "245": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 462,
          column: 89
        }
      },
      "246": {
        start: {
          line: 465,
          column: 0
        },
        end: {
          line: 480,
          column: 3
        }
      },
      "247": {
        start: {
          line: 466,
          column: 4
        },
        end: {
          line: 479,
          column: 5
        }
      },
      "248": {
        start: {
          line: 467,
          column: 27
        },
        end: {
          line: 467,
          column: 37
        }
      },
      "249": {
        start: {
          line: 468,
          column: 22
        },
        end: {
          line: 468,
          column: 91
        }
      },
      "250": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 474,
          column: 9
        }
      },
      "251": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 86
        }
      },
      "252": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 96
        }
      },
      "253": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 57
        }
      },
      "254": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 88
        }
      },
      "255": {
        start: {
          line: 482,
          column: 0
        },
        end: {
          line: 491,
          column: 3
        }
      },
      "256": {
        start: {
          line: 483,
          column: 4
        },
        end: {
          line: 490,
          column: 5
        }
      },
      "257": {
        start: {
          line: 484,
          column: 23
        },
        end: {
          line: 484,
          column: 80
        }
      },
      "258": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 485,
          column: 54
        }
      },
      "259": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 488,
          column: 56
        }
      },
      "260": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 489,
          column: 87
        }
      },
      "261": {
        start: {
          line: 492,
          column: 0
        },
        end: {
          line: 505,
          column: 3
        }
      },
      "262": {
        start: {
          line: 493,
          column: 4
        },
        end: {
          line: 504,
          column: 5
        }
      },
      "263": {
        start: {
          line: 494,
          column: 27
        },
        end: {
          line: 494,
          column: 35
        }
      },
      "264": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 497,
          column: 9
        }
      },
      "265": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 90
        }
      },
      "266": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 75
        }
      },
      "267": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 83
        }
      },
      "268": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 502,
          column: 59
        }
      },
      "269": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 503,
          column: 90
        }
      },
      "270": {
        start: {
          line: 506,
          column: 0
        },
        end: {
          line: 516,
          column: 3
        }
      },
      "271": {
        start: {
          line: 507,
          column: 4
        },
        end: {
          line: 515,
          column: 5
        }
      },
      "272": {
        start: {
          line: 508,
          column: 25
        },
        end: {
          line: 508,
          column: 90
        }
      },
      "273": {
        start: {
          line: 509,
          column: 30
        },
        end: {
          line: 509,
          column: 94
        }
      },
      "274": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 510,
          column: 71
        }
      },
      "275": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 513,
          column: 58
        }
      },
      "276": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 514,
          column: 89
        }
      },
      "277": {
        start: {
          line: 517,
          column: 0
        },
        end: {
          line: 532,
          column: 3
        }
      },
      "278": {
        start: {
          line: 518,
          column: 4
        },
        end: {
          line: 531,
          column: 5
        }
      },
      "279": {
        start: {
          line: 519,
          column: 27
        },
        end: {
          line: 519,
          column: 37
        }
      },
      "280": {
        start: {
          line: 520,
          column: 29
        },
        end: {
          line: 520,
          column: 98
        }
      },
      "281": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 526,
          column: 9
        }
      },
      "282": {
        start: {
          line: 522,
          column: 12
        },
        end: {
          line: 522,
          column: 93
        }
      },
      "283": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 525,
          column: 96
        }
      },
      "284": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 529,
          column: 64
        }
      },
      "285": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 530,
          column: 95
        }
      },
      "286": {
        start: {
          line: 533,
          column: 0
        },
        end: {
          line: 548,
          column: 3
        }
      },
      "287": {
        start: {
          line: 534,
          column: 4
        },
        end: {
          line: 547,
          column: 5
        }
      },
      "288": {
        start: {
          line: 535,
          column: 27
        },
        end: {
          line: 535,
          column: 37
        }
      },
      "289": {
        start: {
          line: 536,
          column: 24
        },
        end: {
          line: 536,
          column: 93
        }
      },
      "290": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 542,
          column: 9
        }
      },
      "291": {
        start: {
          line: 538,
          column: 12
        },
        end: {
          line: 538,
          column: 84
        }
      },
      "292": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 96
        }
      },
      "293": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 55
        }
      },
      "294": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 546,
          column: 86
        }
      },
      "295": {
        start: {
          line: 549,
          column: 0
        },
        end: {
          line: 559,
          column: 3
        }
      },
      "296": {
        start: {
          line: 550,
          column: 4
        },
        end: {
          line: 558,
          column: 5
        }
      },
      "297": {
        start: {
          line: 551,
          column: 27
        },
        end: {
          line: 551,
          column: 37
        }
      },
      "298": {
        start: {
          line: 552,
          column: 27
        },
        end: {
          line: 552,
          column: 106
        }
      },
      "299": {
        start: {
          line: 553,
          column: 8
        },
        end: {
          line: 553,
          column: 58
        }
      },
      "300": {
        start: {
          line: 556,
          column: 8
        },
        end: {
          line: 556,
          column: 60
        }
      },
      "301": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 557,
          column: 91
        }
      },
      "302": {
        start: {
          line: 561,
          column: 0
        },
        end: {
          line: 570,
          column: 3
        }
      },
      "303": {
        start: {
          line: 562,
          column: 4
        },
        end: {
          line: 569,
          column: 5
        }
      },
      "304": {
        start: {
          line: 563,
          column: 24
        },
        end: {
          line: 563,
          column: 84
        }
      },
      "305": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 564,
          column: 55
        }
      },
      "306": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 567,
          column: 55
        }
      },
      "307": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 568,
          column: 86
        }
      },
      "308": {
        start: {
          line: 571,
          column: 0
        },
        end: {
          line: 586,
          column: 3
        }
      },
      "309": {
        start: {
          line: 572,
          column: 4
        },
        end: {
          line: 585,
          column: 5
        }
      },
      "310": {
        start: {
          line: 573,
          column: 28
        },
        end: {
          line: 573,
          column: 38
        }
      },
      "311": {
        start: {
          line: 574,
          column: 23
        },
        end: {
          line: 574,
          column: 86
        }
      },
      "312": {
        start: {
          line: 575,
          column: 8
        },
        end: {
          line: 580,
          column: 9
        }
      },
      "313": {
        start: {
          line: 576,
          column: 12
        },
        end: {
          line: 576,
          column: 58
        }
      },
      "314": {
        start: {
          line: 579,
          column: 12
        },
        end: {
          line: 579,
          column: 91
        }
      },
      "315": {
        start: {
          line: 583,
          column: 8
        },
        end: {
          line: 583,
          column: 54
        }
      },
      "316": {
        start: {
          line: 584,
          column: 8
        },
        end: {
          line: 584,
          column: 85
        }
      },
      "317": {
        start: {
          line: 587,
          column: 0
        },
        end: {
          line: 605,
          column: 3
        }
      },
      "318": {
        start: {
          line: 588,
          column: 4
        },
        end: {
          line: 604,
          column: 5
        }
      },
      "319": {
        start: {
          line: 589,
          column: 28
        },
        end: {
          line: 589,
          column: 38
        }
      },
      "320": {
        start: {
          line: 590,
          column: 27
        },
        end: {
          line: 590,
          column: 35
        }
      },
      "321": {
        start: {
          line: 591,
          column: 8
        },
        end: {
          line: 593,
          column: 9
        }
      },
      "322": {
        start: {
          line: 592,
          column: 12
        },
        end: {
          line: 592,
          column: 90
        }
      },
      "323": {
        start: {
          line: 595,
          column: 8
        },
        end: {
          line: 597,
          column: 9
        }
      },
      "324": {
        start: {
          line: 596,
          column: 12
        },
        end: {
          line: 596,
          column: 87
        }
      },
      "325": {
        start: {
          line: 598,
          column: 8
        },
        end: {
          line: 598,
          column: 83
        }
      },
      "326": {
        start: {
          line: 599,
          column: 8
        },
        end: {
          line: 599,
          column: 92
        }
      },
      "327": {
        start: {
          line: 602,
          column: 8
        },
        end: {
          line: 602,
          column: 57
        }
      },
      "328": {
        start: {
          line: 603,
          column: 8
        },
        end: {
          line: 603,
          column: 88
        }
      },
      "329": {
        start: {
          line: 606,
          column: 0
        },
        end: {
          line: 615,
          column: 3
        }
      },
      "330": {
        start: {
          line: 607,
          column: 4
        },
        end: {
          line: 614,
          column: 5
        }
      },
      "331": {
        start: {
          line: 608,
          column: 33
        },
        end: {
          line: 608,
          column: 96
        }
      },
      "332": {
        start: {
          line: 609,
          column: 8
        },
        end: {
          line: 609,
          column: 64
        }
      },
      "333": {
        start: {
          line: 612,
          column: 8
        },
        end: {
          line: 612,
          column: 58
        }
      },
      "334": {
        start: {
          line: 613,
          column: 8
        },
        end: {
          line: 613,
          column: 89
        }
      },
      "335": {
        start: {
          line: 616,
          column: 0
        },
        end: {
          line: 627,
          column: 3
        }
      },
      "336": {
        start: {
          line: 617,
          column: 4
        },
        end: {
          line: 626,
          column: 5
        }
      },
      "337": {
        start: {
          line: 618,
          column: 28
        },
        end: {
          line: 618,
          column: 38
        }
      },
      "338": {
        start: {
          line: 619,
          column: 31
        },
        end: {
          line: 619,
          column: 40
        }
      },
      "339": {
        start: {
          line: 620,
          column: 24
        },
        end: {
          line: 620,
          column: 117
        }
      },
      "340": {
        start: {
          line: 621,
          column: 8
        },
        end: {
          line: 621,
          column: 55
        }
      },
      "341": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 624,
          column: 65
        }
      },
      "342": {
        start: {
          line: 625,
          column: 8
        },
        end: {
          line: 625,
          column: 96
        }
      },
      "343": {
        start: {
          line: 628,
          column: 0
        },
        end: {
          line: 643,
          column: 3
        }
      },
      "344": {
        start: {
          line: 629,
          column: 4
        },
        end: {
          line: 642,
          column: 5
        }
      },
      "345": {
        start: {
          line: 630,
          column: 28
        },
        end: {
          line: 630,
          column: 38
        }
      },
      "346": {
        start: {
          line: 631,
          column: 24
        },
        end: {
          line: 631,
          column: 93
        }
      },
      "347": {
        start: {
          line: 632,
          column: 8
        },
        end: {
          line: 637,
          column: 9
        }
      },
      "348": {
        start: {
          line: 633,
          column: 12
        },
        end: {
          line: 633,
          column: 82
        }
      },
      "349": {
        start: {
          line: 636,
          column: 12
        },
        end: {
          line: 636,
          column: 97
        }
      },
      "350": {
        start: {
          line: 640,
          column: 8
        },
        end: {
          line: 640,
          column: 52
        }
      },
      "351": {
        start: {
          line: 641,
          column: 8
        },
        end: {
          line: 641,
          column: 83
        }
      },
      "352": {
        start: {
          line: 644,
          column: 0
        },
        end: {
          line: 663,
          column: 3
        }
      },
      "353": {
        start: {
          line: 645,
          column: 4
        },
        end: {
          line: 662,
          column: 5
        }
      },
      "354": {
        start: {
          line: 646,
          column: 28
        },
        end: {
          line: 646,
          column: 38
        }
      },
      "355": {
        start: {
          line: 647,
          column: 28
        },
        end: {
          line: 647,
          column: 36
        }
      },
      "356": {
        start: {
          line: 648,
          column: 8
        },
        end: {
          line: 650,
          column: 9
        }
      },
      "357": {
        start: {
          line: 649,
          column: 12
        },
        end: {
          line: 649,
          column: 92
        }
      },
      "358": {
        start: {
          line: 651,
          column: 24
        },
        end: {
          line: 651,
          column: 93
        }
      },
      "359": {
        start: {
          line: 652,
          column: 8
        },
        end: {
          line: 657,
          column: 9
        }
      },
      "360": {
        start: {
          line: 653,
          column: 12
        },
        end: {
          line: 653,
          column: 110
        }
      },
      "361": {
        start: {
          line: 656,
          column: 12
        },
        end: {
          line: 656,
          column: 91
        }
      },
      "362": {
        start: {
          line: 660,
          column: 8
        },
        end: {
          line: 660,
          column: 54
        }
      },
      "363": {
        start: {
          line: 661,
          column: 8
        },
        end: {
          line: 661,
          column: 85
        }
      },
      "364": {
        start: {
          line: 664,
          column: 0
        },
        end: {
          line: 673,
          column: 3
        }
      },
      "365": {
        start: {
          line: 665,
          column: 4
        },
        end: {
          line: 672,
          column: 5
        }
      },
      "366": {
        start: {
          line: 666,
          column: 26
        },
        end: {
          line: 666,
          column: 91
        }
      },
      "367": {
        start: {
          line: 667,
          column: 8
        },
        end: {
          line: 667,
          column: 57
        }
      },
      "368": {
        start: {
          line: 670,
          column: 8
        },
        end: {
          line: 670,
          column: 52
        }
      },
      "369": {
        start: {
          line: 671,
          column: 8
        },
        end: {
          line: 671,
          column: 83
        }
      },
      "370": {
        start: {
          line: 675,
          column: 0
        },
        end: {
          line: 685,
          column: 3
        }
      },
      "371": {
        start: {
          line: 676,
          column: 4
        },
        end: {
          line: 684,
          column: 5
        }
      },
      "372": {
        start: {
          line: 677,
          column: 70
        },
        end: {
          line: 677,
          column: 79
        }
      },
      "373": {
        start: {
          line: 678,
          column: 24
        },
        end: {
          line: 678,
          column: 146
        }
      },
      "374": {
        start: {
          line: 679,
          column: 8
        },
        end: {
          line: 679,
          column: 55
        }
      },
      "375": {
        start: {
          line: 682,
          column: 8
        },
        end: {
          line: 682,
          column: 56
        }
      },
      "376": {
        start: {
          line: 683,
          column: 8
        },
        end: {
          line: 683,
          column: 87
        }
      },
      "377": {
        start: {
          line: 686,
          column: 0
        },
        end: {
          line: 696,
          column: 3
        }
      },
      "378": {
        start: {
          line: 687,
          column: 4
        },
        end: {
          line: 695,
          column: 5
        }
      },
      "379": {
        start: {
          line: 688,
          column: 25
        },
        end: {
          line: 688,
          column: 82
        }
      },
      "380": {
        start: {
          line: 689,
          column: 22
        },
        end: {
          line: 689,
          column: 77
        }
      },
      "381": {
        start: {
          line: 690,
          column: 8
        },
        end: {
          line: 690,
          column: 63
        }
      },
      "382": {
        start: {
          line: 693,
          column: 8
        },
        end: {
          line: 693,
          column: 57
        }
      },
      "383": {
        start: {
          line: 694,
          column: 8
        },
        end: {
          line: 694,
          column: 88
        }
      },
      "384": {
        start: {
          line: 697,
          column: 0
        },
        end: {
          line: 710,
          column: 3
        }
      },
      "385": {
        start: {
          line: 698,
          column: 4
        },
        end: {
          line: 709,
          column: 5
        }
      },
      "386": {
        start: {
          line: 699,
          column: 48
        },
        end: {
          line: 699,
          column: 57
        }
      },
      "387": {
        start: {
          line: 700,
          column: 8
        },
        end: {
          line: 702,
          column: 9
        }
      },
      "388": {
        start: {
          line: 701,
          column: 12
        },
        end: {
          line: 701,
          column: 107
        }
      },
      "389": {
        start: {
          line: 703,
          column: 23
        },
        end: {
          line: 703,
          column: 138
        }
      },
      "390": {
        start: {
          line: 704,
          column: 8
        },
        end: {
          line: 704,
          column: 54
        }
      },
      "391": {
        start: {
          line: 707,
          column: 8
        },
        end: {
          line: 707,
          column: 60
        }
      },
      "392": {
        start: {
          line: 708,
          column: 8
        },
        end: {
          line: 708,
          column: 91
        }
      },
      "393": {
        start: {
          line: 711,
          column: 0
        },
        end: {
          line: 711,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 51,
            column: 27
          }
        },
        loc: {
          start: {
            line: 51,
            column: 40
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 51
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 26
          },
          end: {
            line: 59,
            column: 27
          }
        },
        loc: {
          start: {
            line: 59,
            column: 46
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 96,
            column: 3
          },
          end: {
            line: 96,
            column: 4
          }
        },
        loc: {
          start: {
            line: 96,
            column: 23
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 96
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 137,
            column: 21
          },
          end: {
            line: 137,
            column: 22
          }
        },
        loc: {
          start: {
            line: 137,
            column: 41
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 137
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 165,
            column: 39
          },
          end: {
            line: 165,
            column: 40
          }
        },
        loc: {
          start: {
            line: 165,
            column: 45
          },
          end: {
            line: 165,
            column: 120
          }
        },
        line: 165
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 176,
            column: 21
          },
          end: {
            line: 176,
            column: 22
          }
        },
        loc: {
          start: {
            line: 176,
            column: 41
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 176
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 201,
            column: 3
          },
          end: {
            line: 201,
            column: 4
          }
        },
        loc: {
          start: {
            line: 201,
            column: 23
          },
          end: {
            line: 227,
            column: 1
          }
        },
        line: 201
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 228,
            column: 48
          },
          end: {
            line: 228,
            column: 49
          }
        },
        loc: {
          start: {
            line: 228,
            column: 68
          },
          end: {
            line: 244,
            column: 1
          }
        },
        line: 228
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 246,
            column: 25
          },
          end: {
            line: 246,
            column: 26
          }
        },
        loc: {
          start: {
            line: 246,
            column: 45
          },
          end: {
            line: 255,
            column: 1
          }
        },
        line: 246
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 256,
            column: 61
          },
          end: {
            line: 256,
            column: 62
          }
        },
        loc: {
          start: {
            line: 256,
            column: 81
          },
          end: {
            line: 269,
            column: 1
          }
        },
        line: 256
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 270,
            column: 52
          },
          end: {
            line: 270,
            column: 53
          }
        },
        loc: {
          start: {
            line: 270,
            column: 72
          },
          end: {
            line: 282,
            column: 1
          }
        },
        line: 270
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 285,
            column: 23
          },
          end: {
            line: 285,
            column: 24
          }
        },
        loc: {
          start: {
            line: 285,
            column: 43
          },
          end: {
            line: 294,
            column: 1
          }
        },
        line: 285
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 299,
            column: 3
          },
          end: {
            line: 299,
            column: 4
          }
        },
        loc: {
          start: {
            line: 299,
            column: 23
          },
          end: {
            line: 314,
            column: 1
          }
        },
        line: 299
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 321,
            column: 3
          },
          end: {
            line: 321,
            column: 4
          }
        },
        loc: {
          start: {
            line: 321,
            column: 23
          },
          end: {
            line: 335,
            column: 1
          }
        },
        line: 321
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 337,
            column: 28
          },
          end: {
            line: 337,
            column: 29
          }
        },
        loc: {
          start: {
            line: 337,
            column: 48
          },
          end: {
            line: 358,
            column: 1
          }
        },
        line: 337
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 360,
            column: 27
          },
          end: {
            line: 360,
            column: 28
          }
        },
        loc: {
          start: {
            line: 360,
            column: 47
          },
          end: {
            line: 369,
            column: 1
          }
        },
        line: 360
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 370,
            column: 30
          },
          end: {
            line: 370,
            column: 31
          }
        },
        loc: {
          start: {
            line: 370,
            column: 50
          },
          end: {
            line: 379,
            column: 1
          }
        },
        line: 370
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 383,
            column: 3
          },
          end: {
            line: 383,
            column: 4
          }
        },
        loc: {
          start: {
            line: 383,
            column: 23
          },
          end: {
            line: 404,
            column: 1
          }
        },
        line: 383
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 408,
            column: 3
          },
          end: {
            line: 408,
            column: 4
          }
        },
        loc: {
          start: {
            line: 408,
            column: 23
          },
          end: {
            line: 429,
            column: 1
          }
        },
        line: 408
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 431,
            column: 29
          },
          end: {
            line: 431,
            column: 30
          }
        },
        loc: {
          start: {
            line: 431,
            column: 49
          },
          end: {
            line: 440,
            column: 1
          }
        },
        line: 431
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 441,
            column: 52
          },
          end: {
            line: 441,
            column: 53
          }
        },
        loc: {
          start: {
            line: 441,
            column: 72
          },
          end: {
            line: 454,
            column: 1
          }
        },
        line: 441
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 455,
            column: 31
          },
          end: {
            line: 455,
            column: 32
          }
        },
        loc: {
          start: {
            line: 455,
            column: 51
          },
          end: {
            line: 464,
            column: 1
          }
        },
        line: 455
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 465,
            column: 67
          },
          end: {
            line: 465,
            column: 68
          }
        },
        loc: {
          start: {
            line: 465,
            column: 87
          },
          end: {
            line: 480,
            column: 1
          }
        },
        line: 465
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 482,
            column: 29
          },
          end: {
            line: 482,
            column: 30
          }
        },
        loc: {
          start: {
            line: 482,
            column: 49
          },
          end: {
            line: 491,
            column: 1
          }
        },
        line: 482
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 492,
            column: 52
          },
          end: {
            line: 492,
            column: 53
          }
        },
        loc: {
          start: {
            line: 492,
            column: 72
          },
          end: {
            line: 505,
            column: 1
          }
        },
        line: 492
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 506,
            column: 31
          },
          end: {
            line: 506,
            column: 32
          }
        },
        loc: {
          start: {
            line: 506,
            column: 51
          },
          end: {
            line: 516,
            column: 1
          }
        },
        line: 506
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 517,
            column: 74
          },
          end: {
            line: 517,
            column: 75
          }
        },
        loc: {
          start: {
            line: 517,
            column: 94
          },
          end: {
            line: 532,
            column: 1
          }
        },
        line: 517
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 533,
            column: 80
          },
          end: {
            line: 533,
            column: 81
          }
        },
        loc: {
          start: {
            line: 533,
            column: 100
          },
          end: {
            line: 548,
            column: 1
          }
        },
        line: 533
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 549,
            column: 41
          },
          end: {
            line: 549,
            column: 42
          }
        },
        loc: {
          start: {
            line: 549,
            column: 61
          },
          end: {
            line: 559,
            column: 1
          }
        },
        line: 549
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 561,
            column: 28
          },
          end: {
            line: 561,
            column: 29
          }
        },
        loc: {
          start: {
            line: 561,
            column: 48
          },
          end: {
            line: 570,
            column: 1
          }
        },
        line: 561
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 571,
            column: 37
          },
          end: {
            line: 571,
            column: 38
          }
        },
        loc: {
          start: {
            line: 571,
            column: 57
          },
          end: {
            line: 586,
            column: 1
          }
        },
        line: 571
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 587,
            column: 60
          },
          end: {
            line: 587,
            column: 61
          }
        },
        loc: {
          start: {
            line: 587,
            column: 80
          },
          end: {
            line: 605,
            column: 1
          }
        },
        line: 587
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 606,
            column: 31
          },
          end: {
            line: 606,
            column: 32
          }
        },
        loc: {
          start: {
            line: 606,
            column: 51
          },
          end: {
            line: 615,
            column: 1
          }
        },
        line: 606
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 616,
            column: 48
          },
          end: {
            line: 616,
            column: 49
          }
        },
        loc: {
          start: {
            line: 616,
            column: 68
          },
          end: {
            line: 627,
            column: 1
          }
        },
        line: 616
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 628,
            column: 63
          },
          end: {
            line: 628,
            column: 64
          }
        },
        loc: {
          start: {
            line: 628,
            column: 83
          },
          end: {
            line: 643,
            column: 1
          }
        },
        line: 628
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 644,
            column: 65
          },
          end: {
            line: 644,
            column: 66
          }
        },
        loc: {
          start: {
            line: 644,
            column: 85
          },
          end: {
            line: 663,
            column: 1
          }
        },
        line: 644
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 664,
            column: 30
          },
          end: {
            line: 664,
            column: 31
          }
        },
        loc: {
          start: {
            line: 664,
            column: 50
          },
          end: {
            line: 673,
            column: 1
          }
        },
        line: 664
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 675,
            column: 29
          },
          end: {
            line: 675,
            column: 30
          }
        },
        loc: {
          start: {
            line: 675,
            column: 49
          },
          end: {
            line: 685,
            column: 1
          }
        },
        line: 675
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 686,
            column: 30
          },
          end: {
            line: 686,
            column: 31
          }
        },
        loc: {
          start: {
            line: 686,
            column: 50
          },
          end: {
            line: 696,
            column: 1
          }
        },
        line: 686
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 697,
            column: 28
          },
          end: {
            line: 697,
            column: 29
          }
        },
        loc: {
          start: {
            line: 697,
            column: 48
          },
          end: {
            line: 710,
            column: 1
          }
        },
        line: 697
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 22
          },
          end: {
            line: 52,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 22
          },
          end: {
            line: 52,
            column: 44
          }
        }, {
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 52,
            column: 72
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "7": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "8": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "9": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "10": {
        loc: {
          start: {
            line: 157,
            column: 26
          },
          end: {
            line: 157,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 26
          },
          end: {
            line: 157,
            column: 48
          }
        }, {
          start: {
            line: 157,
            column: 52
          },
          end: {
            line: 157,
            column: 53
          }
        }],
        line: 157
      },
      "11": {
        loc: {
          start: {
            line: 158,
            column: 27
          },
          end: {
            line: 158,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 27
          },
          end: {
            line: 158,
            column: 50
          }
        }, {
          start: {
            line: 158,
            column: 54
          },
          end: {
            line: 158,
            column: 55
          }
        }],
        line: 158
      },
      "12": {
        loc: {
          start: {
            line: 165,
            column: 93
          },
          end: {
            line: 165,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 93
          },
          end: {
            line: 165,
            column: 113
          }
        }, {
          start: {
            line: 165,
            column: 117
          },
          end: {
            line: 165,
            column: 118
          }
        }],
        line: 165
      },
      "13": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "14": {
        loc: {
          start: {
            line: 211,
            column: 23
          },
          end: {
            line: 211,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 23
          },
          end: {
            line: 211,
            column: 50
          }
        }, {
          start: {
            line: 211,
            column: 54
          },
          end: {
            line: 211,
            column: 72
          }
        }],
        line: 211
      },
      "15": {
        loc: {
          start: {
            line: 216,
            column: 22
          },
          end: {
            line: 216,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 22
          },
          end: {
            line: 216,
            column: 39
          }
        }, {
          start: {
            line: 216,
            column: 43
          },
          end: {
            line: 216,
            column: 47
          }
        }],
        line: 216
      },
      "16": {
        loc: {
          start: {
            line: 217,
            column: 23
          },
          end: {
            line: 217,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 23
          },
          end: {
            line: 217,
            column: 41
          }
        }, {
          start: {
            line: 217,
            column: 45
          },
          end: {
            line: 217,
            column: 50
          }
        }],
        line: 217
      },
      "17": {
        loc: {
          start: {
            line: 218,
            column: 29
          },
          end: {
            line: 218,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 29
          },
          end: {
            line: 218,
            column: 53
          }
        }, {
          start: {
            line: 218,
            column: 57
          },
          end: {
            line: 218,
            column: 61
          }
        }],
        line: 218
      },
      "18": {
        loc: {
          start: {
            line: 219,
            column: 21
          },
          end: {
            line: 219,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 21
          },
          end: {
            line: 219,
            column: 37
          }
        }, {
          start: {
            line: 219,
            column: 41
          },
          end: {
            line: 219,
            column: 82
          }
        }],
        line: 219
      },
      "19": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "20": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 237,
            column: 85
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 237,
            column: 85
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "21": {
        loc: {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 260,
            column: 89
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 260,
            column: 89
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "22": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 275,
            column: 89
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 275,
            column: 89
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "23": {
        loc: {
          start: {
            line: 288,
            column: 40
          },
          end: {
            line: 288,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 40
          },
          end: {
            line: 288,
            column: 47
          }
        }, {
          start: {
            line: 288,
            column: 51
          },
          end: {
            line: 288,
            column: 124
          }
        }],
        line: 288
      },
      "24": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 304,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 304,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "25": {
        loc: {
          start: {
            line: 305,
            column: 24
          },
          end: {
            line: 305,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 25
          },
          end: {
            line: 305,
            column: 65
          }
        }, {
          start: {
            line: 305,
            column: 70
          },
          end: {
            line: 305,
            column: 72
          }
        }],
        line: 305
      },
      "26": {
        loc: {
          start: {
            line: 327,
            column: 114
          },
          end: {
            line: 327,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 127
          },
          end: {
            line: 327,
            column: 134
          }
        }, {
          start: {
            line: 327,
            column: 137
          },
          end: {
            line: 327,
            column: 146
          }
        }],
        line: 327
      },
      "27": {
        loc: {
          start: {
            line: 339,
            column: 39
          },
          end: {
            line: 339,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 339,
            column: 47
          },
          end: {
            line: 339,
            column: 51
          }
        }],
        line: 339
      },
      "28": {
        loc: {
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 342,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 342,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "29": {
        loc: {
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 344,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 344,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "30": {
        loc: {
          start: {
            line: 345,
            column: 8
          },
          end: {
            line: 346,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 8
          },
          end: {
            line: 346,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "31": {
        loc: {
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 388,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 388,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "32": {
        loc: {
          start: {
            line: 390,
            column: 24
          },
          end: {
            line: 390,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 24
          },
          end: {
            line: 390,
            column: 40
          }
        }, {
          start: {
            line: 390,
            column: 44
          },
          end: {
            line: 390,
            column: 53
          }
        }],
        line: 390
      },
      "33": {
        loc: {
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 398,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 398,
            column: 9
          }
        }, {
          start: {
            line: 396,
            column: 13
          },
          end: {
            line: 398,
            column: 9
          }
        }],
        line: 393
      },
      "34": {
        loc: {
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 413,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 413,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "35": {
        loc: {
          start: {
            line: 415,
            column: 24
          },
          end: {
            line: 415,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 415,
            column: 24
          },
          end: {
            line: 415,
            column: 40
          }
        }, {
          start: {
            line: 415,
            column: 44
          },
          end: {
            line: 415,
            column: 53
          }
        }],
        line: 415
      },
      "36": {
        loc: {
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        }, {
          start: {
            line: 421,
            column: 13
          },
          end: {
            line: 423,
            column: 9
          }
        }],
        line: 418
      },
      "37": {
        loc: {
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 444
      },
      "38": {
        loc: {
          start: {
            line: 444,
            column: 12
          },
          end: {
            line: 444,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 444,
            column: 12
          },
          end: {
            line: 444,
            column: 19
          }
        }, {
          start: {
            line: 444,
            column: 23
          },
          end: {
            line: 444,
            column: 49
          }
        }],
        line: 444
      },
      "39": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        }, {
          start: {
            line: 472,
            column: 13
          },
          end: {
            line: 474,
            column: 9
          }
        }],
        line: 469
      },
      "40": {
        loc: {
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "41": {
        loc: {
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 495,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 495,
            column: 19
          }
        }, {
          start: {
            line: 495,
            column: 23
          },
          end: {
            line: 495,
            column: 49
          }
        }],
        line: 495
      },
      "42": {
        loc: {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        }, {
          start: {
            line: 524,
            column: 13
          },
          end: {
            line: 526,
            column: 9
          }
        }],
        line: 521
      },
      "43": {
        loc: {
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 542,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 542,
            column: 9
          }
        }, {
          start: {
            line: 540,
            column: 13
          },
          end: {
            line: 542,
            column: 9
          }
        }],
        line: 537
      },
      "44": {
        loc: {
          start: {
            line: 575,
            column: 8
          },
          end: {
            line: 580,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 575,
            column: 8
          },
          end: {
            line: 580,
            column: 9
          }
        }, {
          start: {
            line: 578,
            column: 13
          },
          end: {
            line: 580,
            column: 9
          }
        }],
        line: 575
      },
      "45": {
        loc: {
          start: {
            line: 591,
            column: 8
          },
          end: {
            line: 593,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 591,
            column: 8
          },
          end: {
            line: 593,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 591
      },
      "46": {
        loc: {
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 591,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 591,
            column: 19
          }
        }, {
          start: {
            line: 591,
            column: 23
          },
          end: {
            line: 591,
            column: 49
          }
        }],
        line: 591
      },
      "47": {
        loc: {
          start: {
            line: 595,
            column: 8
          },
          end: {
            line: 597,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 595,
            column: 8
          },
          end: {
            line: 597,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 595
      },
      "48": {
        loc: {
          start: {
            line: 595,
            column: 12
          },
          end: {
            line: 595,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 595,
            column: 12
          },
          end: {
            line: 595,
            column: 27
          }
        }, {
          start: {
            line: 595,
            column: 31
          },
          end: {
            line: 595,
            column: 107
          }
        }],
        line: 595
      },
      "49": {
        loc: {
          start: {
            line: 619,
            column: 16
          },
          end: {
            line: 619,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 619,
            column: 24
          },
          end: {
            line: 619,
            column: 26
          }
        }],
        line: 619
      },
      "50": {
        loc: {
          start: {
            line: 632,
            column: 8
          },
          end: {
            line: 637,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 632,
            column: 8
          },
          end: {
            line: 637,
            column: 9
          }
        }, {
          start: {
            line: 635,
            column: 13
          },
          end: {
            line: 637,
            column: 9
          }
        }],
        line: 632
      },
      "51": {
        loc: {
          start: {
            line: 648,
            column: 8
          },
          end: {
            line: 650,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 648,
            column: 8
          },
          end: {
            line: 650,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 648
      },
      "52": {
        loc: {
          start: {
            line: 652,
            column: 8
          },
          end: {
            line: 657,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 652,
            column: 8
          },
          end: {
            line: 657,
            column: 9
          }
        }, {
          start: {
            line: 655,
            column: 13
          },
          end: {
            line: 657,
            column: 9
          }
        }],
        line: 652
      },
      "53": {
        loc: {
          start: {
            line: 653,
            column: 59
          },
          end: {
            line: 653,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 653,
            column: 69
          },
          end: {
            line: 653,
            column: 78
          }
        }, {
          start: {
            line: 653,
            column: 81
          },
          end: {
            line: 653,
            column: 91
          }
        }],
        line: 653
      },
      "54": {
        loc: {
          start: {
            line: 677,
            column: 43
          },
          end: {
            line: 677,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 677,
            column: 51
          },
          end: {
            line: 677,
            column: 53
          }
        }],
        line: 677
      },
      "55": {
        loc: {
          start: {
            line: 677,
            column: 55
          },
          end: {
            line: 677,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 677,
            column: 64
          },
          end: {
            line: 677,
            column: 65
          }
        }],
        line: 677
      },
      "56": {
        loc: {
          start: {
            line: 700,
            column: 8
          },
          end: {
            line: 702,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 700,
            column: 8
          },
          end: {
            line: 702,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 700
      },
      "57": {
        loc: {
          start: {
            line: 700,
            column: 12
          },
          end: {
            line: 700,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 700,
            column: 12
          },
          end: {
            line: 700,
            column: 22
          }
        }, {
          start: {
            line: 700,
            column: 26
          },
          end: {
            line: 700,
            column: 34
          }
        }],
        line: 700
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0],
      "55": [0],
      "56": [0, 0],
      "57": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a249e419c59c047c766993e76bbc05d8453729bd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_20cso3vjpj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20cso3vjpj();
var __importDefault =
/* istanbul ignore next */
(cov_20cso3vjpj().s[0]++,
/* istanbul ignore next */
(cov_20cso3vjpj().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_20cso3vjpj().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_20cso3vjpj().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[0]++;
  cov_20cso3vjpj().s[1]++;
  return /* istanbul ignore next */(cov_20cso3vjpj().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_20cso3vjpj().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_20cso3vjpj().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_20cso3vjpj().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_20cso3vjpj().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[4]++, require("express-validator"));
const Gift_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[5]++, require("@/models/Gift"));
const Festival_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[6]++, require("@/models/Festival"));
const User_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[7]++, require("@/models/User"));
const Transaction_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[8]++, require("@/models/Transaction"));
const ModerationFlag_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[9]++, require("@/models/ModerationFlag"));
const logger_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[10]++, require("@/config/logger"));
const redis_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[11]++, require("@/config/redis"));
const ReputationService_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[12]++, require("@/services/ReputationService"));
const admin_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[13]++, require("@/middleware/admin"));
const security_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[14]++, require("@/middleware/security"));
const speakeasy_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[15]++, __importDefault(require("speakeasy")));
const qrcode_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[16]++, __importDefault(require("qrcode")));
const AgeKycService_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[17]++, require("@/services/AgeKycService"));
const GamingControlsService_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[18]++, require("@/services/GamingControlsService"));
const SocketSecurityService_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[19]++, require("@/services/SocketSecurityService"));
const CronSecurityService_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[20]++, require("@/services/CronSecurityService"));
const AdminAuditService_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[21]++, require("@/services/AdminAuditService"));
const flags_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[22]++, __importDefault(require("./admin/flags")));
// New modular admin routes
const analytics_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[23]++, __importDefault(require("./admin/analytics")));
const users_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[24]++, __importDefault(require("./admin/users")));
const economy_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[25]++, __importDefault(require("./admin/economy")));
const live_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[26]++, __importDefault(require("./admin/live")));
const games_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[27]++, __importDefault(require("./admin/games")));
const moderation_1 =
/* istanbul ignore next */
(cov_20cso3vjpj().s[28]++, __importDefault(require("./admin/moderation")));
const logger =
/* istanbul ignore next */
(cov_20cso3vjpj().s[29]++, (0, logger_1.setupLogger)());
const router =
/* istanbul ignore next */
(cov_20cso3vjpj().s[30]++, express_1.default.Router());
// Apply admin rate limiting to all admin routes
/* istanbul ignore next */
cov_20cso3vjpj().s[31]++;
router.use(security_1.adminLimiter);
// === NEW MODULAR ADMIN ROUTES ===
// Mount all new admin routes
/* istanbul ignore next */
cov_20cso3vjpj().s[32]++;
router.use('/analytics', analytics_1.default);
/* istanbul ignore next */
cov_20cso3vjpj().s[33]++;
router.use('/users', users_1.default);
/* istanbul ignore next */
cov_20cso3vjpj().s[34]++;
router.use('/economy', economy_1.default);
/* istanbul ignore next */
cov_20cso3vjpj().s[35]++;
router.use('/live', live_1.default);
/* istanbul ignore next */
cov_20cso3vjpj().s[36]++;
router.use('/reels', live_1.default); // Reels routes are in live router
/* istanbul ignore next */
cov_20cso3vjpj().s[37]++;
router.use('/tournaments', games_1.default);
/* istanbul ignore next */
cov_20cso3vjpj().s[38]++;
router.use('/games', games_1.default);
/* istanbul ignore next */
cov_20cso3vjpj().s[39]++;
router.use('/moderation', moderation_1.default);
// === LEGACY ADMIN ROUTES ===
// Feature flags management
/* istanbul ignore next */
cov_20cso3vjpj().s[40]++;
router.use('/flags', flags_1.default);
// CSRF token endpoint
/* istanbul ignore next */
cov_20cso3vjpj().s[41]++;
router.get('/csrf-token', (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[1]++;
  const csrfToken =
  /* istanbul ignore next */
  (cov_20cso3vjpj().s[42]++,
  /* istanbul ignore next */
  (cov_20cso3vjpj().b[3][0]++, req.session?.csrfToken) ||
  /* istanbul ignore next */
  (cov_20cso3vjpj().b[3][1]++, 'csrf-token-placeholder'));
  /* istanbul ignore next */
  cov_20cso3vjpj().s[43]++;
  res.json({
    success: true,
    csrfToken
  });
});
// 2FA Setup endpoint
/* istanbul ignore next */
cov_20cso3vjpj().s[44]++;
router.post('/2fa/setup', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[2]++;
  cov_20cso3vjpj().s[45]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[46]++, req.user?.userId);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[47]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[4][0]++;
      cov_20cso3vjpj().s[48]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[4][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[49]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[50]++;
    if (!user) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[5][0]++;
      cov_20cso3vjpj().s[51]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[5][1]++;
    }
    // Generate TOTP secret
    const secret =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[52]++, speakeasy_1.default.generateSecret({
      name: `Halobuzz Admin (${user.email})`,
      length: 32
    }));
    // Generate QR code
    const qrCodeUrl =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[53]++, await qrcode_1.default.toDataURL(secret.otpauth_url));
    // Store secret temporarily (user needs to verify before saving)
    /* istanbul ignore next */
    cov_20cso3vjpj().s[54]++;
    await (0, redis_1.setCache)(`2fa-setup:${userId}`, secret.base32, 300); // 5 minutes
    /* istanbul ignore next */
    cov_20cso3vjpj().s[55]++;
    res.json({
      success: true,
      data: {
        secret: secret.base32,
        qrCode: qrCodeUrl,
        manualEntryKey: secret.base32
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[56]++;
    logger.error('2FA setup error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[57]++;
    res.status(500).json({
      success: false,
      error: 'Failed to setup 2FA'
    });
  }
});
// 2FA Verification endpoint
/* istanbul ignore next */
cov_20cso3vjpj().s[58]++;
router.post('/2fa/verify', [admin_1.requireCSRF, (0, express_validator_1.body)('token').isString().isLength({
  min: 6,
  max: 6
}).withMessage('Valid 6-digit token required')], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[3]++;
  cov_20cso3vjpj().s[59]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[60]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[61]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[6][0]++;
      cov_20cso3vjpj().s[62]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[6][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[63]++, req.user?.userId);
    const {
      token
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[64]++, req.body);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[65]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[7][0]++;
      cov_20cso3vjpj().s[66]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[7][1]++;
    }
    // Get temporary secret from cache
    const tempSecret =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[67]++, await (0, redis_1.getCache)(`2fa-setup:${userId}`));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[68]++;
    if (!tempSecret) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[8][0]++;
      cov_20cso3vjpj().s[69]++;
      return res.status(400).json({
        success: false,
        error: '2FA setup session expired'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[8][1]++;
    }
    // Verify token
    const verified =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[70]++, speakeasy_1.default.totp.verify({
      secret: tempSecret,
      encoding: 'base32',
      token: token,
      window: 2
    }));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[71]++;
    if (!verified) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[9][0]++;
      cov_20cso3vjpj().s[72]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid token'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[9][1]++;
    }
    // Save secret to user
    cov_20cso3vjpj().s[73]++;
    await User_1.User.findByIdAndUpdate(userId, {
      totpSecret: tempSecret
    });
    // Clear temporary secret
    /* istanbul ignore next */
    cov_20cso3vjpj().s[74]++;
    await (0, redis_1.setCache)(`2fa-setup:${userId}`, '', 0);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[75]++;
    res.json({
      success: true,
      message: '2FA enabled successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[76]++;
    logger.error('2FA verification error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[77]++;
    res.status(500).json({
      success: false,
      error: 'Failed to verify 2FA'
    });
  }
});
// ----- Overview Stats -----
/* istanbul ignore next */
cov_20cso3vjpj().s[78]++;
router.get('/stats', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[4]++;
  cov_20cso3vjpj().s[79]++;
  try {
    // Very rough DAU/MAU using lastActiveAt
    const now =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[80]++, new Date());
    const dayAgo =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[81]++, new Date(now.getTime() - 24 * 60 * 60 * 1000));
    const monthAgo =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[82]++, new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000));
    const [dau, mau, coinsSoldAgg, coinsSpentAgg, topHosts, recentViolations] =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[83]++, await Promise.all([User_1.User.countDocuments({
      lastActiveAt: {
        $gte: dayAgo
      },
      isBanned: false
    }), User_1.User.countDocuments({
      lastActiveAt: {
        $gte: monthAgo
      },
      isBanned: false
    }), Transaction_1.Transaction.aggregate([{
      $match: {
        type: 'recharge',
        status: 'completed'
      }
    }, {
      $group: {
        _id: null,
        total: {
          $sum: '$amount'
        }
      }
    }]), Transaction_1.Transaction.aggregate([{
      $match: {
        type: {
          $in: ['gift_sent']
        },
        status: 'completed'
      }
    }, {
      $group: {
        _id: null,
        total: {
          $sum: '$amount'
        }
      }
    }]), User_1.User.find({}).sort({
      'coins.totalEarned': -1
    }).limit(5).select('username avatar coins.totalEarned'), ModerationFlag_1.ModerationFlag.find().sort({
      createdAt: -1
    }).limit(10)]));
    const coinsSold =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[84]++,
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[10][0]++, coinsSoldAgg[0]?.total) ||
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[10][1]++, 0));
    const coinsSpent =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[85]++,
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[11][0]++, coinsSpentAgg[0]?.total) ||
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[11][1]++, 0));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[86]++;
    res.json({
      success: true,
      data: {
        dau,
        mau,
        coinsSold,
        coinsSpent,
        topHosts: topHosts.map(u => {
          /* istanbul ignore next */
          cov_20cso3vjpj().f[5]++;
          cov_20cso3vjpj().s[87]++;
          return {
            id: u._id,
            username: u.username,
            totalEarned:
            /* istanbul ignore next */
            (cov_20cso3vjpj().b[12][0]++, u.coins?.totalEarned) ||
            /* istanbul ignore next */
            (cov_20cso3vjpj().b[12][1]++, 0)
          };
        }),
        recentViolations
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[88]++;
    logger.error('Admin stats error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[89]++;
    res.status(500).json({
      success: false,
      error: 'Failed to load stats'
    });
  }
});
// ----- Gifts CRUD -----
/* istanbul ignore next */
cov_20cso3vjpj().s[90]++;
router.get('/gifts', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[6]++;
  cov_20cso3vjpj().s[91]++;
  try {
    const gifts =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[92]++, await Gift_1.Gift.find({}).sort({
      createdAt: -1
    }));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[93]++;
    res.json({
      success: true,
      data: gifts
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[94]++;
    logger.error('List gifts error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[95]++;
    res.status(500).json({
      success: false,
      error: 'Failed to list gifts'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[96]++;
router.post('/gifts', [admin_1.requireCSRF, (0, express_validator_1.body)('name').isString().notEmpty(), (0, express_validator_1.body)('description').isString().notEmpty(), (0, express_validator_1.body)('icon').isString().notEmpty(), (0, express_validator_1.body)('animation').isString().notEmpty(), (0, express_validator_1.body)('priceCoins').isInt({
  min: 1
}), (0, express_validator_1.body)('priceUSD').isFloat({
  min: 0
}), (0, express_validator_1.body)('category').isString().notEmpty(), (0, express_validator_1.body)('rarity').isIn(['common', 'rare', 'epic', 'legendary']), (0, express_validator_1.body)('effects').optional().isObject(), (0, express_validator_1.body)('isActive').optional().isBoolean(), (0, express_validator_1.body)('isLimited').optional().isBoolean(), (0, express_validator_1.body)('limitedQuantity').optional().isInt({
  min: 1
}), (0, express_validator_1.body)('animationLottieUrl').optional().isString()], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[7]++;
  cov_20cso3vjpj().s[97]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[98]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[99]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[13][0]++;
      cov_20cso3vjpj().s[100]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[13][1]++;
    }
    const gift =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[101]++, await Gift_1.Gift.create({
      name: req.body.name,
      description: req.body.description,
      icon: req.body.icon,
      animation:
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[14][0]++, req.body.animationLottieUrl) ||
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[14][1]++, req.body.animation),
      priceCoins: req.body.priceCoins,
      priceUSD: req.body.priceUSD,
      category: req.body.category,
      rarity: req.body.rarity,
      isActive:
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[15][0]++, req.body.isActive) ??
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[15][1]++, true),
      isLimited:
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[16][0]++, req.body.isLimited) ??
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[16][1]++, false),
      limitedQuantity:
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[17][0]++, req.body.limitedQuantity) ??
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[17][1]++, null),
      effects:
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[18][0]++, req.body.effects) ||
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[18][1]++, {
        sound: '',
        visual: '',
        duration: 3000
      })
    }));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[102]++;
    res.status(201).json({
      success: true,
      data: gift
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[103]++;
    logger.error('Create gift error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[104]++;
    res.status(500).json({
      success: false,
      error: 'Failed to create gift'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[105]++;
router.put('/gifts/:id', [admin_1.requireCSRF], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[8]++;
  cov_20cso3vjpj().s[106]++;
  try {
    const update =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[107]++, {
      ...req.body
    });
    /* istanbul ignore next */
    cov_20cso3vjpj().s[108]++;
    if (update.animationLottieUrl) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[19][0]++;
      cov_20cso3vjpj().s[109]++;
      update.animation = update.animationLottieUrl;
      /* istanbul ignore next */
      cov_20cso3vjpj().s[110]++;
      delete update.animationLottieUrl;
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[19][1]++;
    }
    const gift =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[111]++, await Gift_1.Gift.findByIdAndUpdate(req.params.id, update, {
      new: true
    }));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[112]++;
    if (!gift) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[20][0]++;
      cov_20cso3vjpj().s[113]++;
      return res.status(404).json({
        success: false,
        error: 'Gift not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[20][1]++;
    }
    cov_20cso3vjpj().s[114]++;
    res.json({
      success: true,
      data: gift
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[115]++;
    logger.error('Update gift error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[116]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update gift'
    });
  }
});
// ----- Festivals -----
/* istanbul ignore next */
cov_20cso3vjpj().s[117]++;
router.get('/festivals', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[9]++;
  cov_20cso3vjpj().s[118]++;
  try {
    const festivals =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[119]++, await Festival_1.Festival.find({}).sort({
      startDate: -1
    }).populate('gifts', 'name'));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[120]++;
    res.json({
      success: true,
      data: festivals
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[121]++;
    logger.error('List festivals error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[122]++;
    res.status(500).json({
      success: false,
      error: 'Failed to list festivals'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[123]++;
router.patch('/festivals/:id/toggle', [admin_1.requireCSRF], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[10]++;
  cov_20cso3vjpj().s[124]++;
  try {
    const fest =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[125]++, await Festival_1.Festival.findById(req.params.id));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[126]++;
    if (!fest) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[21][0]++;
      cov_20cso3vjpj().s[127]++;
      return res.status(404).json({
        success: false,
        error: 'Festival not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[21][1]++;
    }
    cov_20cso3vjpj().s[128]++;
    fest.isActive = !fest.isActive;
    /* istanbul ignore next */
    cov_20cso3vjpj().s[129]++;
    await fest.save();
    /* istanbul ignore next */
    cov_20cso3vjpj().s[130]++;
    res.json({
      success: true,
      data: fest
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[131]++;
    logger.error('Toggle festival error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[132]++;
    res.status(500).json({
      success: false,
      error: 'Failed to toggle festival'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[133]++;
router.put('/festivals/:id', [admin_1.requireCSRF], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[11]++;
  cov_20cso3vjpj().s[134]++;
  try {
    const update =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[135]++, {
      ...req.body
    });
    const fest =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[136]++, await Festival_1.Festival.findByIdAndUpdate(req.params.id, update, {
      new: true
    }));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[137]++;
    if (!fest) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[22][0]++;
      cov_20cso3vjpj().s[138]++;
      return res.status(404).json({
        success: false,
        error: 'Festival not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[22][1]++;
    }
    cov_20cso3vjpj().s[139]++;
    res.json({
      success: true,
      data: fest
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[140]++;
    logger.error('Update festival error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[141]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update festival'
    });
  }
});
// ----- Pricing (simple key-value in Redis) -----
const PRICING_KEY =
/* istanbul ignore next */
(cov_20cso3vjpj().s[142]++, 'admin:pricing:v1');
/* istanbul ignore next */
cov_20cso3vjpj().s[143]++;
router.get('/pricing', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[12]++;
  cov_20cso3vjpj().s[144]++;
  try {
    const pricing =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[145]++, await (0, redis_1.getCache)(PRICING_KEY));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[146]++;
    res.json({
      success: true,
      data:
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[23][0]++, pricing) ||
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[23][1]++, {
        countries: {},
        gateways: {
          esewa: true,
          khalti: true,
          stripe: false
        }
      })
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[147]++;
    logger.error('Get pricing error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[148]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get pricing'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[149]++;
router.put('/pricing', [admin_1.requireCSRF, (0, express_validator_1.body)('countries').optional().isObject(), (0, express_validator_1.body)('gateways').optional().isObject()], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[13]++;
  cov_20cso3vjpj().s[150]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[151]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[152]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[24][0]++;
      cov_20cso3vjpj().s[153]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[24][1]++;
    }
    const current =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[154]++,
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[25][0]++, await (0, redis_1.getCache)(PRICING_KEY)) ||
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[25][1]++, {}));
    const updated =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[155]++, {
      ...current,
      ...req.body
    });
    /* istanbul ignore next */
    cov_20cso3vjpj().s[156]++;
    await (0, redis_1.setCache)(PRICING_KEY, updated);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[157]++;
    res.json({
      success: true,
      data: updated
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[158]++;
    logger.error('Update pricing error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[159]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update pricing'
    });
  }
});
// ----- Users (Legacy Routes - Trust/Reputation Management) -----
// Note: Core user management is now in /admin/users router
// Keeping trust/reputation management here as it uses reputationService
/* istanbul ignore next */
cov_20cso3vjpj().s[160]++;
router.post('/users/:id/trust', [admin_1.requireCSRF, (0, express_validator_1.body)('delta').isInt()], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[14]++;
  cov_20cso3vjpj().s[161]++;
  try {
    const {
      delta
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[162]++, req.body);
    // Store a synthetic moderation_action with severity based on delta
    const type =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[163]++, 'moderation_action');
    const severity =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[164]++, Math.abs(delta));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[165]++;
    await ReputationService_1.reputationService.applyReputationDelta(req.params.id, type, {
      severity,
      action: delta >= 0 ?
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[26][0]++, 'boost') :
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[26][1]++, 'penalty')
    });
    const updatedUser =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[166]++, await User_1.User.findById(req.params.id));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[167]++;
    res.json({
      success: true,
      data: updatedUser
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[168]++;
    logger.error('Adjust trust error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[169]++;
    res.status(500).json({
      success: false,
      error: 'Failed to adjust trust'
    });
  }
});
// ----- Transactions -----
/* istanbul ignore next */
cov_20cso3vjpj().s[170]++;
router.get('/transactions', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[15]++;
  cov_20cso3vjpj().s[171]++;
  try {
    const {
      type,
      gateway,
      status,
      limit =
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[27][0]++, '50')
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[172]++, req.query);
    const filter =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[173]++, {});
    /* istanbul ignore next */
    cov_20cso3vjpj().s[174]++;
    if (type) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[28][0]++;
      cov_20cso3vjpj().s[175]++;
      filter.type = type;
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[28][1]++;
    }
    cov_20cso3vjpj().s[176]++;
    if (status) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[29][0]++;
      cov_20cso3vjpj().s[177]++;
      filter.status = status;
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[29][1]++;
    }
    cov_20cso3vjpj().s[178]++;
    if (gateway) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[30][0]++;
      cov_20cso3vjpj().s[179]++;
      filter.paymentMethod = gateway;
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[30][1]++;
    }
    const tx =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[180]++, await Transaction_1.Transaction.find(filter).sort({
      createdAt: -1
    }).limit(parseInt(limit)));
    const totals =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[181]++, await Transaction_1.Transaction.aggregate([{
      $match: filter
    }, {
      $group: {
        _id: '$currency',
        total: {
          $sum: '$amount'
        },
        count: {
          $sum: 1
        }
      }
    }]));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[182]++;
    res.json({
      success: true,
      data: {
        transactions: tx,
        totals
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[183]++;
    logger.error('List transactions error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[184]++;
    res.status(500).json({
      success: false,
      error: 'Failed to list transactions'
    });
  }
});
// ----- KYC Management -----
/* istanbul ignore next */
cov_20cso3vjpj().s[185]++;
router.get('/kyc/pending', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[16]++;
  cov_20cso3vjpj().s[186]++;
  try {
    const pendingSubmissions =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[187]++, await AgeKycService_1.ageKycService.getPendingKycSubmissions());
    /* istanbul ignore next */
    cov_20cso3vjpj().s[188]++;
    res.json({
      success: true,
      data: pendingSubmissions
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[189]++;
    logger.error('Get pending KYC submissions error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[190]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get pending KYC submissions'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[191]++;
router.get('/kyc/statistics', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[17]++;
  cov_20cso3vjpj().s[192]++;
  try {
    const stats =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[193]++, await AgeKycService_1.ageKycService.getKycStatistics());
    /* istanbul ignore next */
    cov_20cso3vjpj().s[194]++;
    res.json({
      success: true,
      data: stats
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[195]++;
    logger.error('Get KYC statistics error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[196]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get KYC statistics'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[197]++;
router.post('/kyc/:userId/approve', [admin_1.requireCSRF, (0, express_validator_1.body)('reason').optional().isString()], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[18]++;
  cov_20cso3vjpj().s[198]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[199]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[200]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[31][0]++;
      cov_20cso3vjpj().s[201]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[31][1]++;
    }
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[202]++, req.params);
    const adminId =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[203]++,
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[32][0]++, req.user?.userId) ||
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[32][1]++, 'unknown'));
    const {
      reason
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[204]++, req.body);
    const result =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[205]++, await AgeKycService_1.ageKycService.approveKyc(userId, adminId));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[206]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[33][0]++;
      cov_20cso3vjpj().s[207]++;
      res.json({
        success: true,
        message: result.message
      });
    } else {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[33][1]++;
      cov_20cso3vjpj().s[208]++;
      res.status(400).json({
        success: false,
        error: result.message
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[209]++;
    logger.error('KYC approval error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[210]++;
    res.status(500).json({
      success: false,
      error: 'Failed to approve KYC'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[211]++;
router.post('/kyc/:userId/reject', [admin_1.requireCSRF, (0, express_validator_1.body)('reason').isString().notEmpty().withMessage('Rejection reason is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[19]++;
  cov_20cso3vjpj().s[212]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[213]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[214]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[34][0]++;
      cov_20cso3vjpj().s[215]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[34][1]++;
    }
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[216]++, req.params);
    const adminId =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[217]++,
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[35][0]++, req.user?.userId) ||
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[35][1]++, 'unknown'));
    const {
      reason
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[218]++, req.body);
    const result =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[219]++, await AgeKycService_1.ageKycService.rejectKyc(userId, reason, adminId));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[220]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[36][0]++;
      cov_20cso3vjpj().s[221]++;
      res.json({
        success: true,
        message: result.message
      });
    } else {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[36][1]++;
      cov_20cso3vjpj().s[222]++;
      res.status(400).json({
        success: false,
        error: result.message
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[223]++;
    logger.error('KYC rejection error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[224]++;
    res.status(500).json({
      success: false,
      error: 'Failed to reject KYC'
    });
  }
});
// Gaming controls management
/* istanbul ignore next */
cov_20cso3vjpj().s[225]++;
router.get('/gaming/limits', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[20]++;
  cov_20cso3vjpj().s[226]++;
  try {
    const limits =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[227]++, GamingControlsService_1.gamingControlsService.getLimits());
    /* istanbul ignore next */
    cov_20cso3vjpj().s[228]++;
    res.json({
      success: true,
      data: {
        limits
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[229]++;
    logger.error('Get gaming limits error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[230]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get gaming limits'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[231]++;
router.put('/gaming/limits', [admin_1.requireCSRF], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[21]++;
  cov_20cso3vjpj().s[232]++;
  try {
    const {
      limits
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[233]++, req.body);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[234]++;
    if (
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[38][0]++, !limits) ||
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[38][1]++, typeof limits !== 'object')) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[37][0]++;
      cov_20cso3vjpj().s[235]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid limits data'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[37][1]++;
    }
    cov_20cso3vjpj().s[236]++;
    GamingControlsService_1.gamingControlsService.updateLimits(limits);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[237]++;
    res.json({
      success: true,
      message: 'Gaming limits updated successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[238]++;
    logger.error('Update gaming limits error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[239]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update gaming limits'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[240]++;
router.get('/gaming/sessions', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[22]++;
  cov_20cso3vjpj().s[241]++;
  try {
    const sessions =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[242]++, GamingControlsService_1.gamingControlsService.getActiveSessions());
    /* istanbul ignore next */
    cov_20cso3vjpj().s[243]++;
    res.json({
      success: true,
      data: {
        sessions
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[244]++;
    logger.error('Get gaming sessions error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[245]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get gaming sessions'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[246]++;
router.post('/gaming/sessions/:userId/end', [admin_1.requireCSRF], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[23]++;
  cov_20cso3vjpj().s[247]++;
  try {
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[248]++, req.params);
    const ended =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[249]++, GamingControlsService_1.gamingControlsService.forceEndSession(userId));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[250]++;
    if (ended) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[39][0]++;
      cov_20cso3vjpj().s[251]++;
      res.json({
        success: true,
        message: 'Gaming session ended successfully'
      });
    } else {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[39][1]++;
      cov_20cso3vjpj().s[252]++;
      res.status(404).json({
        success: false,
        error: 'No active session found for user'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[253]++;
    logger.error('End gaming session error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[254]++;
    res.status(500).json({
      success: false,
      error: 'Failed to end gaming session'
    });
  }
});
// Socket security management
/* istanbul ignore next */
cov_20cso3vjpj().s[255]++;
router.get('/socket/limits', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[24]++;
  cov_20cso3vjpj().s[256]++;
  try {
    const limits =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[257]++, SocketSecurityService_1.socketSecurityService.getLimits());
    /* istanbul ignore next */
    cov_20cso3vjpj().s[258]++;
    res.json({
      success: true,
      data: {
        limits
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[259]++;
    logger.error('Get socket limits error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[260]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get socket limits'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[261]++;
router.put('/socket/limits', [admin_1.requireCSRF], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[25]++;
  cov_20cso3vjpj().s[262]++;
  try {
    const {
      limits
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[263]++, req.body);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[264]++;
    if (
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[41][0]++, !limits) ||
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[41][1]++, typeof limits !== 'object')) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[40][0]++;
      cov_20cso3vjpj().s[265]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid limits data'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[40][1]++;
    }
    cov_20cso3vjpj().s[266]++;
    SocketSecurityService_1.socketSecurityService.updateLimits(limits);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[267]++;
    res.json({
      success: true,
      message: 'Socket limits updated successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[268]++;
    logger.error('Update socket limits error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[269]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update socket limits'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[270]++;
router.get('/socket/sessions', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[26]++;
  cov_20cso3vjpj().s[271]++;
  try {
    const sessions =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[272]++, SocketSecurityService_1.socketSecurityService.getActiveSessions());
    const ipConnections =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[273]++, SocketSecurityService_1.socketSecurityService.getIPConnections());
    /* istanbul ignore next */
    cov_20cso3vjpj().s[274]++;
    res.json({
      success: true,
      data: {
        sessions,
        ipConnections
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[275]++;
    logger.error('Get socket sessions error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[276]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get socket sessions'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[277]++;
router.post('/socket/sessions/:userId/disconnect', [admin_1.requireCSRF], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[27]++;
  cov_20cso3vjpj().s[278]++;
  try {
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[279]++, req.params);
    const disconnected =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[280]++, SocketSecurityService_1.socketSecurityService.forceDisconnect(userId));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[281]++;
    if (disconnected) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[42][0]++;
      cov_20cso3vjpj().s[282]++;
      res.json({
        success: true,
        message: 'Socket session disconnected successfully'
      });
    } else {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[42][1]++;
      cov_20cso3vjpj().s[283]++;
      res.status(404).json({
        success: false,
        error: 'No active session found for user'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[284]++;
    logger.error('Disconnect socket session error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[285]++;
    res.status(500).json({
      success: false,
      error: 'Failed to disconnect socket session'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[286]++;
router.post('/socket/sessions/:userId/clear-violations', [admin_1.requireCSRF], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[28]++;
  cov_20cso3vjpj().s[287]++;
  try {
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[288]++, req.params);
    const cleared =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[289]++, SocketSecurityService_1.socketSecurityService.clearViolations(userId));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[290]++;
    if (cleared) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[43][0]++;
      cov_20cso3vjpj().s[291]++;
      res.json({
        success: true,
        message: 'Violations cleared successfully'
      });
    } else {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[43][1]++;
      cov_20cso3vjpj().s[292]++;
      res.status(404).json({
        success: false,
        error: 'No active session found for user'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[293]++;
    logger.error('Clear violations error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[294]++;
    res.status(500).json({
      success: false,
      error: 'Failed to clear violations'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[295]++;
router.get('/socket/violations/:userId', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[29]++;
  cov_20cso3vjpj().s[296]++;
  try {
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[297]++, req.params);
    const violations =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[298]++, await SocketSecurityService_1.socketSecurityService.getViolationHistory(userId));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[299]++;
    res.json({
      success: true,
      data: {
        violations
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[300]++;
    logger.error('Get violation history error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[301]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get violation history'
    });
  }
});
// Cron security management
/* istanbul ignore next */
cov_20cso3vjpj().s[302]++;
router.get('/cron/configs', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[30]++;
  cov_20cso3vjpj().s[303]++;
  try {
    const configs =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[304]++, CronSecurityService_1.cronSecurityService.getAllJobConfigs());
    /* istanbul ignore next */
    cov_20cso3vjpj().s[305]++;
    res.json({
      success: true,
      data: {
        configs
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[306]++;
    logger.error('Get cron configs error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[307]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get cron configs'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[308]++;
router.get('/cron/configs/:jobName', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[31]++;
  cov_20cso3vjpj().s[309]++;
  try {
    const {
      jobName
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[310]++, req.params);
    const config =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[311]++, CronSecurityService_1.cronSecurityService.getJobConfig(jobName));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[312]++;
    if (config) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[44][0]++;
      cov_20cso3vjpj().s[313]++;
      res.json({
        success: true,
        data: {
          config
        }
      });
    } else {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[44][1]++;
      cov_20cso3vjpj().s[314]++;
      res.status(404).json({
        success: false,
        error: 'Job configuration not found'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[315]++;
    logger.error('Get cron config error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[316]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get cron config'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[317]++;
router.put('/cron/configs/:jobName', [admin_1.requireCSRF], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[32]++;
  cov_20cso3vjpj().s[318]++;
  try {
    const {
      jobName
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[319]++, req.params);
    const {
      config
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[320]++, req.body);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[321]++;
    if (
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[46][0]++, !config) ||
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[46][1]++, typeof config !== 'object')) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[45][0]++;
      cov_20cso3vjpj().s[322]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid config data'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[45][1]++;
    }
    // Validate timezone if provided
    cov_20cso3vjpj().s[323]++;
    if (
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[48][0]++, config.timezone) &&
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[48][1]++, !CronSecurityService_1.cronSecurityService.validateTimezone(config.timezone))) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[47][0]++;
      cov_20cso3vjpj().s[324]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid timezone'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[47][1]++;
    }
    cov_20cso3vjpj().s[325]++;
    CronSecurityService_1.cronSecurityService.updateJobConfig(jobName, config);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[326]++;
    res.json({
      success: true,
      message: 'Cron job configuration updated successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[327]++;
    logger.error('Update cron config error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[328]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update cron config'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[329]++;
router.get('/cron/executions', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[33]++;
  cov_20cso3vjpj().s[330]++;
  try {
    const activeExecutions =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[331]++, CronSecurityService_1.cronSecurityService.getActiveExecutions());
    /* istanbul ignore next */
    cov_20cso3vjpj().s[332]++;
    res.json({
      success: true,
      data: {
        activeExecutions
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[333]++;
    logger.error('Get cron executions error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[334]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get cron executions'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[335]++;
router.get('/cron/executions/:jobName/history', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[34]++;
  cov_20cso3vjpj().s[336]++;
  try {
    const {
      jobName
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[337]++, req.params);
    const {
      limit =
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[49][0]++, 10)
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[338]++, req.query);
    const history =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[339]++, await CronSecurityService_1.cronSecurityService.getExecutionHistory(jobName, parseInt(limit)));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[340]++;
    res.json({
      success: true,
      data: {
        history
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[341]++;
    logger.error('Get cron execution history error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[342]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get cron execution history'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[343]++;
router.post('/cron/jobs/:jobName/stop', [admin_1.requireCSRF], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[35]++;
  cov_20cso3vjpj().s[344]++;
  try {
    const {
      jobName
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[345]++, req.params);
    const stopped =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[346]++, await CronSecurityService_1.cronSecurityService.forceStopJob(jobName));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[347]++;
    if (stopped) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[50][0]++;
      cov_20cso3vjpj().s[348]++;
      res.json({
        success: true,
        message: 'Cron job stopped successfully'
      });
    } else {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[50][1]++;
      cov_20cso3vjpj().s[349]++;
      res.status(404).json({
        success: false,
        error: 'No active execution found for job'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[350]++;
    logger.error('Stop cron job error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[351]++;
    res.status(500).json({
      success: false,
      error: 'Failed to stop cron job'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[352]++;
router.post('/cron/jobs/:jobName/toggle', [admin_1.requireCSRF], async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[36]++;
  cov_20cso3vjpj().s[353]++;
  try {
    const {
      jobName
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[354]++, req.params);
    const {
      enabled
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[355]++, req.body);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[356]++;
    if (typeof enabled !== 'boolean') {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[51][0]++;
      cov_20cso3vjpj().s[357]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid enabled value'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[51][1]++;
    }
    const toggled =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[358]++, CronSecurityService_1.cronSecurityService.toggleJob(jobName, enabled));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[359]++;
    if (toggled) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[52][0]++;
      cov_20cso3vjpj().s[360]++;
      res.json({
        success: true,
        message: `Cron job ${enabled ?
        /* istanbul ignore next */
        (cov_20cso3vjpj().b[53][0]++, 'enabled') :
        /* istanbul ignore next */
        (cov_20cso3vjpj().b[53][1]++, 'disabled')} successfully`
      });
    } else {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[52][1]++;
      cov_20cso3vjpj().s[361]++;
      res.status(404).json({
        success: false,
        error: 'Job configuration not found'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[362]++;
    logger.error('Toggle cron job error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[363]++;
    res.status(500).json({
      success: false,
      error: 'Failed to toggle cron job'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[364]++;
router.get('/cron/timezones', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[37]++;
  cov_20cso3vjpj().s[365]++;
  try {
    const timezones =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[366]++, CronSecurityService_1.cronSecurityService.getSupportedTimezones());
    /* istanbul ignore next */
    cov_20cso3vjpj().s[367]++;
    res.json({
      success: true,
      data: {
        timezones
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[368]++;
    logger.error('Get timezones error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[369]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get timezones'
    });
  }
});
// Admin audit management
/* istanbul ignore next */
cov_20cso3vjpj().s[370]++;
router.get('/audit/actions', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[38]++;
  cov_20cso3vjpj().s[371]++;
  try {
    const {
      adminId,
      action,
      resource,
      limit =
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[54][0]++, 50),
      offset =
      /* istanbul ignore next */
      (cov_20cso3vjpj().b[55][0]++, 0)
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[372]++, req.query);
    const actions =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[373]++, await AdminAuditService_1.adminAuditService.getActionHistory(adminId, action, resource, parseInt(limit), parseInt(offset)));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[374]++;
    res.json({
      success: true,
      data: {
        actions
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[375]++;
    logger.error('Get admin actions error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[376]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get admin actions'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[377]++;
router.get('/audit/sessions', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[39]++;
  cov_20cso3vjpj().s[378]++;
  try {
    const sessions =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[379]++, AdminAuditService_1.adminAuditService.getActiveSessions());
    const stats =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[380]++, AdminAuditService_1.adminAuditService.getSessionStats());
    /* istanbul ignore next */
    cov_20cso3vjpj().s[381]++;
    res.json({
      success: true,
      data: {
        sessions,
        stats
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[382]++;
    logger.error('Get admin sessions error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[383]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get admin sessions'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[384]++;
router.get('/audit/report', async (req, res) => {
  /* istanbul ignore next */
  cov_20cso3vjpj().f[40]++;
  cov_20cso3vjpj().s[385]++;
  try {
    const {
      startDate,
      endDate,
      adminId
    } =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[386]++, req.query);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[387]++;
    if (
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[57][0]++, !startDate) ||
    /* istanbul ignore next */
    (cov_20cso3vjpj().b[57][1]++, !endDate)) {
      /* istanbul ignore next */
      cov_20cso3vjpj().b[56][0]++;
      cov_20cso3vjpj().s[388]++;
      return res.status(400).json({
        success: false,
        error: 'Start date and end date are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cso3vjpj().b[56][1]++;
    }
    const report =
    /* istanbul ignore next */
    (cov_20cso3vjpj().s[389]++, await AdminAuditService_1.adminAuditService.generateActivityReport(new Date(startDate), new Date(endDate), adminId));
    /* istanbul ignore next */
    cov_20cso3vjpj().s[390]++;
    res.json({
      success: true,
      data: {
        report
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cso3vjpj().s[391]++;
    logger.error('Generate audit report error:', error);
    /* istanbul ignore next */
    cov_20cso3vjpj().s[392]++;
    res.status(500).json({
      success: false,
      error: 'Failed to generate audit report'
    });
  }
});
/* istanbul ignore next */
cov_20cso3vjpj().s[393]++;
exports.default = router;