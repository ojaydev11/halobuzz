950c80a6a4c3fdb715b202279b97f8f6
"use strict";

/* istanbul ignore next */
function cov_12otc6rh1q() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\global-payments.ts";
  var hash = "ff09a4877c90ce0bac6ef864a108d11f7cd7c0ee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\global-payments.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 44
        }
      },
      "6": {
        start: {
          line: 9,
          column: 31
        },
        end: {
          line: 9,
          column: 91
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 40
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "9": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 110,
          column: 3
        }
      },
      "10": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "11": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 69
        }
      },
      "12": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "13": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "14": {
        start: {
          line: 47,
          column: 81
        },
        end: {
          line: 47,
          column: 89
        }
      },
      "15": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 39
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "17": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "18": {
        start: {
          line: 56,
          column: 21
        },
        end: {
          line: 56,
          column: 55
        }
      },
      "19": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "20": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 61,
          column: 15
        }
      },
      "21": {
        start: {
          line: 64,
          column: 23
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "22": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "23": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 82,
          column: 15
        }
      },
      "24": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "25": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 101,
          column: 11
        }
      },
      "26": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 73
        }
      },
      "27": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      },
      "28": {
        start: {
          line: 112,
          column: 0
        },
        end: {
          line: 190,
          column: 3
        }
      },
      "29": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "30": {
        start: {
          line: 121,
          column: 23
        },
        end: {
          line: 121,
          column: 69
        }
      },
      "31": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "32": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "33": {
        start: {
          line: 128,
          column: 51
        },
        end: {
          line: 128,
          column: 59
        }
      },
      "34": {
        start: {
          line: 129,
          column: 23
        },
        end: {
          line: 129,
          column: 39
        }
      },
      "35": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "36": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 134,
          column: 15
        }
      },
      "37": {
        start: {
          line: 137,
          column: 23
        },
        end: {
          line: 137,
          column: 71
        }
      },
      "38": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "39": {
        start: {
          line: 139,
          column: 34
        },
        end: {
          line: 139,
          column: 86
        }
      },
      "40": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "41": {
        start: {
          line: 142,
          column: 40
        },
        end: {
          line: 142,
          column: 72
        }
      },
      "42": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 149,
          column: 19
        }
      },
      "43": {
        start: {
          line: 151,
          column: 36
        },
        end: {
          line: 151,
          column: 88
        }
      },
      "44": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 156,
          column: 17
        }
      },
      "45": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 155,
          column: 23
        }
      },
      "46": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 86
        }
      },
      "47": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 166,
          column: 19
        }
      },
      "48": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 172,
          column: 19
        }
      },
      "49": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 77
        }
      },
      "50": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "51": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 76
        }
      },
      "52": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 188,
          column: 11
        }
      },
      "53": {
        start: {
          line: 192,
          column: 0
        },
        end: {
          line: 214,
          column: 3
        }
      },
      "54": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "55": {
        start: {
          line: 194,
          column: 23
        },
        end: {
          line: 194,
          column: 39
        }
      },
      "56": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "57": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 199,
          column: 15
        }
      },
      "58": {
        start: {
          line: 201,
          column: 27
        },
        end: {
          line: 201,
          column: 82
        }
      },
      "59": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 205,
          column: 11
        }
      },
      "60": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 76
        }
      },
      "61": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 212,
          column: 11
        }
      },
      "62": {
        start: {
          line: 216,
          column: 0
        },
        end: {
          line: 243,
          column: 3
        }
      },
      "63": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 242,
          column: 5
        }
      },
      "64": {
        start: {
          line: 218,
          column: 23
        },
        end: {
          line: 218,
          column: 39
        }
      },
      "65": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "66": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 223,
          column: 15
        }
      },
      "67": {
        start: {
          line: 225,
          column: 30
        },
        end: {
          line: 225,
          column: 85
        }
      },
      "68": {
        start: {
          line: 226,
          column: 28
        },
        end: {
          line: 226,
          column: 61
        }
      },
      "69": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 234,
          column: 11
        }
      },
      "70": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 70
        }
      },
      "71": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 241,
          column: 11
        }
      },
      "72": {
        start: {
          line: 245,
          column: 0
        },
        end: {
          line: 291,
          column: 3
        }
      },
      "73": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 290,
          column: 5
        }
      },
      "74": {
        start: {
          line: 257,
          column: 23
        },
        end: {
          line: 257,
          column: 69
        }
      },
      "75": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "76": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 262,
          column: 15
        }
      },
      "77": {
        start: {
          line: 264,
          column: 53
        },
        end: {
          line: 264,
          column: 61
        }
      },
      "78": {
        start: {
          line: 265,
          column: 23
        },
        end: {
          line: 265,
          column: 39
        }
      },
      "79": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "80": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 270,
          column: 15
        }
      },
      "81": {
        start: {
          line: 272,
          column: 32
        },
        end: {
          line: 272,
          column: 140
        }
      },
      "82": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 282,
          column: 11
        }
      },
      "83": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 67
        }
      },
      "84": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 289,
          column: 11
        }
      },
      "85": {
        start: {
          line: 293,
          column: 0
        },
        end: {
          line: 332,
          column: 3
        }
      },
      "86": {
        start: {
          line: 294,
          column: 4
        },
        end: {
          line: 331,
          column: 5
        }
      },
      "87": {
        start: {
          line: 295,
          column: 29
        },
        end: {
          line: 295,
          column: 39
        }
      },
      "88": {
        start: {
          line: 296,
          column: 23
        },
        end: {
          line: 296,
          column: 39
        }
      },
      "89": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "90": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 301,
          column: 15
        }
      },
      "91": {
        start: {
          line: 303,
          column: 27
        },
        end: {
          line: 303,
          column: 82
        }
      },
      "92": {
        start: {
          line: 304,
          column: 31
        },
        end: {
          line: 304,
          column: 86
        }
      },
      "93": {
        start: {
          line: 304,
          column: 52
        },
        end: {
          line: 304,
          column: 85
        }
      },
      "94": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "95": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 309,
          column: 15
        }
      },
      "96": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 323,
          column: 11
        }
      },
      "97": {
        start: {
          line: 317,
          column: 83
        },
        end: {
          line: 321,
          column: 17
        }
      },
      "98": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 71
        }
      },
      "99": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 330,
          column: 11
        }
      },
      "100": {
        start: {
          line: 334,
          column: 0
        },
        end: {
          line: 394,
          column: 3
        }
      },
      "101": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 393,
          column: 5
        }
      },
      "102": {
        start: {
          line: 346,
          column: 23
        },
        end: {
          line: 346,
          column: 69
        }
      },
      "103": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 352,
          column: 9
        }
      },
      "104": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 351,
          column: 15
        }
      },
      "105": {
        start: {
          line: 353,
          column: 52
        },
        end: {
          line: 353,
          column: 60
        }
      },
      "106": {
        start: {
          line: 354,
          column: 23
        },
        end: {
          line: 354,
          column: 39
        }
      },
      "107": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 360,
          column: 9
        }
      },
      "108": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 359,
          column: 15
        }
      },
      "109": {
        start: {
          line: 361,
          column: 27
        },
        end: {
          line: 361,
          column: 82
        }
      },
      "110": {
        start: {
          line: 362,
          column: 31
        },
        end: {
          line: 362,
          column: 86
        }
      },
      "111": {
        start: {
          line: 362,
          column: 52
        },
        end: {
          line: 362,
          column: 85
        }
      },
      "112": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "113": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 367,
          column: 15
        }
      },
      "114": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "115": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 373,
          column: 15
        }
      },
      "116": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 385,
          column: 11
        }
      },
      "117": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 71
        }
      },
      "118": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 392,
          column: 11
        }
      },
      "119": {
        start: {
          line: 395,
          column: 0
        },
        end: {
          line: 395,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 38,
            column: 3
          },
          end: {
            line: 38,
            column: 4
          }
        },
        loc: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 119,
            column: 3
          },
          end: {
            line: 119,
            column: 4
          }
        },
        loc: {
          start: {
            line: 119,
            column: 23
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 119
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 192,
            column: 26
          },
          end: {
            line: 192,
            column: 27
          }
        },
        loc: {
          start: {
            line: 192,
            column: 46
          },
          end: {
            line: 214,
            column: 1
          }
        },
        line: 192
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 216,
            column: 30
          },
          end: {
            line: 216,
            column: 31
          }
        },
        loc: {
          start: {
            line: 216,
            column: 50
          },
          end: {
            line: 243,
            column: 1
          }
        },
        line: 216
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 255,
            column: 3
          },
          end: {
            line: 255,
            column: 4
          }
        },
        loc: {
          start: {
            line: 255,
            column: 23
          },
          end: {
            line: 291,
            column: 1
          }
        },
        line: 255
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 293,
            column: 41
          },
          end: {
            line: 293,
            column: 42
          }
        },
        loc: {
          start: {
            line: 293,
            column: 61
          },
          end: {
            line: 332,
            column: 1
          }
        },
        line: 293
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 304,
            column: 47
          },
          end: {
            line: 304,
            column: 48
          }
        },
        loc: {
          start: {
            line: 304,
            column: 52
          },
          end: {
            line: 304,
            column: 85
          }
        },
        line: 304
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 317,
            column: 70
          },
          end: {
            line: 317,
            column: 71
          }
        },
        loc: {
          start: {
            line: 317,
            column: 83
          },
          end: {
            line: 321,
            column: 17
          }
        },
        line: 317
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 344,
            column: 3
          },
          end: {
            line: 344,
            column: 4
          }
        },
        loc: {
          start: {
            line: 344,
            column: 23
          },
          end: {
            line: 394,
            column: 1
          }
        },
        line: 344
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 362,
            column: 47
          },
          end: {
            line: 362,
            column: 48
          }
        },
        loc: {
          start: {
            line: 362,
            column: 52
          },
          end: {
            line: 362,
            column: 85
          }
        },
        line: 362
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 63
          },
          end: {
            line: 47,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 74
          },
          end: {
            line: 47,
            column: 76
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "8": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "9": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "10": {
        loc: {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        }, {
          start: {
            line: 168,
            column: 17
          },
          end: {
            line: 173,
            column: 13
          }
        }],
        line: 140
      },
      "11": {
        loc: {
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 156,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 156,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "12": {
        loc: {
          start: {
            line: 154,
            column: 49
          },
          end: {
            line: 154,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 49
          },
          end: {
            line: 154,
            column: 76
          }
        }, {
          start: {
            line: 154,
            column: 80
          },
          end: {
            line: 154,
            column: 81
          }
        }],
        line: 154
      },
      "13": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "14": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "15": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "16": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "17": {
        loc: {
          start: {
            line: 288,
            column: 19
          },
          end: {
            line: 288,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 44
          },
          end: {
            line: 288,
            column: 57
          }
        }, {
          start: {
            line: 288,
            column: 60
          },
          end: {
            line: 288,
            column: 88
          }
        }],
        line: 288
      },
      "18": {
        loc: {
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "19": {
        loc: {
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "20": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 352,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 352,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "21": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "22": {
        loc: {
          start: {
            line: 363,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 363
      },
      "23": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ff09a4877c90ce0bac6ef864a108d11f7cd7c0ee"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12otc6rh1q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12otc6rh1q();
var __importDefault =
/* istanbul ignore next */
(cov_12otc6rh1q().s[0]++,
/* istanbul ignore next */
(cov_12otc6rh1q().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_12otc6rh1q().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_12otc6rh1q().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_12otc6rh1q().f[0]++;
  cov_12otc6rh1q().s[1]++;
  return /* istanbul ignore next */(cov_12otc6rh1q().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_12otc6rh1q().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_12otc6rh1q().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_12otc6rh1q().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_12otc6rh1q().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_12otc6rh1q().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_12otc6rh1q().s[4]++, require("express-validator"));
const logger_1 =
/* istanbul ignore next */
(cov_12otc6rh1q().s[5]++, require("../config/logger"));
const GlobalPaymentService_1 =
/* istanbul ignore next */
(cov_12otc6rh1q().s[6]++, __importDefault(require("../services/GlobalPaymentService")));
const User_1 =
/* istanbul ignore next */
(cov_12otc6rh1q().s[7]++, require("../models/User"));
const router =
/* istanbul ignore next */
(cov_12otc6rh1q().s[8]++, express_1.default.Router());
// Process global payment
/* istanbul ignore next */
cov_12otc6rh1q().s[9]++;
router.post('/process', [(0, express_validator_1.body)('amount').isFloat({
  min: 0.01
}).withMessage('Valid amount is required'), (0, express_validator_1.body)('currency').isLength({
  min: 3,
  max: 3
}).withMessage('Valid currency code is required'), (0, express_validator_1.body)('paymentMethod').notEmpty().withMessage('Payment method is required'), (0, express_validator_1.body)('customerInfo.email').isEmail().withMessage('Valid email is required'), (0, express_validator_1.body)('customerInfo.address.line1').notEmpty().withMessage('Address line 1 is required'), (0, express_validator_1.body)('customerInfo.address.city').notEmpty().withMessage('City is required'), (0, express_validator_1.body)('customerInfo.address.postalCode').notEmpty().withMessage('Postal code is required'), (0, express_validator_1.body)('customerInfo.address.country').isLength({
  min: 2,
  max: 2
}).withMessage('Valid country code is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_12otc6rh1q().f[1]++;
  cov_12otc6rh1q().s[10]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[11]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_12otc6rh1q().s[12]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[3][0]++;
      cov_12otc6rh1q().s[13]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[3][1]++;
    }
    const {
      amount,
      currency,
      paymentMethod,
      customerInfo,
      metadata =
      /* istanbul ignore next */
      (cov_12otc6rh1q().b[4][0]++, {})
    } =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[14]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[15]++, req.user?.userId);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[16]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[5][0]++;
      cov_12otc6rh1q().s[17]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[5][1]++;
    }
    // Validate user exists
    const user =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[18]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_12otc6rh1q().s[19]++;
    if (!user) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[6][0]++;
      cov_12otc6rh1q().s[20]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[6][1]++;
    }
    // Process payment
    const result =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[21]++, await GlobalPaymentService_1.default.processPayment({
      userId,
      amount,
      currency: currency.toUpperCase(),
      paymentMethod,
      customerInfo,
      metadata: {
        ...metadata,
        userAgent: req.headers['user-agent'],
        ipAddress: req.ip
      },
      fraudCheck: true
    }));
    /* istanbul ignore next */
    cov_12otc6rh1q().s[22]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[7][0]++;
      cov_12otc6rh1q().s[23]++;
      return res.status(400).json({
        success: false,
        error: result.error,
        fraudScore: result.fraudScore
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[7][1]++;
    }
    cov_12otc6rh1q().s[24]++;
    logger_1.logger.info(`Global payment processed: ${result.transactionId}`, {
      userId,
      amount,
      currency,
      paymentMethod,
      fraudScore: result.fraudScore
    });
    /* istanbul ignore next */
    cov_12otc6rh1q().s[25]++;
    res.json({
      success: true,
      data: {
        transactionId: result.transactionId,
        paymentUrl: result.paymentUrl,
        clientSecret: result.clientSecret,
        requires3DSecure: result.requires3DSecure,
        fraudScore: result.fraudScore,
        metadata: result.metadata
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12otc6rh1q().s[26]++;
    logger_1.logger.error('Error processing global payment:', error);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[27]++;
    res.status(500).json({
      success: false,
      error: 'Payment processing failed'
    });
  }
});
// Confirm 3D Secure payment
/* istanbul ignore next */
cov_12otc6rh1q().s[28]++;
router.post('/confirm-3ds', [(0, express_validator_1.body)('transactionId').notEmpty().withMessage('Transaction ID is required'), (0, express_validator_1.body)('paymentIntentId').notEmpty().withMessage('Payment Intent ID is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_12otc6rh1q().f[2]++;
  cov_12otc6rh1q().s[29]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[30]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_12otc6rh1q().s[31]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[8][0]++;
      cov_12otc6rh1q().s[32]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[8][1]++;
    }
    const {
      transactionId,
      paymentIntentId
    } =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[33]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[34]++, req.user?.userId);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[35]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[9][0]++;
      cov_12otc6rh1q().s[36]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[9][1]++;
    }
    // Confirm 3D Secure payment with Stripe
    const stripe =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[37]++, require('stripe')(process.env.STRIPE_SECRET_KEY));
    /* istanbul ignore next */
    cov_12otc6rh1q().s[38]++;
    try {
      const paymentIntent =
      /* istanbul ignore next */
      (cov_12otc6rh1q().s[39]++, await stripe.paymentIntents.confirm(paymentIntentId));
      /* istanbul ignore next */
      cov_12otc6rh1q().s[40]++;
      if (paymentIntent.status === 'succeeded') {
        /* istanbul ignore next */
        cov_12otc6rh1q().b[10][0]++;
        // Update transaction status
        const {
          Transaction
        } =
        /* istanbul ignore next */
        (cov_12otc6rh1q().s[41]++, require('../models/Transaction'));
        /* istanbul ignore next */
        cov_12otc6rh1q().s[42]++;
        await Transaction.findOneAndUpdate({
          transactionId,
          userId
        }, {
          $set: {
            status: 'completed',
            'metadata.paymentIntentStatus': paymentIntent.status,
            'metadata.confirmedAt': new Date()
          }
        });
        // Update user balance
        const transaction =
        /* istanbul ignore next */
        (cov_12otc6rh1q().s[43]++, await Transaction.findOne({
          transactionId,
          userId
        }));
        /* istanbul ignore next */
        cov_12otc6rh1q().s[44]++;
        if (transaction) {
          /* istanbul ignore next */
          cov_12otc6rh1q().b[11][0]++;
          cov_12otc6rh1q().s[45]++;
          await User_1.User.findByIdAndUpdate(userId, {
            $inc: {
              'coins.balance':
              /* istanbul ignore next */
              (cov_12otc6rh1q().b[12][0]++, transaction.metadata?.coins) ||
              /* istanbul ignore next */
              (cov_12otc6rh1q().b[12][1]++, 0)
            }
          });
        } else
        /* istanbul ignore next */
        {
          cov_12otc6rh1q().b[11][1]++;
        }
        cov_12otc6rh1q().s[46]++;
        logger_1.logger.info(`3D Secure payment confirmed: ${transactionId}`);
        /* istanbul ignore next */
        cov_12otc6rh1q().s[47]++;
        res.json({
          success: true,
          message: 'Payment confirmed successfully',
          data: {
            transactionId,
            status: paymentIntent.status,
            amount: paymentIntent.amount
          }
        });
      } else {
        /* istanbul ignore next */
        cov_12otc6rh1q().b[10][1]++;
        cov_12otc6rh1q().s[48]++;
        res.status(400).json({
          success: false,
          error: `Payment failed: ${paymentIntent.status}`
        });
      }
    } catch (stripeError) {
      /* istanbul ignore next */
      cov_12otc6rh1q().s[49]++;
      logger_1.logger.error('Stripe confirmation error:', stripeError);
      /* istanbul ignore next */
      cov_12otc6rh1q().s[50]++;
      res.status(400).json({
        success: false,
        error: 'Payment confirmation failed'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_12otc6rh1q().s[51]++;
    logger_1.logger.error('Error confirming 3D Secure payment:', error);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[52]++;
    res.status(500).json({
      success: false,
      error: 'Payment confirmation failed'
    });
  }
});
// Get supported currencies
/* istanbul ignore next */
cov_12otc6rh1q().s[53]++;
router.get('/currencies', async (req, res) => {
  /* istanbul ignore next */
  cov_12otc6rh1q().f[3]++;
  cov_12otc6rh1q().s[54]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[55]++, req.user?.userId);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[56]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[13][0]++;
      cov_12otc6rh1q().s[57]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[13][1]++;
    }
    const currencies =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[58]++, GlobalPaymentService_1.default.getSupportedCurrencies());
    /* istanbul ignore next */
    cov_12otc6rh1q().s[59]++;
    res.json({
      success: true,
      data: currencies
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12otc6rh1q().s[60]++;
    logger_1.logger.error('Error getting supported currencies:', error);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[61]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get currencies'
    });
  }
});
// Get exchange rates
/* istanbul ignore next */
cov_12otc6rh1q().s[62]++;
router.get('/exchange-rates', async (req, res) => {
  /* istanbul ignore next */
  cov_12otc6rh1q().f[4]++;
  cov_12otc6rh1q().s[63]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[64]++, req.user?.userId);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[65]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[14][0]++;
      cov_12otc6rh1q().s[66]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[14][1]++;
    }
    const exchangeRates =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[67]++, await GlobalPaymentService_1.default.getExchangeRates());
    const ratesObject =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[68]++, Object.fromEntries(exchangeRates));
    /* istanbul ignore next */
    cov_12otc6rh1q().s[69]++;
    res.json({
      success: true,
      data: {
        baseCurrency: 'USD',
        rates: ratesObject,
        lastUpdated: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12otc6rh1q().s[70]++;
    logger_1.logger.error('Error getting exchange rates:', error);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[71]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get exchange rates'
    });
  }
});
// Convert currency
/* istanbul ignore next */
cov_12otc6rh1q().s[72]++;
router.post('/convert', [(0, express_validator_1.body)('amount').isFloat({
  min: 0.01
}).withMessage('Valid amount is required'), (0, express_validator_1.body)('fromCurrency').isLength({
  min: 3,
  max: 3
}).withMessage('Valid from currency code is required'), (0, express_validator_1.body)('toCurrency').isLength({
  min: 3,
  max: 3
}).withMessage('Valid to currency code is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_12otc6rh1q().f[5]++;
  cov_12otc6rh1q().s[73]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[74]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_12otc6rh1q().s[75]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[15][0]++;
      cov_12otc6rh1q().s[76]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[15][1]++;
    }
    const {
      amount,
      fromCurrency,
      toCurrency
    } =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[77]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[78]++, req.user?.userId);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[79]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[16][0]++;
      cov_12otc6rh1q().s[80]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[16][1]++;
    }
    const convertedAmount =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[81]++, GlobalPaymentService_1.default.convertCurrency(amount, fromCurrency.toUpperCase(), toCurrency.toUpperCase()));
    /* istanbul ignore next */
    cov_12otc6rh1q().s[82]++;
    res.json({
      success: true,
      data: {
        originalAmount: amount,
        originalCurrency: fromCurrency.toUpperCase(),
        convertedAmount,
        targetCurrency: toCurrency.toUpperCase(),
        conversionRate: convertedAmount / amount
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12otc6rh1q().s[83]++;
    logger_1.logger.error('Error converting currency:', error);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[84]++;
    res.status(400).json({
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12otc6rh1q().b[17][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12otc6rh1q().b[17][1]++, 'Currency conversion failed')
    });
  }
});
// Get payment methods for currency
/* istanbul ignore next */
cov_12otc6rh1q().s[85]++;
router.get('/payment-methods/:currency', async (req, res) => {
  /* istanbul ignore next */
  cov_12otc6rh1q().f[6]++;
  cov_12otc6rh1q().s[86]++;
  try {
    const {
      currency
    } =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[87]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[88]++, req.user?.userId);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[89]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[18][0]++;
      cov_12otc6rh1q().s[90]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[18][1]++;
    }
    const currencies =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[91]++, GlobalPaymentService_1.default.getSupportedCurrencies());
    const currencyConfig =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[92]++, currencies.find(c => {
      /* istanbul ignore next */
      cov_12otc6rh1q().f[7]++;
      cov_12otc6rh1q().s[93]++;
      return c.code === currency.toUpperCase();
    }));
    /* istanbul ignore next */
    cov_12otc6rh1q().s[94]++;
    if (!currencyConfig) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[19][0]++;
      cov_12otc6rh1q().s[95]++;
      return res.status(400).json({
        success: false,
        error: 'Currency not supported'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[19][1]++;
    }
    cov_12otc6rh1q().s[96]++;
    res.json({
      success: true,
      data: {
        currency: currencyConfig.code,
        symbol: currencyConfig.symbol,
        supportedProviders: currencyConfig.supportedProviders,
        paymentMethods: currencyConfig.supportedProviders.map(provider => {
          /* istanbul ignore next */
          cov_12otc6rh1q().f[8]++;
          cov_12otc6rh1q().s[97]++;
          return {
            id: provider,
            name: provider.charAt(0).toUpperCase() + provider.slice(1),
            supported: true
          };
        })
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12otc6rh1q().s[98]++;
    logger_1.logger.error('Error getting payment methods:', error);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[99]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get payment methods'
    });
  }
});
// Validate payment data
/* istanbul ignore next */
cov_12otc6rh1q().s[100]++;
router.post('/validate', [(0, express_validator_1.body)('amount').isFloat({
  min: 0.01
}).withMessage('Valid amount is required'), (0, express_validator_1.body)('currency').isLength({
  min: 3,
  max: 3
}).withMessage('Valid currency code is required'), (0, express_validator_1.body)('paymentMethod').notEmpty().withMessage('Payment method is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_12otc6rh1q().f[9]++;
  cov_12otc6rh1q().s[101]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[102]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_12otc6rh1q().s[103]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[20][0]++;
      cov_12otc6rh1q().s[104]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[20][1]++;
    }
    const {
      amount,
      currency,
      paymentMethod
    } =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[105]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[106]++, req.user?.userId);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[107]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[21][0]++;
      cov_12otc6rh1q().s[108]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[21][1]++;
    }
    const currencies =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[109]++, GlobalPaymentService_1.default.getSupportedCurrencies());
    const currencyConfig =
    /* istanbul ignore next */
    (cov_12otc6rh1q().s[110]++, currencies.find(c => {
      /* istanbul ignore next */
      cov_12otc6rh1q().f[10]++;
      cov_12otc6rh1q().s[111]++;
      return c.code === currency.toUpperCase();
    }));
    /* istanbul ignore next */
    cov_12otc6rh1q().s[112]++;
    if (!currencyConfig) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[22][0]++;
      cov_12otc6rh1q().s[113]++;
      return res.status(400).json({
        success: false,
        error: 'Currency not supported'
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[22][1]++;
    }
    cov_12otc6rh1q().s[114]++;
    if (!currencyConfig.supportedProviders.includes(paymentMethod)) {
      /* istanbul ignore next */
      cov_12otc6rh1q().b[23][0]++;
      cov_12otc6rh1q().s[115]++;
      return res.status(400).json({
        success: false,
        error: `Payment method ${paymentMethod} not supported for currency ${currency}`
      });
    } else
    /* istanbul ignore next */
    {
      cov_12otc6rh1q().b[23][1]++;
    }
    cov_12otc6rh1q().s[116]++;
    res.json({
      success: true,
      message: 'Payment data is valid',
      data: {
        amount,
        currency: currencyConfig.code,
        symbol: currencyConfig.symbol,
        paymentMethod,
        supported: true
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12otc6rh1q().s[117]++;
    logger_1.logger.error('Error validating payment data:', error);
    /* istanbul ignore next */
    cov_12otc6rh1q().s[118]++;
    res.status(500).json({
      success: false,
      error: 'Payment validation failed'
    });
  }
});
/* istanbul ignore next */
cov_12otc6rh1q().s[119]++;
exports.default = router;