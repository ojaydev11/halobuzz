c4b2c146dbb3f97e40cce34041792587
"use strict";

/* istanbul ignore next */
function cov_tmqxgtb4j() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\monetization.ts";
  var hash = "98434486d78fce9df73d7b25e3c897003d40451b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\monetization.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 36
        }
      },
      "4": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 30
        },
        end: {
          line: 8,
          column: 72
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 44
        }
      },
      "7": {
        start: {
          line: 10,
          column: 29
        },
        end: {
          line: 10,
          column: 75
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "9": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "10": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 28,
          column: 2
        }
      },
      "11": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 55,
          column: 3
        }
      },
      "12": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "13": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 35
        }
      },
      "14": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "15": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 40,
          column: 15
        }
      },
      "16": {
        start: {
          line: 42,
          column: 25
        },
        end: {
          line: 42,
          column: 90
        }
      },
      "17": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 73
        }
      },
      "19": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "20": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 89,
          column: 3
        }
      },
      "21": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "22": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 35
        }
      },
      "23": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "24": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 67,
          column: 15
        }
      },
      "25": {
        start: {
          line: 69,
          column: 26
        },
        end: {
          line: 69,
          column: 92
        }
      },
      "26": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "27": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 66
        }
      },
      "28": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "29": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 110,
          column: 3
        }
      },
      "30": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "31": {
        start: {
          line: 96,
          column: 25
        },
        end: {
          line: 96,
          column: 83
        }
      },
      "32": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 101,
          column: 11
        }
      },
      "33": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 69
        }
      },
      "34": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      },
      "35": {
        start: {
          line: 115,
          column: 0
        },
        end: {
          line: 131,
          column: 3
        }
      },
      "36": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "37": {
        start: {
          line: 117,
          column: 25
        },
        end: {
          line: 117,
          column: 88
        }
      },
      "38": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 122,
          column: 11
        }
      },
      "39": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 74
        }
      },
      "40": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "41": {
        start: {
          line: 136,
          column: 0
        },
        end: {
          line: 174,
          column: 3
        }
      },
      "42": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "43": {
        start: {
          line: 138,
          column: 23
        },
        end: {
          line: 138,
          column: 35
        }
      },
      "44": {
        start: {
          line: 139,
          column: 43
        },
        end: {
          line: 139,
          column: 51
        }
      },
      "45": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "46": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 144,
          column: 15
        }
      },
      "47": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "48": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 150,
          column: 15
        }
      },
      "49": {
        start: {
          line: 152,
          column: 23
        },
        end: {
          line: 152,
          column: 118
        }
      },
      "50": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "51": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 158,
          column: 15
        }
      },
      "52": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 164,
          column: 15
        }
      },
      "53": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 67
        }
      },
      "54": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 172,
          column: 11
        }
      },
      "55": {
        start: {
          line: 179,
          column: 0
        },
        end: {
          line: 195,
          column: 3
        }
      },
      "56": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 194,
          column: 5
        }
      },
      "57": {
        start: {
          line: 181,
          column: 29
        },
        end: {
          line: 181,
          column: 94
        }
      },
      "58": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "59": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 70
        }
      },
      "60": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 193,
          column: 11
        }
      },
      "61": {
        start: {
          line: 200,
          column: 0
        },
        end: {
          line: 223,
          column: 3
        }
      },
      "62": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "63": {
        start: {
          line: 202,
          column: 23
        },
        end: {
          line: 202,
          column: 35
        }
      },
      "64": {
        start: {
          line: 203,
          column: 33
        },
        end: {
          line: 203,
          column: 43
        }
      },
      "65": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "66": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 208,
          column: 15
        }
      },
      "67": {
        start: {
          line: 210,
          column: 25
        },
        end: {
          line: 210,
          column: 106
        }
      },
      "68": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "69": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 77
        }
      },
      "70": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 221,
          column: 11
        }
      },
      "71": {
        start: {
          line: 228,
          column: 0
        },
        end: {
          line: 260,
          column: 3
        }
      },
      "72": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 259,
          column: 5
        }
      },
      "73": {
        start: {
          line: 230,
          column: 23
        },
        end: {
          line: 230,
          column: 35
        }
      },
      "74": {
        start: {
          line: 231,
          column: 33
        },
        end: {
          line: 231,
          column: 43
        }
      },
      "75": {
        start: {
          line: 232,
          column: 36
        },
        end: {
          line: 232,
          column: 44
        }
      },
      "76": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "77": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 237,
          column: 15
        }
      },
      "78": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 239,
          column: 121
        }
      },
      "79": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "80": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 244,
          column: 15
        }
      },
      "81": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 250,
          column: 15
        }
      },
      "82": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 70
        }
      },
      "83": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 258,
          column: 11
        }
      },
      "84": {
        start: {
          line: 265,
          column: 0
        },
        end: {
          line: 296,
          column: 3
        }
      },
      "85": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "86": {
        start: {
          line: 267,
          column: 23
        },
        end: {
          line: 267,
          column: 35
        }
      },
      "87": {
        start: {
          line: 268,
          column: 39
        },
        end: {
          line: 268,
          column: 49
        }
      },
      "88": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "89": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 273,
          column: 15
        }
      },
      "90": {
        start: {
          line: 275,
          column: 24
        },
        end: {
          line: 275,
          column: 129
        }
      },
      "91": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "92": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 280,
          column: 15
        }
      },
      "93": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 286,
          column: 15
        }
      },
      "94": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 75
        }
      },
      "95": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 294,
          column: 11
        }
      },
      "96": {
        start: {
          line: 301,
          column: 0
        },
        end: {
          line: 317,
          column: 3
        }
      },
      "97": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 316,
          column: 5
        }
      },
      "98": {
        start: {
          line: 303,
          column: 26
        },
        end: {
          line: 303,
          column: 91
        }
      },
      "99": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 308,
          column: 11
        }
      },
      "100": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 67
        }
      },
      "101": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 315,
          column: 11
        }
      },
      "102": {
        start: {
          line: 322,
          column: 0
        },
        end: {
          line: 354,
          column: 3
        }
      },
      "103": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 353,
          column: 5
        }
      },
      "104": {
        start: {
          line: 324,
          column: 23
        },
        end: {
          line: 324,
          column: 35
        }
      },
      "105": {
        start: {
          line: 325,
          column: 30
        },
        end: {
          line: 325,
          column: 40
        }
      },
      "106": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "107": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 330,
          column: 15
        }
      },
      "108": {
        start: {
          line: 332,
          column: 23
        },
        end: {
          line: 332,
          column: 101
        }
      },
      "109": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "110": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 338,
          column: 15
        }
      },
      "111": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 344,
          column: 15
        }
      },
      "112": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 64
        }
      },
      "113": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 352,
          column: 11
        }
      },
      "114": {
        start: {
          line: 359,
          column: 0
        },
        end: {
          line: 382,
          column: 3
        }
      },
      "115": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 381,
          column: 5
        }
      },
      "116": {
        start: {
          line: 361,
          column: 23
        },
        end: {
          line: 361,
          column: 35
        }
      },
      "117": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "118": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 366,
          column: 15
        }
      },
      "119": {
        start: {
          line: 368,
          column: 29
        },
        end: {
          line: 368,
          column: 98
        }
      },
      "120": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 373,
          column: 11
        }
      },
      "121": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 70
        }
      },
      "122": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 380,
          column: 11
        }
      },
      "123": {
        start: {
          line: 387,
          column: 0
        },
        end: {
          line: 418,
          column: 3
        }
      },
      "124": {
        start: {
          line: 388,
          column: 4
        },
        end: {
          line: 417,
          column: 5
        }
      },
      "125": {
        start: {
          line: 389,
          column: 23
        },
        end: {
          line: 389,
          column: 35
        }
      },
      "126": {
        start: {
          line: 390,
          column: 24
        },
        end: {
          line: 390,
          column: 34
        }
      },
      "127": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "128": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 395,
          column: 15
        }
      },
      "129": {
        start: {
          line: 397,
          column: 24
        },
        end: {
          line: 397,
          column: 109
        }
      },
      "130": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "131": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 402,
          column: 15
        }
      },
      "132": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 408,
          column: 15
        }
      },
      "133": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 412,
          column: 69
        }
      },
      "134": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 416,
          column: 11
        }
      },
      "135": {
        start: {
          line: 423,
          column: 0
        },
        end: {
          line: 453,
          column: 3
        }
      },
      "136": {
        start: {
          line: 424,
          column: 4
        },
        end: {
          line: 452,
          column: 5
        }
      },
      "137": {
        start: {
          line: 425,
          column: 23
        },
        end: {
          line: 425,
          column: 35
        }
      },
      "138": {
        start: {
          line: 426,
          column: 48
        },
        end: {
          line: 426,
          column: 56
        }
      },
      "139": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 432,
          column: 9
        }
      },
      "140": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 431,
          column: 15
        }
      },
      "141": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 438,
          column: 9
        }
      },
      "142": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 437,
          column: 15
        }
      },
      "143": {
        start: {
          line: 439,
          column: 27
        },
        end: {
          line: 439,
          column: 112
        }
      },
      "144": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 444,
          column: 11
        }
      },
      "145": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 447,
          column: 63
        }
      },
      "146": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 451,
          column: 11
        }
      },
      "147": {
        start: {
          line: 454,
          column: 0
        },
        end: {
          line: 454,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 72
          },
          end: {
            line: 33,
            column: 73
          }
        },
        loc: {
          start: {
            line: 33,
            column: 92
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 60,
            column: 65
          },
          end: {
            line: 60,
            column: 66
          }
        },
        loc: {
          start: {
            line: 60,
            column: 85
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 60
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 94,
            column: 38
          },
          end: {
            line: 94,
            column: 39
          }
        },
        loc: {
          start: {
            line: 94,
            column: 58
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 94
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 115,
            column: 47
          },
          end: {
            line: 115,
            column: 48
          }
        },
        loc: {
          start: {
            line: 115,
            column: 67
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 115
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 136,
            column: 61
          },
          end: {
            line: 136,
            column: 62
          }
        },
        loc: {
          start: {
            line: 136,
            column: 81
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 136
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 179,
            column: 41
          },
          end: {
            line: 179,
            column: 42
          }
        },
        loc: {
          start: {
            line: 179,
            column: 61
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 179
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 200,
            column: 90
          },
          end: {
            line: 200,
            column: 91
          }
        },
        loc: {
          start: {
            line: 200,
            column: 110
          },
          end: {
            line: 223,
            column: 1
          }
        },
        line: 200
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 228,
            column: 87
          },
          end: {
            line: 228,
            column: 88
          }
        },
        loc: {
          start: {
            line: 228,
            column: 107
          },
          end: {
            line: 260,
            column: 1
          }
        },
        line: 228
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 265,
            column: 94
          },
          end: {
            line: 265,
            column: 95
          }
        },
        loc: {
          start: {
            line: 265,
            column: 114
          },
          end: {
            line: 296,
            column: 1
          }
        },
        line: 265
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 301,
            column: 40
          },
          end: {
            line: 301,
            column: 41
          }
        },
        loc: {
          start: {
            line: 301,
            column: 60
          },
          end: {
            line: 317,
            column: 1
          }
        },
        line: 301
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 322,
            column: 79
          },
          end: {
            line: 322,
            column: 80
          }
        },
        loc: {
          start: {
            line: 322,
            column: 99
          },
          end: {
            line: 354,
            column: 1
          }
        },
        line: 322
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 359,
            column: 69
          },
          end: {
            line: 359,
            column: 70
          }
        },
        loc: {
          start: {
            line: 359,
            column: 89
          },
          end: {
            line: 382,
            column: 1
          }
        },
        line: 359
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 387,
            column: 81
          },
          end: {
            line: 387,
            column: 82
          }
        },
        loc: {
          start: {
            line: 387,
            column: 101
          },
          end: {
            line: 418,
            column: 1
          }
        },
        line: 387
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 423,
            column: 69
          },
          end: {
            line: 423,
            column: 70
          }
        },
        loc: {
          start: {
            line: 423,
            column: 89
          },
          end: {
            line: 453,
            column: 1
          }
        },
        line: 423
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "6": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "7": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: 160,
            column: 13
          },
          end: {
            line: 165,
            column: 9
          }
        }],
        line: 153
      },
      "8": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 153,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 153,
            column: 26
          }
        }, {
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 153,
            column: 48
          }
        }],
        line: 153
      },
      "9": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "10": {
        loc: {
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 232,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 232,
            column: 26
          },
          end: {
            line: 232,
            column: 31
          }
        }],
        line: 232
      },
      "11": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "12": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: 246,
            column: 13
          },
          end: {
            line: 251,
            column: 9
          }
        }],
        line: 240
      },
      "13": {
        loc: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "14": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        }, {
          start: {
            line: 282,
            column: 13
          },
          end: {
            line: 287,
            column: 9
          }
        }],
        line: 276
      },
      "15": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "16": {
        loc: {
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        }, {
          start: {
            line: 340,
            column: 13
          },
          end: {
            line: 345,
            column: 9
          }
        }],
        line: 333
      },
      "17": {
        loc: {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 333,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 333,
            column: 26
          }
        }, {
          start: {
            line: 333,
            column: 30
          },
          end: {
            line: 333,
            column: 44
          }
        }],
        line: 333
      },
      "18": {
        loc: {
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "19": {
        loc: {
          start: {
            line: 391,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 391
      },
      "20": {
        loc: {
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        }, {
          start: {
            line: 404,
            column: 13
          },
          end: {
            line: 409,
            column: 9
          }
        }],
        line: 398
      },
      "21": {
        loc: {
          start: {
            line: 426,
            column: 26
          },
          end: {
            line: 426,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 426,
            column: 35
          },
          end: {
            line: 426,
            column: 43
          }
        }],
        line: 426
      },
      "22": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 432,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 432,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "23": {
        loc: {
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 438,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 438,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "98434486d78fce9df73d7b25e3c897003d40451b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_tmqxgtb4j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_tmqxgtb4j();
var __importDefault =
/* istanbul ignore next */
(cov_tmqxgtb4j().s[0]++,
/* istanbul ignore next */
(cov_tmqxgtb4j().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_tmqxgtb4j().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_tmqxgtb4j().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[0]++;
  cov_tmqxgtb4j().s[1]++;
  return /* istanbul ignore next */(cov_tmqxgtb4j().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_tmqxgtb4j().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_tmqxgtb4j().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_tmqxgtb4j().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_tmqxgtb4j().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_tmqxgtb4j().s[3]++, require("express"));
const auth_1 =
/* istanbul ignore next */
(cov_tmqxgtb4j().s[4]++, require("../middleware/auth"));
const MonetizationService_1 =
/* istanbul ignore next */
(cov_tmqxgtb4j().s[5]++, require("../services/MonetizationService"));
const logger_1 =
/* istanbul ignore next */
(cov_tmqxgtb4j().s[6]++, require("../config/logger"));
const express_rate_limit_1 =
/* istanbul ignore next */
(cov_tmqxgtb4j().s[7]++, __importDefault(require("express-rate-limit")));
const router =
/* istanbul ignore next */
(cov_tmqxgtb4j().s[8]++, (0, express_1.Router)());
// Rate limiting for monetization endpoints
const iapLimit =
/* istanbul ignore next */
(cov_tmqxgtb4j().s[9]++, (0, express_rate_limit_1.default)({
  windowMs: 60000,
  // 1 minute
  max: 10,
  // 10 IAP requests per minute
  message: {
    success: false,
    error: 'Too many purchase requests. Please wait before trying again.'
  }
}));
const generalLimit =
/* istanbul ignore next */
(cov_tmqxgtb4j().s[10]++, (0, express_rate_limit_1.default)({
  windowMs: 60000,
  // 1 minute
  max: 30,
  // 30 requests per minute
  message: {
    success: false,
    error: 'Too many requests. Please wait before trying again.'
  }
}));
/**
 * GET /monetization/currency/balance
 * Get user's virtual currency balance
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[11]++;
router.get('/currency/balance', auth_1.authenticateToken, generalLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[1]++;
  cov_tmqxgtb4j().s[12]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[13]++, req.user?.id);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[14]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[3][0]++;
      cov_tmqxgtb4j().s[15]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[3][1]++;
    }
    const currency =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[16]++, MonetizationService_1.monetizationService.getUserCurrency(userId));
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[17]++;
    res.json({
      success: true,
      currency
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[18]++;
    logger_1.logger.error('Error fetching currency balance:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[19]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch currency balance'
    });
  }
});
/**
 * GET /monetization/inventory
 * Get user's complete inventory
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[20]++;
router.get('/inventory', auth_1.authenticateToken, generalLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[2]++;
  cov_tmqxgtb4j().s[21]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[22]++, req.user?.id);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[23]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[4][0]++;
      cov_tmqxgtb4j().s[24]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[4][1]++;
    }
    const inventory =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[25]++, MonetizationService_1.monetizationService.getUserInventory(userId));
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[26]++;
    res.json({
      success: true,
      inventory: {
        userId: inventory.userId,
        currency: inventory.currency,
        cosmetics: Array.from(inventory.cosmetics.values()),
        boosts: Array.from(inventory.boosts.values()),
        consumables: Object.fromEntries(inventory.consumables),
        lastUpdated: inventory.lastUpdated
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[27]++;
    logger_1.logger.error('Error fetching inventory:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[28]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch inventory'
    });
  }
});
/**
 * GET /monetization/products
 * Get all IAP products
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[29]++;
router.get('/products', generalLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[3]++;
  cov_tmqxgtb4j().s[30]++;
  try {
    const products =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[31]++, MonetizationService_1.monetizationService.getIAPProducts());
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[32]++;
    res.json({
      success: true,
      products,
      total: products.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[33]++;
    logger_1.logger.error('Error fetching IAP products:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[34]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch products'
    });
  }
});
/**
 * GET /monetization/products/featured
 * Get featured IAP products
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[35]++;
router.get('/products/featured', generalLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[4]++;
  cov_tmqxgtb4j().s[36]++;
  try {
    const products =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[37]++, MonetizationService_1.monetizationService.getFeaturedProducts());
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[38]++;
    res.json({
      success: true,
      products,
      total: products.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[39]++;
    logger_1.logger.error('Error fetching featured products:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[40]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch featured products'
    });
  }
});
/**
 * POST /monetization/purchase
 * Process an IAP purchase
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[41]++;
router.post('/purchase', auth_1.authenticateToken, iapLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[5]++;
  cov_tmqxgtb4j().s[42]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[43]++, req.user?.id);
    const {
      productId,
      receiptData
    } =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[44]++, req.body);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[45]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[5][0]++;
      cov_tmqxgtb4j().s[46]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[5][1]++;
    }
    cov_tmqxgtb4j().s[47]++;
    if (!productId) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[6][0]++;
      cov_tmqxgtb4j().s[48]++;
      return res.status(400).json({
        success: false,
        error: 'Product ID is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[6][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[49]++, await MonetizationService_1.monetizationService.processPurchase(userId, productId, receiptData));
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_tmqxgtb4j().b[8][0]++, result.success) &&
    /* istanbul ignore next */
    (cov_tmqxgtb4j().b[8][1]++, result.transaction)) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[7][0]++;
      cov_tmqxgtb4j().s[51]++;
      res.json({
        success: true,
        transaction: result.transaction,
        message: 'Purchase completed successfully'
      });
    } else {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[7][1]++;
      cov_tmqxgtb4j().s[52]++;
      res.status(400).json({
        success: false,
        error: 'Failed to process purchase'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[53]++;
    logger_1.logger.error('Error processing purchase:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[54]++;
    res.status(500).json({
      success: false,
      error: 'Failed to process purchase'
    });
  }
});
/**
 * GET /monetization/battle-pass
 * Get active battle passes
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[55]++;
router.get('/battle-pass', generalLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[6]++;
  cov_tmqxgtb4j().s[56]++;
  try {
    const battlePasses =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[57]++, MonetizationService_1.monetizationService.getActiveBattlePasses());
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[58]++;
    res.json({
      success: true,
      battlePasses,
      total: battlePasses.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[59]++;
    logger_1.logger.error('Error fetching battle passes:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[60]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch battle passes'
    });
  }
});
/**
 * GET /monetization/battle-pass/:battlePassId/progress
 * Get user's battle pass progress
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[61]++;
router.get('/battle-pass/:battlePassId/progress', auth_1.authenticateToken, generalLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[7]++;
  cov_tmqxgtb4j().s[62]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[63]++, req.user?.id);
    const {
      battlePassId
    } =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[64]++, req.params);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[65]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[9][0]++;
      cov_tmqxgtb4j().s[66]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[9][1]++;
    }
    const progress =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[67]++, MonetizationService_1.monetizationService.getUserBattlePass(userId, battlePassId));
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[68]++;
    res.json({
      success: true,
      progress
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[69]++;
    logger_1.logger.error('Error fetching battle pass progress:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[70]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch battle pass progress'
    });
  }
});
/**
 * POST /monetization/battle-pass/:battlePassId/purchase
 * Purchase a battle pass
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[71]++;
router.post('/battle-pass/:battlePassId/purchase', auth_1.authenticateToken, iapLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[8]++;
  cov_tmqxgtb4j().s[72]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[73]++, req.user?.id);
    const {
      battlePassId
    } =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[74]++, req.params);
    const {
      useGems =
      /* istanbul ignore next */
      (cov_tmqxgtb4j().b[10][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[75]++, req.body);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[76]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[11][0]++;
      cov_tmqxgtb4j().s[77]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[11][1]++;
    }
    const success =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[78]++, await MonetizationService_1.monetizationService.purchaseBattlePass(userId, battlePassId, useGems));
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[79]++;
    if (success) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[12][0]++;
      cov_tmqxgtb4j().s[80]++;
      res.json({
        success: true,
        message: 'Battle pass purchased successfully'
      });
    } else {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[12][1]++;
      cov_tmqxgtb4j().s[81]++;
      res.status(400).json({
        success: false,
        error: 'Failed to purchase battle pass'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[82]++;
    logger_1.logger.error('Error purchasing battle pass:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[83]++;
    res.status(500).json({
      success: false,
      error: 'Failed to purchase battle pass'
    });
  }
});
/**
 * POST /monetization/battle-pass/:battlePassId/claim/:tier
 * Claim battle pass reward
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[84]++;
router.post('/battle-pass/:battlePassId/claim/:tier', auth_1.authenticateToken, generalLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[9]++;
  cov_tmqxgtb4j().s[85]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[86]++, req.user?.id);
    const {
      battlePassId,
      tier
    } =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[87]++, req.params);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[88]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[13][0]++;
      cov_tmqxgtb4j().s[89]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[13][1]++;
    }
    const success =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[90]++, await MonetizationService_1.monetizationService.claimBattlePassReward(userId, battlePassId, Number(tier)));
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[91]++;
    if (success) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[14][0]++;
      cov_tmqxgtb4j().s[92]++;
      res.json({
        success: true,
        message: 'Battle pass reward claimed successfully'
      });
    } else {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[14][1]++;
      cov_tmqxgtb4j().s[93]++;
      res.status(400).json({
        success: false,
        error: 'Failed to claim battle pass reward'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[94]++;
    logger_1.logger.error('Error claiming battle pass reward:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[95]++;
    res.status(500).json({
      success: false,
      error: 'Failed to claim battle pass reward'
    });
  }
});
/**
 * GET /monetization/loot-boxes
 * Get available loot boxes
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[96]++;
router.get('/loot-boxes', generalLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[10]++;
  cov_tmqxgtb4j().s[97]++;
  try {
    const lootBoxes =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[98]++, MonetizationService_1.monetizationService.getAvailableLootBoxes());
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[99]++;
    res.json({
      success: true,
      lootBoxes,
      total: lootBoxes.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[100]++;
    logger_1.logger.error('Error fetching loot boxes:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[101]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch loot boxes'
    });
  }
});
/**
 * POST /monetization/loot-boxes/:lootBoxId/open
 * Open a loot box
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[102]++;
router.post('/loot-boxes/:lootBoxId/open', auth_1.authenticateToken, iapLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[11]++;
  cov_tmqxgtb4j().s[103]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[104]++, req.user?.id);
    const {
      lootBoxId
    } =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[105]++, req.params);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[106]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[15][0]++;
      cov_tmqxgtb4j().s[107]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[15][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[108]++, await MonetizationService_1.monetizationService.openLootBox(userId, lootBoxId));
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[109]++;
    if (
    /* istanbul ignore next */
    (cov_tmqxgtb4j().b[17][0]++, result.success) &&
    /* istanbul ignore next */
    (cov_tmqxgtb4j().b[17][1]++, result.rewards)) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[16][0]++;
      cov_tmqxgtb4j().s[110]++;
      res.json({
        success: true,
        rewards: result.rewards,
        message: 'Loot box opened successfully'
      });
    } else {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[16][1]++;
      cov_tmqxgtb4j().s[111]++;
      res.status(400).json({
        success: false,
        error: 'Failed to open loot box'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[112]++;
    logger_1.logger.error('Error opening loot box:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[113]++;
    res.status(500).json({
      success: false,
      error: 'Failed to open loot box'
    });
  }
});
/**
 * GET /monetization/daily-rewards
 * Get user's daily rewards status
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[114]++;
router.get('/daily-rewards', auth_1.authenticateToken, generalLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[12]++;
  cov_tmqxgtb4j().s[115]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[116]++, req.user?.id);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[117]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[18][0]++;
      cov_tmqxgtb4j().s[118]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[18][1]++;
    }
    const dailyRewards =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[119]++, MonetizationService_1.monetizationService.getUserDailyRewards(userId));
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[120]++;
    res.json({
      success: true,
      dailyRewards,
      total: dailyRewards.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[121]++;
    logger_1.logger.error('Error fetching daily rewards:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[122]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch daily rewards'
    });
  }
});
/**
 * POST /monetization/daily-rewards/:day/claim
 * Claim daily reward
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[123]++;
router.post('/daily-rewards/:day/claim', auth_1.authenticateToken, generalLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[13]++;
  cov_tmqxgtb4j().s[124]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[125]++, req.user?.id);
    const {
      day
    } =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[126]++, req.params);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[127]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[19][0]++;
      cov_tmqxgtb4j().s[128]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[19][1]++;
    }
    const success =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[129]++, await MonetizationService_1.monetizationService.claimDailyReward(userId, Number(day)));
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[130]++;
    if (success) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[20][0]++;
      cov_tmqxgtb4j().s[131]++;
      res.json({
        success: true,
        message: 'Daily reward claimed successfully'
      });
    } else {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[20][1]++;
      cov_tmqxgtb4j().s[132]++;
      res.status(400).json({
        success: false,
        error: 'Failed to claim daily reward'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[133]++;
    logger_1.logger.error('Error claiming daily reward:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[134]++;
    res.status(500).json({
      success: false,
      error: 'Failed to claim daily reward'
    });
  }
});
/**
 * POST /monetization/currency/add
 * Add currency to user account (for testing or game rewards)
 */
/* istanbul ignore next */
cov_tmqxgtb4j().s[135]++;
router.post('/currency/add', auth_1.authenticateToken, generalLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_tmqxgtb4j().f[14]++;
  cov_tmqxgtb4j().s[136]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[137]++, req.user?.id);
    const {
      currency,
      source =
      /* istanbul ignore next */
      (cov_tmqxgtb4j().b[21][0]++, 'reward')
    } =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[138]++, req.body);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[139]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[22][0]++;
      cov_tmqxgtb4j().s[140]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[22][1]++;
    }
    cov_tmqxgtb4j().s[141]++;
    if (!currency) {
      /* istanbul ignore next */
      cov_tmqxgtb4j().b[23][0]++;
      cov_tmqxgtb4j().s[142]++;
      return res.status(400).json({
        success: false,
        error: 'Currency amount is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_tmqxgtb4j().b[23][1]++;
    }
    const newBalance =
    /* istanbul ignore next */
    (cov_tmqxgtb4j().s[143]++, await MonetizationService_1.monetizationService.addCurrency(userId, currency, source));
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[144]++;
    res.json({
      success: true,
      newBalance,
      message: 'Currency added successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[145]++;
    logger_1.logger.error('Error adding currency:', error);
    /* istanbul ignore next */
    cov_tmqxgtb4j().s[146]++;
    res.status(500).json({
      success: false,
      error: 'Failed to add currency'
    });
  }
});
/* istanbul ignore next */
cov_tmqxgtb4j().s[147]++;
exports.default = router;