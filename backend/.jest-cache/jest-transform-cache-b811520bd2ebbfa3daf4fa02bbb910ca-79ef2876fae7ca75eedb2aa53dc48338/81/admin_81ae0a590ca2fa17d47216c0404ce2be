c3b3a6ef5198f0046da6ba9017113568
"use strict";

/* istanbul ignore next */
function cov_1g0um3sktn() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\middleware\\admin.ts";
  var hash = "d68e631aa6256e86a840d680c23bc0f6712f6575";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\middleware\\admin.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 163
        }
      },
      "4": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 57
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 43
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 39
        }
      },
      "7": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 67
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "9": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 74,
          column: 1
        }
      },
      "10": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "12": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 71
        }
      },
      "13": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "14": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 61
        }
      },
      "15": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 23,
          column: 28
        }
      },
      "16": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "17": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 82
        }
      },
      "18": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "19": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 95
        }
      },
      "20": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 69
        }
      },
      "21": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 19
        }
      },
      "22": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "23": {
        start: {
          line: 32,
          column: 30
        },
        end: {
          line: 32,
          column: 57
        }
      },
      "24": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 39,
          column: 13
        }
      },
      "25": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 37,
          column: 19
        }
      },
      "26": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 23
        }
      },
      "27": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 89
        }
      },
      "28": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "29": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 46,
          column: 19
        }
      },
      "30": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 23
        }
      },
      "31": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 55,
          column: 14
        }
      },
      "32": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "33": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 84
        }
      },
      "34": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 61,
          column: 19
        }
      },
      "35": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 23
        }
      },
      "36": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 32
        }
      },
      "37": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 75
        }
      },
      "38": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "39": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 49
        }
      },
      "40": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 54
        }
      },
      "41": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 75,
          column: 30
        }
      },
      "42": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 107,
          column: 1
        }
      },
      "43": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "44": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "45": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 19
        }
      },
      "46": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 19
        }
      },
      "47": {
        start: {
          line: 84,
          column: 26
        },
        end: {
          line: 84,
          column: 53
        }
      },
      "48": {
        start: {
          line: 85,
          column: 33
        },
        end: {
          line: 85,
          column: 55
        }
      },
      "49": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "50": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "51": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 19
        }
      },
      "52": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "53": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 82
        }
      },
      "54": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 98,
          column: 15
        }
      },
      "55": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 19
        }
      },
      "56": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "57": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 54
        }
      },
      "58": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 65
        }
      },
      "59": {
        start: {
          line: 108,
          column: 0
        },
        end: {
          line: 108,
          column: 34
        }
      },
      "60": {
        start: {
          line: 110,
          column: 29
        },
        end: {
          line: 145,
          column: 1
        }
      },
      "61": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "62": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "63": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 71
        }
      },
      "64": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 19
        }
      },
      "65": {
        start: {
          line: 116,
          column: 25
        },
        end: {
          line: 116,
          column: 51
        }
      },
      "66": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "67": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "68": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 19
        }
      },
      "69": {
        start: {
          line: 125,
          column: 21
        },
        end: {
          line: 125,
          column: 87
        }
      },
      "70": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "71": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 62
        }
      },
      "72": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 19
        }
      },
      "73": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "74": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "75": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "76": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 23
        }
      },
      "77": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 15
        }
      },
      "78": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 53
        }
      },
      "79": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 64
        }
      },
      "80": {
        start: {
          line: 146,
          column: 0
        },
        end: {
          line: 146,
          column: 52
        }
      },
      "81": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 172,
          column: 1
        }
      },
      "82": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "83": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "84": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 71
        }
      },
      "85": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 19
        }
      },
      "86": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "87": {
        start: {
          line: 155,
          column: 29
        },
        end: {
          line: 155,
          column: 35
        }
      },
      "88": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 156,
          column: 78
        }
      },
      "89": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "90": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 99
        }
      },
      "91": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 162,
          column: 19
        }
      },
      "92": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 23
        }
      },
      "93": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "94": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 49
        }
      },
      "95": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 60
        }
      },
      "96": {
        start: {
          line: 173,
          column: 0
        },
        end: {
          line: 173,
          column: 44
        }
      },
      "97": {
        start: {
          line: 175,
          column: 25
        },
        end: {
          line: 219,
          column: 1
        }
      },
      "98": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 218,
          column: 6
        }
      },
      "99": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "100": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "101": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 75
        }
      },
      "102": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 23
        }
      },
      "103": {
        start: {
          line: 183,
          column: 36
        },
        end: {
          line: 183,
          column: 133
        }
      },
      "104": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "105": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 191,
          column: 19
        }
      },
      "106": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 245
        }
      },
      "107": {
        start: {
          line: 197,
          column: 33
        },
        end: {
          line: 197,
          column: 41
        }
      },
      "108": {
        start: {
          line: 198,
          column: 35
        },
        end: {
          line: 198,
          column: 45
        }
      },
      "109": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 203,
          column: 14
        }
      },
      "110": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 39
        }
      },
      "111": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 28
        }
      },
      "112": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 211,
          column: 14
        }
      },
      "113": {
        start: {
          line: 206,
          column: 32
        },
        end: {
          line: 206,
          column: 53
        }
      },
      "114": {
        start: {
          line: 207,
          column: 30
        },
        end: {
          line: 207,
          column: 78
        }
      },
      "115": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 161
        }
      },
      "116": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 53
        }
      },
      "117": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 19
        }
      },
      "118": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 65
        }
      },
      "119": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 19
        }
      },
      "120": {
        start: {
          line: 220,
          column: 0
        },
        end: {
          line: 220,
          column: 44
        }
      },
      "121": {
        start: {
          line: 222,
          column: 27
        },
        end: {
          line: 241,
          column: 1
        }
      },
      "122": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 240,
          column: 5
        }
      },
      "123": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "124": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 71
        }
      },
      "125": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 19
        }
      },
      "126": {
        start: {
          line: 229,
          column: 26
        },
        end: {
          line: 229,
          column: 53
        }
      },
      "127": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "128": {
        start: {
          line: 232,
          column: 33
        },
        end: {
          line: 232,
          column: 121
        }
      },
      "129": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 56
        }
      },
      "130": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 15
        }
      },
      "131": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 63
        }
      },
      "132": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 15
        }
      },
      "133": {
        start: {
          line: 242,
          column: 0
        },
        end: {
          line: 242,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 19
          }
        },
        loc: {
          start: {
            line: 12,
            column: 44
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 22,
            column: 44
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 77,
            column: 20
          },
          end: {
            line: 77,
            column: 21
          }
        },
        loc: {
          start: {
            line: 77,
            column: 40
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 77
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 110,
            column: 29
          },
          end: {
            line: 110,
            column: 30
          }
        },
        loc: {
          start: {
            line: 110,
            column: 55
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 110
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 148,
            column: 25
          },
          end: {
            line: 148,
            column: 26
          }
        },
        loc: {
          start: {
            line: 148,
            column: 45
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 148
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 175,
            column: 25
          },
          end: {
            line: 175,
            column: 26
          }
        },
        loc: {
          start: {
            line: 175,
            column: 47
          },
          end: {
            line: 219,
            column: 1
          }
        },
        line: 175
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 176,
            column: 11
          },
          end: {
            line: 176,
            column: 12
          }
        },
        loc: {
          start: {
            line: 176,
            column: 37
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 176
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 200,
            column: 25
          },
          end: {
            line: 200,
            column: 26
          }
        },
        loc: {
          start: {
            line: 200,
            column: 41
          },
          end: {
            line: 203,
            column: 13
          }
        },
        line: 200
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 204,
            column: 23
          },
          end: {
            line: 204,
            column: 24
          }
        },
        loc: {
          start: {
            line: 204,
            column: 39
          },
          end: {
            line: 211,
            column: 13
          }
        },
        line: 204
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 222,
            column: 27
          },
          end: {
            line: 222,
            column: 28
          }
        },
        loc: {
          start: {
            line: 222,
            column: 53
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 222
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 55
          }
        }, {
          start: {
            line: 19,
            column: 59
          },
          end: {
            line: 19,
            column: 61
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 24,
            column: 46
          },
          end: {
            line: 24,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 46
          },
          end: {
            line: 24,
            column: 60
          }
        }, {
          start: {
            line: 24,
            column: 64
          },
          end: {
            line: 24,
            column: 66
          }
        }],
        line: 24
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 21
          }
        }, {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 41
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "13": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "14": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 22
          }
        }, {
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 43
          }
        }],
        line: 86
      },
      "15": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "16": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "17": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "18": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "19": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "20": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "21": {
        loc: {
          start: {
            line: 131,
            column: 16
          },
          end: {
            line: 131,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 16
          },
          end: {
            line: 131,
            column: 34
          }
        }, {
          start: {
            line: 131,
            column: 38
          },
          end: {
            line: 131,
            column: 75
          }
        }],
        line: 131
      },
      "22": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "23": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "24": {
        loc: {
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 156,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 156,
            column: 72
          }
        }, {
          start: {
            line: 156,
            column: 76
          },
          end: {
            line: 156,
            column: 78
          }
        }],
        line: 156
      },
      "25": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "26": {
        loc: {
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 157,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 157,
            column: 37
          }
        }, {
          start: {
            line: 157,
            column: 41
          },
          end: {
            line: 157,
            column: 71
          }
        }],
        line: 157
      },
      "27": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "28": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "29": {
        loc: {
          start: {
            line: 207,
            column: 30
          },
          end: {
            line: 207,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 207,
            column: 40
          },
          end: {
            line: 207,
            column: 49
          }
        }, {
          start: {
            line: 207,
            column: 52
          },
          end: {
            line: 207,
            column: 78
          }
        }],
        line: 207
      },
      "30": {
        loc: {
          start: {
            line: 207,
            column: 52
          },
          end: {
            line: 207,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 52
          },
          end: {
            line: 207,
            column: 62
          }
        }, {
          start: {
            line: 207,
            column: 66
          },
          end: {
            line: 207,
            column: 78
          }
        }],
        line: 207
      },
      "31": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "32": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d68e631aa6256e86a840d680c23bc0f6712f6575"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1g0um3sktn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1g0um3sktn();
var __importDefault =
/* istanbul ignore next */
(cov_1g0um3sktn().s[0]++,
/* istanbul ignore next */
(cov_1g0um3sktn().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1g0um3sktn().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1g0um3sktn().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1g0um3sktn().f[0]++;
  cov_1g0um3sktn().s[1]++;
  return /* istanbul ignore next */(cov_1g0um3sktn().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1g0um3sktn().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1g0um3sktn().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1g0um3sktn().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1g0um3sktn().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1g0um3sktn().s[3]++;
exports.manageAdminSession = exports.auditAdminAction = exports.requireIPPinning = exports.requireDeviceBinding = exports.requireCSRF = exports.adminOnly = void 0;
const speakeasy_1 =
/* istanbul ignore next */
(cov_1g0um3sktn().s[4]++, __importDefault(require("speakeasy")));
const logger_1 =
/* istanbul ignore next */
(cov_1g0um3sktn().s[5]++, require("@/config/logger"));
const User_1 =
/* istanbul ignore next */
(cov_1g0um3sktn().s[6]++, require("@/models/User"));
const AdminAuditService_1 =
/* istanbul ignore next */
(cov_1g0um3sktn().s[7]++, require("@/services/AdminAuditService"));
const logger =
/* istanbul ignore next */
(cov_1g0um3sktn().s[8]++, (0, logger_1.setupLogger)());
/* istanbul ignore next */
cov_1g0um3sktn().s[9]++;
const adminOnly = async (req, res, next) => {
  /* istanbul ignore next */
  cov_1g0um3sktn().f[1]++;
  cov_1g0um3sktn().s[10]++;
  try {
    /* istanbul ignore next */
    cov_1g0um3sktn().s[11]++;
    if (!req.user) {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[3][0]++;
      cov_1g0um3sktn().s[12]++;
      res.status(401).json({
        error: 'Authentication required'
      });
      /* istanbul ignore next */
      cov_1g0um3sktn().s[13]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[3][1]++;
    }
    // Check admin email whitelist
    const adminEmailsEnv =
    /* istanbul ignore next */
    (cov_1g0um3sktn().s[14]++,
    /* istanbul ignore next */
    (cov_1g0um3sktn().b[4][0]++, process.env.ADMIN_EMAILS) ||
    /* istanbul ignore next */
    (cov_1g0um3sktn().b[4][1]++, ''));
    const adminEmails =
    /* istanbul ignore next */
    (cov_1g0um3sktn().s[15]++, adminEmailsEnv.split(',').map(e => {
      /* istanbul ignore next */
      cov_1g0um3sktn().f[2]++;
      cov_1g0um3sktn().s[16]++;
      return e.trim().toLowerCase();
    }).filter(Boolean));
    const isAdmin =
    /* istanbul ignore next */
    (cov_1g0um3sktn().s[17]++, adminEmails.includes((
    /* istanbul ignore next */
    (cov_1g0um3sktn().b[5][0]++, req.user.email) ||
    /* istanbul ignore next */
    (cov_1g0um3sktn().b[5][1]++, '')).toLowerCase()));
    /* istanbul ignore next */
    cov_1g0um3sktn().s[18]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[6][0]++;
      cov_1g0um3sktn().s[19]++;
      logger.warn(`Admin access denied for user ${req.user.userId} (${req.user.email})`);
      /* istanbul ignore next */
      cov_1g0um3sktn().s[20]++;
      res.status(403).json({
        error: 'Admin access required'
      });
      /* istanbul ignore next */
      cov_1g0um3sktn().s[21]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[6][1]++;
    }
    // Check if 2FA is required and verified
    cov_1g0um3sktn().s[22]++;
    if (process.env.ADMIN_TOTP_REQUIRED === 'true') {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[7][0]++;
      const totpToken =
      /* istanbul ignore next */
      (cov_1g0um3sktn().s[23]++, req.headers['x-totp-token']);
      /* istanbul ignore next */
      cov_1g0um3sktn().s[24]++;
      if (!totpToken) {
        /* istanbul ignore next */
        cov_1g0um3sktn().b[8][0]++;
        cov_1g0um3sktn().s[25]++;
        res.status(403).json({
          error: '2FA required',
          message: 'TOTP token is required for admin access'
        });
        /* istanbul ignore next */
        cov_1g0um3sktn().s[26]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1g0um3sktn().b[8][1]++;
      }
      // Verify TOTP token using speakeasy
      const user =
      /* istanbul ignore next */
      (cov_1g0um3sktn().s[27]++, await User_1.User.findById(req.user.userId).select('totpSecret'));
      /* istanbul ignore next */
      cov_1g0um3sktn().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_1g0um3sktn().b[10][0]++, !user) ||
      /* istanbul ignore next */
      (cov_1g0um3sktn().b[10][1]++, !user.totpSecret)) {
        /* istanbul ignore next */
        cov_1g0um3sktn().b[9][0]++;
        cov_1g0um3sktn().s[29]++;
        res.status(403).json({
          error: '2FA not configured',
          message: 'TOTP not configured for this admin account'
        });
        /* istanbul ignore next */
        cov_1g0um3sktn().s[30]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1g0um3sktn().b[9][1]++;
      }
      // Verify the TOTP token
      const isValidTOTP =
      /* istanbul ignore next */
      (cov_1g0um3sktn().s[31]++, speakeasy_1.default.totp.verify({
        secret: user.totpSecret,
        encoding: 'base32',
        token: totpToken,
        window: 2
      }));
      /* istanbul ignore next */
      cov_1g0um3sktn().s[32]++;
      if (!isValidTOTP) {
        /* istanbul ignore next */
        cov_1g0um3sktn().b[11][0]++;
        cov_1g0um3sktn().s[33]++;
        logger.warn(`Invalid TOTP token for admin user ${req.user.userId}`);
        /* istanbul ignore next */
        cov_1g0um3sktn().s[34]++;
        res.status(403).json({
          error: 'Invalid 2FA token',
          message: 'Invalid TOTP token provided'
        });
        /* istanbul ignore next */
        cov_1g0um3sktn().s[35]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1g0um3sktn().b[11][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[7][1]++;
    }
    // Mark user as admin for this request
    cov_1g0um3sktn().s[36]++;
    req.user.isAdmin = true;
    /* istanbul ignore next */
    cov_1g0um3sktn().s[37]++;
    req.user.totpVerified = process.env.ADMIN_TOTP_REQUIRED === 'true';
    /* istanbul ignore next */
    cov_1g0um3sktn().s[38]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1g0um3sktn().s[39]++;
    logger.error('Admin RBAC error:', error);
    /* istanbul ignore next */
    cov_1g0um3sktn().s[40]++;
    res.status(500).json({
      error: 'RBAC error'
    });
  }
};
/* istanbul ignore next */
cov_1g0um3sktn().s[41]++;
exports.adminOnly = adminOnly;
// CSRF protection for admin routes
/* istanbul ignore next */
cov_1g0um3sktn().s[42]++;
const requireCSRF = (req, res, next) => {
  /* istanbul ignore next */
  cov_1g0um3sktn().f[3]++;
  cov_1g0um3sktn().s[43]++;
  try {
    /* istanbul ignore next */
    cov_1g0um3sktn().s[44]++;
    // Skip CSRF for GET requests
    if (req.method === 'GET') {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[12][0]++;
      cov_1g0um3sktn().s[45]++;
      next();
      /* istanbul ignore next */
      cov_1g0um3sktn().s[46]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[12][1]++;
    }
    const csrfToken =
    /* istanbul ignore next */
    (cov_1g0um3sktn().s[47]++, req.headers['x-csrf-token']);
    const sessionCSRFToken =
    /* istanbul ignore next */
    (cov_1g0um3sktn().s[48]++, req.session?.csrfToken);
    /* istanbul ignore next */
    cov_1g0um3sktn().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_1g0um3sktn().b[14][0]++, !csrfToken) ||
    /* istanbul ignore next */
    (cov_1g0um3sktn().b[14][1]++, !sessionCSRFToken)) {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[13][0]++;
      cov_1g0um3sktn().s[50]++;
      res.status(403).json({
        error: 'CSRF token required',
        message: 'CSRF token is required for this operation'
      });
      /* istanbul ignore next */
      cov_1g0um3sktn().s[51]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[13][1]++;
    }
    cov_1g0um3sktn().s[52]++;
    if (csrfToken !== sessionCSRFToken) {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[15][0]++;
      cov_1g0um3sktn().s[53]++;
      logger.warn(`CSRF token mismatch for admin user ${req.user?.userId}`);
      /* istanbul ignore next */
      cov_1g0um3sktn().s[54]++;
      res.status(403).json({
        error: 'Invalid CSRF token',
        message: 'CSRF token does not match'
      });
      /* istanbul ignore next */
      cov_1g0um3sktn().s[55]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[15][1]++;
    }
    cov_1g0um3sktn().s[56]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1g0um3sktn().s[57]++;
    logger.error('CSRF validation error:', error);
    /* istanbul ignore next */
    cov_1g0um3sktn().s[58]++;
    res.status(500).json({
      error: 'CSRF validation error'
    });
  }
};
/* istanbul ignore next */
cov_1g0um3sktn().s[59]++;
exports.requireCSRF = requireCSRF;
// Device binding middleware
/* istanbul ignore next */
cov_1g0um3sktn().s[60]++;
const requireDeviceBinding = async (req, res, next) => {
  /* istanbul ignore next */
  cov_1g0um3sktn().f[4]++;
  cov_1g0um3sktn().s[61]++;
  try {
    /* istanbul ignore next */
    cov_1g0um3sktn().s[62]++;
    if (!req.user) {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[16][0]++;
      cov_1g0um3sktn().s[63]++;
      res.status(401).json({
        error: 'Authentication required'
      });
      /* istanbul ignore next */
      cov_1g0um3sktn().s[64]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[16][1]++;
    }
    const deviceId =
    /* istanbul ignore next */
    (cov_1g0um3sktn().s[65]++, req.headers['x-device-id']);
    /* istanbul ignore next */
    cov_1g0um3sktn().s[66]++;
    if (!deviceId) {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[17][0]++;
      cov_1g0um3sktn().s[67]++;
      res.status(403).json({
        error: 'Device binding required',
        message: 'Device ID is required for admin access'
      });
      /* istanbul ignore next */
      cov_1g0um3sktn().s[68]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[17][1]++;
    }
    // Check if device is bound to this admin user
    const user =
    /* istanbul ignore next */
    (cov_1g0um3sktn().s[69]++, await User_1.User.findById(req.user.userId).select('boundDevices'));
    /* istanbul ignore next */
    cov_1g0um3sktn().s[70]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[18][0]++;
      cov_1g0um3sktn().s[71]++;
      res.status(401).json({
        error: 'User not found'
      });
      /* istanbul ignore next */
      cov_1g0um3sktn().s[72]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[18][1]++;
    }
    cov_1g0um3sktn().s[73]++;
    if (process.env.ENABLE_DEVICE_BINDING === 'true') {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[19][0]++;
      cov_1g0um3sktn().s[74]++;
      if (
      /* istanbul ignore next */
      (cov_1g0um3sktn().b[21][0]++, !user.boundDevices) ||
      /* istanbul ignore next */
      (cov_1g0um3sktn().b[21][1]++, !user.boundDevices.includes(deviceId))) {
        /* istanbul ignore next */
        cov_1g0um3sktn().b[20][0]++;
        cov_1g0um3sktn().s[75]++;
        res.status(403).json({
          error: 'Device not authorized',
          message: 'This device is not authorized for admin access'
        });
        /* istanbul ignore next */
        cov_1g0um3sktn().s[76]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1g0um3sktn().b[20][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[19][1]++;
    }
    cov_1g0um3sktn().s[77]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1g0um3sktn().s[78]++;
    logger.error('Device binding error:', error);
    /* istanbul ignore next */
    cov_1g0um3sktn().s[79]++;
    res.status(500).json({
      error: 'Device binding error'
    });
  }
};
/* istanbul ignore next */
cov_1g0um3sktn().s[80]++;
exports.requireDeviceBinding = requireDeviceBinding;
// IP pinning middleware (optional)
/* istanbul ignore next */
cov_1g0um3sktn().s[81]++;
const requireIPPinning = (req, res, next) => {
  /* istanbul ignore next */
  cov_1g0um3sktn().f[5]++;
  cov_1g0um3sktn().s[82]++;
  try {
    /* istanbul ignore next */
    cov_1g0um3sktn().s[83]++;
    if (!req.user) {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[22][0]++;
      cov_1g0um3sktn().s[84]++;
      res.status(401).json({
        error: 'Authentication required'
      });
      /* istanbul ignore next */
      cov_1g0um3sktn().s[85]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[22][1]++;
    }
    cov_1g0um3sktn().s[86]++;
    if (process.env.ENABLE_IP_PINNING === 'true') {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[23][0]++;
      const clientIP =
      /* istanbul ignore next */
      (cov_1g0um3sktn().s[87]++, req.ip);
      const allowedIPs =
      /* istanbul ignore next */
      (cov_1g0um3sktn().s[88]++,
      /* istanbul ignore next */
      (cov_1g0um3sktn().b[24][0]++, process.env.ADMIN_ALLOWED_IPS?.split(',')) ||
      /* istanbul ignore next */
      (cov_1g0um3sktn().b[24][1]++, []));
      /* istanbul ignore next */
      cov_1g0um3sktn().s[89]++;
      if (
      /* istanbul ignore next */
      (cov_1g0um3sktn().b[26][0]++, allowedIPs.length > 0) &&
      /* istanbul ignore next */
      (cov_1g0um3sktn().b[26][1]++, !allowedIPs.includes(clientIP))) {
        /* istanbul ignore next */
        cov_1g0um3sktn().b[25][0]++;
        cov_1g0um3sktn().s[90]++;
        logger.warn(`Admin access denied from IP ${clientIP} for user ${req.user.userId}`);
        /* istanbul ignore next */
        cov_1g0um3sktn().s[91]++;
        res.status(403).json({
          error: 'IP not authorized',
          message: 'Access from this IP address is not authorized'
        });
        /* istanbul ignore next */
        cov_1g0um3sktn().s[92]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1g0um3sktn().b[25][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[23][1]++;
    }
    cov_1g0um3sktn().s[93]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1g0um3sktn().s[94]++;
    logger.error('IP pinning error:', error);
    /* istanbul ignore next */
    cov_1g0um3sktn().s[95]++;
    res.status(500).json({
      error: 'IP pinning error'
    });
  }
};
/* istanbul ignore next */
cov_1g0um3sktn().s[96]++;
exports.requireIPPinning = requireIPPinning;
// Admin audit middleware
/* istanbul ignore next */
cov_1g0um3sktn().s[97]++;
const auditAdminAction = (action, resource) => {
  /* istanbul ignore next */
  cov_1g0um3sktn().f[6]++;
  cov_1g0um3sktn().s[98]++;
  return async (req, res, next) => {
    /* istanbul ignore next */
    cov_1g0um3sktn().f[7]++;
    cov_1g0um3sktn().s[99]++;
    try {
      /* istanbul ignore next */
      cov_1g0um3sktn().s[100]++;
      if (!req.user) {
        /* istanbul ignore next */
        cov_1g0um3sktn().b[27][0]++;
        cov_1g0um3sktn().s[101]++;
        res.status(401).json({
          error: 'Authentication required'
        });
        /* istanbul ignore next */
        cov_1g0um3sktn().s[102]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1g0um3sktn().b[27][1]++;
      }
      // Check for suspicious activity
      const suspiciousCheck =
      /* istanbul ignore next */
      (cov_1g0um3sktn().s[103]++, await AdminAuditService_1.adminAuditService.checkSuspiciousActivity(req.user.userId, action, req));
      /* istanbul ignore next */
      cov_1g0um3sktn().s[104]++;
      if (suspiciousCheck.suspicious) {
        /* istanbul ignore next */
        cov_1g0um3sktn().b[28][0]++;
        cov_1g0um3sktn().s[105]++;
        logger.warn(`Suspicious admin activity detected: ${req.user.email} - ${suspiciousCheck.reason}`, {
          adminId: req.user.userId,
          action,
          resource,
          riskScore: suspiciousCheck.riskScore,
          ip: req.ip
        });
        // Log the suspicious activity
        /* istanbul ignore next */
        cov_1g0um3sktn().s[106]++;
        await AdminAuditService_1.adminAuditService.logAction(req.user.userId, req.user.email, action, resource, req.params.id, {
          ...req.body,
          suspicious: true,
          riskScore: suspiciousCheck.riskScore
        }, req, false, suspiciousCheck.reason);
        // Don't block the action, but log it for review
      } else
      /* istanbul ignore next */
      {
        cov_1g0um3sktn().b[28][1]++;
      }
      // Store original response methods
      const originalJson =
      /* istanbul ignore next */
      (cov_1g0um3sktn().s[107]++, res.json);
      const originalStatus =
      /* istanbul ignore next */
      (cov_1g0um3sktn().s[108]++, res.status);
      // Override response methods to capture the result
      /* istanbul ignore next */
      cov_1g0um3sktn().s[109]++;
      res.status = function (code) {
        /* istanbul ignore next */
        cov_1g0um3sktn().f[8]++;
        cov_1g0um3sktn().s[110]++;
        this.statusCode = code;
        /* istanbul ignore next */
        cov_1g0um3sktn().s[111]++;
        return this;
      };
      /* istanbul ignore next */
      cov_1g0um3sktn().s[112]++;
      res.json = function (data) {
        /* istanbul ignore next */
        cov_1g0um3sktn().f[9]++;
        // Log the admin action
        const success =
        /* istanbul ignore next */
        (cov_1g0um3sktn().s[113]++, this.statusCode < 400);
        const error =
        /* istanbul ignore next */
        (cov_1g0um3sktn().s[114]++, success ?
        /* istanbul ignore next */
        (cov_1g0um3sktn().b[29][0]++, undefined) :
        /* istanbul ignore next */
        (cov_1g0um3sktn().b[29][1]++,
        /* istanbul ignore next */
        (cov_1g0um3sktn().b[30][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_1g0um3sktn().b[30][1]++, data.message)));
        /* istanbul ignore next */
        cov_1g0um3sktn().s[115]++;
        AdminAuditService_1.adminAuditService.logAction(req.user.userId, req.user.email, action, resource, req.params.id, req.body, req, success, error);
        // Call original method
        /* istanbul ignore next */
        cov_1g0um3sktn().s[116]++;
        return originalJson.call(this, data);
      };
      /* istanbul ignore next */
      cov_1g0um3sktn().s[117]++;
      next();
    } catch (error) {
      /* istanbul ignore next */
      cov_1g0um3sktn().s[118]++;
      logger.error('Admin audit middleware error:', error);
      /* istanbul ignore next */
      cov_1g0um3sktn().s[119]++;
      next();
    }
  };
};
/* istanbul ignore next */
cov_1g0um3sktn().s[120]++;
exports.auditAdminAction = auditAdminAction;
// Admin session management middleware
/* istanbul ignore next */
cov_1g0um3sktn().s[121]++;
const manageAdminSession = async (req, res, next) => {
  /* istanbul ignore next */
  cov_1g0um3sktn().f[10]++;
  cov_1g0um3sktn().s[122]++;
  try {
    /* istanbul ignore next */
    cov_1g0um3sktn().s[123]++;
    if (!req.user) {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[31][0]++;
      cov_1g0um3sktn().s[124]++;
      res.status(401).json({
        error: 'Authentication required'
      });
      /* istanbul ignore next */
      cov_1g0um3sktn().s[125]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[31][1]++;
    }
    // Check if this is a new session
    const sessionId =
    /* istanbul ignore next */
    (cov_1g0um3sktn().s[126]++, req.headers['x-session-id']);
    /* istanbul ignore next */
    cov_1g0um3sktn().s[127]++;
    if (!sessionId) {
      /* istanbul ignore next */
      cov_1g0um3sktn().b[32][0]++;
      // Start new session
      const newSessionId =
      /* istanbul ignore next */
      (cov_1g0um3sktn().s[128]++, AdminAuditService_1.adminAuditService.startSession(req.user.userId, req.user.email, req));
      /* istanbul ignore next */
      cov_1g0um3sktn().s[129]++;
      res.setHeader('X-Session-ID', newSessionId);
    } else
    /* istanbul ignore next */
    {
      cov_1g0um3sktn().b[32][1]++;
    }
    cov_1g0um3sktn().s[130]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1g0um3sktn().s[131]++;
    logger.error('Admin session management error:', error);
    /* istanbul ignore next */
    cov_1g0um3sktn().s[132]++;
    next();
  }
};
/* istanbul ignore next */
cov_1g0um3sktn().s[133]++;
exports.manageAdminSession = manageAdminSession;