2287a4e91b81425c5d7328b537d29340
"use strict";

/* istanbul ignore next */
function cov_2idmnmqyi4() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\og.ts";
  var hash = "87c1df315bc46a8f123823400ab8c204946429f0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\og.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 44
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 10,
          column: 54
        }
      },
      "8": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 68
        }
      },
      "9": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 44
        }
      },
      "10": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "11": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "12": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 42,
          column: 3
        }
      },
      "13": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "14": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 86
        }
      },
      "15": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "16": {
        start: {
          line: 22,
          column: 42
        },
        end: {
          line: 31,
          column: 17
        }
      },
      "17": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 61
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "19": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 77,
          column: 3
        }
      },
      "20": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "21": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 33
        }
      },
      "22": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "23": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "24": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "25": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "26": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 60
        }
      },
      "27": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 75,
          column: 11
        }
      },
      "28": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 218,
          column: 3
        }
      },
      "29": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 217,
          column: 5
        }
      },
      "30": {
        start: {
          line: 88,
          column: 23
        },
        end: {
          line: 88,
          column: 69
        }
      },
      "31": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "32": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "33": {
        start: {
          line: 95,
          column: 42
        },
        end: {
          line: 95,
          column: 50
        }
      },
      "34": {
        start: {
          line: 96,
          column: 23
        },
        end: {
          line: 96,
          column: 39
        }
      },
      "35": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "36": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "37": {
        start: {
          line: 104,
          column: 21
        },
        end: {
          line: 104,
          column: 55
        }
      },
      "38": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "39": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 109,
          column: 15
        }
      },
      "40": {
        start: {
          line: 112,
          column: 21
        },
        end: {
          line: 112,
          column: 59
        }
      },
      "41": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "42": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 117,
          column: 15
        }
      },
      "43": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "44": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 123,
          column: 15
        }
      },
      "45": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "46": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 130,
          column: 15
        }
      },
      "47": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "48": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "49": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 139,
          column: 19
        }
      },
      "50": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 147,
          column: 15
        }
      },
      "51": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 46
        }
      },
      "52": {
        start: {
          line: 150,
          column: 13
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "53": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 155,
          column: 15
        }
      },
      "54": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "55": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 161,
          column: 15
        }
      },
      "56": {
        start: {
          line: 164,
          column: 30
        },
        end: {
          line: 166,
          column: 24
        }
      },
      "57": {
        start: {
          line: 167,
          column: 26
        },
        end: {
          line: 167,
          column: 97
        }
      },
      "58": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 172,
          column: 11
        }
      },
      "59": {
        start: {
          line: 174,
          column: 28
        },
        end: {
          line: 188,
          column: 10
        }
      },
      "60": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 33
        }
      },
      "61": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 193,
          column: 11
        }
      },
      "62": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 209,
          column: 11
        }
      },
      "63": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 64
        }
      },
      "64": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 216,
          column: 11
        }
      },
      "65": {
        start: {
          line: 220,
          column: 0
        },
        end: {
          line: 278,
          column: 3
        }
      },
      "66": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "67": {
        start: {
          line: 222,
          column: 23
        },
        end: {
          line: 222,
          column: 39
        }
      },
      "68": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "69": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 227,
          column: 15
        }
      },
      "70": {
        start: {
          line: 229,
          column: 21
        },
        end: {
          line: 229,
          column: 55
        }
      },
      "71": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "72": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 234,
          column: 15
        }
      },
      "73": {
        start: {
          line: 237,
          column: 26
        },
        end: {
          line: 237,
          column: 30
        }
      },
      "74": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "75": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 96
        }
      },
      "76": {
        start: {
          line: 242,
          column: 23
        },
        end: {
          line: 242,
          column: 27
        }
      },
      "77": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "78": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 120
        }
      },
      "79": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 269,
          column: 11
        }
      },
      "80": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 62
        }
      },
      "81": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 276,
          column: 11
        }
      },
      "82": {
        start: {
          line: 280,
          column: 0
        },
        end: {
          line: 338,
          column: 3
        }
      },
      "83": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 337,
          column: 5
        }
      },
      "84": {
        start: {
          line: 282,
          column: 23
        },
        end: {
          line: 282,
          column: 39
        }
      },
      "85": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "86": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 287,
          column: 15
        }
      },
      "87": {
        start: {
          line: 289,
          column: 21
        },
        end: {
          line: 289,
          column: 55
        }
      },
      "88": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "89": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 294,
          column: 15
        }
      },
      "90": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "91": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 302,
          column: 15
        }
      },
      "92": {
        start: {
          line: 304,
          column: 21
        },
        end: {
          line: 304,
          column: 90
        }
      },
      "93": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 312,
          column: 9
        }
      },
      "94": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 311,
          column: 15
        }
      },
      "95": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 329,
          column: 11
        }
      },
      "96": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 64
        }
      },
      "97": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 336,
          column: 11
        }
      },
      "98": {
        start: {
          line: 340,
          column: 0
        },
        end: {
          line: 371,
          column: 3
        }
      },
      "99": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 370,
          column: 5
        }
      },
      "100": {
        start: {
          line: 342,
          column: 31
        },
        end: {
          line: 342,
          column: 40
        }
      },
      "101": {
        start: {
          line: 343,
          column: 22
        },
        end: {
          line: 349,
          column: 70
        }
      },
      "102": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 362,
          column: 11
        }
      },
      "103": {
        start: {
          line: 353,
          column: 48
        },
        end: {
          line: 360,
          column: 17
        }
      },
      "104": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 67
        }
      },
      "105": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 369,
          column: 11
        }
      },
      "106": {
        start: {
          line: 372,
          column: 0
        },
        end: {
          line: 372,
          column: 25
        }
      },
      "107": {
        start: {
          line: 374,
          column: 0
        },
        end: {
          line: 427,
          column: 3
        }
      },
      "108": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 426,
          column: 5
        }
      },
      "109": {
        start: {
          line: 376,
          column: 23
        },
        end: {
          line: 376,
          column: 39
        }
      },
      "110": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 379,
          column: 9
        }
      },
      "111": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 94
        }
      },
      "112": {
        start: {
          line: 380,
          column: 21
        },
        end: {
          line: 380,
          column: 55
        }
      },
      "113": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "114": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 85
        }
      },
      "115": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "116": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 95
        }
      },
      "117": {
        start: {
          line: 387,
          column: 21
        },
        end: {
          line: 387,
          column: 90
        }
      },
      "118": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "119": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 88
        }
      },
      "120": {
        start: {
          line: 392,
          column: 27
        },
        end: {
          line: 392,
          column: 73
        }
      },
      "121": {
        start: {
          line: 393,
          column: 25
        },
        end: {
          line: 398,
          column: 10
        }
      },
      "122": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 401,
          column: 9
        }
      },
      "123": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 98
        }
      },
      "124": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 405,
          column: 11
        }
      },
      "125": {
        start: {
          line: 407,
          column: 20
        },
        end: {
          line: 416,
          column: 10
        }
      },
      "126": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 25
        }
      },
      "127": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 421,
          column: 11
        }
      },
      "128": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 69
        }
      },
      "129": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 87
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 22
          }
        },
        loc: {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 22,
            column: 34
          }
        },
        loc: {
          start: {
            line: 22,
            column: 42
          },
          end: {
            line: 31,
            column: 17
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 26
          }
        },
        loc: {
          start: {
            line: 44,
            column: 45
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 86,
            column: 3
          },
          end: {
            line: 86,
            column: 4
          }
        },
        loc: {
          start: {
            line: 86,
            column: 23
          },
          end: {
            line: 218,
            column: 1
          }
        },
        line: 86
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 220,
            column: 22
          },
          end: {
            line: 220,
            column: 23
          }
        },
        loc: {
          start: {
            line: 220,
            column: 42
          },
          end: {
            line: 278,
            column: 1
          }
        },
        line: 220
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 280,
            column: 24
          },
          end: {
            line: 280,
            column: 25
          }
        },
        loc: {
          start: {
            line: 280,
            column: 44
          },
          end: {
            line: 338,
            column: 1
          }
        },
        line: 280
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 340,
            column: 27
          },
          end: {
            line: 340,
            column: 28
          }
        },
        loc: {
          start: {
            line: 340,
            column: 47
          },
          end: {
            line: 371,
            column: 1
          }
        },
        line: 340
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 353,
            column: 39
          },
          end: {
            line: 353,
            column: 40
          }
        },
        loc: {
          start: {
            line: 353,
            column: 48
          },
          end: {
            line: 360,
            column: 17
          }
        },
        line: 353
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 374,
            column: 34
          },
          end: {
            line: 374,
            column: 35
          }
        },
        loc: {
          start: {
            line: 374,
            column: 54
          },
          end: {
            line: 427,
            column: 1
          }
        },
        line: 374
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "5": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "6": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "7": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "8": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "9": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "10": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: 150,
            column: 13
          },
          end: {
            line: 156,
            column: 9
          }
        }],
        line: 133
      },
      "11": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "12": {
        loc: {
          start: {
            line: 150,
            column: 13
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 13
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "13": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "14": {
        loc: {
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 166,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 14
          },
          end: {
            line: 165,
            column: 30
          }
        }, {
          start: {
            line: 166,
            column: 14
          },
          end: {
            line: 166,
            column: 24
          }
        }],
        line: 164
      },
      "15": {
        loc: {
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 164,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 164,
            column: 46
          }
        }, {
          start: {
            line: 164,
            column: 50
          },
          end: {
            line: 164,
            column: 79
          }
        }],
        line: 164
      },
      "16": {
        loc: {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 48
          },
          end: {
            line: 177,
            column: 63
          }
        }, {
          start: {
            line: 177,
            column: 66
          },
          end: {
            line: 177,
            column: 79
          }
        }],
        line: 177
      },
      "17": {
        loc: {
          start: {
            line: 178,
            column: 22
          },
          end: {
            line: 178,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 178,
            column: 50
          },
          end: {
            line: 178,
            column: 57
          }
        }, {
          start: {
            line: 178,
            column: 60
          },
          end: {
            line: 178,
            column: 65
          }
        }],
        line: 178
      },
      "18": {
        loc: {
          start: {
            line: 180,
            column: 27
          },
          end: {
            line: 180,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 56
          },
          end: {
            line: 180,
            column: 64
          }
        }, {
          start: {
            line: 180,
            column: 67
          },
          end: {
            line: 180,
            column: 76
          }
        }],
        line: 180
      },
      "19": {
        loc: {
          start: {
            line: 187,
            column: 23
          },
          end: {
            line: 187,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 51
          },
          end: {
            line: 187,
            column: 66
          }
        }, {
          start: {
            line: 187,
            column: 69
          },
          end: {
            line: 187,
            column: 82
          }
        }],
        line: 187
      },
      "20": {
        loc: {
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "21": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "22": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "23": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "24": {
        loc: {
          start: {
            line: 252,
            column: 30
          },
          end: {
            line: 252,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 49
          },
          end: {
            line: 252,
            column: 78
          }
        }, {
          start: {
            line: 252,
            column: 81
          },
          end: {
            line: 252,
            column: 86
          }
        }],
        line: 252
      },
      "25": {
        loc: {
          start: {
            line: 253,
            column: 33
          },
          end: {
            line: 258,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 253,
            column: 47
          },
          end: {
            line: 258,
            column: 21
          }
        }, {
          start: {
            line: 258,
            column: 24
          },
          end: {
            line: 258,
            column: 28
          }
        }],
        line: 253
      },
      "26": {
        loc: {
          start: {
            line: 259,
            column: 30
          },
          end: {
            line: 266,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 41
          },
          end: {
            line: 266,
            column: 21
          }
        }, {
          start: {
            line: 266,
            column: 24
          },
          end: {
            line: 266,
            column: 28
          }
        }],
        line: 259
      },
      "27": {
        loc: {
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "28": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "29": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "30": {
        loc: {
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "31": {
        loc: {
          start: {
            line: 342,
            column: 16
          },
          end: {
            line: 342,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 342,
            column: 24
          },
          end: {
            line: 342,
            column: 26
          }
        }],
        line: 342
      },
      "32": {
        loc: {
          start: {
            line: 359,
            column: 32
          },
          end: {
            line: 359,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 359,
            column: 32
          },
          end: {
            line: 359,
            column: 49
          }
        }, {
          start: {
            line: 359,
            column: 53
          },
          end: {
            line: 359,
            column: 54
          }
        }],
        line: 359
      },
      "33": {
        loc: {
          start: {
            line: 377,
            column: 8
          },
          end: {
            line: 379,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 8
          },
          end: {
            line: 379,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "34": {
        loc: {
          start: {
            line: 381,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 381,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 381
      },
      "35": {
        loc: {
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "36": {
        loc: {
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 384,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 384,
            column: 25
          }
        }, {
          start: {
            line: 384,
            column: 29
          },
          end: {
            line: 384,
            column: 81
          }
        }],
        line: 384
      },
      "37": {
        loc: {
          start: {
            line: 384,
            column: 31
          },
          end: {
            line: 384,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 31
          },
          end: {
            line: 384,
            column: 47
          }
        }, {
          start: {
            line: 384,
            column: 51
          },
          end: {
            line: 384,
            column: 80
          }
        }],
        line: 384
      },
      "38": {
        loc: {
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      },
      "39": {
        loc: {
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 399
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "87c1df315bc46a8f123823400ab8c204946429f0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2idmnmqyi4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2idmnmqyi4();
var __importDefault =
/* istanbul ignore next */
(cov_2idmnmqyi4().s[0]++,
/* istanbul ignore next */
(cov_2idmnmqyi4().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2idmnmqyi4().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2idmnmqyi4().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2idmnmqyi4().f[0]++;
  cov_2idmnmqyi4().s[1]++;
  return /* istanbul ignore next */(cov_2idmnmqyi4().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2idmnmqyi4().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2idmnmqyi4().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2idmnmqyi4().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2idmnmqyi4().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2idmnmqyi4().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_2idmnmqyi4().s[4]++, require("express-validator"));
const OGTier_1 =
/* istanbul ignore next */
(cov_2idmnmqyi4().s[5]++, require("../models/OGTier"));
const User_1 =
/* istanbul ignore next */
(cov_2idmnmqyi4().s[6]++, require("../models/User"));
const Transaction_1 =
/* istanbul ignore next */
(cov_2idmnmqyi4().s[7]++, require("../models/Transaction"));
const ReputationService_1 =
/* istanbul ignore next */
(cov_2idmnmqyi4().s[8]++, require("../services/ReputationService"));
const logger_1 =
/* istanbul ignore next */
(cov_2idmnmqyi4().s[9]++, require("../config/logger"));
const dayjs_1 =
/* istanbul ignore next */
(cov_2idmnmqyi4().s[10]++, __importDefault(require("dayjs")));
const router =
/* istanbul ignore next */
(cov_2idmnmqyi4().s[11]++, express_1.default.Router());
// Get OG tiers
/* istanbul ignore next */
cov_2idmnmqyi4().s[12]++;
router.get('/tiers', async (req, res) => {
  /* istanbul ignore next */
  cov_2idmnmqyi4().f[1]++;
  cov_2idmnmqyi4().s[13]++;
  try {
    const tiers =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[14]++, await OGTier_1.OGTier.find({
      isActive: true
    }).sort({
      tier: 1
    }));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[15]++;
    res.json({
      success: true,
      data: {
        tiers: tiers.map(tier => {
          /* istanbul ignore next */
          cov_2idmnmqyi4().f[2]++;
          cov_2idmnmqyi4().s[16]++;
          return {
            id: tier._id,
            tier: tier.tier,
            name: tier.name,
            description: tier.description,
            priceUSD: tier.priceUSD,
            priceCoins: tier.priceCoins,
            duration: tier.duration,
            benefits: tier.benefits
          };
        })
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[17]++;
    logger_1.logger.error('Get OG tiers failed:', error);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[18]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get OG tiers'
    });
  }
});
// Get OG tier by ID
/* istanbul ignore next */
cov_2idmnmqyi4().s[19]++;
router.get('/tiers/:id', async (req, res) => {
  /* istanbul ignore next */
  cov_2idmnmqyi4().f[3]++;
  cov_2idmnmqyi4().s[20]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[21]++, req.params);
    const tier =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[22]++, await OGTier_1.OGTier.findById(id));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[23]++;
    if (!tier) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[3][0]++;
      cov_2idmnmqyi4().s[24]++;
      return res.status(404).json({
        success: false,
        error: 'OG tier not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[3][1]++;
    }
    cov_2idmnmqyi4().s[25]++;
    res.json({
      success: true,
      data: {
        tier: {
          id: tier._id,
          tier: tier.tier,
          name: tier.name,
          description: tier.description,
          priceUSD: tier.priceUSD,
          priceCoins: tier.priceCoins,
          duration: tier.duration,
          benefits: tier.benefits
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[26]++;
    logger_1.logger.error('Get OG tier failed:', error);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[27]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get OG tier'
    });
  }
});
// Subscribe to OG tier
/* istanbul ignore next */
cov_2idmnmqyi4().s[28]++;
router.post('/subscribe', [(0, express_validator_1.body)('tierId').isMongoId().withMessage('Valid tier ID is required'), (0, express_validator_1.body)('paymentMethod').isIn(['coins', 'stripe']).withMessage('Valid payment method is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_2idmnmqyi4().f[4]++;
  cov_2idmnmqyi4().s[29]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[30]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[31]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[4][0]++;
      cov_2idmnmqyi4().s[32]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[4][1]++;
    }
    const {
      tierId,
      paymentMethod
    } =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[33]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[34]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[35]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[5][0]++;
      cov_2idmnmqyi4().s[36]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[5][1]++;
    }
    // Validate user
    const user =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[37]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[38]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[6][0]++;
      cov_2idmnmqyi4().s[39]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[6][1]++;
    }
    // Validate OG tier
    const tier =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[40]++, await OGTier_1.OGTier.findById(tierId));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[41]++;
    if (!tier) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[7][0]++;
      cov_2idmnmqyi4().s[42]++;
      return res.status(404).json({
        success: false,
        error: 'OG tier not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[7][1]++;
    }
    cov_2idmnmqyi4().s[43]++;
    if (!tier.isActive) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[8][0]++;
      cov_2idmnmqyi4().s[44]++;
      return res.status(400).json({
        success: false,
        error: 'OG tier is not available'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[8][1]++;
    }
    // Check if user already has this tier or higher
    cov_2idmnmqyi4().s[45]++;
    if (user.ogLevel >= tier.tier) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[9][0]++;
      cov_2idmnmqyi4().s[46]++;
      return res.status(400).json({
        success: false,
        error: 'You already have this tier or higher'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[9][1]++;
    }
    let paymentResult;
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[47]++;
    if (paymentMethod === 'coins') {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[10][0]++;
      cov_2idmnmqyi4().s[48]++;
      // Check if user has enough coins
      if (user.coins?.balance < tier.priceCoins) {
        /* istanbul ignore next */
        cov_2idmnmqyi4().b[11][0]++;
        cov_2idmnmqyi4().s[49]++;
        return res.status(400).json({
          success: false,
          error: 'Insufficient coins'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2idmnmqyi4().b[11][1]++;
      }
      // Deduct coins
      cov_2idmnmqyi4().s[50]++;
      await User_1.User.findByIdAndUpdate(userId, {
        $inc: {
          'coins.balance': -tier.priceCoins,
          'coins.totalSpent': tier.priceCoins
        }
      });
      /* istanbul ignore next */
      cov_2idmnmqyi4().s[51]++;
      paymentResult = {
        success: true
      };
    } else {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[10][1]++;
      cov_2idmnmqyi4().s[52]++;
      if (paymentMethod === 'stripe') {
        /* istanbul ignore next */
        cov_2idmnmqyi4().b[12][0]++;
        cov_2idmnmqyi4().s[53]++;
        // TODO: Implement Stripe payment
        return res.status(400).json({
          success: false,
          error: 'Stripe payment not implemented yet'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2idmnmqyi4().b[12][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[54]++;
    if (!paymentResult?.success) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[13][0]++;
      cov_2idmnmqyi4().s[55]++;
      return res.status(400).json({
        success: false,
        error: 'Payment failed'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[13][1]++;
    }
    // Calculate new expiry date
    const currentExpiry =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[56]++,
    /* istanbul ignore next */
    (cov_2idmnmqyi4().b[15][0]++, user.ogExpiresAt) &&
    /* istanbul ignore next */
    (cov_2idmnmqyi4().b[15][1]++, user.ogExpiresAt > new Date()) ?
    /* istanbul ignore next */
    (cov_2idmnmqyi4().b[14][0]++, user.ogExpiresAt) :
    /* istanbul ignore next */
    (cov_2idmnmqyi4().b[14][1]++, new Date()));
    const newExpiry =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[57]++, new Date(currentExpiry.getTime() + tier.duration * 24 * 60 * 60 * 1000));
    // Update user's OG status
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[58]++;
    await User_1.User.findByIdAndUpdate(userId, {
      ogLevel: tier.tier,
      ogExpiresAt: newExpiry
    });
    // Create transaction record
    const transaction =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[59]++, new Transaction_1.Transaction({
      userId,
      type: 'og_subscription',
      amount: paymentMethod === 'coins' ?
      /* istanbul ignore next */
      (cov_2idmnmqyi4().b[16][0]++, tier.priceCoins) :
      /* istanbul ignore next */
      (cov_2idmnmqyi4().b[16][1]++, tier.priceUSD),
      currency: paymentMethod === 'coins' ?
      /* istanbul ignore next */
      (cov_2idmnmqyi4().b[17][0]++, 'coins') :
      /* istanbul ignore next */
      (cov_2idmnmqyi4().b[17][1]++, 'USD'),
      status: 'completed',
      paymentMethod: paymentMethod === 'stripe' ?
      /* istanbul ignore next */
      (cov_2idmnmqyi4().b[18][0]++, 'stripe') :
      /* istanbul ignore next */
      (cov_2idmnmqyi4().b[18][1]++, undefined),
      description: `OG Tier ${tier.tier} subscription`,
      metadata: {
        ogTier: tier.tier,
        tierName: tier.name,
        duration: tier.duration
      },
      netAmount: paymentMethod === 'coins' ?
      /* istanbul ignore next */
      (cov_2idmnmqyi4().b[19][0]++, tier.priceCoins) :
      /* istanbul ignore next */
      (cov_2idmnmqyi4().b[19][1]++, tier.priceUSD)
    }));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[60]++;
    await transaction.save();
    // Apply reputation bonus
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[61]++;
    await ReputationService_1.reputationService.applyReputationDelta(userId, 'og_subscription', {
      tier: tier.tier
    });
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[62]++;
    res.json({
      success: true,
      message: 'OG subscription successful',
      data: {
        subscription: {
          tier: tier.tier,
          name: tier.name,
          expiresAt: newExpiry,
          benefits: tier.benefits
        },
        user: {
          newOgLevel: tier.tier,
          newOgExpiry: newExpiry
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[63]++;
    logger_1.logger.error('OG subscription failed:', error);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[64]++;
    res.status(500).json({
      success: false,
      error: 'Failed to subscribe to OG tier'
    });
  }
});
// Get user's OG status
/* istanbul ignore next */
cov_2idmnmqyi4().s[65]++;
router.get('/status', async (req, res) => {
  /* istanbul ignore next */
  cov_2idmnmqyi4().f[5]++;
  cov_2idmnmqyi4().s[66]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[67]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[68]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[20][0]++;
      cov_2idmnmqyi4().s[69]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[20][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[70]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[71]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[21][0]++;
      cov_2idmnmqyi4().s[72]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[21][1]++;
    }
    // Get current tier details
    let currentTier =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[73]++, null);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[74]++;
    if (user.ogLevel > 0) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[22][0]++;
      cov_2idmnmqyi4().s[75]++;
      currentTier = await OGTier_1.OGTier.findOne({
        tier: user.ogLevel,
        isActive: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[22][1]++;
    }
    // Get next tier
    let nextTier =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[76]++, null);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[77]++;
    if (user.ogLevel < 5) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[23][0]++;
      cov_2idmnmqyi4().s[78]++;
      nextTier = await OGTier_1.OGTier.findOne({
        tier: {
          $gt: user.ogLevel
        },
        isActive: true
      }).sort({
        tier: 1
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[23][1]++;
    }
    cov_2idmnmqyi4().s[79]++;
    res.json({
      success: true,
      data: {
        ogStatus: {
          level: user.ogLevel,
          expiresAt: user.ogExpiresAt,
          isActive: user.ogExpiresAt ?
          /* istanbul ignore next */
          (cov_2idmnmqyi4().b[24][0]++, new Date() < user.ogExpiresAt) :
          /* istanbul ignore next */
          (cov_2idmnmqyi4().b[24][1]++, false),
          currentTier: currentTier ?
          /* istanbul ignore next */
          (cov_2idmnmqyi4().b[25][0]++, {
            id: currentTier._id,
            tier: currentTier.tier,
            name: currentTier.name,
            benefits: currentTier.benefits
          }) :
          /* istanbul ignore next */
          (cov_2idmnmqyi4().b[25][1]++, null),
          nextTier: nextTier ?
          /* istanbul ignore next */
          (cov_2idmnmqyi4().b[26][0]++, {
            id: nextTier._id,
            tier: nextTier.tier,
            name: nextTier.name,
            priceUSD: nextTier.priceUSD,
            priceCoins: nextTier.priceCoins,
            benefits: nextTier.benefits
          }) :
          /* istanbul ignore next */
          (cov_2idmnmqyi4().b[26][1]++, null)
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[80]++;
    logger_1.logger.error('Get OG status failed:', error);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[81]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get OG status'
    });
  }
});
// Get OG benefits
/* istanbul ignore next */
cov_2idmnmqyi4().s[82]++;
router.get('/benefits', async (req, res) => {
  /* istanbul ignore next */
  cov_2idmnmqyi4().f[6]++;
  cov_2idmnmqyi4().s[83]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[84]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[85]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[27][0]++;
      cov_2idmnmqyi4().s[86]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[27][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[87]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[88]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[28][0]++;
      cov_2idmnmqyi4().s[89]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[28][1]++;
    }
    cov_2idmnmqyi4().s[90]++;
    if (user.ogLevel === 0) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[29][0]++;
      cov_2idmnmqyi4().s[91]++;
      return res.json({
        success: true,
        data: {
          benefits: []
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[29][1]++;
    }
    const tier =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[92]++, await OGTier_1.OGTier.findOne({
      tier: user.ogLevel,
      isActive: true
    }));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[93]++;
    if (!tier) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[30][0]++;
      cov_2idmnmqyi4().s[94]++;
      return res.json({
        success: true,
        data: {
          benefits: []
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[30][1]++;
    }
    cov_2idmnmqyi4().s[95]++;
    res.json({
      success: true,
      data: {
        benefits: {
          dailyBonus: tier.benefits.dailyBonus,
          exclusiveGifts: tier.benefits.exclusiveGifts,
          chatPrivileges: tier.benefits.chatPrivileges,
          customEmojis: tier.benefits.customEmojis,
          profileBadge: tier.benefits.profileBadge,
          prioritySupport: tier.benefits.prioritySupport,
          adFree: tier.benefits.adFree,
          customUsername: tier.benefits.customUsername,
          streamSkins: tier.benefits.streamSkins,
          giftDiscount: tier.benefits.giftDiscount
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[96]++;
    logger_1.logger.error('Get OG benefits failed:', error);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[97]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get OG benefits'
    });
  }
});
// Get OG leaderboard
/* istanbul ignore next */
cov_2idmnmqyi4().s[98]++;
router.get('/leaderboard', async (req, res) => {
  /* istanbul ignore next */
  cov_2idmnmqyi4().f[7]++;
  cov_2idmnmqyi4().s[99]++;
  try {
    const {
      limit =
      /* istanbul ignore next */
      (cov_2idmnmqyi4().b[31][0]++, 50)
    } =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[100]++, req.query);
    const users =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[101]++, await User_1.User.find({
      ogLevel: {
        $gt: 0
      },
      ogExpiresAt: {
        $gt: new Date()
      }
    }).sort({
      ogLevel: -1,
      'trust.score': -1
    }).limit(parseInt(limit)).select('username avatar ogLevel ogExpiresAt trust.score'));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[102]++;
    res.json({
      success: true,
      data: {
        leaderboard: users.map(user => {
          /* istanbul ignore next */
          cov_2idmnmqyi4().f[8]++;
          cov_2idmnmqyi4().s[103]++;
          return {
            id: user._id,
            username: user.username,
            avatar: user.avatar,
            ogLevel: user.ogLevel,
            ogExpiresAt: user.ogExpiresAt,
            trustScore:
            /* istanbul ignore next */
            (cov_2idmnmqyi4().b[32][0]++, user.trust?.score) ||
            /* istanbul ignore next */
            (cov_2idmnmqyi4().b[32][1]++, 0)
          };
        })
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[104]++;
    logger_1.logger.error('Get OG leaderboard failed:', error);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[105]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get OG leaderboard'
    });
  }
});
/* istanbul ignore next */
cov_2idmnmqyi4().s[106]++;
exports.default = router;
// Daily OG bonus claim (non-withdrawable bonus coins)
/* istanbul ignore next */
cov_2idmnmqyi4().s[107]++;
router.post('/daily-bonus/claim', async (req, res) => {
  /* istanbul ignore next */
  cov_2idmnmqyi4().f[9]++;
  cov_2idmnmqyi4().s[108]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[109]++, req.user?.userId);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[110]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[33][0]++;
      cov_2idmnmqyi4().s[111]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[33][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[112]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[113]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[34][0]++;
      cov_2idmnmqyi4().s[114]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[34][1]++;
    }
    cov_2idmnmqyi4().s[115]++;
    if (
    /* istanbul ignore next */
    (cov_2idmnmqyi4().b[36][0]++, !user.ogLevel) ||
    /* istanbul ignore next */
    (cov_2idmnmqyi4().b[36][1]++, !(
    /* istanbul ignore next */
    (cov_2idmnmqyi4().b[37][0]++, user.ogExpiresAt) &&
    /* istanbul ignore next */
    (cov_2idmnmqyi4().b[37][1]++, new Date() < user.ogExpiresAt)))) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[35][0]++;
      cov_2idmnmqyi4().s[116]++;
      return res.status(400).json({
        success: false,
        error: 'OG subscription inactive'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[35][1]++;
    }
    const tier =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[117]++, await OGTier_1.OGTier.findOne({
      tier: user.ogLevel,
      isActive: true
    }));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[118]++;
    if (!tier) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[38][0]++;
      cov_2idmnmqyi4().s[119]++;
      return res.status(400).json({
        success: false,
        error: 'OG tier not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[38][1]++;
    }
    // Enforce once per day claim; use Transaction as ledger
    const startOfDay =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[120]++, (0, dayjs_1.default)().startOf('day').toDate());
    const existing =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[121]++, await Transaction_1.Transaction.findOne({
      userId,
      type: 'og_bonus',
      status: 'completed',
      createdAt: {
        $gte: startOfDay
      }
    }));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[122]++;
    if (existing) {
      /* istanbul ignore next */
      cov_2idmnmqyi4().b[39][0]++;
      cov_2idmnmqyi4().s[123]++;
      return res.status(429).json({
        success: false,
        error: 'Daily bonus already claimed'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2idmnmqyi4().b[39][1]++;
    }
    // Credit bonusBalance only (non-withdrawable)
    cov_2idmnmqyi4().s[124]++;
    await User_1.User.findByIdAndUpdate(userId, {
      $inc: {
        'coins.bonusBalance': tier.benefits.dailyBonus
      }
    });
    // Record transaction
    const txn =
    /* istanbul ignore next */
    (cov_2idmnmqyi4().s[125]++, new Transaction_1.Transaction({
      userId,
      type: 'og_bonus',
      amount: tier.benefits.dailyBonus,
      currency: 'coins',
      status: 'completed',
      description: `OG daily bonus (Tier ${tier.tier})`,
      metadata: {
        ogTier: tier.tier
      },
      netAmount: tier.benefits.dailyBonus
    }));
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[126]++;
    await txn.save();
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[127]++;
    res.json({
      success: true,
      data: {
        bonus: tier.benefits.dailyBonus
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[128]++;
    logger_1.logger.error('OG daily bonus claim failed:', error);
    /* istanbul ignore next */
    cov_2idmnmqyi4().s[129]++;
    res.status(500).json({
      success: false,
      error: 'Failed to claim daily bonus'
    });
  }
});