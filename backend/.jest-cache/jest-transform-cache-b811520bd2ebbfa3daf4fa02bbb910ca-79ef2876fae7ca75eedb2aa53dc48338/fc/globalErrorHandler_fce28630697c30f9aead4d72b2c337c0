2d10f056965645ef80ccd6ce6ec7b6c1
"use strict";

/* istanbul ignore next */
function cov_10rf9w4det() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\middleware\\globalErrorHandler.ts";
  var hash = "0b4301b3e9d56d8dc58014d147b6b8cd0a08025e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\middleware\\globalErrorHandler.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 55
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "3": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 23
        }
      },
      "4": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 37
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "7": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "8": {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "9": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 55
        }
      },
      "10": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "11": {
        start: {
          line: 20,
          column: 32
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "12": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 60
        }
      },
      "13": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 80
        }
      },
      "14": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "15": {
        start: {
          line: 25,
          column: 32
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "16": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 66
        }
      },
      "17": {
        start: {
          line: 26,
          column: 55
        },
        end: {
          line: 26,
          column: 65
        }
      },
      "18": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 62
        }
      },
      "19": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 38
        }
      },
      "20": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 30,
          column: 85
        }
      },
      "21": {
        start: {
          line: 30,
          column: 29
        },
        end: {
          line: 30,
          column: 85
        }
      },
      "22": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 31,
          column: 101
        }
      },
      "23": {
        start: {
          line: 31,
          column: 36
        },
        end: {
          line: 31,
          column: 101
        }
      },
      "24": {
        start: {
          line: 32,
          column: 30
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "25": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 72
        }
      },
      "26": {
        start: {
          line: 33,
          column: 46
        },
        end: {
          line: 33,
          column: 60
        }
      },
      "27": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 61
        }
      },
      "28": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 55,
          column: 1
        }
      },
      "29": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 48,
          column: 7
        }
      },
      "30": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 54,
          column: 7
        }
      },
      "31": {
        start: {
          line: 56,
          column: 22
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "32": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "33": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "34": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "35": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 79,
          column: 7
        }
      },
      "36": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 84,
          column: 7
        }
      },
      "37": {
        start: {
          line: 86,
          column: 27
        },
        end: {
          line: 115,
          column: 1
        }
      },
      "38": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 43
        }
      },
      "39": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "40": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 36
        }
      },
      "41": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 30
        }
      },
      "42": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 36
        }
      },
      "43": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "44": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 45
        }
      },
      "45": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "46": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 51
        }
      },
      "47": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "48": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 51
        }
      },
      "49": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "50": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 37
        }
      },
      "51": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "52": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 44
        }
      },
      "53": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "54": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 49
        }
      },
      "55": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 39
        }
      },
      "56": {
        start: {
          line: 116,
          column: 0
        },
        end: {
          line: 116,
          column: 48
        }
      },
      "57": {
        start: {
          line: 118,
          column: 0
        },
        end: {
          line: 122,
          column: 3
        }
      },
      "58": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 81
        }
      },
      "59": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 20
        }
      },
      "60": {
        start: {
          line: 124,
          column: 0
        },
        end: {
          line: 128,
          column: 3
        }
      },
      "61": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 69
        }
      },
      "62": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 31
        }
      },
      "63": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 20
        }
      },
      "64": {
        start: {
          line: 129,
          column: 0
        },
        end: {
          line: 129,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 37
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 16,
            column: 27
          }
        },
        loc: {
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 32
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 32
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 41
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 49
          },
          end: {
            line: 26,
            column: 50
          }
        },
        loc: {
          start: {
            line: 26,
            column: 55
          },
          end: {
            line: 26,
            column: 65
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 30,
            column: 24
          }
        },
        loc: {
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 85
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 31,
            column: 31
          }
        },
        loc: {
          start: {
            line: 31,
            column: 36
          },
          end: {
            line: 31,
            column: 101
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 32,
            column: 31
          }
        },
        loc: {
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 32
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 36
          },
          end: {
            line: 33,
            column: 37
          }
        },
        loc: {
          start: {
            line: 33,
            column: 46
          },
          end: {
            line: 33,
            column: 60
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 21
          },
          end: {
            line: 36,
            column: 22
          }
        },
        loc: {
          start: {
            line: 36,
            column: 40
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 23
          }
        },
        loc: {
          start: {
            line: 56,
            column: 41
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 56
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 86,
            column: 27
          },
          end: {
            line: 86,
            column: 28
          }
        },
        loc: {
          start: {
            line: 86,
            column: 52
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 86
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 118,
            column: 33
          },
          end: {
            line: 118,
            column: 34
          }
        },
        loc: {
          start: {
            line: 118,
            column: 54
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 118
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 124,
            column: 32
          },
          end: {
            line: 124,
            column: 33
          }
        },
        loc: {
          start: {
            line: 124,
            column: 41
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 124
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 49,
            column: 22
          },
          end: {
            line: 49,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 22
          },
          end: {
            line: 49,
            column: 36
          }
        }, {
          start: {
            line: 49,
            column: 40
          },
          end: {
            line: 49,
            column: 43
          }
        }],
        line: 49
      },
      "1": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "2": {
        loc: {
          start: {
            line: 66,
            column: 26
          },
          end: {
            line: 66,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 26
          },
          end: {
            line: 66,
            column: 40
          }
        }, {
          start: {
            line: 66,
            column: 44
          },
          end: {
            line: 66,
            column: 47
          }
        }],
        line: 66
      },
      "3": {
        loc: {
          start: {
            line: 87,
            column: 21
          },
          end: {
            line: 87,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 21
          },
          end: {
            line: 87,
            column: 35
          }
        }, {
          start: {
            line: 87,
            column: 39
          },
          end: {
            line: 87,
            column: 42
          }
        }],
        line: 87
      },
      "4": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        }, {
          start: {
            line: 91,
            column: 9
          },
          end: {
            line: 114,
            column: 5
          }
        }],
        line: 88
      },
      "5": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "6": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "7": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "8": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "9": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "10": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0b4301b3e9d56d8dc58014d147b6b8cd0a08025e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10rf9w4det = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10rf9w4det();
cov_10rf9w4det().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_10rf9w4det().s[1]++;
exports.AppError = exports.globalErrorHandler = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_10rf9w4det().s[2]++, require("../config/logger"));
class AppError extends Error {
  statusCode;
  isOperational;
  constructor(message, statusCode) {
    /* istanbul ignore next */
    cov_10rf9w4det().f[0]++;
    cov_10rf9w4det().s[3]++;
    super(message);
    /* istanbul ignore next */
    cov_10rf9w4det().s[4]++;
    this.statusCode = statusCode;
    /* istanbul ignore next */
    cov_10rf9w4det().s[5]++;
    this.isOperational = true;
    /* istanbul ignore next */
    cov_10rf9w4det().s[6]++;
    Error.captureStackTrace(this, this.constructor);
  }
}
/* istanbul ignore next */
cov_10rf9w4det().s[7]++;
exports.AppError = AppError;
/* istanbul ignore next */
cov_10rf9w4det().s[8]++;
const handleCastErrorDB = err => {
  /* istanbul ignore next */
  cov_10rf9w4det().f[1]++;
  const message =
  /* istanbul ignore next */
  (cov_10rf9w4det().s[9]++, `Invalid ${err.path}: ${err.value}`);
  /* istanbul ignore next */
  cov_10rf9w4det().s[10]++;
  return new AppError(message, 400);
};
/* istanbul ignore next */
cov_10rf9w4det().s[11]++;
const handleDuplicateFieldsDB = err => {
  /* istanbul ignore next */
  cov_10rf9w4det().f[2]++;
  const value =
  /* istanbul ignore next */
  (cov_10rf9w4det().s[12]++, err.errmsg?.match(/(["'])(\\?.)*?\1/)?.[0]);
  const message =
  /* istanbul ignore next */
  (cov_10rf9w4det().s[13]++, `Duplicate field value: ${value}. Please use another value!`);
  /* istanbul ignore next */
  cov_10rf9w4det().s[14]++;
  return new AppError(message, 400);
};
/* istanbul ignore next */
cov_10rf9w4det().s[15]++;
const handleValidationErrorDB = err => {
  /* istanbul ignore next */
  cov_10rf9w4det().f[3]++;
  const errors =
  /* istanbul ignore next */
  (cov_10rf9w4det().s[16]++, Object.values(err.errors).map(el => {
    /* istanbul ignore next */
    cov_10rf9w4det().f[4]++;
    cov_10rf9w4det().s[17]++;
    return el.message;
  }));
  const message =
  /* istanbul ignore next */
  (cov_10rf9w4det().s[18]++, `Invalid input data. ${errors.join('. ')}`);
  /* istanbul ignore next */
  cov_10rf9w4det().s[19]++;
  return new AppError(message, 400);
};
/* istanbul ignore next */
cov_10rf9w4det().s[20]++;
const handleJWTError = () => {
  /* istanbul ignore next */
  cov_10rf9w4det().f[5]++;
  cov_10rf9w4det().s[21]++;
  return new AppError('Invalid token. Please log in again!', 401);
};
/* istanbul ignore next */
cov_10rf9w4det().s[22]++;
const handleJWTExpiredError = () => {
  /* istanbul ignore next */
  cov_10rf9w4det().f[6]++;
  cov_10rf9w4det().s[23]++;
  return new AppError('Your token has expired! Please log in again.', 401);
};
/* istanbul ignore next */
cov_10rf9w4det().s[24]++;
const handleValidationError = err => {
  /* istanbul ignore next */
  cov_10rf9w4det().f[7]++;
  const message =
  /* istanbul ignore next */
  (cov_10rf9w4det().s[25]++, err.details.map(detail => {
    /* istanbul ignore next */
    cov_10rf9w4det().f[8]++;
    cov_10rf9w4det().s[26]++;
    return detail.message;
  }).join(', '));
  /* istanbul ignore next */
  cov_10rf9w4det().s[27]++;
  return new AppError(`Validation Error: ${message}`, 400);
};
/* istanbul ignore next */
cov_10rf9w4det().s[28]++;
const sendErrorDev = (err, req, res) => {
  /* istanbul ignore next */
  cov_10rf9w4det().f[9]++;
  cov_10rf9w4det().s[29]++;
  // API
  logger_1.logger.error('ERROR 💥', {
    error: err,
    request: {
      method: req.method,
      url: req.originalUrl,
      body: req.body,
      query: req.query,
      params: req.params,
      headers: req.headers
    }
  });
  /* istanbul ignore next */
  cov_10rf9w4det().s[30]++;
  return res.status(
  /* istanbul ignore next */
  (cov_10rf9w4det().b[0][0]++, err.statusCode) ||
  /* istanbul ignore next */
  (cov_10rf9w4det().b[0][1]++, 500)).json({
    success: false,
    error: err.message,
    details: err.details,
    stack: err.stack
  });
};
/* istanbul ignore next */
cov_10rf9w4det().s[31]++;
const sendErrorProd = (err, req, res) => {
  /* istanbul ignore next */
  cov_10rf9w4det().f[10]++;
  cov_10rf9w4det().s[32]++;
  // Operational, trusted error: send message to client
  if (err.isOperational) {
    /* istanbul ignore next */
    cov_10rf9w4det().b[1][0]++;
    cov_10rf9w4det().s[33]++;
    logger_1.logger.warn('Operational Error', {
      message: err.message,
      statusCode: err.statusCode,
      url: req.originalUrl,
      method: req.method,
      userId: req.user?.id
    });
    /* istanbul ignore next */
    cov_10rf9w4det().s[34]++;
    return res.status(
    /* istanbul ignore next */
    (cov_10rf9w4det().b[2][0]++, err.statusCode) ||
    /* istanbul ignore next */
    (cov_10rf9w4det().b[2][1]++, 500)).json({
      success: false,
      error: err.message
    });
  } else
  /* istanbul ignore next */
  {
    cov_10rf9w4det().b[1][1]++;
  }
  // Programming or other unknown error: don't leak error details
  cov_10rf9w4det().s[35]++;
  logger_1.logger.error('Programming Error 💥', {
    error: err,
    request: {
      method: req.method,
      url: req.originalUrl,
      userId: req.user?.id
    }
  });
  // Send generic message
  /* istanbul ignore next */
  cov_10rf9w4det().s[36]++;
  return res.status(500).json({
    success: false,
    error: 'Something went wrong! Please try again later.'
  });
};
/* istanbul ignore next */
cov_10rf9w4det().s[37]++;
const globalErrorHandler = (err, req, res, next) => {
  /* istanbul ignore next */
  cov_10rf9w4det().f[11]++;
  cov_10rf9w4det().s[38]++;
  err.statusCode =
  /* istanbul ignore next */
  (cov_10rf9w4det().b[3][0]++, err.statusCode) ||
  /* istanbul ignore next */
  (cov_10rf9w4det().b[3][1]++, 500);
  /* istanbul ignore next */
  cov_10rf9w4det().s[39]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_10rf9w4det().b[4][0]++;
    cov_10rf9w4det().s[40]++;
    sendErrorDev(err, req, res);
  } else {
    /* istanbul ignore next */
    cov_10rf9w4det().b[4][1]++;
    let error =
    /* istanbul ignore next */
    (cov_10rf9w4det().s[41]++, {
      ...err
    });
    /* istanbul ignore next */
    cov_10rf9w4det().s[42]++;
    error.message = err.message;
    // Handle specific error types
    /* istanbul ignore next */
    cov_10rf9w4det().s[43]++;
    if (error.name === 'CastError') {
      /* istanbul ignore next */
      cov_10rf9w4det().b[5][0]++;
      cov_10rf9w4det().s[44]++;
      error = handleCastErrorDB(error);
    } else
    /* istanbul ignore next */
    {
      cov_10rf9w4det().b[5][1]++;
    }
    cov_10rf9w4det().s[45]++;
    if (error.code === 11000) {
      /* istanbul ignore next */
      cov_10rf9w4det().b[6][0]++;
      cov_10rf9w4det().s[46]++;
      error = handleDuplicateFieldsDB(error);
    } else
    /* istanbul ignore next */
    {
      cov_10rf9w4det().b[6][1]++;
    }
    cov_10rf9w4det().s[47]++;
    if (error.name === 'ValidationError') {
      /* istanbul ignore next */
      cov_10rf9w4det().b[7][0]++;
      cov_10rf9w4det().s[48]++;
      error = handleValidationErrorDB(error);
    } else
    /* istanbul ignore next */
    {
      cov_10rf9w4det().b[7][1]++;
    }
    cov_10rf9w4det().s[49]++;
    if (error.name === 'JsonWebTokenError') {
      /* istanbul ignore next */
      cov_10rf9w4det().b[8][0]++;
      cov_10rf9w4det().s[50]++;
      error = handleJWTError();
    } else
    /* istanbul ignore next */
    {
      cov_10rf9w4det().b[8][1]++;
    }
    cov_10rf9w4det().s[51]++;
    if (error.name === 'TokenExpiredError') {
      /* istanbul ignore next */
      cov_10rf9w4det().b[9][0]++;
      cov_10rf9w4det().s[52]++;
      error = handleJWTExpiredError();
    } else
    /* istanbul ignore next */
    {
      cov_10rf9w4det().b[9][1]++;
    }
    cov_10rf9w4det().s[53]++;
    if (error.isJoi) {
      /* istanbul ignore next */
      cov_10rf9w4det().b[10][0]++;
      cov_10rf9w4det().s[54]++;
      error = handleValidationError(error);
    } else
    /* istanbul ignore next */
    {
      cov_10rf9w4det().b[10][1]++;
    }
    cov_10rf9w4det().s[55]++;
    sendErrorProd(error, req, res);
  }
};
/* istanbul ignore next */
cov_10rf9w4det().s[56]++;
exports.globalErrorHandler = globalErrorHandler;
// Catch unhandled promise rejections
/* istanbul ignore next */
cov_10rf9w4det().s[57]++;
process.on('unhandledRejection', (reason, promise) => {
  /* istanbul ignore next */
  cov_10rf9w4det().f[12]++;
  cov_10rf9w4det().s[58]++;
  logger_1.logger.error('Unhandled Rejection at:', promise, 'reason:', reason);
  // Close server & exit process
  /* istanbul ignore next */
  cov_10rf9w4det().s[59]++;
  process.exit(1);
});
// Catch uncaught exceptions
/* istanbul ignore next */
cov_10rf9w4det().s[60]++;
process.on('uncaughtException', err => {
  /* istanbul ignore next */
  cov_10rf9w4det().f[13]++;
  cov_10rf9w4det().s[61]++;
  logger_1.logger.error('Uncaught Exception! 💥 Shutting down...');
  /* istanbul ignore next */
  cov_10rf9w4det().s[62]++;
  logger_1.logger.error(err);
  /* istanbul ignore next */
  cov_10rf9w4det().s[63]++;
  process.exit(1);
});
/* istanbul ignore next */
cov_10rf9w4det().s[64]++;
exports.default = exports.globalErrorHandler;