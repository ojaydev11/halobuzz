d99a9b46fb573da200c203ba349eb39a
"use strict";

/* istanbul ignore next */
function cov_2e3hf4l7so() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\auth.ts";
  var hash = "d4c8b6942657e4114d3d863c2a7a4d065f2d1d30";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 63
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 44
        }
      },
      "8": {
        start: {
          line: 11,
          column: 23
        },
        end: {
          line: 11,
          column: 58
        }
      },
      "9": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "10": {
        start: {
          line: 14,
          column: 22
        },
        end: {
          line: 14,
          column: 23
        }
      },
      "11": {
        start: {
          line: 15,
          column: 25
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "12": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "13": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "14": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "15": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "16": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "17": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 71
        }
      },
      "18": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "19": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 79
        }
      },
      "20": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "21": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 79
        }
      },
      "22": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "23": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 69
        }
      },
      "24": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "25": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 80
        }
      },
      "26": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "27": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 85
        }
      },
      "28": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 16
        }
      },
      "29": {
        start: {
          line: 44,
          column: 15
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "30": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 145,
          column: 3
        }
      },
      "31": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "32": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 70,
          column: 69
        }
      },
      "33": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "34": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 75,
          column: 15
        }
      },
      "35": {
        start: {
          line: 77,
          column: 72
        },
        end: {
          line: 77,
          column: 80
        }
      },
      "36": {
        start: {
          line: 79,
          column: 29
        },
        end: {
          line: 85,
          column: 45
        }
      },
      "37": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "38": {
        start: {
          line: 87,
          column: 32
        },
        end: {
          line: 87,
          column: 34
        }
      },
      "39": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "40": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 40
        }
      },
      "41": {
        start: {
          line: 91,
          column: 17
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "42": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 43
        }
      },
      "43": {
        start: {
          line: 94,
          column: 17
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "44": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 40
        }
      },
      "45": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "46": {
        start: {
          line: 104,
          column: 21
        },
        end: {
          line: 111,
          column: 10
        }
      },
      "47": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 26
        }
      },
      "48": {
        start: {
          line: 114,
          column: 26
        },
        end: {
          line: 114,
          column: 48
        }
      },
      "49": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "50": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 74
        }
      },
      "51": {
        start: {
          line: 118,
          column: 28
        },
        end: {
          line: 118,
          column: 190
        }
      },
      "52": {
        start: {
          line: 119,
          column: 29
        },
        end: {
          line: 119,
          column: 192
        }
      },
      "53": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "54": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 61
        }
      },
      "55": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "56": {
        start: {
          line: 147,
          column: 0
        },
        end: {
          line: 260,
          column: 3
        }
      },
      "57": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 259,
          column: 5
        }
      },
      "58": {
        start: {
          line: 156,
          column: 23
        },
        end: {
          line: 156,
          column: 69
        }
      },
      "59": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "60": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 161,
          column: 15
        }
      },
      "61": {
        start: {
          line: 163,
          column: 41
        },
        end: {
          line: 163,
          column: 49
        }
      },
      "62": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "63": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 173,
          column: 31
        }
      },
      "64": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 81
        }
      },
      "65": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "66": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "67": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 186,
          column: 15
        }
      },
      "68": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "69": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 195,
          column: 15
        }
      },
      "70": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "71": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 67
        }
      },
      "72": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 91
        }
      },
      "73": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 207,
          column: 15
        }
      },
      "74": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "75": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 213,
          column: 15
        }
      },
      "76": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "77": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 43
        }
      },
      "78": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 30
        }
      },
      "79": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 80
        }
      },
      "80": {
        start: {
          line: 225,
          column: 26
        },
        end: {
          line: 225,
          column: 48
        }
      },
      "81": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "82": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 74
        }
      },
      "83": {
        start: {
          line: 229,
          column: 28
        },
        end: {
          line: 229,
          column: 190
        }
      },
      "84": {
        start: {
          line: 230,
          column: 29
        },
        end: {
          line: 230,
          column: 192
        }
      },
      "85": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 251,
          column: 11
        }
      },
      "86": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 54
        }
      },
      "87": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 258,
          column: 11
        }
      },
      "88": {
        start: {
          line: 262,
          column: 0
        },
        end: {
          line: 316,
          column: 3
        }
      },
      "89": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 315,
          column: 5
        }
      },
      "90": {
        start: {
          line: 271,
          column: 23
        },
        end: {
          line: 271,
          column: 69
        }
      },
      "91": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "92": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 276,
          column: 15
        }
      },
      "93": {
        start: {
          line: 278,
          column: 35
        },
        end: {
          line: 278,
          column: 43
        }
      },
      "94": {
        start: {
          line: 279,
          column: 23
        },
        end: {
          line: 279,
          column: 39
        }
      },
      "95": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "96": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 284,
          column: 15
        }
      },
      "97": {
        start: {
          line: 286,
          column: 21
        },
        end: {
          line: 286,
          column: 55
        }
      },
      "98": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "99": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 291,
          column: 15
        }
      },
      "100": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 298,
          column: 10
        }
      },
      "101": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 35
        }
      },
      "102": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 26
        }
      },
      "103": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 307,
          column: 11
        }
      },
      "104": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 63
        }
      },
      "105": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "106": {
        start: {
          line: 318,
          column: 0
        },
        end: {
          line: 368,
          column: 3
        }
      },
      "107": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 367,
          column: 5
        }
      },
      "108": {
        start: {
          line: 320,
          column: 23
        },
        end: {
          line: 320,
          column: 39
        }
      },
      "109": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "110": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 325,
          column: 15
        }
      },
      "111": {
        start: {
          line: 327,
          column: 21
        },
        end: {
          line: 327,
          column: 75
        }
      },
      "112": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 333,
          column: 9
        }
      },
      "113": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 332,
          column: 15
        }
      },
      "114": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 359,
          column: 11
        }
      },
      "115": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 65
        }
      },
      "116": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 366,
          column: 11
        }
      },
      "117": {
        start: {
          line: 370,
          column: 0
        },
        end: {
          line: 413,
          column: 3
        }
      },
      "118": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 412,
          column: 5
        }
      },
      "119": {
        start: {
          line: 372,
          column: 33
        },
        end: {
          line: 372,
          column: 41
        }
      },
      "120": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 378,
          column: 9
        }
      },
      "121": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 377,
          column: 15
        }
      },
      "122": {
        start: {
          line: 380,
          column: 24
        },
        end: {
          line: 380,
          column: 91
        }
      },
      "123": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "124": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 385,
          column: 15
        }
      },
      "125": {
        start: {
          line: 387,
          column: 21
        },
        end: {
          line: 387,
          column: 63
        }
      },
      "126": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 393,
          column: 9
        }
      },
      "127": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 392,
          column: 15
        }
      },
      "128": {
        start: {
          line: 395,
          column: 31
        },
        end: {
          line: 395,
          column: 206
        }
      },
      "129": {
        start: {
          line: 397,
          column: 32
        },
        end: {
          line: 397,
          column: 208
        }
      },
      "130": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 404,
          column: 11
        }
      },
      "131": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 62
        }
      },
      "132": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 411,
          column: 11
        }
      },
      "133": {
        start: {
          line: 415,
          column: 0
        },
        end: {
          line: 461,
          column: 3
        }
      },
      "134": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 460,
          column: 5
        }
      },
      "135": {
        start: {
          line: 417,
          column: 26
        },
        end: {
          line: 417,
          column: 34
        }
      },
      "136": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "137": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 422,
          column: 15
        }
      },
      "138": {
        start: {
          line: 425,
          column: 24
        },
        end: {
          line: 425,
          column: 84
        }
      },
      "139": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 431,
          column: 9
        }
      },
      "140": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 430,
          column: 15
        }
      },
      "141": {
        start: {
          line: 433,
          column: 21
        },
        end: {
          line: 433,
          column: 63
        }
      },
      "142": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 439,
          column: 9
        }
      },
      "143": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 438,
          column: 15
        }
      },
      "144": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 445,
          column: 9
        }
      },
      "145": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 444,
          column: 15
        }
      },
      "146": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 31
        }
      },
      "147": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 447,
          column: 26
        }
      },
      "148": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 448,
          column: 74
        }
      },
      "149": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 452,
          column: 11
        }
      },
      "150": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 455,
          column: 66
        }
      },
      "151": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 459,
          column: 11
        }
      },
      "152": {
        start: {
          line: 463,
          column: 0
        },
        end: {
          line: 501,
          column: 3
        }
      },
      "153": {
        start: {
          line: 466,
          column: 4
        },
        end: {
          line: 500,
          column: 5
        }
      },
      "154": {
        start: {
          line: 467,
          column: 23
        },
        end: {
          line: 467,
          column: 69
        }
      },
      "155": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "156": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 472,
          column: 15
        }
      },
      "157": {
        start: {
          line: 474,
          column: 26
        },
        end: {
          line: 474,
          column: 34
        }
      },
      "158": {
        start: {
          line: 475,
          column: 21
        },
        end: {
          line: 475,
          column: 78
        }
      },
      "159": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 482,
          column: 9
        }
      },
      "160": {
        start: {
          line: 478,
          column: 12
        },
        end: {
          line: 481,
          column: 15
        }
      },
      "161": {
        start: {
          line: 484,
          column: 27
        },
        end: {
          line: 484,
          column: 145
        }
      },
      "162": {
        start: {
          line: 485,
          column: 26
        },
        end: {
          line: 485,
          column: 116
        }
      },
      "163": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 487,
          column: 88
        }
      },
      "164": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 488,
          column: 71
        }
      },
      "165": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 492,
          column: 11
        }
      },
      "166": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 495,
          column: 63
        }
      },
      "167": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 499,
          column: 11
        }
      },
      "168": {
        start: {
          line: 503,
          column: 0
        },
        end: {
          line: 547,
          column: 3
        }
      },
      "169": {
        start: {
          line: 507,
          column: 4
        },
        end: {
          line: 546,
          column: 5
        }
      },
      "170": {
        start: {
          line: 508,
          column: 23
        },
        end: {
          line: 508,
          column: 69
        }
      },
      "171": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 514,
          column: 9
        }
      },
      "172": {
        start: {
          line: 510,
          column: 12
        },
        end: {
          line: 513,
          column: 15
        }
      },
      "173": {
        start: {
          line: 515,
          column: 36
        },
        end: {
          line: 515,
          column: 44
        }
      },
      "174": {
        start: {
          line: 517,
          column: 24
        },
        end: {
          line: 517,
          column: 84
        }
      },
      "175": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 523,
          column: 9
        }
      },
      "176": {
        start: {
          line: 519,
          column: 12
        },
        end: {
          line: 522,
          column: 15
        }
      },
      "177": {
        start: {
          line: 525,
          column: 21
        },
        end: {
          line: 525,
          column: 63
        }
      },
      "178": {
        start: {
          line: 526,
          column: 8
        },
        end: {
          line: 531,
          column: 9
        }
      },
      "179": {
        start: {
          line: 527,
          column: 12
        },
        end: {
          line: 530,
          column: 15
        }
      },
      "180": {
        start: {
          line: 532,
          column: 8
        },
        end: {
          line: 532,
          column: 33
        }
      },
      "181": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 533,
          column: 26
        }
      },
      "182": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 534,
          column: 74
        }
      },
      "183": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 538,
          column: 11
        }
      },
      "184": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 541,
          column: 62
        }
      },
      "185": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 545,
          column: 11
        }
      },
      "186": {
        start: {
          line: 549,
          column: 0
        },
        end: {
          line: 565,
          column: 3
        }
      },
      "187": {
        start: {
          line: 550,
          column: 4
        },
        end: {
          line: 564,
          column: 5
        }
      },
      "188": {
        start: {
          line: 553,
          column: 8
        },
        end: {
          line: 556,
          column: 11
        }
      },
      "189": {
        start: {
          line: 559,
          column: 8
        },
        end: {
          line: 559,
          column: 55
        }
      },
      "190": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 563,
          column: 11
        }
      },
      "191": {
        start: {
          line: 566,
          column: 0
        },
        end: {
          line: 566,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 27
          }
        },
        loc: {
          start: {
            line: 13,
            column: 40
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 68,
            column: 3
          },
          end: {
            line: 68,
            column: 4
          }
        },
        loc: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 68
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 154,
            column: 3
          },
          end: {
            line: 154,
            column: 4
          }
        },
        loc: {
          start: {
            line: 154,
            column: 23
          },
          end: {
            line: 260,
            column: 1
          }
        },
        line: 154
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 269,
            column: 3
          },
          end: {
            line: 269,
            column: 4
          }
        },
        loc: {
          start: {
            line: 269,
            column: 23
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 269
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 318,
            column: 18
          },
          end: {
            line: 318,
            column: 19
          }
        },
        loc: {
          start: {
            line: 318,
            column: 38
          },
          end: {
            line: 368,
            column: 1
          }
        },
        line: 318
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 370,
            column: 24
          },
          end: {
            line: 370,
            column: 25
          }
        },
        loc: {
          start: {
            line: 370,
            column: 44
          },
          end: {
            line: 413,
            column: 1
          }
        },
        line: 370
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 415,
            column: 29
          },
          end: {
            line: 415,
            column: 30
          }
        },
        loc: {
          start: {
            line: 415,
            column: 49
          },
          end: {
            line: 461,
            column: 1
          }
        },
        line: 415
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 465,
            column: 3
          },
          end: {
            line: 465,
            column: 4
          }
        },
        loc: {
          start: {
            line: 465,
            column: 23
          },
          end: {
            line: 501,
            column: 1
          }
        },
        line: 465
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 506,
            column: 3
          },
          end: {
            line: 506,
            column: 4
          }
        },
        loc: {
          start: {
            line: 506,
            column: 23
          },
          end: {
            line: 547,
            column: 1
          }
        },
        line: 506
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 549,
            column: 23
          },
          end: {
            line: 549,
            column: 24
          }
        },
        loc: {
          start: {
            line: 549,
            column: 43
          },
          end: {
            line: 565,
            column: 1
          }
        },
        line: 549
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "10": {
        loc: {
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 83,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 28
          },
          end: {
            line: 83,
            column: 53
          }
        }, {
          start: {
            line: 83,
            column: 56
          },
          end: {
            line: 83,
            column: 58
          }
        }],
        line: 83
      },
      "11": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "12": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: 91,
            column: 17
          },
          end: {
            line: 96,
            column: 13
          }
        }],
        line: 88
      },
      "13": {
        loc: {
          start: {
            line: 91,
            column: 17
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 17
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: 94,
            column: 17
          },
          end: {
            line: 96,
            column: 13
          }
        }],
        line: 91
      },
      "14": {
        loc: {
          start: {
            line: 94,
            column: 17
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 17
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "15": {
        loc: {
          start: {
            line: 94,
            column: 21
          },
          end: {
            line: 94,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 21
          },
          end: {
            line: 94,
            column: 26
          }
        }, {
          start: {
            line: 94,
            column: 30
          },
          end: {
            line: 94,
            column: 65
          }
        }],
        line: 94
      },
      "16": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "17": {
        loc: {
          start: {
            line: 118,
            column: 144
          },
          end: {
            line: 118,
            column: 186
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 144
          },
          end: {
            line: 118,
            column: 177
          }
        }, {
          start: {
            line: 118,
            column: 181
          },
          end: {
            line: 118,
            column: 186
          }
        }],
        line: 118
      },
      "18": {
        loc: {
          start: {
            line: 119,
            column: 146
          },
          end: {
            line: 119,
            column: 188
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 146
          },
          end: {
            line: 119,
            column: 180
          }
        }, {
          start: {
            line: 119,
            column: 184
          },
          end: {
            line: 119,
            column: 188
          }
        }],
        line: 119
      },
      "19": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "20": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "21": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "22": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "23": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "24": {
        loc: {
          start: {
            line: 229,
            column: 144
          },
          end: {
            line: 229,
            column: 186
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 144
          },
          end: {
            line: 229,
            column: 177
          }
        }, {
          start: {
            line: 229,
            column: 181
          },
          end: {
            line: 229,
            column: 186
          }
        }],
        line: 229
      },
      "25": {
        loc: {
          start: {
            line: 230,
            column: 146
          },
          end: {
            line: 230,
            column: 188
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 146
          },
          end: {
            line: 230,
            column: 180
          }
        }, {
          start: {
            line: 230,
            column: 184
          },
          end: {
            line: 230,
            column: 188
          }
        }],
        line: 230
      },
      "26": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "27": {
        loc: {
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "28": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "29": {
        loc: {
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "30": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 333,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 333,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "31": {
        loc: {
          start: {
            line: 373,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 373
      },
      "32": {
        loc: {
          start: {
            line: 381,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 381,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 381
      },
      "33": {
        loc: {
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 393,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 393,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      },
      "34": {
        loc: {
          start: {
            line: 388,
            column: 12
          },
          end: {
            line: 388,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 388,
            column: 12
          },
          end: {
            line: 388,
            column: 17
          }
        }, {
          start: {
            line: 388,
            column: 21
          },
          end: {
            line: 388,
            column: 34
          }
        }],
        line: 388
      },
      "35": {
        loc: {
          start: {
            line: 395,
            column: 160
          },
          end: {
            line: 395,
            column: 202
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 395,
            column: 160
          },
          end: {
            line: 395,
            column: 193
          }
        }, {
          start: {
            line: 395,
            column: 197
          },
          end: {
            line: 395,
            column: 202
          }
        }],
        line: 395
      },
      "36": {
        loc: {
          start: {
            line: 397,
            column: 162
          },
          end: {
            line: 397,
            column: 204
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 397,
            column: 162
          },
          end: {
            line: 397,
            column: 196
          }
        }, {
          start: {
            line: 397,
            column: 200
          },
          end: {
            line: 397,
            column: 204
          }
        }],
        line: 397
      },
      "37": {
        loc: {
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "38": {
        loc: {
          start: {
            line: 426,
            column: 8
          },
          end: {
            line: 431,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 8
          },
          end: {
            line: 431,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "39": {
        loc: {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "40": {
        loc: {
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 445,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 445,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "41": {
        loc: {
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 468
      },
      "42": {
        loc: {
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 482,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 482,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      },
      "43": {
        loc: {
          start: {
            line: 485,
            column: 29
          },
          end: {
            line: 485,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 485,
            column: 29
          },
          end: {
            line: 485,
            column: 53
          }
        }, {
          start: {
            line: 485,
            column: 57
          },
          end: {
            line: 485,
            column: 79
          }
        }],
        line: 485
      },
      "44": {
        loc: {
          start: {
            line: 509,
            column: 8
          },
          end: {
            line: 514,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 509,
            column: 8
          },
          end: {
            line: 514,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 509
      },
      "45": {
        loc: {
          start: {
            line: 518,
            column: 8
          },
          end: {
            line: 523,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 518,
            column: 8
          },
          end: {
            line: 523,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 518
      },
      "46": {
        loc: {
          start: {
            line: 526,
            column: 8
          },
          end: {
            line: 531,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 526,
            column: 8
          },
          end: {
            line: 531,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 526
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d4c8b6942657e4114d3d863c2a7a4d065f2d1d30"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e3hf4l7so = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e3hf4l7so();
var __importDefault =
/* istanbul ignore next */
(cov_2e3hf4l7so().s[0]++,
/* istanbul ignore next */
(cov_2e3hf4l7so().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2e3hf4l7so().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2e3hf4l7so().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2e3hf4l7so().f[0]++;
  cov_2e3hf4l7so().s[1]++;
  return /* istanbul ignore next */(cov_2e3hf4l7so().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2e3hf4l7so().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2e3hf4l7so().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2e3hf4l7so().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2e3hf4l7so().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2e3hf4l7so().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_2e3hf4l7so().s[4]++, require("express-validator"));
const jsonwebtoken_1 =
/* istanbul ignore next */
(cov_2e3hf4l7so().s[5]++, __importDefault(require("jsonwebtoken")));
const User_1 =
/* istanbul ignore next */
(cov_2e3hf4l7so().s[6]++, require("../models/User"));
const logger_1 =
/* istanbul ignore next */
(cov_2e3hf4l7so().s[7]++, require("../config/logger"));
const emailService_1 =
/* istanbul ignore next */
(cov_2e3hf4l7so().s[8]++, require("../services/emailService"));
// Stronger password requirements with common password check
/* istanbul ignore next */
cov_2e3hf4l7so().s[9]++;
const passwordValidator = password => {
  /* istanbul ignore next */
  cov_2e3hf4l7so().f[1]++;
  const minLength =
  /* istanbul ignore next */
  (cov_2e3hf4l7so().s[10]++, 8);
  const hasUpperCase =
  /* istanbul ignore next */
  (cov_2e3hf4l7so().s[11]++, /[A-Z]/.test(password));
  const hasLowerCase =
  /* istanbul ignore next */
  (cov_2e3hf4l7so().s[12]++, /[a-z]/.test(password));
  const hasNumbers =
  /* istanbul ignore next */
  (cov_2e3hf4l7so().s[13]++, /\d/.test(password));
  const hasSpecialChar =
  /* istanbul ignore next */
  (cov_2e3hf4l7so().s[14]++, /[!@#$%^&*(),.?":{}|<>]/.test(password));
  // Common weak passwords list
  const commonPasswords =
  /* istanbul ignore next */
  (cov_2e3hf4l7so().s[15]++, ['password', '123456', 'password123', 'admin', 'qwerty', 'letmein', 'welcome', 'monkey', 'dragon', 'password1']);
  /* istanbul ignore next */
  cov_2e3hf4l7so().s[16]++;
  if (password.length < minLength) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().b[3][0]++;
    cov_2e3hf4l7so().s[17]++;
    throw new Error('Password must be at least 8 characters long');
  } else
  /* istanbul ignore next */
  {
    cov_2e3hf4l7so().b[3][1]++;
  }
  cov_2e3hf4l7so().s[18]++;
  if (!hasUpperCase) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().b[4][0]++;
    cov_2e3hf4l7so().s[19]++;
    throw new Error('Password must contain at least one uppercase letter');
  } else
  /* istanbul ignore next */
  {
    cov_2e3hf4l7so().b[4][1]++;
  }
  cov_2e3hf4l7so().s[20]++;
  if (!hasLowerCase) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().b[5][0]++;
    cov_2e3hf4l7so().s[21]++;
    throw new Error('Password must contain at least one lowercase letter');
  } else
  /* istanbul ignore next */
  {
    cov_2e3hf4l7so().b[5][1]++;
  }
  cov_2e3hf4l7so().s[22]++;
  if (!hasNumbers) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().b[6][0]++;
    cov_2e3hf4l7so().s[23]++;
    throw new Error('Password must contain at least one number');
  } else
  /* istanbul ignore next */
  {
    cov_2e3hf4l7so().b[6][1]++;
  }
  cov_2e3hf4l7so().s[24]++;
  if (!hasSpecialChar) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().b[7][0]++;
    cov_2e3hf4l7so().s[25]++;
    throw new Error('Password must contain at least one special character');
  } else
  /* istanbul ignore next */
  {
    cov_2e3hf4l7so().b[7][1]++;
  }
  cov_2e3hf4l7so().s[26]++;
  if (commonPasswords.includes(password.toLowerCase())) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().b[8][0]++;
    cov_2e3hf4l7so().s[27]++;
    throw new Error('Password is too common. Please choose a stronger password');
  } else
  /* istanbul ignore next */
  {
    cov_2e3hf4l7so().b[8][1]++;
  }
  cov_2e3hf4l7so().s[28]++;
  return true;
};
const router =
/* istanbul ignore next */
(cov_2e3hf4l7so().s[29]++, express_1.default.Router());
// Register
/* istanbul ignore next */
cov_2e3hf4l7so().s[30]++;
router.post('/register', [(0, express_validator_1.body)('username').isLength({
  min: 3,
  max: 30
}).matches(/^[a-zA-Z0-9_]+$/).withMessage('Username must be 3-30 characters, alphanumeric and underscore only'), (0, express_validator_1.body)('email').isEmail().normalizeEmail().withMessage('Valid email is required'), (0, express_validator_1.body)('password').custom(passwordValidator).withMessage('Password requirements not met'), (0, express_validator_1.body)('phone').optional().matches(/^\+?[1-9]\d{1,14}$/).withMessage('Valid phone number is required'), (0, express_validator_1.body)('country').isLength({
  min: 2,
  max: 2
}).withMessage('Valid country code is required'), (0, express_validator_1.body)('language').isLength({
  min: 2,
  max: 5
}).withMessage('Valid language code is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_2e3hf4l7so().f[2]++;
  cov_2e3hf4l7so().s[31]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[32]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[33]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[9][0]++;
      cov_2e3hf4l7so().s[34]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[9][1]++;
    }
    const {
      username,
      email,
      password,
      phone,
      country,
      language
    } =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[35]++, req.body);
    // Check if user already exists with proper validation
    const existingUser =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[36]++, await User_1.User.findOne({
      $or: [{
        email: email.toLowerCase().trim()
      }, {
        username: username.toLowerCase().trim()
      }, ...(phone ?
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[10][0]++, [{
        phone: phone.trim()
      }]) :
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[10][1]++, []))]
    }).select('_id email username phone'));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[37]++;
    if (existingUser) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[11][0]++;
      let conflictField =
      /* istanbul ignore next */
      (cov_2e3hf4l7so().s[38]++, '');
      /* istanbul ignore next */
      cov_2e3hf4l7so().s[39]++;
      if (existingUser.email === email.toLowerCase().trim()) {
        /* istanbul ignore next */
        cov_2e3hf4l7so().b[12][0]++;
        cov_2e3hf4l7so().s[40]++;
        conflictField = 'email';
      } else {
        /* istanbul ignore next */
        cov_2e3hf4l7so().b[12][1]++;
        cov_2e3hf4l7so().s[41]++;
        if (existingUser.username === username.toLowerCase().trim()) {
          /* istanbul ignore next */
          cov_2e3hf4l7so().b[13][0]++;
          cov_2e3hf4l7so().s[42]++;
          conflictField = 'username';
        } else {
          /* istanbul ignore next */
          cov_2e3hf4l7so().b[13][1]++;
          cov_2e3hf4l7so().s[43]++;
          if (
          /* istanbul ignore next */
          (cov_2e3hf4l7so().b[15][0]++, phone) &&
          /* istanbul ignore next */
          (cov_2e3hf4l7so().b[15][1]++, existingUser.phone === phone.trim())) {
            /* istanbul ignore next */
            cov_2e3hf4l7so().b[14][0]++;
            cov_2e3hf4l7so().s[44]++;
            conflictField = 'phone';
          } else
          /* istanbul ignore next */
          {
            cov_2e3hf4l7so().b[14][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_2e3hf4l7so().s[45]++;
      return res.status(400).json({
        success: false,
        error: `User already exists with this ${conflictField}`,
        field: conflictField
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[11][1]++;
    }
    // Create user
    const user =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[46]++, new User_1.User({
      username,
      email,
      password,
      phone,
      country,
      language
    }));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[47]++;
    await user.save();
    // Generate JWT tokens
    const jwtSecret =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[48]++, process.env.JWT_SECRET);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[49]++;
    if (!jwtSecret) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[16][0]++;
      cov_2e3hf4l7so().s[50]++;
      throw new Error('JWT_SECRET environment variable is not set');
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[16][1]++;
    }
    const accessToken =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[51]++, jsonwebtoken_1.default.sign({
      userId: user._id,
      username: user.username,
      type: 'access'
    }, jwtSecret, {
      expiresIn:
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[17][0]++, process.env.JWT_ACCESS_EXPIRES_IN) ||
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[17][1]++, '15m')
    }));
    const refreshToken =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[52]++, jsonwebtoken_1.default.sign({
      userId: user._id,
      username: user.username,
      type: 'refresh'
    }, jwtSecret, {
      expiresIn:
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[18][0]++, process.env.JWT_REFRESH_EXPIRES_IN) ||
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[18][1]++, '7d')
    }));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[53]++;
    res.status(201).json({
      success: true,
      message: 'User registered successfully',
      data: {
        user: {
          id: user._id,
          username: user.username,
          email: user.email,
          country: user.country,
          language: user.language,
          isVerified: user.isVerified,
          kycStatus: user.kycStatus
        },
        token: accessToken,
        refreshToken: refreshToken
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[54]++;
    logger_1.logger.error('Registration failed:', error);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[55]++;
    res.status(500).json({
      success: false,
      error: 'Registration failed'
    });
  }
});
// Login
/* istanbul ignore next */
cov_2e3hf4l7so().s[56]++;
router.post('/login', [(0, express_validator_1.body)('identifier').notEmpty().withMessage('Email, username, or phone is required'), (0, express_validator_1.body)('password').notEmpty().withMessage('Password is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_2e3hf4l7so().f[3]++;
  cov_2e3hf4l7so().s[57]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[58]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[59]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[19][0]++;
      cov_2e3hf4l7so().s[60]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[19][1]++;
    }
    const {
      identifier,
      password
    } =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[61]++, req.body);
    // Find user by email, username, or phone with timeout handling
    let user;
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[62]++;
    try {
      /* istanbul ignore next */
      cov_2e3hf4l7so().s[63]++;
      user = await User_1.User.findOne({
        $or: [{
          email: identifier
        }, {
          username: identifier
        }, {
          phone: identifier
        }]
      }).maxTimeMS(5000); // 5 second timeout for user lookup
    } catch (dbError) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().s[64]++;
      logger_1.logger.error('Database error during user lookup:', dbError);
      /* istanbul ignore next */
      cov_2e3hf4l7so().s[65]++;
      return res.status(503).json({
        success: false,
        error: 'Service temporarily unavailable. Please try again later.'
      });
    }
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[66]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[20][0]++;
      cov_2e3hf4l7so().s[67]++;
      return res.status(401).json({
        success: false,
        error: 'Invalid credentials'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[20][1]++;
    }
    // Check if user is banned
    cov_2e3hf4l7so().s[68]++;
    if (user.isBanned) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[21][0]++;
      cov_2e3hf4l7so().s[69]++;
      return res.status(403).json({
        success: false,
        error: 'Account is banned',
        banReason: user.banReason,
        banExpiresAt: user.banExpiresAt
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[21][1]++;
    }
    // Verify password with timeout handling
    let isValidPassword;
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[70]++;
    try {
      /* istanbul ignore next */
      cov_2e3hf4l7so().s[71]++;
      isValidPassword = await user.comparePassword(password);
    } catch (dbError) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().s[72]++;
      logger_1.logger.error('Database error during password verification:', dbError);
      /* istanbul ignore next */
      cov_2e3hf4l7so().s[73]++;
      return res.status(503).json({
        success: false,
        error: 'Service temporarily unavailable. Please try again later.'
      });
    }
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[74]++;
    if (!isValidPassword) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[22][0]++;
      cov_2e3hf4l7so().s[75]++;
      return res.status(401).json({
        success: false,
        error: 'Invalid credentials'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[22][1]++;
    }
    // Update last active with timeout handling
    cov_2e3hf4l7so().s[76]++;
    try {
      /* istanbul ignore next */
      cov_2e3hf4l7so().s[77]++;
      user.lastActiveAt = new Date();
      /* istanbul ignore next */
      cov_2e3hf4l7so().s[78]++;
      await user.save();
    } catch (dbError) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().s[79]++;
      logger_1.logger.warn('Failed to update last active time:', dbError);
      // Continue with login even if this fails
    }
    // Generate JWT tokens
    const jwtSecret =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[80]++, process.env.JWT_SECRET);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[81]++;
    if (!jwtSecret) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[23][0]++;
      cov_2e3hf4l7so().s[82]++;
      throw new Error('JWT_SECRET environment variable is not set');
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[23][1]++;
    }
    const accessToken =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[83]++, jsonwebtoken_1.default.sign({
      userId: user._id,
      username: user.username,
      type: 'access'
    }, jwtSecret, {
      expiresIn:
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[24][0]++, process.env.JWT_ACCESS_EXPIRES_IN) ||
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[24][1]++, '15m')
    }));
    const refreshToken =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[84]++, jsonwebtoken_1.default.sign({
      userId: user._id,
      username: user.username,
      type: 'refresh'
    }, jwtSecret, {
      expiresIn:
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[25][0]++, process.env.JWT_REFRESH_EXPIRES_IN) ||
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[25][1]++, '7d')
    }));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[85]++;
    res.json({
      success: true,
      message: 'Login successful',
      data: {
        user: {
          id: user._id,
          username: user.username,
          email: user.email,
          avatar: user.avatar,
          country: user.country,
          language: user.language,
          isVerified: user.isVerified,
          kycStatus: user.kycStatus,
          ogLevel: user.ogLevel,
          coins: user.coins,
          trust: user.trust
        },
        token: accessToken,
        refreshToken: refreshToken
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[86]++;
    logger_1.logger.error('Login failed:', error);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[87]++;
    res.status(500).json({
      success: false,
      error: 'Login failed'
    });
  }
});
// KYC Submission
/* istanbul ignore next */
cov_2e3hf4l7so().s[88]++;
router.post('/kyc', [(0, express_validator_1.body)('idCard').notEmpty().withMessage('ID card image is required'), (0, express_validator_1.body)('selfie').notEmpty().withMessage('Selfie image is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_2e3hf4l7so().f[4]++;
  cov_2e3hf4l7so().s[89]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[90]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[91]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[26][0]++;
      cov_2e3hf4l7so().s[92]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[26][1]++;
    }
    const {
      idCard,
      selfie
    } =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[93]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[94]++, req.user?.userId); // From auth middleware
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[95]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[27][0]++;
      cov_2e3hf4l7so().s[96]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[27][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[97]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[98]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[28][0]++;
      cov_2e3hf4l7so().s[99]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[28][1]++;
    }
    // Update KYC documents
    cov_2e3hf4l7so().s[100]++;
    user.kycDocuments = {
      idCard,
      selfie,
      verificationDate: new Date()
    };
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[101]++;
    user.kycStatus = 'pending';
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[102]++;
    await user.save();
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[103]++;
    res.json({
      success: true,
      message: 'KYC documents submitted successfully',
      data: {
        kycStatus: user.kycStatus
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[104]++;
    logger_1.logger.error('KYC submission failed:', error);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[105]++;
    res.status(500).json({
      success: false,
      error: 'KYC submission failed'
    });
  }
});
// Get current user
/* istanbul ignore next */
cov_2e3hf4l7so().s[106]++;
router.get('/me', async (req, res) => {
  /* istanbul ignore next */
  cov_2e3hf4l7so().f[5]++;
  cov_2e3hf4l7so().s[107]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[108]++, req.user?.userId); // From auth middleware
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[109]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[29][0]++;
      cov_2e3hf4l7so().s[110]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[29][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[111]++, await User_1.User.findById(userId).select('-password'));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[112]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[30][0]++;
      cov_2e3hf4l7so().s[113]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[30][1]++;
    }
    cov_2e3hf4l7so().s[114]++;
    res.json({
      success: true,
      data: {
        user: {
          id: user._id,
          username: user.username,
          email: user.email,
          avatar: user.avatar,
          bio: user.bio,
          country: user.country,
          language: user.language,
          isVerified: user.isVerified,
          kycStatus: user.kycStatus,
          ogLevel: user.ogLevel,
          coins: user.coins,
          trust: user.trust,
          followers: user.followers,
          following: user.following,
          totalLikes: user.totalLikes,
          totalViews: user.totalViews,
          preferences: user.preferences,
          lastActiveAt: user.lastActiveAt,
          createdAt: user.createdAt
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[115]++;
    logger_1.logger.error('Get user profile failed:', error);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[116]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get user profile'
    });
  }
});
// Refresh token
/* istanbul ignore next */
cov_2e3hf4l7so().s[117]++;
router.post('/refresh', async (req, res) => {
  /* istanbul ignore next */
  cov_2e3hf4l7so().f[6]++;
  cov_2e3hf4l7so().s[118]++;
  try {
    const {
      refreshToken
    } =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[119]++, req.body);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[120]++;
    if (!refreshToken) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[31][0]++;
      cov_2e3hf4l7so().s[121]++;
      return res.status(400).json({
        success: false,
        error: 'Refresh token is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[31][1]++;
    }
    // Verify refresh token
    const decoded =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[122]++, jsonwebtoken_1.default.verify(refreshToken, process.env.JWT_SECRET));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[123]++;
    if (decoded.type !== 'refresh') {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[32][0]++;
      cov_2e3hf4l7so().s[124]++;
      return res.status(401).json({
        success: false,
        error: 'Invalid token type'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[32][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[125]++, await User_1.User.findById(decoded.userId));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[126]++;
    if (
    /* istanbul ignore next */
    (cov_2e3hf4l7so().b[34][0]++, !user) ||
    /* istanbul ignore next */
    (cov_2e3hf4l7so().b[34][1]++, user.isBanned)) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[33][0]++;
      cov_2e3hf4l7so().s[127]++;
      return res.status(401).json({
        success: false,
        error: 'User not found or banned'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[33][1]++;
    }
    // Generate new access token
    const newAccessToken =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[128]++, jsonwebtoken_1.default.sign({
      userId: user._id,
      username: user.username,
      type: 'access'
    }, process.env.JWT_SECRET, {
      expiresIn:
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[35][0]++, process.env.JWT_ACCESS_EXPIRES_IN) ||
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[35][1]++, '15m')
    }));
    // Optionally generate new refresh token for token rotation
    const newRefreshToken =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[129]++, jsonwebtoken_1.default.sign({
      userId: user._id,
      username: user.username,
      type: 'refresh'
    }, process.env.JWT_SECRET, {
      expiresIn:
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[36][0]++, process.env.JWT_REFRESH_EXPIRES_IN) ||
      /* istanbul ignore next */
      (cov_2e3hf4l7so().b[36][1]++, '7d')
    }));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[130]++;
    res.json({
      success: true,
      data: {
        token: newAccessToken,
        refreshToken: newRefreshToken
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[131]++;
    logger_1.logger.error('Token refresh failed:', error);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[132]++;
    res.status(401).json({
      success: false,
      error: 'Invalid or expired refresh token'
    });
  }
});
// Email verification
/* istanbul ignore next */
cov_2e3hf4l7so().s[133]++;
router.post('/verify-email', async (req, res) => {
  /* istanbul ignore next */
  cov_2e3hf4l7so().f[7]++;
  cov_2e3hf4l7so().s[134]++;
  try {
    const {
      token
    } =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[135]++, req.body);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[136]++;
    if (!token) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[37][0]++;
      cov_2e3hf4l7so().s[137]++;
      return res.status(400).json({
        success: false,
        error: 'Verification token is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[37][1]++;
    }
    // Verify token
    const decoded =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[138]++, jsonwebtoken_1.default.verify(token, process.env.JWT_SECRET));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[139]++;
    if (decoded.type !== 'email_verification') {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[38][0]++;
      cov_2e3hf4l7so().s[140]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid verification token'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[38][1]++;
    }
    // Update user verification status
    const user =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[141]++, await User_1.User.findById(decoded.userId));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[142]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[39][0]++;
      cov_2e3hf4l7so().s[143]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[39][1]++;
    }
    cov_2e3hf4l7so().s[144]++;
    if (user.isVerified) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[40][0]++;
      cov_2e3hf4l7so().s[145]++;
      return res.status(400).json({
        success: false,
        error: 'Email already verified'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[40][1]++;
    }
    cov_2e3hf4l7so().s[146]++;
    user.isVerified = true;
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[147]++;
    await user.save();
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[148]++;
    logger_1.logger.info(`Email verified for user: ${user.username}`);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[149]++;
    res.json({
      success: true,
      message: 'Email verified successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[150]++;
    logger_1.logger.error('Email verification error:', error);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[151]++;
    res.status(400).json({
      success: false,
      error: 'Invalid or expired verification token'
    });
  }
});
// Password reset request
/* istanbul ignore next */
cov_2e3hf4l7so().s[152]++;
router.post('/forgot-password', [(0, express_validator_1.body)('email').isEmail().withMessage('Valid email is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_2e3hf4l7so().f[8]++;
  cov_2e3hf4l7so().s[153]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[154]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[155]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[41][0]++;
      cov_2e3hf4l7so().s[156]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[41][1]++;
    }
    const {
      email
    } =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[157]++, req.body);
    const user =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[158]++, await User_1.User.findOne({
      email: email.toLowerCase()
    }));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[159]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[42][0]++;
      cov_2e3hf4l7so().s[160]++;
      // Don't reveal if email exists or not
      return res.json({
        success: true,
        message: 'If the email exists, a password reset link has been sent'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[42][1]++;
    }
    // Generate reset token
    const resetToken =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[161]++, jsonwebtoken_1.default.sign({
      userId: user._id,
      type: 'password_reset'
    }, process.env.JWT_SECRET, {
      expiresIn: '1h'
    }));
    const resetLink =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[162]++, `${
    /* istanbul ignore next */
    (cov_2e3hf4l7so().b[43][0]++, process.env.FRONTEND_URL) ||
    /* istanbul ignore next */
    (cov_2e3hf4l7so().b[43][1]++, 'https://halobuzz.com')}/reset-password?token=${resetToken}`);
    // Send reset email
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[163]++;
    await emailService_1.EmailService.sendPasswordResetEmail(user.email, resetLink);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[164]++;
    logger_1.logger.info(`Password reset email sent to: ${email}`);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[165]++;
    res.json({
      success: true,
      message: 'If the email exists, a password reset link has been sent'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[166]++;
    logger_1.logger.error('Forgot password error:', error);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[167]++;
    res.status(500).json({
      success: false,
      error: 'Failed to process password reset request'
    });
  }
});
// Password reset
/* istanbul ignore next */
cov_2e3hf4l7so().s[168]++;
router.post('/reset-password', [(0, express_validator_1.body)('token').notEmpty().withMessage('Reset token is required'), (0, express_validator_1.body)('password').isLength({
  min: 6
}).withMessage('Password must be at least 6 characters')], async (req, res) => {
  /* istanbul ignore next */
  cov_2e3hf4l7so().f[9]++;
  cov_2e3hf4l7so().s[169]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[170]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[171]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[44][0]++;
      cov_2e3hf4l7so().s[172]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[44][1]++;
    }
    const {
      token,
      password
    } =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[173]++, req.body);
    // Verify token
    const decoded =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[174]++, jsonwebtoken_1.default.verify(token, process.env.JWT_SECRET));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[175]++;
    if (decoded.type !== 'password_reset') {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[45][0]++;
      cov_2e3hf4l7so().s[176]++;
      return res.status(400).json({
        success: false,
        error: 'Invalid reset token'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[45][1]++;
    }
    // Update user password
    const user =
    /* istanbul ignore next */
    (cov_2e3hf4l7so().s[177]++, await User_1.User.findById(decoded.userId));
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[178]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2e3hf4l7so().b[46][0]++;
      cov_2e3hf4l7so().s[179]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e3hf4l7so().b[46][1]++;
    }
    cov_2e3hf4l7so().s[180]++;
    user.password = password;
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[181]++;
    await user.save();
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[182]++;
    logger_1.logger.info(`Password reset for user: ${user.username}`);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[183]++;
    res.json({
      success: true,
      message: 'Password reset successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[184]++;
    logger_1.logger.error('Reset password error:', error);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[185]++;
    res.status(400).json({
      success: false,
      error: 'Invalid or expired reset token'
    });
  }
});
// Logout
/* istanbul ignore next */
cov_2e3hf4l7so().s[186]++;
router.post('/logout', async (req, res) => {
  /* istanbul ignore next */
  cov_2e3hf4l7so().f[10]++;
  cov_2e3hf4l7so().s[187]++;
  try {
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[188]++;
    // In a real implementation, you might want to blacklist the token
    // For now, we'll just return success
    res.json({
      success: true,
      message: 'Logged out successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[189]++;
    logger_1.logger.error('Logout failed:', error);
    /* istanbul ignore next */
    cov_2e3hf4l7so().s[190]++;
    res.status(500).json({
      success: false,
      error: 'Logout failed'
    });
  }
});
/* istanbul ignore next */
cov_2e3hf4l7so().s[191]++;
exports.default = router;