ab9d86048e4fc7de87c5443720f2574d
"use strict";

/* istanbul ignore next */
function cov_t7nwsktfu() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\AlertService.ts";
  var hash = "d26e6202502f46834ef47c9a570cd47ca2d032b3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\AlertService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 30
        }
      },
      "4": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 25
        },
        end: {
          line: 8,
          column: 70
        }
      },
      "6": {
        start: {
          line: 9,
          column: 28
        },
        end: {
          line: 9,
          column: 76
        }
      },
      "7": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 30
        }
      },
      "9": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 12,
          column: 55
        }
      },
      "10": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 69
        }
      },
      "12": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 56
        }
      },
      "14": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 40,
          column: 14
        }
      },
      "15": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 68
        }
      },
      "16": {
        start: {
          line: 41,
          column: 53
        },
        end: {
          line: 41,
          column: 67
        }
      },
      "17": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "18": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 79
        }
      },
      "19": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 56
        }
      },
      "20": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 63
        }
      },
      "21": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 68
        }
      },
      "22": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 24
        }
      },
      "23": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "24": {
        start: {
          line: 60,
          column: 27
        },
        end: {
          line: 60,
          column: 29
        }
      },
      "25": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "26": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 59
        }
      },
      "27": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "28": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 47
        }
      },
      "29": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "30": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "31": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 73,
          column: 68
        }
      },
      "32": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 26
        }
      },
      "33": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 66
        }
      },
      "34": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 24
        }
      },
      "35": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "36": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 104
        }
      },
      "37": {
        start: {
          line: 87,
          column: 26
        },
        end: {
          line: 95,
          column: 29
        }
      },
      "38": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "39": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 51
        }
      },
      "40": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 25
        }
      },
      "41": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 73
        }
      },
      "42": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 24
        }
      },
      "43": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "44": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 100
        }
      },
      "45": {
        start: {
          line: 112,
          column: 26
        },
        end: {
          line: 120,
          column: 29
        }
      },
      "46": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "47": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 51
        }
      },
      "48": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 25
        }
      },
      "49": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 69
        }
      },
      "50": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 24
        }
      },
      "51": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "52": {
        start: {
          line: 136,
          column: 24
        },
        end: {
          line: 136,
          column: 34
        }
      },
      "53": {
        start: {
          line: 137,
          column: 31
        },
        end: {
          line: 137,
          column: 71
        }
      },
      "54": {
        start: {
          line: 138,
          column: 30
        },
        end: {
          line: 138,
          column: 75
        }
      },
      "55": {
        start: {
          line: 139,
          column: 80
        },
        end: {
          line: 144,
          column: 14
        }
      },
      "56": {
        start: {
          line: 145,
          column: 32
        },
        end: {
          line: 150,
          column: 14
        }
      },
      "57": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 161,
          column: 14
        }
      },
      "58": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 73
        }
      },
      "59": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 24
        }
      },
      "60": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "61": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 34
        }
      },
      "62": {
        start: {
          line: 174,
          column: 26
        },
        end: {
          line: 174,
          column: 84
        }
      },
      "63": {
        start: {
          line: 175,
          column: 30
        },
        end: {
          line: 175,
          column: 77
        }
      },
      "64": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 176,
          column: 79
        }
      },
      "65": {
        start: {
          line: 178,
          column: 33
        },
        end: {
          line: 178,
          column: 66
        }
      },
      "66": {
        start: {
          line: 180,
          column: 35
        },
        end: {
          line: 180,
          column: 83
        }
      },
      "67": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 183,
          column: 13
        }
      },
      "68": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 28
        }
      },
      "69": {
        start: {
          line: 184,
          column: 35
        },
        end: {
          line: 184,
          column: 91
        }
      },
      "70": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "71": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 204,
          column: 19
        }
      },
      "72": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 24
        }
      },
      "73": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 74
        }
      },
      "74": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 24
        }
      },
      "75": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "76": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 218,
          column: 34
        }
      },
      "77": {
        start: {
          line: 219,
          column: 26
        },
        end: {
          line: 219,
          column: 84
        }
      },
      "78": {
        start: {
          line: 220,
          column: 30
        },
        end: {
          line: 220,
          column: 77
        }
      },
      "79": {
        start: {
          line: 221,
          column: 28
        },
        end: {
          line: 221,
          column: 79
        }
      },
      "80": {
        start: {
          line: 223,
          column: 35
        },
        end: {
          line: 223,
          column: 70
        }
      },
      "81": {
        start: {
          line: 225,
          column: 37
        },
        end: {
          line: 225,
          column: 87
        }
      },
      "82": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "83": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 28
        }
      },
      "84": {
        start: {
          line: 229,
          column: 35
        },
        end: {
          line: 229,
          column: 97
        }
      },
      "85": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "86": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 248,
          column: 19
        }
      },
      "87": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 24
        }
      },
      "88": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 77
        }
      },
      "89": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 24
        }
      },
      "90": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "91": {
        start: {
          line: 262,
          column: 24
        },
        end: {
          line: 262,
          column: 34
        }
      },
      "92": {
        start: {
          line: 263,
          column: 31
        },
        end: {
          line: 263,
          column: 71
        }
      },
      "93": {
        start: {
          line: 264,
          column: 31
        },
        end: {
          line: 264,
          column: 72
        }
      },
      "94": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 284,
          column: 13
        }
      },
      "95": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 283,
          column: 19
        }
      },
      "96": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 24
        }
      },
      "97": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 73
        }
      },
      "98": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 24
        }
      },
      "99": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "100": {
        start: {
          line: 297,
          column: 24
        },
        end: {
          line: 297,
          column: 34
        }
      },
      "101": {
        start: {
          line: 298,
          column: 31
        },
        end: {
          line: 298,
          column: 71
        }
      },
      "102": {
        start: {
          line: 299,
          column: 31
        },
        end: {
          line: 299,
          column: 77
        }
      },
      "103": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 319,
          column: 13
        }
      },
      "104": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 318,
          column: 19
        }
      },
      "105": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 24
        }
      },
      "106": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 74
        }
      },
      "107": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 24
        }
      },
      "108": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "109": {
        start: {
          line: 332,
          column: 24
        },
        end: {
          line: 332,
          column: 34
        }
      },
      "110": {
        start: {
          line: 333,
          column: 26
        },
        end: {
          line: 333,
          column: 84
        }
      },
      "111": {
        start: {
          line: 334,
          column: 30
        },
        end: {
          line: 334,
          column: 77
        }
      },
      "112": {
        start: {
          line: 335,
          column: 28
        },
        end: {
          line: 335,
          column: 79
        }
      },
      "113": {
        start: {
          line: 336,
          column: 35
        },
        end: {
          line: 336,
          column: 70
        }
      },
      "114": {
        start: {
          line: 337,
          column: 37
        },
        end: {
          line: 337,
          column: 87
        }
      },
      "115": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 340,
          column: 13
        }
      },
      "116": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 28
        }
      },
      "117": {
        start: {
          line: 341,
          column: 36
        },
        end: {
          line: 341,
          column: 98
        }
      },
      "118": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 361,
          column: 13
        }
      },
      "119": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 360,
          column: 19
        }
      },
      "120": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 24
        }
      },
      "121": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 73
        }
      },
      "122": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 24
        }
      },
      "123": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "124": {
        start: {
          line: 374,
          column: 24
        },
        end: {
          line: 374,
          column: 34
        }
      },
      "125": {
        start: {
          line: 375,
          column: 26
        },
        end: {
          line: 375,
          column: 84
        }
      },
      "126": {
        start: {
          line: 376,
          column: 30
        },
        end: {
          line: 376,
          column: 77
        }
      },
      "127": {
        start: {
          line: 377,
          column: 28
        },
        end: {
          line: 377,
          column: 79
        }
      },
      "128": {
        start: {
          line: 378,
          column: 36
        },
        end: {
          line: 378,
          column: 72
        }
      },
      "129": {
        start: {
          line: 379,
          column: 38
        },
        end: {
          line: 379,
          column: 89
        }
      },
      "130": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 382,
          column: 13
        }
      },
      "131": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 381,
          column: 28
        }
      },
      "132": {
        start: {
          line: 383,
          column: 35
        },
        end: {
          line: 383,
          column: 100
        }
      },
      "133": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 403,
          column: 13
        }
      },
      "134": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 402,
          column: 19
        }
      },
      "135": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 404,
          column: 24
        }
      },
      "136": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 77
        }
      },
      "137": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 408,
          column: 24
        }
      },
      "138": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 448,
          column: 9
        }
      },
      "139": {
        start: {
          line: 417,
          column: 38
        },
        end: {
          line: 425,
          column: 14
        }
      },
      "140": {
        start: {
          line: 426,
          column: 26
        },
        end: {
          line: 436,
          column: 14
        }
      },
      "141": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 31
        }
      },
      "142": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 442,
          column: 15
        }
      },
      "143": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 25
        }
      },
      "144": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 446,
          column: 68
        }
      },
      "145": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 447,
          column: 24
        }
      },
      "146": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 461,
          column: 9
        }
      },
      "147": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 457,
          column: 13
        }
      },
      "148": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 456,
          column: 56
        }
      },
      "149": {
        start: {
          line: 460,
          column: 12
        },
        end: {
          line: 460,
          column: 74
        }
      },
      "150": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 475,
          column: 9
        }
      },
      "151": {
        start: {
          line: 468,
          column: 41
        },
        end: {
          line: 468,
          column: 87
        }
      },
      "152": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 471,
          column: 13
        }
      },
      "153": {
        start: {
          line: 470,
          column: 16
        },
        end: {
          line: 470,
          column: 60
        }
      },
      "154": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 474,
          column: 79
        }
      },
      "155": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "156": {
        start: {
          line: 482,
          column: 33
        },
        end: {
          line: 487,
          column: 13
        }
      },
      "157": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 489,
          column: 139
        }
      },
      "158": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 496,
          column: 15
        }
      },
      "159": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 88
        }
      },
      "160": {
        start: {
          line: 504,
          column: 20
        },
        end: {
          line: 504,
          column: 97
        }
      },
      "161": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 505,
          column: 39
        }
      },
      "162": {
        start: {
          line: 508,
          column: 21
        },
        end: {
          line: 511,
          column: 10
        }
      },
      "163": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 513,
          column: 21
        }
      },
      "164": {
        start: {
          line: 513,
          column: 12
        },
        end: {
          line: 513,
          column: 21
        }
      },
      "165": {
        start: {
          line: 514,
          column: 29
        },
        end: {
          line: 514,
          column: 82
        }
      },
      "166": {
        start: {
          line: 514,
          column: 55
        },
        end: {
          line: 514,
          column: 78
        }
      },
      "167": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 515,
          column: 42
        }
      },
      "168": {
        start: {
          line: 518,
          column: 20
        },
        end: {
          line: 518,
          column: 97
        }
      },
      "169": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 519,
          column: 48
        }
      },
      "170": {
        start: {
          line: 522,
          column: 21
        },
        end: {
          line: 525,
          column: 10
        }
      },
      "171": {
        start: {
          line: 526,
          column: 8
        },
        end: {
          line: 527,
          column: 21
        }
      },
      "172": {
        start: {
          line: 527,
          column: 12
        },
        end: {
          line: 527,
          column: 21
        }
      },
      "173": {
        start: {
          line: 528,
          column: 31
        },
        end: {
          line: 528,
          column: 93
        }
      },
      "174": {
        start: {
          line: 528,
          column: 57
        },
        end: {
          line: 528,
          column: 89
        }
      },
      "175": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 529,
          column: 44
        }
      },
      "176": {
        start: {
          line: 532,
          column: 21
        },
        end: {
          line: 535,
          column: 10
        }
      },
      "177": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 536,
          column: 77
        }
      },
      "178": {
        start: {
          line: 536,
          column: 41
        },
        end: {
          line: 536,
          column: 72
        }
      },
      "179": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 541,
          column: 17
        }
      },
      "180": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 546,
          column: 17
        }
      },
      "181": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 551,
          column: 17
        }
      },
      "182": {
        start: {
          line: 554,
          column: 20
        },
        end: {
          line: 554,
          column: 97
        }
      },
      "183": {
        start: {
          line: 555,
          column: 8
        },
        end: {
          line: 555,
          column: 40
        }
      },
      "184": {
        start: {
          line: 558,
          column: 21
        },
        end: {
          line: 561,
          column: 10
        }
      },
      "185": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 563,
          column: 21
        }
      },
      "186": {
        start: {
          line: 563,
          column: 12
        },
        end: {
          line: 563,
          column: 21
        }
      },
      "187": {
        start: {
          line: 564,
          column: 32
        },
        end: {
          line: 564,
          column: 86
        }
      },
      "188": {
        start: {
          line: 564,
          column: 58
        },
        end: {
          line: 564,
          column: 82
        }
      },
      "189": {
        start: {
          line: 565,
          column: 8
        },
        end: {
          line: 565,
          column: 45
        }
      },
      "190": {
        start: {
          line: 570,
          column: 8
        },
        end: {
          line: 575,
          column: 10
        }
      },
      "191": {
        start: {
          line: 578,
          column: 20
        },
        end: {
          line: 578,
          column: 23
        }
      },
      "192": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 580,
          column: 42
        }
      },
      "193": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 581,
          column: 45
        }
      },
      "194": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 582,
          column: 42
        }
      },
      "195": {
        start: {
          line: 584,
          column: 8
        },
        end: {
          line: 585,
          column: 24
        }
      },
      "196": {
        start: {
          line: 585,
          column: 12
        },
        end: {
          line: 585,
          column: 24
        }
      },
      "197": {
        start: {
          line: 586,
          column: 8
        },
        end: {
          line: 587,
          column: 24
        }
      },
      "198": {
        start: {
          line: 587,
          column: 12
        },
        end: {
          line: 587,
          column: 24
        }
      },
      "199": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 589,
          column: 24
        }
      },
      "200": {
        start: {
          line: 589,
          column: 12
        },
        end: {
          line: 589,
          column: 24
        }
      },
      "201": {
        start: {
          line: 590,
          column: 8
        },
        end: {
          line: 591,
          column: 24
        }
      },
      "202": {
        start: {
          line: 591,
          column: 12
        },
        end: {
          line: 591,
          column: 24
        }
      },
      "203": {
        start: {
          line: 592,
          column: 8
        },
        end: {
          line: 592,
          column: 49
        }
      },
      "204": {
        start: {
          line: 595,
          column: 0
        },
        end: {
          line: 595,
          column: 36
        }
      },
      "205": {
        start: {
          line: 596,
          column: 0
        },
        end: {
          line: 596,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 41,
            column: 44
          },
          end: {
            line: 41,
            column: 45
          }
        },
        loc: {
          start: {
            line: 41,
            column: 53
          },
          end: {
            line: 41,
            column: 67
          }
        },
        line: 41
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 29
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 48
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 84
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 44
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 109
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 28
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 134
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 29
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 171
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        loc: {
          start: {
            line: 216,
            column: 31
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 216
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 28
          },
          end: {
            line: 291,
            column: 5
          }
        },
        line: 260
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        loc: {
          start: {
            line: 295,
            column: 29
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 295
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 28
          },
          end: {
            line: 368,
            column: 5
          }
        },
        line: 330
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        loc: {
          start: {
            line: 372,
            column: 32
          },
          end: {
            line: 410,
            column: 5
          }
        },
        line: 372
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 414,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        },
        loc: {
          start: {
            line: 414,
            column: 33
          },
          end: {
            line: 449,
            column: 5
          }
        },
        line: 414
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 453,
            column: 4
          },
          end: {
            line: 453,
            column: 5
          }
        },
        loc: {
          start: {
            line: 453,
            column: 36
          },
          end: {
            line: 462,
            column: 5
          }
        },
        line: 453
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 466,
            column: 4
          },
          end: {
            line: 466,
            column: 5
          }
        },
        loc: {
          start: {
            line: 466,
            column: 39
          },
          end: {
            line: 476,
            column: 5
          }
        },
        line: 466
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 43
          },
          end: {
            line: 501,
            column: 5
          }
        },
        line: 480
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 503,
            column: 4
          },
          end: {
            line: 503,
            column: 5
          }
        },
        loc: {
          start: {
            line: 503,
            column: 32
          },
          end: {
            line: 506,
            column: 5
          }
        },
        line: 503
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 507,
            column: 4
          },
          end: {
            line: 507,
            column: 5
          }
        },
        loc: {
          start: {
            line: 507,
            column: 38
          },
          end: {
            line: 516,
            column: 5
          }
        },
        line: 507
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 514,
            column: 41
          },
          end: {
            line: 514,
            column: 42
          }
        },
        loc: {
          start: {
            line: 514,
            column: 55
          },
          end: {
            line: 514,
            column: 78
          }
        },
        line: 514
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 517,
            column: 4
          },
          end: {
            line: 517,
            column: 5
          }
        },
        loc: {
          start: {
            line: 517,
            column: 34
          },
          end: {
            line: 520,
            column: 5
          }
        },
        line: 517
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 521,
            column: 4
          },
          end: {
            line: 521,
            column: 5
          }
        },
        loc: {
          start: {
            line: 521,
            column: 40
          },
          end: {
            line: 530,
            column: 5
          }
        },
        line: 521
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 528,
            column: 43
          },
          end: {
            line: 528,
            column: 44
          }
        },
        loc: {
          start: {
            line: 528,
            column: 57
          },
          end: {
            line: 528,
            column: 89
          }
        },
        line: 528
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 531,
            column: 4
          },
          end: {
            line: 531,
            column: 5
          }
        },
        loc: {
          start: {
            line: 531,
            column: 34
          },
          end: {
            line: 537,
            column: 5
          }
        },
        line: 531
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 536,
            column: 27
          },
          end: {
            line: 536,
            column: 28
          }
        },
        loc: {
          start: {
            line: 536,
            column: 41
          },
          end: {
            line: 536,
            column: 72
          }
        },
        line: 536
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 538,
            column: 4
          },
          end: {
            line: 538,
            column: 5
          }
        },
        loc: {
          start: {
            line: 538,
            column: 39
          },
          end: {
            line: 542,
            column: 5
          }
        },
        line: 538
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 543,
            column: 4
          },
          end: {
            line: 543,
            column: 5
          }
        },
        loc: {
          start: {
            line: 543,
            column: 34
          },
          end: {
            line: 547,
            column: 5
          }
        },
        line: 543
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 548,
            column: 4
          },
          end: {
            line: 548,
            column: 5
          }
        },
        loc: {
          start: {
            line: 548,
            column: 40
          },
          end: {
            line: 552,
            column: 5
          }
        },
        line: 548
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 553,
            column: 4
          },
          end: {
            line: 553,
            column: 5
          }
        },
        loc: {
          start: {
            line: 553,
            column: 35
          },
          end: {
            line: 556,
            column: 5
          }
        },
        line: 553
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 557,
            column: 4
          },
          end: {
            line: 557,
            column: 5
          }
        },
        loc: {
          start: {
            line: 557,
            column: 41
          },
          end: {
            line: 566,
            column: 5
          }
        },
        line: 557
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 564,
            column: 44
          },
          end: {
            line: 564,
            column: 45
          }
        },
        loc: {
          start: {
            line: 564,
            column: 58
          },
          end: {
            line: 564,
            column: 82
          }
        },
        line: 564
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 567,
            column: 4
          },
          end: {
            line: 567,
            column: 5
          }
        },
        loc: {
          start: {
            line: 567,
            column: 29
          },
          end: {
            line: 576,
            column: 5
          }
        },
        line: 567
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 577,
            column: 4
          },
          end: {
            line: 577,
            column: 5
          }
        },
        loc: {
          start: {
            line: 577,
            column: 34
          },
          end: {
            line: 593,
            column: 5
          }
        },
        line: 577
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 45
          },
          end: {
            line: 18,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 45
          },
          end: {
            line: 18,
            column: 71
          }
        }, {
          start: {
            line: 18,
            column: 75
          },
          end: {
            line: 18,
            column: 79
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 47
          },
          end: {
            line: 19,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 47
          },
          end: {
            line: 19,
            column: 79
          }
        }, {
          start: {
            line: 19,
            column: 83
          },
          end: {
            line: 19,
            column: 87
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 20,
            column: 42
          },
          end: {
            line: 20,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 42
          },
          end: {
            line: 20,
            column: 75
          }
        }, {
          start: {
            line: 20,
            column: 79
          },
          end: {
            line: 20,
            column: 83
          }
        }],
        line: 20
      },
      "6": {
        loc: {
          start: {
            line: 21,
            column: 42
          },
          end: {
            line: 21,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 42
          },
          end: {
            line: 21,
            column: 75
          }
        }, {
          start: {
            line: 21,
            column: 79
          },
          end: {
            line: 21,
            column: 84
          }
        }],
        line: 21
      },
      "7": {
        loc: {
          start: {
            line: 22,
            column: 44
          },
          end: {
            line: 22,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 44
          },
          end: {
            line: 22,
            column: 77
          }
        }, {
          start: {
            line: 22,
            column: 81
          },
          end: {
            line: 22,
            column: 85
          }
        }],
        line: 22
      },
      "8": {
        loc: {
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 23,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 23,
            column: 85
          }
        }, {
          start: {
            line: 23,
            column: 89
          },
          end: {
            line: 23,
            column: 93
          }
        }],
        line: 23
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 17
          },
          end: {
            line: 48,
            column: 13
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "11": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "12": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "13": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "14": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "15": {
        loc: {
          start: {
            line: 152,
            column: 24
          },
          end: {
            line: 152,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 43
          },
          end: {
            line: 152,
            column: 52
          }
        }, {
          start: {
            line: 152,
            column: 55
          },
          end: {
            line: 152,
            column: 96
          }
        }],
        line: 152
      },
      "16": {
        loc: {
          start: {
            line: 152,
            column: 55
          },
          end: {
            line: 152,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 74
          },
          end: {
            line: 152,
            column: 83
          }
        }, {
          start: {
            line: 152,
            column: 86
          },
          end: {
            line: 152,
            column: 96
          }
        }],
        line: 152
      },
      "17": {
        loc: {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "18": {
        loc: {
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 181,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 181,
            column: 34
          }
        }, {
          start: {
            line: 181,
            column: 38
          },
          end: {
            line: 181,
            column: 58
          }
        }],
        line: 181
      },
      "19": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "20": {
        loc: {
          start: {
            line: 188,
            column: 30
          },
          end: {
            line: 188,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 52
          },
          end: {
            line: 188,
            column: 62
          }
        }, {
          start: {
            line: 188,
            column: 65
          },
          end: {
            line: 188,
            column: 104
          }
        }],
        line: 188
      },
      "21": {
        loc: {
          start: {
            line: 188,
            column: 65
          },
          end: {
            line: 188,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 87
          },
          end: {
            line: 188,
            column: 93
          }
        }, {
          start: {
            line: 188,
            column: 96
          },
          end: {
            line: 188,
            column: 104
          }
        }],
        line: 188
      },
      "22": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "23": {
        loc: {
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 226,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 226,
            column: 36
          }
        }, {
          start: {
            line: 226,
            column: 40
          },
          end: {
            line: 226,
            column: 62
          }
        }],
        line: 226
      },
      "24": {
        loc: {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "25": {
        loc: {
          start: {
            line: 233,
            column: 30
          },
          end: {
            line: 233,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 233,
            column: 52
          },
          end: {
            line: 233,
            column: 58
          }
        }, {
          start: {
            line: 233,
            column: 61
          },
          end: {
            line: 233,
            column: 69
          }
        }],
        line: 233
      },
      "26": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 284,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 284,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "27": {
        loc: {
          start: {
            line: 268,
            column: 30
          },
          end: {
            line: 268,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 268,
            column: 49
          },
          end: {
            line: 268,
            column: 59
          }
        }, {
          start: {
            line: 268,
            column: 62
          },
          end: {
            line: 268,
            column: 68
          }
        }],
        line: 268
      },
      "28": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 319,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 319,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "29": {
        loc: {
          start: {
            line: 303,
            column: 30
          },
          end: {
            line: 303,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 303,
            column: 49
          },
          end: {
            line: 303,
            column: 59
          }
        }, {
          start: {
            line: 303,
            column: 62
          },
          end: {
            line: 303,
            column: 68
          }
        }],
        line: 303
      },
      "30": {
        loc: {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "31": {
        loc: {
          start: {
            line: 338,
            column: 16
          },
          end: {
            line: 338,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 16
          },
          end: {
            line: 338,
            column: 36
          }
        }, {
          start: {
            line: 338,
            column: 40
          },
          end: {
            line: 338,
            column: 62
          }
        }],
        line: 338
      },
      "32": {
        loc: {
          start: {
            line: 342,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "33": {
        loc: {
          start: {
            line: 345,
            column: 30
          },
          end: {
            line: 345,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 345,
            column: 53
          },
          end: {
            line: 345,
            column: 63
          }
        }, {
          start: {
            line: 345,
            column: 66
          },
          end: {
            line: 345,
            column: 72
          }
        }],
        line: 345
      },
      "34": {
        loc: {
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 382,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 382,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "35": {
        loc: {
          start: {
            line: 380,
            column: 16
          },
          end: {
            line: 380,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 380,
            column: 16
          },
          end: {
            line: 380,
            column: 37
          }
        }, {
          start: {
            line: 380,
            column: 41
          },
          end: {
            line: 380,
            column: 64
          }
        }],
        line: 380
      },
      "36": {
        loc: {
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 403,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 403,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "37": {
        loc: {
          start: {
            line: 387,
            column: 30
          },
          end: {
            line: 387,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 387,
            column: 52
          },
          end: {
            line: 387,
            column: 58
          }
        }, {
          start: {
            line: 387,
            column: 61
          },
          end: {
            line: 387,
            column: 69
          }
        }],
        line: 387
      },
      "38": {
        loc: {
          start: {
            line: 468,
            column: 41
          },
          end: {
            line: 468,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 468,
            column: 41
          },
          end: {
            line: 468,
            column: 74
          }
        }, {
          start: {
            line: 468,
            column: 78
          },
          end: {
            line: 468,
            column: 87
          }
        }],
        line: 468
      },
      "39": {
        loc: {
          start: {
            line: 505,
            column: 15
          },
          end: {
            line: 505,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 505,
            column: 15
          },
          end: {
            line: 505,
            column: 33
          }
        }, {
          start: {
            line: 505,
            column: 37
          },
          end: {
            line: 505,
            column: 38
          }
        }],
        line: 505
      },
      "40": {
        loc: {
          start: {
            line: 512,
            column: 8
          },
          end: {
            line: 513,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 512,
            column: 8
          },
          end: {
            line: 513,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 512
      },
      "41": {
        loc: {
          start: {
            line: 519,
            column: 15
          },
          end: {
            line: 519,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 519,
            column: 15
          },
          end: {
            line: 519,
            column: 42
          }
        }, {
          start: {
            line: 519,
            column: 46
          },
          end: {
            line: 519,
            column: 47
          }
        }],
        line: 519
      },
      "42": {
        loc: {
          start: {
            line: 526,
            column: 8
          },
          end: {
            line: 527,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 526,
            column: 8
          },
          end: {
            line: 527,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 526
      },
      "43": {
        loc: {
          start: {
            line: 555,
            column: 15
          },
          end: {
            line: 555,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 555,
            column: 15
          },
          end: {
            line: 555,
            column: 34
          }
        }, {
          start: {
            line: 555,
            column: 38
          },
          end: {
            line: 555,
            column: 39
          }
        }],
        line: 555
      },
      "44": {
        loc: {
          start: {
            line: 562,
            column: 8
          },
          end: {
            line: 563,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 562,
            column: 8
          },
          end: {
            line: 563,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 562
      },
      "45": {
        loc: {
          start: {
            line: 584,
            column: 8
          },
          end: {
            line: 585,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 584,
            column: 8
          },
          end: {
            line: 585,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 584
      },
      "46": {
        loc: {
          start: {
            line: 586,
            column: 8
          },
          end: {
            line: 587,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 586,
            column: 8
          },
          end: {
            line: 587,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 586
      },
      "47": {
        loc: {
          start: {
            line: 588,
            column: 8
          },
          end: {
            line: 589,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 588,
            column: 8
          },
          end: {
            line: 589,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 588
      },
      "48": {
        loc: {
          start: {
            line: 590,
            column: 8
          },
          end: {
            line: 591,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 590,
            column: 8
          },
          end: {
            line: 591,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 590
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d26e6202502f46834ef47c9a570cd47ca2d032b3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_t7nwsktfu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_t7nwsktfu();
var __importDefault =
/* istanbul ignore next */
(cov_t7nwsktfu().s[0]++,
/* istanbul ignore next */
(cov_t7nwsktfu().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_t7nwsktfu().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_t7nwsktfu().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_t7nwsktfu().f[0]++;
  cov_t7nwsktfu().s[1]++;
  return /* istanbul ignore next */(cov_t7nwsktfu().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_t7nwsktfu().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_t7nwsktfu().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_t7nwsktfu().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_t7nwsktfu().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_t7nwsktfu().s[3]++;
exports.AlertService = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_t7nwsktfu().s[4]++, require("../config/logger"));
const AnalyticsAlert_1 =
/* istanbul ignore next */
(cov_t7nwsktfu().s[5]++, require("../analytics/models/AnalyticsAlert"));
const AnalyticsDailyKPI_1 =
/* istanbul ignore next */
(cov_t7nwsktfu().s[6]++, require("../analytics/models/AnalyticsDailyKPI"));
const rootCause_1 =
/* istanbul ignore next */
(cov_t7nwsktfu().s[7]++, require("../analytics/services/rootCause"));
const uuid_1 =
/* istanbul ignore next */
(cov_t7nwsktfu().s[8]++, require("uuid"));
const mongoose_1 =
/* istanbul ignore next */
(cov_t7nwsktfu().s[9]++, __importDefault(require("mongoose")));
class AlertService {
  config;
  rootCauseAnalyzer;
  constructor() {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[1]++;
    cov_t7nwsktfu().s[10]++;
    this.config = {
      revenueDropThreshold: parseFloat(
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[3][0]++, process.env.ALERT_DROP_PCT) ||
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[3][1]++, '15')),
      payerRateDropThreshold: parseFloat(
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[4][0]++, process.env.ALERT_PAYER_DROP_PCT) ||
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[4][1]++, '10')),
      abuseSpikeThreshold: parseInt(
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[5][0]++, process.env.ALERT_ABUSE_THRESHOLD) ||
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[5][1]++, '50')),
      infraErrorThreshold: parseInt(
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[6][0]++, process.env.ALERT_INFRA_THRESHOLD) ||
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[6][1]++, '100')),
      churnSpikeThreshold: parseFloat(
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[7][0]++, process.env.ALERT_CHURN_THRESHOLD) ||
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[7][1]++, '20')),
      engagementDropThreshold: parseFloat(
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[8][0]++, process.env.ALERT_ENGAGEMENT_DROP_PCT) ||
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[8][1]++, '15'))
    };
    /* istanbul ignore next */
    cov_t7nwsktfu().s[11]++;
    this.rootCauseAnalyzer = new rootCause_1.RootCauseAnalyzer();
  }
  /**
   * Check for alerts and create new ones if thresholds are exceeded
   */
  async checkAlerts() {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[2]++;
    cov_t7nwsktfu().s[12]++;
    try {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[13]++;
      logger_1.logger.info('Checking for alerts');
      const alerts =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[14]++, await Promise.all([this.checkRevenueDrop(), this.checkPayerRateDrop(), this.checkAbuseSpike(), this.checkInfraErrors(), this.checkChurnSpike(), this.checkEngagementDrop()]));
      const newAlerts =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[15]++, alerts.filter(alert => {
        /* istanbul ignore next */
        cov_t7nwsktfu().f[3]++;
        cov_t7nwsktfu().s[16]++;
        return alert !== null;
      }));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[17]++;
      if (newAlerts.length > 0) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[9][0]++;
        cov_t7nwsktfu().s[18]++;
        logger_1.logger.info(`Created ${newAlerts.length} new alerts`);
        /* istanbul ignore next */
        cov_t7nwsktfu().s[19]++;
        await this.sendNotifications(newAlerts);
      } else {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[9][1]++;
        cov_t7nwsktfu().s[20]++;
        logger_1.logger.info('No new alerts detected');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[21]++;
      logger_1.logger.error('Failed to check alerts:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[22]++;
      throw error;
    }
  }
  /**
   * Get alerts based on filters
   */
  async getAlerts(options) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[4]++;
    cov_t7nwsktfu().s[23]++;
    try {
      const filter =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[24]++, {});
      /* istanbul ignore next */
      cov_t7nwsktfu().s[25]++;
      if (options.since) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[10][0]++;
        cov_t7nwsktfu().s[26]++;
        filter.createdAt = {
          $gte: options.since
        };
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[10][1]++;
      }
      cov_t7nwsktfu().s[27]++;
      if (options.status) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[11][0]++;
        cov_t7nwsktfu().s[28]++;
        filter.status = options.status;
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[11][1]++;
      }
      cov_t7nwsktfu().s[29]++;
      if (options.severity) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[12][0]++;
        cov_t7nwsktfu().s[30]++;
        filter.severity = options.severity;
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[12][1]++;
      }
      const alerts =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[31]++, await AnalyticsAlert_1.AnalyticsAlert.find(filter).sort({
        createdAt: -1
      }).limit(100).populate('resolution.resolvedBy', 'username email'));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[32]++;
      return alerts;
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[33]++;
      logger_1.logger.error('Failed to get alerts:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[34]++;
      throw error;
    }
  }
  /**
   * Acknowledge an alert
   */
  async acknowledgeAlert(alertId, resolution) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[5]++;
    cov_t7nwsktfu().s[35]++;
    try {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[36]++;
      logger_1.logger.info('Acknowledging alert', {
        alertId,
        resolvedBy: resolution.resolvedBy
      });
      const alert =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[37]++, await AnalyticsAlert_1.AnalyticsAlert.findOneAndUpdate({
        alertId
      }, {
        status: 'acknowledged',
        resolution: {
          resolvedBy: new mongoose_1.default.Types.ObjectId(resolution.resolvedBy),
          resolvedAt: new Date(),
          resolution: resolution.resolution,
          actionTaken: resolution.actionTaken
        }
      }, {
        new: true
      }));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[38]++;
      if (!alert) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[13][0]++;
        cov_t7nwsktfu().s[39]++;
        throw new Error('Alert not found');
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[13][1]++;
      }
      cov_t7nwsktfu().s[40]++;
      return alert;
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[41]++;
      logger_1.logger.error('Failed to acknowledge alert:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[42]++;
      throw error;
    }
  }
  /**
   * Resolve an alert
   */
  async resolveAlert(alertId, resolution) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[6]++;
    cov_t7nwsktfu().s[43]++;
    try {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[44]++;
      logger_1.logger.info('Resolving alert', {
        alertId,
        resolvedBy: resolution.resolvedBy
      });
      const alert =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[45]++, await AnalyticsAlert_1.AnalyticsAlert.findOneAndUpdate({
        alertId
      }, {
        status: 'resolved',
        resolution: {
          resolvedBy: new mongoose_1.default.Types.ObjectId(resolution.resolvedBy),
          resolvedAt: new Date(),
          resolution: resolution.resolution,
          actionTaken: resolution.actionTaken
        }
      }, {
        new: true
      }));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[46]++;
      if (!alert) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[14][0]++;
        cov_t7nwsktfu().s[47]++;
        throw new Error('Alert not found');
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[14][1]++;
      }
      cov_t7nwsktfu().s[48]++;
      return alert;
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[49]++;
      logger_1.logger.error('Failed to resolve alert:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[50]++;
      throw error;
    }
  }
  /**
   * Get system health status
   */
  async getSystemHealth() {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[7]++;
    cov_t7nwsktfu().s[51]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[52]++, new Date());
      const oneHourAgo =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[53]++, new Date(now.getTime() - 60 * 60 * 1000));
      const oneDayAgo =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[54]++, new Date(now.getTime() - 24 * 60 * 60 * 1000));
      const [activeAlerts, criticalAlerts, recentAlerts, systemMetrics] =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[55]++, await Promise.all([AnalyticsAlert_1.AnalyticsAlert.countDocuments({
        status: 'active'
      }), AnalyticsAlert_1.AnalyticsAlert.countDocuments({
        status: 'active',
        severity: 'critical'
      }), AnalyticsAlert_1.AnalyticsAlert.countDocuments({
        createdAt: {
          $gte: oneHourAgo
        }
      }), this.getSystemMetrics()]));
      const healthScore =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[56]++, this.calculateHealthScore({
        activeAlerts,
        criticalAlerts,
        recentAlerts,
        systemMetrics
      }));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[57]++;
      return {
        status: healthScore > 80 ?
        /* istanbul ignore next */
        (cov_t7nwsktfu().b[15][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_t7nwsktfu().b[15][1]++, healthScore > 60 ?
        /* istanbul ignore next */
        (cov_t7nwsktfu().b[16][0]++, 'warning') :
        /* istanbul ignore next */
        (cov_t7nwsktfu().b[16][1]++, 'critical')),
        healthScore,
        metrics: {
          activeAlerts,
          criticalAlerts,
          recentAlerts,
          systemMetrics
        },
        lastChecked: now.toISOString()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[58]++;
      logger_1.logger.error('Failed to get system health:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[59]++;
      throw error;
    }
  }
  /**
   * Check for revenue drop
   */
  async checkRevenueDrop() {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[8]++;
    cov_t7nwsktfu().s[60]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[61]++, new Date());
      const today =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[62]++, new Date(now.getFullYear(), now.getMonth(), now.getDate()));
      const yesterday =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[63]++, new Date(today.getTime() - 24 * 60 * 60 * 1000));
      const weekAgo =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[64]++, new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000));
      // Get today's revenue
      const todayRevenue =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[65]++, await this.getDailyRevenue(today));
      // Get 7-day average revenue
      const weekAvgRevenue =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[66]++, await this.getAverageRevenue(weekAgo, yesterday));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[18][0]++, todayRevenue === 0) ||
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[18][1]++, weekAvgRevenue === 0)) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[17][0]++;
        cov_t7nwsktfu().s[68]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[17][1]++;
      }
      const dropPercentage =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[69]++, (weekAvgRevenue - todayRevenue) / weekAvgRevenue * 100);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[70]++;
      if (dropPercentage > this.config.revenueDropThreshold) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[19][0]++;
        cov_t7nwsktfu().s[71]++;
        return await this.createAlert({
          type: 'revenue_drop',
          severity: dropPercentage > 30 ?
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[20][0]++, 'critical') :
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[20][1]++, dropPercentage > 20 ?
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[21][0]++, 'high') :
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[21][1]++, 'medium')),
          title: 'Revenue Drop Detected',
          description: `Revenue dropped by ${dropPercentage.toFixed(2)}% compared to 7-day average`,
          metric: 'revenue.total',
          currentValue: todayRevenue,
          thresholdValue: weekAvgRevenue,
          deviation: dropPercentage,
          timeWindow: '1day',
          affectedRevenue: weekAvgRevenue - todayRevenue,
          config: {
            threshold: this.config.revenueDropThreshold,
            comparisonPeriod: '7day_avg',
            notificationChannels: ['email', 'slack'],
            autoResolve: false,
            escalationLevel: 1
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[19][1]++;
      }
      cov_t7nwsktfu().s[72]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[73]++;
      logger_1.logger.error('Failed to check revenue drop:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[74]++;
      return null;
    }
  }
  /**
   * Check for payer rate drop
   */
  async checkPayerRateDrop() {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[9]++;
    cov_t7nwsktfu().s[75]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[76]++, new Date());
      const today =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[77]++, new Date(now.getFullYear(), now.getMonth(), now.getDate()));
      const yesterday =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[78]++, new Date(today.getTime() - 24 * 60 * 60 * 1000));
      const weekAgo =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[79]++, new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000));
      // Get today's payer rate
      const todayPayerRate =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[80]++, await this.getDailyPayerRate(today));
      // Get 7-day average payer rate
      const weekAvgPayerRate =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[81]++, await this.getAveragePayerRate(weekAgo, yesterday));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[82]++;
      if (
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[23][0]++, todayPayerRate === 0) ||
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[23][1]++, weekAvgPayerRate === 0)) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[22][0]++;
        cov_t7nwsktfu().s[83]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[22][1]++;
      }
      const dropPercentage =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[84]++, (weekAvgPayerRate - todayPayerRate) / weekAvgPayerRate * 100);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[85]++;
      if (dropPercentage > this.config.payerRateDropThreshold) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[24][0]++;
        cov_t7nwsktfu().s[86]++;
        return await this.createAlert({
          type: 'payer_rate_drop',
          severity: dropPercentage > 20 ?
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[25][0]++, 'high') :
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[25][1]++, 'medium'),
          title: 'Payer Rate Drop Detected',
          description: `Payer rate dropped by ${dropPercentage.toFixed(2)}% compared to 7-day average`,
          metric: 'monetization.payerRate',
          currentValue: todayPayerRate,
          thresholdValue: weekAvgPayerRate,
          deviation: dropPercentage,
          timeWindow: '1day',
          config: {
            threshold: this.config.payerRateDropThreshold,
            comparisonPeriod: '7day_avg',
            notificationChannels: ['email'],
            autoResolve: false,
            escalationLevel: 1
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[24][1]++;
      }
      cov_t7nwsktfu().s[87]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[88]++;
      logger_1.logger.error('Failed to check payer rate drop:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[89]++;
      return null;
    }
  }
  /**
   * Check for abuse spike
   */
  async checkAbuseSpike() {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[10]++;
    cov_t7nwsktfu().s[90]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[91]++, new Date());
      const oneHourAgo =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[92]++, new Date(now.getTime() - 60 * 60 * 1000));
      const abuseCount =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[93]++, await this.getAbuseCount(oneHourAgo, now));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[94]++;
      if (abuseCount > this.config.abuseSpikeThreshold) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[26][0]++;
        cov_t7nwsktfu().s[95]++;
        return await this.createAlert({
          type: 'abuse_spike',
          severity: abuseCount > 100 ?
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[27][0]++, 'critical') :
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[27][1]++, 'high'),
          title: 'Abuse Spike Detected',
          description: `${abuseCount} abuse incidents detected in the last hour`,
          metric: 'safety.flaggedContent',
          currentValue: abuseCount,
          thresholdValue: this.config.abuseSpikeThreshold,
          deviation: (abuseCount - this.config.abuseSpikeThreshold) / this.config.abuseSpikeThreshold * 100,
          timeWindow: '1hour',
          config: {
            threshold: this.config.abuseSpikeThreshold,
            comparisonPeriod: 'previous_hour',
            notificationChannels: ['email', 'slack'],
            autoResolve: true,
            escalationLevel: 2
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[26][1]++;
      }
      cov_t7nwsktfu().s[96]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[97]++;
      logger_1.logger.error('Failed to check abuse spike:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[98]++;
      return null;
    }
  }
  /**
   * Check for infrastructure errors
   */
  async checkInfraErrors() {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[11]++;
    cov_t7nwsktfu().s[99]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[100]++, new Date());
      const oneHourAgo =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[101]++, new Date(now.getTime() - 60 * 60 * 1000));
      const errorCount =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[102]++, await this.getInfraErrorCount(oneHourAgo, now));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[103]++;
      if (errorCount > this.config.infraErrorThreshold) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[28][0]++;
        cov_t7nwsktfu().s[104]++;
        return await this.createAlert({
          type: 'infra_error',
          severity: errorCount > 500 ?
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[29][0]++, 'critical') :
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[29][1]++, 'high'),
          title: 'Infrastructure Error Spike',
          description: `${errorCount} infrastructure errors detected in the last hour`,
          metric: 'system.errors',
          currentValue: errorCount,
          thresholdValue: this.config.infraErrorThreshold,
          deviation: (errorCount - this.config.infraErrorThreshold) / this.config.infraErrorThreshold * 100,
          timeWindow: '1hour',
          config: {
            threshold: this.config.infraErrorThreshold,
            comparisonPeriod: 'previous_hour',
            notificationChannels: ['email', 'slack', 'webhook'],
            autoResolve: true,
            escalationLevel: 3
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[28][1]++;
      }
      cov_t7nwsktfu().s[105]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[106]++;
      logger_1.logger.error('Failed to check infra errors:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[107]++;
      return null;
    }
  }
  /**
   * Check for churn spike
   */
  async checkChurnSpike() {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[12]++;
    cov_t7nwsktfu().s[108]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[109]++, new Date());
      const today =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[110]++, new Date(now.getFullYear(), now.getMonth(), now.getDate()));
      const yesterday =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[111]++, new Date(today.getTime() - 24 * 60 * 60 * 1000));
      const weekAgo =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[112]++, new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000));
      const todayChurnRate =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[113]++, await this.getDailyChurnRate(today));
      const weekAvgChurnRate =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[114]++, await this.getAverageChurnRate(weekAgo, yesterday));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[115]++;
      if (
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[31][0]++, todayChurnRate === 0) ||
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[31][1]++, weekAvgChurnRate === 0)) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[30][0]++;
        cov_t7nwsktfu().s[116]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[30][1]++;
      }
      const spikePercentage =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[117]++, (todayChurnRate - weekAvgChurnRate) / weekAvgChurnRate * 100);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[118]++;
      if (spikePercentage > this.config.churnSpikeThreshold) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[32][0]++;
        cov_t7nwsktfu().s[119]++;
        return await this.createAlert({
          type: 'churn_spike',
          severity: spikePercentage > 50 ?
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[33][0]++, 'critical') :
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[33][1]++, 'high'),
          title: 'Churn Spike Detected',
          description: `Churn rate increased by ${spikePercentage.toFixed(2)}% compared to 7-day average`,
          metric: 'retention.churnRate',
          currentValue: todayChurnRate,
          thresholdValue: weekAvgChurnRate,
          deviation: spikePercentage,
          timeWindow: '1day',
          config: {
            threshold: this.config.churnSpikeThreshold,
            comparisonPeriod: '7day_avg',
            notificationChannels: ['email'],
            autoResolve: false,
            escalationLevel: 2
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[32][1]++;
      }
      cov_t7nwsktfu().s[120]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[121]++;
      logger_1.logger.error('Failed to check churn spike:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[122]++;
      return null;
    }
  }
  /**
   * Check for engagement drop
   */
  async checkEngagementDrop() {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[13]++;
    cov_t7nwsktfu().s[123]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[124]++, new Date());
      const today =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[125]++, new Date(now.getFullYear(), now.getMonth(), now.getDate()));
      const yesterday =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[126]++, new Date(today.getTime() - 24 * 60 * 60 * 1000));
      const weekAgo =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[127]++, new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000));
      const todayEngagement =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[128]++, await this.getDailyEngagement(today));
      const weekAvgEngagement =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[129]++, await this.getAverageEngagement(weekAgo, yesterday));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[130]++;
      if (
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[35][0]++, todayEngagement === 0) ||
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[35][1]++, weekAvgEngagement === 0)) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[34][0]++;
        cov_t7nwsktfu().s[131]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[34][1]++;
      }
      const dropPercentage =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[132]++, (weekAvgEngagement - todayEngagement) / weekAvgEngagement * 100);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[133]++;
      if (dropPercentage > this.config.engagementDropThreshold) {
        /* istanbul ignore next */
        cov_t7nwsktfu().b[36][0]++;
        cov_t7nwsktfu().s[134]++;
        return await this.createAlert({
          type: 'engagement_drop',
          severity: dropPercentage > 25 ?
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[37][0]++, 'high') :
          /* istanbul ignore next */
          (cov_t7nwsktfu().b[37][1]++, 'medium'),
          title: 'Engagement Drop Detected',
          description: `Engagement dropped by ${dropPercentage.toFixed(2)}% compared to 7-day average`,
          metric: 'engagement.dau',
          currentValue: todayEngagement,
          thresholdValue: weekAvgEngagement,
          deviation: dropPercentage,
          timeWindow: '1day',
          config: {
            threshold: this.config.engagementDropThreshold,
            comparisonPeriod: '7day_avg',
            notificationChannels: ['email'],
            autoResolve: false,
            escalationLevel: 1
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_t7nwsktfu().b[36][1]++;
      }
      cov_t7nwsktfu().s[135]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[136]++;
      logger_1.logger.error('Failed to check engagement drop:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[137]++;
      return null;
    }
  }
  /**
   * Create a new alert
   */
  async createAlert(alertData) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[14]++;
    cov_t7nwsktfu().s[138]++;
    try {
      // Perform root cause analysis
      const rootCauseAnalysis =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[139]++, await this.rootCauseAnalyzer.analyzeRootCause({
        type: alertData.type,
        metric: alertData.metric,
        currentValue: alertData.currentValue,
        thresholdValue: alertData.thresholdValue,
        deviation: alertData.deviation,
        timeWindow: alertData.timeWindow,
        country: alertData.country
      }));
      const alert =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[140]++, new AnalyticsAlert_1.AnalyticsAlert({
        alertId: (0, uuid_1.v4)(),
        ...alertData,
        notifications: [],
        relatedData: {
          kpiSnapshot: {},
          affectedEntities: [],
          trends: {},
          rootCause: rootCauseAnalysis
        }
      }));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[141]++;
      await alert.save();
      /* istanbul ignore next */
      cov_t7nwsktfu().s[142]++;
      logger_1.logger.info('Created new alert with root cause analysis', {
        alertId: alert.alertId,
        type: alert.type,
        cause: rootCauseAnalysis.cause
      });
      /* istanbul ignore next */
      cov_t7nwsktfu().s[143]++;
      return alert;
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[144]++;
      logger_1.logger.error('Failed to create alert:', error);
      /* istanbul ignore next */
      cov_t7nwsktfu().s[145]++;
      return null;
    }
  }
  /**
   * Send notifications for new alerts
   */
  async sendNotifications(alerts) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[15]++;
    cov_t7nwsktfu().s[146]++;
    try {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[147]++;
      for (const alert of alerts) {
        /* istanbul ignore next */
        cov_t7nwsktfu().s[148]++;
        await this.sendAlertNotification(alert);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[149]++;
      logger_1.logger.error('Failed to send notifications:', error);
    }
  }
  /**
   * Send notification for a single alert
   */
  async sendAlertNotification(alert) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[16]++;
    cov_t7nwsktfu().s[150]++;
    try {
      const notificationChannels =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[151]++,
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[38][0]++, alert.config.notificationChannels) ||
      /* istanbul ignore next */
      (cov_t7nwsktfu().b[38][1]++, ['email']));
      /* istanbul ignore next */
      cov_t7nwsktfu().s[152]++;
      for (const channel of notificationChannels) {
        /* istanbul ignore next */
        cov_t7nwsktfu().s[153]++;
        await this.sendNotification(alert, channel);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[154]++;
      logger_1.logger.error('Failed to send alert notification:', error);
    }
  }
  /**
   * Send notification via specific channel
   */
  async sendNotification(alert, channel) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[17]++;
    cov_t7nwsktfu().s[155]++;
    try {
      const notification =
      /* istanbul ignore next */
      (cov_t7nwsktfu().s[156]++, {
        channel,
        sentAt: new Date(),
        status: 'sent',
        response: ''
      });
      // Update alert with notification record
      /* istanbul ignore next */
      cov_t7nwsktfu().s[157]++;
      await AnalyticsAlert_1.AnalyticsAlert.findOneAndUpdate({
        alertId: alert.alertId
      }, {
        $push: {
          notifications: notification
        }
      });
      // In production, you would actually send the notification here
      // For now, just log it
      /* istanbul ignore next */
      cov_t7nwsktfu().s[158]++;
      logger_1.logger.info(`Notification sent via ${channel}`, {
        alertId: alert.alertId,
        type: alert.type,
        severity: alert.severity
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_t7nwsktfu().s[159]++;
      logger_1.logger.error(`Failed to send notification via ${channel}:`, error);
    }
  }
  // Helper methods for getting metrics
  async getDailyRevenue(date) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[18]++;
    const kpi =
    /* istanbul ignore next */
    (cov_t7nwsktfu().s[160]++, await AnalyticsDailyKPI_1.AnalyticsDailyKPI.findOne({
      date,
      country: 'ALL'
    }));
    /* istanbul ignore next */
    cov_t7nwsktfu().s[161]++;
    return /* istanbul ignore next */(cov_t7nwsktfu().b[39][0]++, kpi?.revenue.total) ||
    /* istanbul ignore next */
    (cov_t7nwsktfu().b[39][1]++, 0);
  }
  async getAverageRevenue(from, to) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[19]++;
    const kpis =
    /* istanbul ignore next */
    (cov_t7nwsktfu().s[162]++, await AnalyticsDailyKPI_1.AnalyticsDailyKPI.find({
      date: {
        $gte: from,
        $lte: to
      },
      country: 'ALL'
    }));
    /* istanbul ignore next */
    cov_t7nwsktfu().s[163]++;
    if (kpis.length === 0) {
      /* istanbul ignore next */
      cov_t7nwsktfu().b[40][0]++;
      cov_t7nwsktfu().s[164]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_t7nwsktfu().b[40][1]++;
    }
    const totalRevenue =
    /* istanbul ignore next */
    (cov_t7nwsktfu().s[165]++, kpis.reduce((sum, kpi) => {
      /* istanbul ignore next */
      cov_t7nwsktfu().f[20]++;
      cov_t7nwsktfu().s[166]++;
      return sum + kpi.revenue.total;
    }, 0));
    /* istanbul ignore next */
    cov_t7nwsktfu().s[167]++;
    return totalRevenue / kpis.length;
  }
  async getDailyPayerRate(date) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[21]++;
    const kpi =
    /* istanbul ignore next */
    (cov_t7nwsktfu().s[168]++, await AnalyticsDailyKPI_1.AnalyticsDailyKPI.findOne({
      date,
      country: 'ALL'
    }));
    /* istanbul ignore next */
    cov_t7nwsktfu().s[169]++;
    return /* istanbul ignore next */(cov_t7nwsktfu().b[41][0]++, kpi?.monetization.payerRate) ||
    /* istanbul ignore next */
    (cov_t7nwsktfu().b[41][1]++, 0);
  }
  async getAveragePayerRate(from, to) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[22]++;
    const kpis =
    /* istanbul ignore next */
    (cov_t7nwsktfu().s[170]++, await AnalyticsDailyKPI_1.AnalyticsDailyKPI.find({
      date: {
        $gte: from,
        $lte: to
      },
      country: 'ALL'
    }));
    /* istanbul ignore next */
    cov_t7nwsktfu().s[171]++;
    if (kpis.length === 0) {
      /* istanbul ignore next */
      cov_t7nwsktfu().b[42][0]++;
      cov_t7nwsktfu().s[172]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_t7nwsktfu().b[42][1]++;
    }
    const totalPayerRate =
    /* istanbul ignore next */
    (cov_t7nwsktfu().s[173]++, kpis.reduce((sum, kpi) => {
      /* istanbul ignore next */
      cov_t7nwsktfu().f[23]++;
      cov_t7nwsktfu().s[174]++;
      return sum + kpi.monetization.payerRate;
    }, 0));
    /* istanbul ignore next */
    cov_t7nwsktfu().s[175]++;
    return totalPayerRate / kpis.length;
  }
  async getAbuseCount(from, to) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[24]++;
    const kpis =
    /* istanbul ignore next */
    (cov_t7nwsktfu().s[176]++, await AnalyticsDailyKPI_1.AnalyticsDailyKPI.find({
      date: {
        $gte: from,
        $lte: to
      },
      country: 'ALL'
    }));
    /* istanbul ignore next */
    cov_t7nwsktfu().s[177]++;
    return kpis.reduce((sum, kpi) => {
      /* istanbul ignore next */
      cov_t7nwsktfu().f[25]++;
      cov_t7nwsktfu().s[178]++;
      return sum + kpi.safety.flaggedContent;
    }, 0);
  }
  async getInfraErrorCount(from, to) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[26]++;
    cov_t7nwsktfu().s[179]++;
    // This would typically query your error logs
    // For now, return a mock value
    return 0;
  }
  async getDailyChurnRate(date) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[27]++;
    cov_t7nwsktfu().s[180]++;
    // This would typically query your retention data
    // For now, return a mock value
    return 0;
  }
  async getAverageChurnRate(from, to) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[28]++;
    cov_t7nwsktfu().s[181]++;
    // This would typically query your retention data
    // For now, return a mock value
    return 0;
  }
  async getDailyEngagement(date) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[29]++;
    const kpi =
    /* istanbul ignore next */
    (cov_t7nwsktfu().s[182]++, await AnalyticsDailyKPI_1.AnalyticsDailyKPI.findOne({
      date,
      country: 'ALL'
    }));
    /* istanbul ignore next */
    cov_t7nwsktfu().s[183]++;
    return /* istanbul ignore next */(cov_t7nwsktfu().b[43][0]++, kpi?.engagement.dau) ||
    /* istanbul ignore next */
    (cov_t7nwsktfu().b[43][1]++, 0);
  }
  async getAverageEngagement(from, to) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[30]++;
    const kpis =
    /* istanbul ignore next */
    (cov_t7nwsktfu().s[184]++, await AnalyticsDailyKPI_1.AnalyticsDailyKPI.find({
      date: {
        $gte: from,
        $lte: to
      },
      country: 'ALL'
    }));
    /* istanbul ignore next */
    cov_t7nwsktfu().s[185]++;
    if (kpis.length === 0) {
      /* istanbul ignore next */
      cov_t7nwsktfu().b[44][0]++;
      cov_t7nwsktfu().s[186]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_t7nwsktfu().b[44][1]++;
    }
    const totalEngagement =
    /* istanbul ignore next */
    (cov_t7nwsktfu().s[187]++, kpis.reduce((sum, kpi) => {
      /* istanbul ignore next */
      cov_t7nwsktfu().f[31]++;
      cov_t7nwsktfu().s[188]++;
      return sum + kpi.engagement.dau;
    }, 0));
    /* istanbul ignore next */
    cov_t7nwsktfu().s[189]++;
    return totalEngagement / kpis.length;
  }
  async getSystemMetrics() {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[32]++;
    cov_t7nwsktfu().s[190]++;
    // This would typically query your system metrics
    // For now, return mock data
    return {
      cpuUsage: 45,
      memoryUsage: 60,
      diskUsage: 30,
      responseTime: 150
    };
  }
  calculateHealthScore(metrics) {
    /* istanbul ignore next */
    cov_t7nwsktfu().f[33]++;
    let score =
    /* istanbul ignore next */
    (cov_t7nwsktfu().s[191]++, 100);
    // Deduct points for alerts
    /* istanbul ignore next */
    cov_t7nwsktfu().s[192]++;
    score -= metrics.activeAlerts * 5;
    /* istanbul ignore next */
    cov_t7nwsktfu().s[193]++;
    score -= metrics.criticalAlerts * 15;
    /* istanbul ignore next */
    cov_t7nwsktfu().s[194]++;
    score -= metrics.recentAlerts * 2;
    // Deduct points for system issues
    /* istanbul ignore next */
    cov_t7nwsktfu().s[195]++;
    if (metrics.systemMetrics.cpuUsage > 80) {
      /* istanbul ignore next */
      cov_t7nwsktfu().b[45][0]++;
      cov_t7nwsktfu().s[196]++;
      score -= 10;
    } else
    /* istanbul ignore next */
    {
      cov_t7nwsktfu().b[45][1]++;
    }
    cov_t7nwsktfu().s[197]++;
    if (metrics.systemMetrics.memoryUsage > 90) {
      /* istanbul ignore next */
      cov_t7nwsktfu().b[46][0]++;
      cov_t7nwsktfu().s[198]++;
      score -= 15;
    } else
    /* istanbul ignore next */
    {
      cov_t7nwsktfu().b[46][1]++;
    }
    cov_t7nwsktfu().s[199]++;
    if (metrics.systemMetrics.diskUsage > 95) {
      /* istanbul ignore next */
      cov_t7nwsktfu().b[47][0]++;
      cov_t7nwsktfu().s[200]++;
      score -= 20;
    } else
    /* istanbul ignore next */
    {
      cov_t7nwsktfu().b[47][1]++;
    }
    cov_t7nwsktfu().s[201]++;
    if (metrics.systemMetrics.responseTime > 1000) {
      /* istanbul ignore next */
      cov_t7nwsktfu().b[48][0]++;
      cov_t7nwsktfu().s[202]++;
      score -= 10;
    } else
    /* istanbul ignore next */
    {
      cov_t7nwsktfu().b[48][1]++;
    }
    cov_t7nwsktfu().s[203]++;
    return Math.max(0, Math.min(100, score));
  }
}
/* istanbul ignore next */
cov_t7nwsktfu().s[204]++;
exports.AlertService = AlertService;
/* istanbul ignore next */
cov_t7nwsktfu().s[205]++;
exports.default = AlertService;