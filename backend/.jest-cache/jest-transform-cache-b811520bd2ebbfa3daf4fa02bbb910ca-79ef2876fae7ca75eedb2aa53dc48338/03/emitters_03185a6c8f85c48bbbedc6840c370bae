0ef2f1e3f9608767fbf291da59cbecc1
"use strict";

/* istanbul ignore next */
function cov_q2xghioyn() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\realtime\\emitters.ts";
  var hash = "1b05bb02606975453ff88af2488ae43230c86ce6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\realtime\\emitters.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 210
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 42
        }
      },
      "4": {
        start: {
          line: 6,
          column: 12
        },
        end: {
          line: 6,
          column: 16
        }
      },
      "5": {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "6": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 15
        }
      },
      "7": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 56
        }
      },
      "8": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 22
        }
      },
      "9": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "10": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 16,
          column: 5
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 67
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 15
        }
      },
      "13": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "14": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 21,
          column: 11
        }
      },
      "15": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 68
        }
      },
      "16": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 52
        }
      },
      "17": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 28
        }
      },
      "18": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "19": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "20": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 71
        }
      },
      "21": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "22": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "23": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 41,
          column: 11
        }
      },
      "24": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 103
        }
      },
      "25": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 56
        }
      },
      "26": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 48,
          column: 36
        }
      },
      "27": {
        start: {
          line: 49,
          column: 19
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "28": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "29": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 75
        }
      },
      "30": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "31": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "32": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "33": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 80
        }
      },
      "34": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 60
        }
      },
      "35": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 32
        }
      },
      "36": {
        start: {
          line: 67,
          column: 17
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "37": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "38": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 67
        }
      },
      "39": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "40": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "41": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 76,
          column: 11
        }
      },
      "42": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 76
        }
      },
      "43": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 52
        }
      },
      "44": {
        start: {
          line: 83,
          column: 0
        },
        end: {
          line: 83,
          column: 28
        }
      },
      "45": {
        start: {
          line: 84,
          column: 23
        },
        end: {
          line: 99,
          column: 1
        }
      },
      "46": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "47": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 79
        }
      },
      "48": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 15
        }
      },
      "49": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "50": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "51": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 80
        }
      },
      "52": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 64
        }
      },
      "53": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 100,
          column: 40
        }
      },
      "54": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 117,
          column: 1
        }
      },
      "55": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "56": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 70
        }
      },
      "57": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 15
        }
      },
      "58": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "59": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 111,
          column: 11
        }
      },
      "60": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 61
        }
      },
      "61": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 55
        }
      },
      "62": {
        start: {
          line: 118,
          column: 0
        },
        end: {
          line: 118,
          column: 34
        }
      },
      "63": {
        start: {
          line: 120,
          column: 30
        },
        end: {
          line: 132,
          column: 1
        }
      },
      "64": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "65": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 17
        }
      },
      "66": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "67": {
        start: {
          line: 125,
          column: 21
        },
        end: {
          line: 125,
          column: 78
        }
      },
      "68": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 36
        }
      },
      "69": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 67
        }
      },
      "70": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 17
        }
      },
      "71": {
        start: {
          line: 133,
          column: 0
        },
        end: {
          line: 133,
          column: 54
        }
      },
      "72": {
        start: {
          line: 135,
          column: 24
        },
        end: {
          line: 148,
          column: 1
        }
      },
      "73": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "74": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 21
        }
      },
      "75": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "76": {
        start: {
          line: 140,
          column: 24
        },
        end: {
          line: 140,
          column: 62
        }
      },
      "77": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 142,
          column: 49
        }
      },
      "78": {
        start: {
          line: 141,
          column: 38
        },
        end: {
          line: 142,
          column: 47
        }
      },
      "79": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 69
        }
      },
      "80": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 21
        }
      },
      "81": {
        start: {
          line: 149,
          column: 0
        },
        end: {
          line: 149,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 14
          },
          end: {
            line: 7,
            column: 15
          }
        },
        loc: {
          start: {
            line: 7,
            column: 22
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 12,
            column: 18
          }
        },
        loc: {
          start: {
            line: 12,
            column: 39
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 21
          },
          end: {
            line: 29,
            column: 22
          }
        },
        loc: {
          start: {
            line: 29,
            column: 59
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 49,
            column: 20
          }
        },
        loc: {
          start: {
            line: 49,
            column: 50
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 49
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 18
          }
        },
        loc: {
          start: {
            line: 67,
            column: 39
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 67
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 84,
            column: 24
          }
        },
        loc: {
          start: {
            line: 84,
            column: 45
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 84
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 101,
            column: 21
          }
        },
        loc: {
          start: {
            line: 101,
            column: 42
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 101
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 120,
            column: 30
          },
          end: {
            line: 120,
            column: 31
          }
        },
        loc: {
          start: {
            line: 120,
            column: 49
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 120
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 25
          }
        },
        loc: {
          start: {
            line: 135,
            column: 51
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 135
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 141,
            column: 28
          },
          end: {
            line: 141,
            column: 29
          }
        },
        loc: {
          start: {
            line: 141,
            column: 38
          },
          end: {
            line: 142,
            column: 47
          }
        },
        line: 141
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 40
          }
        }, {
          start: {
            line: 20,
            column: 44
          },
          end: {
            line: 20,
            column: 54
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 35
          },
          end: {
            line: 49,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 49,
            column: 43
          },
          end: {
            line: 49,
            column: 45
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 75,
            column: 23
          },
          end: {
            line: 75,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 23
          },
          end: {
            line: 75,
            column: 40
          }
        }, {
          start: {
            line: 75,
            column: 44
          },
          end: {
            line: 75,
            column: 54
          }
        }],
        line: 75
      },
      "7": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "8": {
        loc: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "9": {
        loc: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "10": {
        loc: {
          start: {
            line: 126,
            column: 15
          },
          end: {
            line: 126,
            column: 35
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 22
          },
          end: {
            line: 126,
            column: 31
          }
        }, {
          start: {
            line: 126,
            column: 34
          },
          end: {
            line: 126,
            column: 35
          }
        }],
        line: 126
      },
      "11": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "12": {
        loc: {
          start: {
            line: 141,
            column: 38
          },
          end: {
            line: 142,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 38
          },
          end: {
            line: 141,
            column: 76
          }
        }, {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 142,
            column: 47
          }
        }],
        line: 141
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1b05bb02606975453ff88af2488ae43230c86ce6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_q2xghioyn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_q2xghioyn();
cov_q2xghioyn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_q2xghioyn().s[1]++;
exports.isUserInChannel = exports.getChannelViewerCount = exports.emitMetrics = exports.emitModeration = exports.emitChat = exports.emitSystem = exports.emitPresence = exports.emitGift = exports.setIo = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_q2xghioyn().s[2]++, require("@/config/logger"));
const logger =
/* istanbul ignore next */
(cov_q2xghioyn().s[3]++, (0, logger_1.setupLogger)());
let ioRef =
/* istanbul ignore next */
(cov_q2xghioyn().s[4]++, null);
/* istanbul ignore next */
cov_q2xghioyn().s[5]++;
const setIo = io => {
  /* istanbul ignore next */
  cov_q2xghioyn().f[0]++;
  cov_q2xghioyn().s[6]++;
  ioRef = io;
  /* istanbul ignore next */
  cov_q2xghioyn().s[7]++;
  logger.info('Socket.IO reference set for emitters');
};
/* istanbul ignore next */
cov_q2xghioyn().s[8]++;
exports.setIo = setIo;
/* istanbul ignore next */
cov_q2xghioyn().s[9]++;
const emitGift = (channel, payload) => {
  /* istanbul ignore next */
  cov_q2xghioyn().f[1]++;
  cov_q2xghioyn().s[10]++;
  if (!ioRef) {
    /* istanbul ignore next */
    cov_q2xghioyn().b[0][0]++;
    cov_q2xghioyn().s[11]++;
    logger.warn('Socket.IO not initialized, cannot emit gift');
    /* istanbul ignore next */
    cov_q2xghioyn().s[12]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_q2xghioyn().b[0][1]++;
  }
  cov_q2xghioyn().s[13]++;
  try {
    /* istanbul ignore next */
    cov_q2xghioyn().s[14]++;
    ioRef.of("/live").to(`channel:${channel}`).emit("gift:new", {
      ...payload,
      timestamp:
      /* istanbul ignore next */
      (cov_q2xghioyn().b[1][0]++, payload.timestamp) ||
      /* istanbul ignore next */
      (cov_q2xghioyn().b[1][1]++, Date.now())
    });
    /* istanbul ignore next */
    cov_q2xghioyn().s[15]++;
    logger.info(`Gift emitted to channel ${channel}:`, payload);
  } catch (error) {
    /* istanbul ignore next */
    cov_q2xghioyn().s[16]++;
    logger.error('Error emitting gift:', error);
  }
};
/* istanbul ignore next */
cov_q2xghioyn().s[17]++;
exports.emitGift = emitGift;
/* istanbul ignore next */
cov_q2xghioyn().s[18]++;
const emitPresence = (channel, delta, userId, username) => {
  /* istanbul ignore next */
  cov_q2xghioyn().f[2]++;
  cov_q2xghioyn().s[19]++;
  if (!ioRef) {
    /* istanbul ignore next */
    cov_q2xghioyn().b[2][0]++;
    cov_q2xghioyn().s[20]++;
    logger.warn('Socket.IO not initialized, cannot emit presence');
    /* istanbul ignore next */
    cov_q2xghioyn().s[21]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_q2xghioyn().b[2][1]++;
  }
  cov_q2xghioyn().s[22]++;
  try {
    /* istanbul ignore next */
    cov_q2xghioyn().s[23]++;
    ioRef.of("/live").to(`channel:${channel}`).emit("presence:update", {
      channelName: channel,
      delta,
      userId,
      username,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_q2xghioyn().s[24]++;
    logger.info(`Presence update emitted to channel ${channel}: delta=${delta}, userId=${userId}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_q2xghioyn().s[25]++;
    logger.error('Error emitting presence:', error);
  }
};
/* istanbul ignore next */
cov_q2xghioyn().s[26]++;
exports.emitPresence = emitPresence;
/* istanbul ignore next */
cov_q2xghioyn().s[27]++;
const emitSystem = (channel, type, extra =
/* istanbul ignore next */
(cov_q2xghioyn().b[3][0]++, {})) => {
  /* istanbul ignore next */
  cov_q2xghioyn().f[3]++;
  cov_q2xghioyn().s[28]++;
  if (!ioRef) {
    /* istanbul ignore next */
    cov_q2xghioyn().b[4][0]++;
    cov_q2xghioyn().s[29]++;
    logger.warn('Socket.IO not initialized, cannot emit system event');
    /* istanbul ignore next */
    cov_q2xghioyn().s[30]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_q2xghioyn().b[4][1]++;
  }
  cov_q2xghioyn().s[31]++;
  try {
    /* istanbul ignore next */
    cov_q2xghioyn().s[32]++;
    ioRef.of("/live").to(`channel:${channel}`).emit("system:event", {
      type,
      ...extra,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_q2xghioyn().s[33]++;
    logger.info(`System event emitted to channel ${channel}: type=${type}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_q2xghioyn().s[34]++;
    logger.error('Error emitting system event:', error);
  }
};
/* istanbul ignore next */
cov_q2xghioyn().s[35]++;
exports.emitSystem = emitSystem;
/* istanbul ignore next */
cov_q2xghioyn().s[36]++;
const emitChat = (channel, payload) => {
  /* istanbul ignore next */
  cov_q2xghioyn().f[4]++;
  cov_q2xghioyn().s[37]++;
  if (!ioRef) {
    /* istanbul ignore next */
    cov_q2xghioyn().b[5][0]++;
    cov_q2xghioyn().s[38]++;
    logger.warn('Socket.IO not initialized, cannot emit chat');
    /* istanbul ignore next */
    cov_q2xghioyn().s[39]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_q2xghioyn().b[5][1]++;
  }
  cov_q2xghioyn().s[40]++;
  try {
    /* istanbul ignore next */
    cov_q2xghioyn().s[41]++;
    ioRef.of("/live").to(`channel:${channel}`).emit("chat:new", {
      ...payload,
      timestamp:
      /* istanbul ignore next */
      (cov_q2xghioyn().b[6][0]++, payload.timestamp) ||
      /* istanbul ignore next */
      (cov_q2xghioyn().b[6][1]++, Date.now())
    });
    /* istanbul ignore next */
    cov_q2xghioyn().s[42]++;
    logger.info(`Chat message emitted to channel ${channel}:`, payload);
  } catch (error) {
    /* istanbul ignore next */
    cov_q2xghioyn().s[43]++;
    logger.error('Error emitting chat:', error);
  }
};
/* istanbul ignore next */
cov_q2xghioyn().s[44]++;
exports.emitChat = emitChat;
/* istanbul ignore next */
cov_q2xghioyn().s[45]++;
const emitModeration = (channel, payload) => {
  /* istanbul ignore next */
  cov_q2xghioyn().f[5]++;
  cov_q2xghioyn().s[46]++;
  if (!ioRef) {
    /* istanbul ignore next */
    cov_q2xghioyn().b[7][0]++;
    cov_q2xghioyn().s[47]++;
    logger.warn('Socket.IO not initialized, cannot emit moderation event');
    /* istanbul ignore next */
    cov_q2xghioyn().s[48]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_q2xghioyn().b[7][1]++;
  }
  cov_q2xghioyn().s[49]++;
  try {
    /* istanbul ignore next */
    cov_q2xghioyn().s[50]++;
    ioRef.of("/live").to(`channel:${channel}`).emit("mod:event", {
      ...payload,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_q2xghioyn().s[51]++;
    logger.info(`Moderation event emitted to channel ${channel}:`, payload);
  } catch (error) {
    /* istanbul ignore next */
    cov_q2xghioyn().s[52]++;
    logger.error('Error emitting moderation event:', error);
  }
};
/* istanbul ignore next */
cov_q2xghioyn().s[53]++;
exports.emitModeration = emitModeration;
/* istanbul ignore next */
cov_q2xghioyn().s[54]++;
const emitMetrics = (channel, metrics) => {
  /* istanbul ignore next */
  cov_q2xghioyn().f[6]++;
  cov_q2xghioyn().s[55]++;
  if (!ioRef) {
    /* istanbul ignore next */
    cov_q2xghioyn().b[8][0]++;
    cov_q2xghioyn().s[56]++;
    logger.warn('Socket.IO not initialized, cannot emit metrics');
    /* istanbul ignore next */
    cov_q2xghioyn().s[57]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_q2xghioyn().b[8][1]++;
  }
  cov_q2xghioyn().s[58]++;
  try {
    /* istanbul ignore next */
    cov_q2xghioyn().s[59]++;
    ioRef.of("/live").to(`channel:${channel}`).emit("metrics:update", {
      channelName: channel,
      metrics,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_q2xghioyn().s[60]++;
    logger.info(`Metrics emitted to channel ${channel}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_q2xghioyn().s[61]++;
    logger.error('Error emitting metrics:', error);
  }
};
/* istanbul ignore next */
cov_q2xghioyn().s[62]++;
exports.emitMetrics = emitMetrics;
// Helper function to get current viewer count for a channel
/* istanbul ignore next */
cov_q2xghioyn().s[63]++;
const getChannelViewerCount = async channel => {
  /* istanbul ignore next */
  cov_q2xghioyn().f[7]++;
  cov_q2xghioyn().s[64]++;
  if (!ioRef) {
    /* istanbul ignore next */
    cov_q2xghioyn().b[9][0]++;
    cov_q2xghioyn().s[65]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_q2xghioyn().b[9][1]++;
  }
  cov_q2xghioyn().s[66]++;
  try {
    const room =
    /* istanbul ignore next */
    (cov_q2xghioyn().s[67]++, ioRef.of("/live").adapter.rooms.get(`channel:${channel}`));
    /* istanbul ignore next */
    cov_q2xghioyn().s[68]++;
    return room ?
    /* istanbul ignore next */
    (cov_q2xghioyn().b[10][0]++, room.size) :
    /* istanbul ignore next */
    (cov_q2xghioyn().b[10][1]++, 0);
  } catch (error) {
    /* istanbul ignore next */
    cov_q2xghioyn().s[69]++;
    logger.error('Error getting channel viewer count:', error);
    /* istanbul ignore next */
    cov_q2xghioyn().s[70]++;
    return 0;
  }
};
/* istanbul ignore next */
cov_q2xghioyn().s[71]++;
exports.getChannelViewerCount = getChannelViewerCount;
// Helper function to check if a user is in a channel
/* istanbul ignore next */
cov_q2xghioyn().s[72]++;
const isUserInChannel = async (userId, channel) => {
  /* istanbul ignore next */
  cov_q2xghioyn().f[8]++;
  cov_q2xghioyn().s[73]++;
  if (!ioRef) {
    /* istanbul ignore next */
    cov_q2xghioyn().b[11][0]++;
    cov_q2xghioyn().s[74]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_q2xghioyn().b[11][1]++;
  }
  cov_q2xghioyn().s[75]++;
  try {
    const sockets =
    /* istanbul ignore next */
    (cov_q2xghioyn().s[76]++, await ioRef.of("/live").fetchSockets());
    /* istanbul ignore next */
    cov_q2xghioyn().s[77]++;
    return sockets.some(socket => {
      /* istanbul ignore next */
      cov_q2xghioyn().f[9]++;
      cov_q2xghioyn().s[78]++;
      return /* istanbul ignore next */(cov_q2xghioyn().b[12][0]++, socket.rooms.has(`channel:${channel}`)) &&
      /* istanbul ignore next */
      (cov_q2xghioyn().b[12][1]++, socket.data.user?.userId === userId);
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_q2xghioyn().s[79]++;
    logger.error('Error checking if user is in channel:', error);
    /* istanbul ignore next */
    cov_q2xghioyn().s[80]++;
    return false;
  }
};
/* istanbul ignore next */
cov_q2xghioyn().s[81]++;
exports.isUserInChannel = isUserInChannel;