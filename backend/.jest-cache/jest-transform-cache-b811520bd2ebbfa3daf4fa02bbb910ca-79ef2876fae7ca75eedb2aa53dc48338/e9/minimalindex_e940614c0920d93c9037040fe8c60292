3c0e37e980ecd6f2b43b8f0b95129672
"use strict";

/* istanbul ignore next */
function cov_vqu8bah4h() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\minimal-index.ts";
  var hash = "4586fa4903fb1a369609753549839e295224e676";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\minimal-index.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 21
        }
      },
      "4": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 53
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 51
        }
      },
      "6": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 26
        }
      },
      "7": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "8": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 18
        }
      },
      "9": {
        start: {
          line: 13,
          column: 13
        },
        end: {
          line: 13,
          column: 45
        }
      },
      "10": {
        start: {
          line: 14,
          column: 13
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "11": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "12": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "13": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 23,
          column: 7
        }
      },
      "14": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 50
        }
      },
      "15": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "16": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 32,
          column: 7
        }
      },
      "17": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 40,
          column: 3
        }
      },
      "18": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 83
        }
      },
      "19": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 73
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 89
        }
      },
      "21": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 21
          }
        },
        loc: {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 49
          }
        },
        loc: {
          start: {
            line: 26,
            column: 63
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 24
          }
        },
        loc: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 35
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 36
          }
        }, {
          start: {
            line: 13,
            column: 40
          },
          end: {
            line: 13,
            column: 44
          }
        }],
        line: 13
      },
      "4": {
        loc: {
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 29
          }
        }, {
          start: {
            line: 14,
            column: 33
          },
          end: {
            line: 14,
            column: 42
          }
        }],
        line: 14
      },
      "5": {
        loc: {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 41
          }
        }, {
          start: {
            line: 22,
            column: 45
          },
          end: {
            line: 22,
            column: 58
          }
        }],
        line: 22
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 25,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 25,
            column: 42
          }
        }, {
          start: {
            line: 25,
            column: 46
          },
          end: {
            line: 25,
            column: 50
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 29,
            column: 21
          },
          end: {
            line: 29,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 21
          },
          end: {
            line: 29,
            column: 41
          }
        }, {
          start: {
            line: 29,
            column: 45
          },
          end: {
            line: 29,
            column: 58
          }
        }],
        line: 29
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 52
          }
        }, {
          start: {
            line: 37,
            column: 56
          },
          end: {
            line: 37,
            column: 69
          }
        }],
        line: 37
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4586fa4903fb1a369609753549839e295224e676"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vqu8bah4h = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_vqu8bah4h();
var __importDefault =
/* istanbul ignore next */
(cov_vqu8bah4h().s[0]++,
/* istanbul ignore next */
(cov_vqu8bah4h().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_vqu8bah4h().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_vqu8bah4h().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_vqu8bah4h().f[0]++;
  cov_vqu8bah4h().s[1]++;
  return /* istanbul ignore next */(cov_vqu8bah4h().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_vqu8bah4h().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_vqu8bah4h().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_vqu8bah4h().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_vqu8bah4h().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_vqu8bah4h().s[3]++;
exports.app = void 0;
const express_1 =
/* istanbul ignore next */
(cov_vqu8bah4h().s[4]++, __importDefault(require("express")));
const dotenv_1 =
/* istanbul ignore next */
(cov_vqu8bah4h().s[5]++, __importDefault(require("dotenv")));
// Load environment variables
/* istanbul ignore next */
cov_vqu8bah4h().s[6]++;
dotenv_1.default.config();
const app =
/* istanbul ignore next */
(cov_vqu8bah4h().s[7]++, (0, express_1.default)());
/* istanbul ignore next */
cov_vqu8bah4h().s[8]++;
exports.app = app;
const port =
/* istanbul ignore next */
(cov_vqu8bah4h().s[9]++, Number(
/* istanbul ignore next */
(cov_vqu8bah4h().b[3][0]++, process.env.PORT) ||
/* istanbul ignore next */
(cov_vqu8bah4h().b[3][1]++, 4000)));
const host =
/* istanbul ignore next */
(cov_vqu8bah4h().s[10]++,
/* istanbul ignore next */
(cov_vqu8bah4h().b[4][0]++, process.env.HOST) ||
/* istanbul ignore next */
(cov_vqu8bah4h().b[4][1]++, '0.0.0.0'));
// Minimal middleware only
/* istanbul ignore next */
cov_vqu8bah4h().s[11]++;
app.use(express_1.default.json({
  limit: '1kb'
}));
// Health check endpoint
/* istanbul ignore next */
cov_vqu8bah4h().s[12]++;
app.get('/healthz', (_req, res) => {
  /* istanbul ignore next */
  cov_vqu8bah4h().f[1]++;
  cov_vqu8bah4h().s[13]++;
  res.status(200).json({
    status: 'ok',
    timestamp: new Date().toISOString(),
    environment:
    /* istanbul ignore next */
    (cov_vqu8bah4h().b[5][0]++, process.env.NODE_ENV) ||
    /* istanbul ignore next */
    (cov_vqu8bah4h().b[5][1]++, 'development')
  });
});
const apiVersion =
/* istanbul ignore next */
(cov_vqu8bah4h().s[14]++,
/* istanbul ignore next */
(cov_vqu8bah4h().b[6][0]++, process.env.API_VERSION) ||
/* istanbul ignore next */
(cov_vqu8bah4h().b[6][1]++, 'v1'));
/* istanbul ignore next */
cov_vqu8bah4h().s[15]++;
app.get(`/api/${apiVersion}/monitoring/health`, (_req, res) => {
  /* istanbul ignore next */
  cov_vqu8bah4h().f[2]++;
  cov_vqu8bah4h().s[16]++;
  res.json({
    status: 'healthy',
    environment:
    /* istanbul ignore next */
    (cov_vqu8bah4h().b[7][0]++, process.env.NODE_ENV) ||
    /* istanbul ignore next */
    (cov_vqu8bah4h().b[7][1]++, 'development'),
    timestamp: new Date().toISOString(),
    uptime: process.uptime()
  });
});
// Start server
/* istanbul ignore next */
cov_vqu8bah4h().s[17]++;
app.listen(port, host, () => {
  /* istanbul ignore next */
  cov_vqu8bah4h().f[3]++;
  cov_vqu8bah4h().s[18]++;
  console.log(`🚀 HaloBuzz Backend (Minimal) running on http://${host}:${port}`);
  /* istanbul ignore next */
  cov_vqu8bah4h().s[19]++;
  console.log(`Environment: ${
  /* istanbul ignore next */
  (cov_vqu8bah4h().b[8][0]++, process.env.NODE_ENV) ||
  /* istanbul ignore next */
  (cov_vqu8bah4h().b[8][1]++, 'development')}`);
  /* istanbul ignore next */
  cov_vqu8bah4h().s[20]++;
  console.log(`Memory: ${Math.round(process.memoryUsage().heapUsed / 1024 / 1024)}MB`);
  /* istanbul ignore next */
  cov_vqu8bah4h().s[21]++;
  console.log(`Health check: http://${host}:${port}/healthz`);
});