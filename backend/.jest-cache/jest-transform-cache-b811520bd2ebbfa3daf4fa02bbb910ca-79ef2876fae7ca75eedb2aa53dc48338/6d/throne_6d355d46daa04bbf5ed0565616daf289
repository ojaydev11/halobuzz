7fe4fba2d4ed345f74f87f8ea1756ae8
"use strict";

/* istanbul ignore next */
function cov_1jjl4u927f() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\throne.ts";
  var hash = "0c583dc3f5499603e53dce15a426b30916e1d769";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\throne.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 18
        },
        end: {
          line: 39,
          column: 53
        }
      },
      "39": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 40,
          column: 56
        }
      },
      "40": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 41,
          column: 44
        }
      },
      "41": {
        start: {
          line: 42,
          column: 15
        },
        end: {
          line: 42,
          column: 40
        }
      },
      "42": {
        start: {
          line: 43,
          column: 21
        },
        end: {
          line: 43,
          column: 52
        }
      },
      "43": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 68
        }
      },
      "44": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 45,
          column: 44
        }
      },
      "45": {
        start: {
          line: 46,
          column: 15
        },
        end: {
          line: 46,
          column: 41
        }
      },
      "46": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 147,
          column: 3
        }
      },
      "47": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "48": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 50,
          column: 39
        }
      },
      "49": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "50": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "51": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "52": {
        start: {
          line: 59,
          column: 21
        },
        end: {
          line: 59,
          column: 55
        }
      },
      "53": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "54": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "55": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 71
        }
      },
      "56": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "57": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 72,
          column: 15
        }
      },
      "58": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "59": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 78,
          column: 15
        }
      },
      "60": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "61": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 85,
          column: 15
        }
      },
      "62": {
        start: {
          line: 88,
          column: 31
        },
        end: {
          line: 88,
          column: 122
        }
      },
      "63": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "64": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "65": {
        start: {
          line: 96,
          column: 33
        },
        end: {
          line: 96,
          column: 37
        }
      },
      "66": {
        start: {
          line: 97,
          column: 34
        },
        end: {
          line: 97,
          column: 84
        }
      },
      "67": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "68": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 102,
          column: 15
        }
      },
      "69": {
        start: {
          line: 105,
          column: 23
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "70": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 28
        }
      },
      "71": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "72": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "73": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 61
        }
      },
      "74": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "75": {
        start: {
          line: 149,
          column: 0
        },
        end: {
          line: 185,
          column: 3
        }
      },
      "76": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "77": {
        start: {
          line: 151,
          column: 29
        },
        end: {
          line: 151,
          column: 39
        }
      },
      "78": {
        start: {
          line: 152,
          column: 23
        },
        end: {
          line: 152,
          column: 114
        }
      },
      "79": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "80": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "81": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 176,
          column: 11
        }
      },
      "82": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 59
        }
      },
      "83": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "84": {
        start: {
          line: 187,
          column: 0
        },
        end: {
          line: 224,
          column: 3
        }
      },
      "85": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "86": {
        start: {
          line: 189,
          column: 27
        },
        end: {
          line: 189,
          column: 37
        }
      },
      "87": {
        start: {
          line: 190,
          column: 41
        },
        end: {
          line: 190,
          column: 50
        }
      },
      "88": {
        start: {
          line: 191,
          column: 21
        },
        end: {
          line: 191,
          column: 59
        }
      },
      "89": {
        start: {
          line: 192,
          column: 24
        },
        end: {
          line: 192,
          column: 109
        }
      },
      "90": {
        start: {
          line: 193,
          column: 22
        },
        end: {
          line: 193,
          column: 70
        }
      },
      "91": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 215,
          column: 11
        }
      },
      "92": {
        start: {
          line: 197,
          column: 48
        },
        end: {
          line: 207,
          column: 17
        }
      },
      "93": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 72
        }
      },
      "94": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 222,
          column: 11
        }
      },
      "95": {
        start: {
          line: 226,
          column: 0
        },
        end: {
          line: 256,
          column: 3
        }
      },
      "96": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "97": {
        start: {
          line: 228,
          column: 31
        },
        end: {
          line: 228,
          column: 40
        }
      },
      "98": {
        start: {
          line: 229,
          column: 24
        },
        end: {
          line: 229,
          column: 135
        }
      },
      "99": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 247,
          column: 11
        }
      },
      "100": {
        start: {
          line: 233,
          column: 48
        },
        end: {
          line: 245,
          column: 17
        }
      },
      "101": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 64
        }
      },
      "102": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 254,
          column: 11
        }
      },
      "103": {
        start: {
          line: 258,
          column: 0
        },
        end: {
          line: 312,
          column: 3
        }
      },
      "104": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 311,
          column: 5
        }
      },
      "105": {
        start: {
          line: 267,
          column: 23
        },
        end: {
          line: 267,
          column: 69
        }
      },
      "106": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "107": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 272,
          column: 15
        }
      },
      "108": {
        start: {
          line: 274,
          column: 29
        },
        end: {
          line: 274,
          column: 39
        }
      },
      "109": {
        start: {
          line: 275,
          column: 34
        },
        end: {
          line: 275,
          column: 42
        }
      },
      "110": {
        start: {
          line: 276,
          column: 23
        },
        end: {
          line: 276,
          column: 63
        }
      },
      "111": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 282,
          column: 9
        }
      },
      "112": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 281,
          column: 15
        }
      },
      "113": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "114": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 287,
          column: 15
        }
      },
      "115": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 38
        }
      },
      "116": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 28
        }
      },
      "117": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "118": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 67
        }
      },
      "119": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 310,
          column: 11
        }
      },
      "120": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 338,
          column: 5
        }
      },
      "121": {
        start: {
          line: 316,
          column: 32
        },
        end: {
          line: 316,
          column: 114
        }
      },
      "122": {
        start: {
          line: 316,
          column: 67
        },
        end: {
          line: 316,
          column: 113
        }
      },
      "123": {
        start: {
          line: 317,
          column: 23
        },
        end: {
          line: 332,
          column: 10
        }
      },
      "124": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 42
        }
      },
      "125": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 79
        }
      },
      "126": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 17
        }
      },
      "127": {
        start: {
          line: 340,
          column: 0
        },
        end: {
          line: 340,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 33
          }
        },
        loc: {
          start: {
            line: 48,
            column: 52
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 48
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 149,
            column: 25
          },
          end: {
            line: 149,
            column: 26
          }
        },
        loc: {
          start: {
            line: 149,
            column: 45
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 149
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 187,
            column: 28
          },
          end: {
            line: 187,
            column: 29
          }
        },
        loc: {
          start: {
            line: 187,
            column: 48
          },
          end: {
            line: 224,
            column: 1
          }
        },
        line: 187
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 197,
            column: 37
          },
          end: {
            line: 197,
            column: 38
          }
        },
        loc: {
          start: {
            line: 197,
            column: 48
          },
          end: {
            line: 207,
            column: 17
          }
        },
        line: 197
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 226,
            column: 19
          },
          end: {
            line: 226,
            column: 20
          }
        },
        loc: {
          start: {
            line: 226,
            column: 39
          },
          end: {
            line: 256,
            column: 1
          }
        },
        line: 226
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 233,
            column: 37
          },
          end: {
            line: 233,
            column: 38
          }
        },
        loc: {
          start: {
            line: 233,
            column: 48
          },
          end: {
            line: 245,
            column: 17
          }
        },
        line: 233
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 265,
            column: 3
          },
          end: {
            line: 265,
            column: 4
          }
        },
        loc: {
          start: {
            line: 265,
            column: 23
          },
          end: {
            line: 312,
            column: 1
          }
        },
        line: 265
      },
      "17": {
        name: "calculateUserGiftsInStream",
        decl: {
          start: {
            line: 314,
            column: 15
          },
          end: {
            line: 314,
            column: 41
          }
        },
        loc: {
          start: {
            line: 314,
            column: 60
          },
          end: {
            line: 339,
            column: 1
          }
        },
        line: 314
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 316,
            column: 61
          },
          end: {
            line: 316,
            column: 62
          }
        },
        loc: {
          start: {
            line: 316,
            column: 67
          },
          end: {
            line: 316,
            column: 113
          }
        },
        line: 316
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "21": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "22": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "23": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "24": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "25": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "26": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "27": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "28": {
        loc: {
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 190,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 190,
            column: 24
          },
          end: {
            line: 190,
            column: 26
          }
        }],
        line: 190
      },
      "29": {
        loc: {
          start: {
            line: 190,
            column: 28
          },
          end: {
            line: 190,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 190,
            column: 35
          },
          end: {
            line: 190,
            column: 36
          }
        }],
        line: 190
      },
      "30": {
        loc: {
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 228,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 228,
            column: 24
          },
          end: {
            line: 228,
            column: 26
          }
        }],
        line: 228
      },
      "31": {
        loc: {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "32": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 282,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 282,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "33": {
        loc: {
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "34": {
        loc: {
          start: {
            line: 333,
            column: 15
          },
          end: {
            line: 333,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 15
          },
          end: {
            line: 333,
            column: 36
          }
        }, {
          start: {
            line: 333,
            column: 40
          },
          end: {
            line: 333,
            column: 41
          }
        }],
        line: 333
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0],
      "29": [0],
      "30": [0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c583dc3f5499603e53dce15a426b30916e1d769"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jjl4u927f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jjl4u927f();
var __createBinding =
/* istanbul ignore next */
(cov_1jjl4u927f().s[0]++,
/* istanbul ignore next */
(cov_1jjl4u927f().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1jjl4u927f().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1jjl4u927f().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1jjl4u927f().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[0]++;
  cov_1jjl4u927f().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1jjl4u927f().b[2][0]++;
    cov_1jjl4u927f().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1jjl4u927f().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1jjl4u927f().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1jjl4u927f().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1jjl4u927f().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1jjl4u927f().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1jjl4u927f().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1jjl4u927f().b[5][1]++,
  /* istanbul ignore next */
  (cov_1jjl4u927f().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1jjl4u927f().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1jjl4u927f().b[3][0]++;
    cov_1jjl4u927f().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1jjl4u927f().f[1]++;
        cov_1jjl4u927f().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1jjl4u927f().b[3][1]++;
  }
  cov_1jjl4u927f().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1jjl4u927f().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[2]++;
  cov_1jjl4u927f().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1jjl4u927f().b[7][0]++;
    cov_1jjl4u927f().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1jjl4u927f().b[7][1]++;
  }
  cov_1jjl4u927f().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1jjl4u927f().s[11]++,
/* istanbul ignore next */
(cov_1jjl4u927f().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1jjl4u927f().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1jjl4u927f().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1jjl4u927f().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[3]++;
  cov_1jjl4u927f().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1jjl4u927f().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[4]++;
  cov_1jjl4u927f().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1jjl4u927f().s[14]++,
/* istanbul ignore next */
(cov_1jjl4u927f().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1jjl4u927f().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1jjl4u927f().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[5]++;
  cov_1jjl4u927f().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1jjl4u927f().f[6]++;
    cov_1jjl4u927f().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1jjl4u927f().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1jjl4u927f().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1jjl4u927f().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1jjl4u927f().s[17]++, []);
      /* istanbul ignore next */
      cov_1jjl4u927f().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1jjl4u927f().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1jjl4u927f().b[12][0]++;
          cov_1jjl4u927f().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1jjl4u927f().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1jjl4u927f().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1jjl4u927f().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1jjl4u927f().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1jjl4u927f().f[8]++;
    cov_1jjl4u927f().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1jjl4u927f().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1jjl4u927f().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[13][0]++;
      cov_1jjl4u927f().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[26]++, {});
    /* istanbul ignore next */
    cov_1jjl4u927f().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[15][0]++;
      cov_1jjl4u927f().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1jjl4u927f().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1jjl4u927f().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1jjl4u927f().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1jjl4u927f().b[16][0]++;
          cov_1jjl4u927f().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1jjl4u927f().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[15][1]++;
    }
    cov_1jjl4u927f().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1jjl4u927f().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_1jjl4u927f().s[35]++,
/* istanbul ignore next */
(cov_1jjl4u927f().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_1jjl4u927f().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1jjl4u927f().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[9]++;
  cov_1jjl4u927f().s[36]++;
  return /* istanbul ignore next */(cov_1jjl4u927f().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1jjl4u927f().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1jjl4u927f().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_1jjl4u927f().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1jjl4u927f().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1jjl4u927f().s[38]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_1jjl4u927f().s[39]++, require("express-validator"));
const Throne_1 =
/* istanbul ignore next */
(cov_1jjl4u927f().s[40]++, require("../models/Throne"));
const User_1 =
/* istanbul ignore next */
(cov_1jjl4u927f().s[41]++, require("../models/User"));
const LiveStream_1 =
/* istanbul ignore next */
(cov_1jjl4u927f().s[42]++, require("../models/LiveStream"));
const ReputationService_1 =
/* istanbul ignore next */
(cov_1jjl4u927f().s[43]++, require("../services/ReputationService"));
const logger_1 =
/* istanbul ignore next */
(cov_1jjl4u927f().s[44]++, require("../config/logger"));
const router =
/* istanbul ignore next */
(cov_1jjl4u927f().s[45]++, express_1.default.Router());
// Claim throne
/* istanbul ignore next */
cov_1jjl4u927f().s[46]++;
router.post('/:streamId/claim', async (req, res) => {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[10]++;
  cov_1jjl4u927f().s[47]++;
  try {
    const {
      streamId
    } =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[48]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[49]++, req.user?.userId);
    /* istanbul ignore next */
    cov_1jjl4u927f().s[50]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[20][0]++;
      cov_1jjl4u927f().s[51]++;
      return res.status(401).json({
        success: false,
        error: 'Authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[20][1]++;
    }
    // Validate user
    const user =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[52]++, await User_1.User.findById(userId));
    /* istanbul ignore next */
    cov_1jjl4u927f().s[53]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[21][0]++;
      cov_1jjl4u927f().s[54]++;
      return res.status(404).json({
        success: false,
        error: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[21][1]++;
    }
    // Validate stream
    const stream =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[55]++, await LiveStream_1.LiveStream.findById(streamId));
    /* istanbul ignore next */
    cov_1jjl4u927f().s[56]++;
    if (!stream) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[22][0]++;
      cov_1jjl4u927f().s[57]++;
      return res.status(404).json({
        success: false,
        error: 'Stream not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[22][1]++;
    }
    cov_1jjl4u927f().s[58]++;
    if (stream.status !== 'live') {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[23][0]++;
      cov_1jjl4u927f().s[59]++;
      return res.status(400).json({
        success: false,
        error: 'Stream is not live'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[23][1]++;
    }
    // Check if user is the stream host
    cov_1jjl4u927f().s[60]++;
    if (stream.hostId.toString() === userId) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[24][0]++;
      cov_1jjl4u927f().s[61]++;
      return res.status(400).json({
        success: false,
        error: 'Stream host cannot claim throne'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[24][1]++;
    }
    // Check if throne already exists for this stream
    const existingThrone =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[62]++, await Throne_1.Throne.findOne({
      streamId,
      isActive: true,
      expiresAt: {
        $gt: new Date()
      }
    }));
    /* istanbul ignore next */
    cov_1jjl4u927f().s[63]++;
    if (existingThrone) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[25][0]++;
      cov_1jjl4u927f().s[64]++;
      return res.status(400).json({
        success: false,
        error: 'Throne already claimed for this stream'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[25][1]++;
    }
    // Calculate throne requirements (e.g., minimum coins spent)
    const minCoinsRequired =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[65]++, 1000); // Minimum coins to claim throne
    const userGiftsInStream =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[66]++, await calculateUserGiftsInStream(userId, streamId));
    /* istanbul ignore next */
    cov_1jjl4u927f().s[67]++;
    if (userGiftsInStream < minCoinsRequired) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[26][0]++;
      cov_1jjl4u927f().s[68]++;
      return res.status(400).json({
        success: false,
        error: `Minimum ${minCoinsRequired} coins required to claim throne (current: ${userGiftsInStream})`
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[26][1]++;
    }
    // Create throne
    const throne =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[69]++, new Throne_1.Throne({
      streamId,
      userId,
      username: user.username,
      avatar: user.avatar,
      ogLevel: user.ogLevel,
      totalGifts: 0,
      totalCoins: userGiftsInStream,
      expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000),
      // 24 hours
      isActive: true
    }));
    /* istanbul ignore next */
    cov_1jjl4u927f().s[70]++;
    await throne.save();
    // Apply reputation bonus for claiming throne
    /* istanbul ignore next */
    cov_1jjl4u927f().s[71]++;
    await ReputationService_1.reputationService.applyReputationDelta(userId, 'throne_claimed', {
      coins: userGiftsInStream,
      streamId: stream._id
    });
    /* istanbul ignore next */
    cov_1jjl4u927f().s[72]++;
    res.json({
      success: true,
      message: 'Throne claimed successfully',
      data: {
        throne: {
          id: throne._id,
          streamId: throne.streamId,
          userId: throne.userId,
          username: throne.username,
          avatar: throne.avatar,
          ogLevel: throne.ogLevel,
          totalCoins: throne.totalCoins,
          expiresAt: throne.expiresAt,
          isActive: throne.isActive
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1jjl4u927f().s[73]++;
    logger_1.logger.error('Claim throne failed:', error);
    /* istanbul ignore next */
    cov_1jjl4u927f().s[74]++;
    res.status(500).json({
      success: false,
      error: 'Failed to claim throne'
    });
  }
});
// Get active throne for stream
/* istanbul ignore next */
cov_1jjl4u927f().s[75]++;
router.get('/:streamId', async (req, res) => {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[11]++;
  cov_1jjl4u927f().s[76]++;
  try {
    const {
      streamId
    } =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[77]++, req.params);
    const throne =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[78]++, await Throne_1.Throne.findOne({
      streamId,
      isActive: true,
      expiresAt: {
        $gt: new Date()
      }
    }));
    /* istanbul ignore next */
    cov_1jjl4u927f().s[79]++;
    if (!throne) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[27][0]++;
      cov_1jjl4u927f().s[80]++;
      return res.status(404).json({
        success: false,
        error: 'No active throne found for this stream'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[27][1]++;
    }
    cov_1jjl4u927f().s[81]++;
    res.json({
      success: true,
      data: {
        throne: {
          id: throne._id,
          streamId: throne.streamId,
          userId: throne.userId,
          username: throne.username,
          avatar: throne.avatar,
          ogLevel: throne.ogLevel,
          totalGifts: throne.totalGifts,
          totalCoins: throne.totalCoins,
          expiresAt: throne.expiresAt,
          isActive: throne.isActive,
          metadata: throne.metadata
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1jjl4u927f().s[82]++;
    logger_1.logger.error('Get throne failed:', error);
    /* istanbul ignore next */
    cov_1jjl4u927f().s[83]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get throne'
    });
  }
});
// Get user's throne history
/* istanbul ignore next */
cov_1jjl4u927f().s[84]++;
router.get('/user/:userId', async (req, res) => {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[12]++;
  cov_1jjl4u927f().s[85]++;
  try {
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[86]++, req.params);
    const {
      limit =
      /* istanbul ignore next */
      (cov_1jjl4u927f().b[28][0]++, 20),
      page =
      /* istanbul ignore next */
      (cov_1jjl4u927f().b[29][0]++, 1)
    } =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[87]++, req.query);
    const skip =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[88]++, (parseInt(page) - 1) * parseInt(limit));
    const thrones =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[89]++, await Throne_1.Throne.find({
      userId
    }).sort({
      createdAt: -1
    }).limit(parseInt(limit)));
    const total =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[90]++, await Throne_1.Throne.countDocuments({
      userId
    }));
    /* istanbul ignore next */
    cov_1jjl4u927f().s[91]++;
    res.json({
      success: true,
      data: {
        thrones: thrones.map(throne => {
          /* istanbul ignore next */
          cov_1jjl4u927f().f[13]++;
          cov_1jjl4u927f().s[92]++;
          return {
            id: throne._id,
            streamId: throne.streamId,
            streamTitle: throne.streamId?.title,
            totalGifts: throne.totalGifts,
            totalCoins: throne.totalCoins,
            expiresAt: throne.expiresAt,
            claimedAt: throne.claimedAt,
            isActive: throne.isActive,
            metadata: throne.metadata
          };
        }),
        pagination: {
          page: parseInt(page),
          limit: parseInt(limit),
          total,
          pages: Math.ceil(total / parseInt(limit))
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1jjl4u927f().s[93]++;
    logger_1.logger.error('Get user throne history failed:', error);
    /* istanbul ignore next */
    cov_1jjl4u927f().s[94]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get throne history'
    });
  }
});
// Get top thrones
/* istanbul ignore next */
cov_1jjl4u927f().s[95]++;
router.get('/top', async (req, res) => {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[14]++;
  cov_1jjl4u927f().s[96]++;
  try {
    const {
      limit =
      /* istanbul ignore next */
      (cov_1jjl4u927f().b[30][0]++, 10)
    } =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[97]++, req.query);
    const thrones =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[98]++, await Throne_1.Throne.find({
      isActive: false
    }).sort({
      totalCoins: -1,
      totalGifts: -1
    }).limit(parseInt(limit)));
    /* istanbul ignore next */
    cov_1jjl4u927f().s[99]++;
    res.json({
      success: true,
      data: {
        thrones: thrones.map(throne => {
          /* istanbul ignore next */
          cov_1jjl4u927f().f[15]++;
          cov_1jjl4u927f().s[100]++;
          return {
            id: throne._id,
            streamId: throne.streamId,
            streamTitle: throne.streamId?.title,
            userId: throne.userId,
            username: throne.username,
            avatar: throne.avatar,
            ogLevel: throne.ogLevel,
            totalGifts: throne.totalGifts,
            totalCoins: throne.totalCoins,
            claimedAt: throne.claimedAt,
            metadata: throne.metadata
          };
        })
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1jjl4u927f().s[101]++;
    logger_1.logger.error('Get top thrones failed:', error);
    /* istanbul ignore next */
    cov_1jjl4u927f().s[102]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get top thrones'
    });
  }
});
// Add gift to throne
/* istanbul ignore next */
cov_1jjl4u927f().s[103]++;
router.post('/:throneId/gift', [(0, express_validator_1.body)('giftId').isMongoId().withMessage('Valid gift ID is required'), (0, express_validator_1.body)('coins').isInt({
  min: 1
}).withMessage('Valid coin amount is required')], async (req, res) => {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[16]++;
  cov_1jjl4u927f().s[104]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[105]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_1jjl4u927f().s[106]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[31][0]++;
      cov_1jjl4u927f().s[107]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[31][1]++;
    }
    const {
      throneId
    } =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[108]++, req.params);
    const {
      giftId,
      coins
    } =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[109]++, req.body);
    const throne =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[110]++, await Throne_1.Throne.findById(throneId));
    /* istanbul ignore next */
    cov_1jjl4u927f().s[111]++;
    if (!throne) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[32][0]++;
      cov_1jjl4u927f().s[112]++;
      return res.status(404).json({
        success: false,
        error: 'Throne not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[32][1]++;
    }
    cov_1jjl4u927f().s[113]++;
    if (!throne.isActive) {
      /* istanbul ignore next */
      cov_1jjl4u927f().b[33][0]++;
      cov_1jjl4u927f().s[114]++;
      return res.status(400).json({
        success: false,
        error: 'Throne is not active'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jjl4u927f().b[33][1]++;
    }
    // Add gift to throne
    cov_1jjl4u927f().s[115]++;
    throne.addGift(coins, giftId);
    /* istanbul ignore next */
    cov_1jjl4u927f().s[116]++;
    await throne.save();
    /* istanbul ignore next */
    cov_1jjl4u927f().s[117]++;
    res.json({
      success: true,
      message: 'Gift added to throne',
      data: {
        throne: {
          id: throne._id,
          totalGifts: throne.totalGifts,
          totalCoins: throne.totalCoins,
          metadata: throne.metadata
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1jjl4u927f().s[118]++;
    logger_1.logger.error('Add gift to throne failed:', error);
    /* istanbul ignore next */
    cov_1jjl4u927f().s[119]++;
    res.status(500).json({
      success: false,
      error: 'Failed to add gift to throne'
    });
  }
});
// Helper function to calculate user's gifts in a stream
async function calculateUserGiftsInStream(userId, streamId) {
  /* istanbul ignore next */
  cov_1jjl4u927f().f[17]++;
  cov_1jjl4u927f().s[120]++;
  try {
    const {
      Transaction
    } =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[121]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1jjl4u927f().f[18]++;
      cov_1jjl4u927f().s[122]++;
      return __importStar(require('../models/Transaction'));
    }));
    const result =
    /* istanbul ignore next */
    (cov_1jjl4u927f().s[123]++, await Transaction.aggregate([{
      $match: {
        userId: userId,
        'metadata.streamId': streamId,
        type: 'gift_sent',
        status: 'completed'
      }
    }, {
      $group: {
        _id: null,
        totalCoins: {
          $sum: '$amount'
        }
      }
    }]));
    /* istanbul ignore next */
    cov_1jjl4u927f().s[124]++;
    return /* istanbul ignore next */(cov_1jjl4u927f().b[34][0]++, result[0]?.totalCoins) ||
    /* istanbul ignore next */
    (cov_1jjl4u927f().b[34][1]++, 0);
  } catch (error) {
    /* istanbul ignore next */
    cov_1jjl4u927f().s[125]++;
    logger_1.logger.error('Calculate user gifts in stream failed:', error);
    /* istanbul ignore next */
    cov_1jjl4u927f().s[126]++;
    return 0;
  }
}
/* istanbul ignore next */
cov_1jjl4u927f().s[127]++;
exports.default = router;