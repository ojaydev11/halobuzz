70cf255f025f6ecbeb1ad93c4eac5f18
"use strict";

/* istanbul ignore next */
function cov_23rwnnu5zb() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\blockchain.ts";
  var hash = "f73123e23cab4ece838f015ff672eb2beb4bb462";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\blockchain.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 29
        },
        end: {
          line: 4,
          column: 80
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 51
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "7": {
        start: {
          line: 9,
          column: 27
        },
        end: {
          line: 9,
          column: 80
        }
      },
      "8": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "9": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 37
        }
      },
      "10": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "11": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "12": {
        start: {
          line: 19,
          column: 78
        },
        end: {
          line: 19,
          column: 86
        }
      },
      "13": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "14": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "15": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 77
        }
      },
      "16": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "17": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 78
        }
      },
      "18": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 27,
          column: 137
        }
      },
      "19": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 31,
          column: 11
        }
      },
      "20": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 98
        }
      },
      "21": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 73
        }
      },
      "22": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "23": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "24": {
        start: {
          line: 44,
          column: 27
        },
        end: {
          line: 44,
          column: 37
        }
      },
      "25": {
        start: {
          line: 45,
          column: 37
        },
        end: {
          line: 45,
          column: 45
        }
      },
      "26": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "27": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "28": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 77
        }
      },
      "29": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "30": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 79
        }
      },
      "31": {
        start: {
          line: 53,
          column: 28
        },
        end: {
          line: 53,
          column: 95
        }
      },
      "32": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 57,
          column: 11
        }
      },
      "33": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 124
        }
      },
      "34": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 71
        }
      },
      "35": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 89,
          column: 3
        }
      },
      "36": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "37": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 70,
          column: 37
        }
      },
      "38": {
        start: {
          line: 71,
          column: 37
        },
        end: {
          line: 71,
          column: 45
        }
      },
      "39": {
        start: {
          line: 72,
          column: 23
        },
        end: {
          line: 72,
          column: 39
        }
      },
      "40": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "41": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 77
        }
      },
      "42": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "43": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 79
        }
      },
      "44": {
        start: {
          line: 79,
          column: 28
        },
        end: {
          line: 79,
          column: 96
        }
      },
      "45": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "46": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 125
        }
      },
      "47": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 72
        }
      },
      "48": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 115,
          column: 3
        }
      },
      "49": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "50": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 96,
          column: 37
        }
      },
      "51": {
        start: {
          line: 97,
          column: 85
        },
        end: {
          line: 97,
          column: 93
        }
      },
      "52": {
        start: {
          line: 98,
          column: 23
        },
        end: {
          line: 98,
          column: 39
        }
      },
      "53": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "54": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 77
        }
      },
      "55": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "56": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 78
        }
      },
      "57": {
        start: {
          line: 105,
          column: 28
        },
        end: {
          line: 105,
          column: 144
        }
      },
      "58": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "59": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 125
        }
      },
      "60": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 73
        }
      },
      "61": {
        start: {
          line: 120,
          column: 0
        },
        end: {
          line: 141,
          column: 3
        }
      },
      "62": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "63": {
        start: {
          line: 122,
          column: 27
        },
        end: {
          line: 122,
          column: 37
        }
      },
      "64": {
        start: {
          line: 123,
          column: 27
        },
        end: {
          line: 123,
          column: 35
        }
      },
      "65": {
        start: {
          line: 124,
          column: 23
        },
        end: {
          line: 124,
          column: 39
        }
      },
      "66": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "67": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 77
        }
      },
      "68": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "69": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 79
        }
      },
      "70": {
        start: {
          line: 131,
          column: 32
        },
        end: {
          line: 131,
          column: 91
        }
      },
      "71": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "72": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 117
        }
      },
      "73": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 65
        }
      },
      "74": {
        start: {
          line: 146,
          column: 0
        },
        end: {
          line: 163,
          column: 3
        }
      },
      "75": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "76": {
        start: {
          line: 148,
          column: 31
        },
        end: {
          line: 148,
          column: 41
        }
      },
      "77": {
        start: {
          line: 149,
          column: 23
        },
        end: {
          line: 149,
          column: 39
        }
      },
      "78": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "79": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 77
        }
      },
      "80": {
        start: {
          line: 153,
          column: 24
        },
        end: {
          line: 153,
          column: 88
        }
      },
      "81": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "82": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 136
        }
      },
      "83": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 75
        }
      },
      "84": {
        start: {
          line: 168,
          column: 0
        },
        end: {
          line: 185,
          column: 3
        }
      },
      "85": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "86": {
        start: {
          line: 170,
          column: 27
        },
        end: {
          line: 170,
          column: 37
        }
      },
      "87": {
        start: {
          line: 171,
          column: 23
        },
        end: {
          line: 171,
          column: 39
        }
      },
      "88": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "89": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 77
        }
      },
      "90": {
        start: {
          line: 175,
          column: 27
        },
        end: {
          line: 175,
          column: 73
        }
      },
      "91": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "92": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 123
        }
      },
      "93": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 69
        }
      },
      "94": {
        start: {
          line: 190,
          column: 0
        },
        end: {
          line: 207,
          column: 3
        }
      },
      "95": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "96": {
        start: {
          line: 192,
          column: 26
        },
        end: {
          line: 192,
          column: 35
        }
      },
      "97": {
        start: {
          line: 193,
          column: 23
        },
        end: {
          line: 193,
          column: 39
        }
      },
      "98": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "99": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 77
        }
      },
      "100": {
        start: {
          line: 197,
          column: 30
        },
        end: {
          line: 197,
          column: 101
        }
      },
      "101": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 201,
          column: 11
        }
      },
      "102": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 99
        }
      },
      "103": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 72
        }
      },
      "104": {
        start: {
          line: 208,
          column: 0
        },
        end: {
          line: 208,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 17,
            column: 30
          }
        },
        loc: {
          start: {
            line: 17,
            column: 49
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 42,
            column: 29
          }
        },
        loc: {
          start: {
            line: 42,
            column: 48
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 42
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 68,
            column: 30
          }
        },
        loc: {
          start: {
            line: 68,
            column: 49
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 68
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 94,
            column: 37
          },
          end: {
            line: 94,
            column: 38
          }
        },
        loc: {
          start: {
            line: 94,
            column: 57
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 94
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 120,
            column: 38
          },
          end: {
            line: 120,
            column: 39
          }
        },
        loc: {
          start: {
            line: 120,
            column: 58
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 120
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 146,
            column: 42
          },
          end: {
            line: 146,
            column: 43
          }
        },
        loc: {
          start: {
            line: 146,
            column: 62
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 146
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 168,
            column: 35
          },
          end: {
            line: 168,
            column: 36
          }
        },
        loc: {
          start: {
            line: 168,
            column: 55
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 168
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 190,
            column: 24
          },
          end: {
            line: 190,
            column: 25
          }
        },
        loc: {
          start: {
            line: 190,
            column: 44
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 190
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 19
          }
        }, {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 28
          }
        }, {
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 24,
            column: 44
          }
        }, {
          start: {
            line: 24,
            column: 48
          },
          end: {
            line: 24,
            column: 60
          }
        }, {
          start: {
            line: 24,
            column: 64
          },
          end: {
            line: 24,
            column: 72
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 19
          }
        }, {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 34
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "8": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 19
          }
        }, {
          start: {
            line: 76,
            column: 23
          },
          end: {
            line: 76,
            column: 34
          }
        }],
        line: 76
      },
      "9": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "10": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "11": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 17
          }
        }, {
          start: {
            line: 102,
            column: 21
          },
          end: {
            line: 102,
            column: 33
          }
        }, {
          start: {
            line: 102,
            column: 37
          },
          end: {
            line: 102,
            column: 41
          }
        }, {
          start: {
            line: 102,
            column: 45
          },
          end: {
            line: 102,
            column: 60
          }
        }, {
          start: {
            line: 102,
            column: 64
          },
          end: {
            line: 102,
            column: 75
          }
        }],
        line: 102
      },
      "12": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "13": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "14": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 128,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 128,
            column: 19
          }
        }, {
          start: {
            line: 128,
            column: 23
          },
          end: {
            line: 128,
            column: 34
          }
        }],
        line: 128
      },
      "15": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "16": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "17": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "18": {
        loc: {
          start: {
            line: 197,
            column: 72
          },
          end: {
            line: 197,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 80
          },
          end: {
            line: 197,
            column: 95
          }
        }, {
          start: {
            line: 197,
            column: 98
          },
          end: {
            line: 197,
            column: 100
          }
        }],
        line: 197
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f73123e23cab4ece838f015ff672eb2beb4bb462"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23rwnnu5zb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23rwnnu5zb();
cov_23rwnnu5zb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_23rwnnu5zb().s[1]++, require("express"));
const CreatorCoinService_1 =
/* istanbul ignore next */
(cov_23rwnnu5zb().s[2]++, require("@/services/blockchain/CreatorCoinService"));
const auth_1 =
/* istanbul ignore next */
(cov_23rwnnu5zb().s[3]++, require("@/middleware/auth"));
const security_1 =
/* istanbul ignore next */
(cov_23rwnnu5zb().s[4]++, require("@/middleware/security"));
const logger_1 =
/* istanbul ignore next */
(cov_23rwnnu5zb().s[5]++, require("@/config/logger"));
const router =
/* istanbul ignore next */
(cov_23rwnnu5zb().s[6]++, (0, express_1.Router)());
const creatorCoinService =
/* istanbul ignore next */
(cov_23rwnnu5zb().s[7]++, CreatorCoinService_1.CreatorCoinService.getInstance());
// Apply authentication and rate limiting to all routes
/* istanbul ignore next */
cov_23rwnnu5zb().s[8]++;
router.use(auth_1.authMiddleware);
/* istanbul ignore next */
cov_23rwnnu5zb().s[9]++;
router.use(security_1.socialLimiter);
/**
 * @route POST /api/v1/blockchain/creator-coin
 * @desc Create a new creator coin
 */
/* istanbul ignore next */
cov_23rwnnu5zb().s[10]++;
router.post('/creator-coin', async (req, res) => {
  /* istanbul ignore next */
  cov_23rwnnu5zb().f[0]++;
  cov_23rwnnu5zb().s[11]++;
  try {
    const {
      symbol,
      name,
      description,
      totalSupply,
      network,
      metadata
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[12]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[13]++, req.user?.userId);
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[14]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[0][0]++;
      cov_23rwnnu5zb().s[15]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[0][1]++;
    }
    cov_23rwnnu5zb().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[2][0]++, !symbol) ||
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[2][1]++, !name) ||
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[2][2]++, !description) ||
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[2][3]++, !totalSupply) ||
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[2][4]++, !network)) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[1][0]++;
      cov_23rwnnu5zb().s[17]++;
      return res.status(400).json({
        error: 'Missing required fields'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[1][1]++;
    }
    const creatorCoin =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[18]++, await creatorCoinService.createCreatorCoin(userId, symbol, name, description, totalSupply, network, metadata));
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[19]++;
    res.status(201).json({
      success: true,
      data: creatorCoin
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[20]++;
    logger_1.logger.error('Error creating creator coin', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[21]++;
    res.status(500).json({
      error: 'Failed to create creator coin'
    });
  }
});
/**
 * @route POST /api/v1/blockchain/:coinId/buy
 * @desc Buy creator coins
 */
/* istanbul ignore next */
cov_23rwnnu5zb().s[22]++;
router.post('/:coinId/buy', async (req, res) => {
  /* istanbul ignore next */
  cov_23rwnnu5zb().f[1]++;
  cov_23rwnnu5zb().s[23]++;
  try {
    const {
      coinId
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[24]++, req.params);
    const {
      amount,
      maxPrice
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[25]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[26]++, req.user?.userId);
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[27]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[3][0]++;
      cov_23rwnnu5zb().s[28]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[3][1]++;
    }
    cov_23rwnnu5zb().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[5][0]++, !amount) ||
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[5][1]++, amount <= 0)) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[4][0]++;
      cov_23rwnnu5zb().s[30]++;
      return res.status(400).json({
        error: 'Valid amount is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[4][1]++;
    }
    const transaction =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[31]++, await creatorCoinService.buyCoins(userId, coinId, amount, maxPrice));
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[32]++;
    res.status(200).json({
      success: true,
      data: transaction
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[33]++;
    logger_1.logger.error('Error buying creator coins', {
      error,
      coinId: req.params.coinId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[34]++;
    res.status(500).json({
      error: 'Failed to buy creator coins'
    });
  }
});
/**
 * @route POST /api/v1/blockchain/:coinId/sell
 * @desc Sell creator coins
 */
/* istanbul ignore next */
cov_23rwnnu5zb().s[35]++;
router.post('/:coinId/sell', async (req, res) => {
  /* istanbul ignore next */
  cov_23rwnnu5zb().f[2]++;
  cov_23rwnnu5zb().s[36]++;
  try {
    const {
      coinId
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[37]++, req.params);
    const {
      amount,
      minPrice
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[38]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[39]++, req.user?.userId);
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[40]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[6][0]++;
      cov_23rwnnu5zb().s[41]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[6][1]++;
    }
    cov_23rwnnu5zb().s[42]++;
    if (
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[8][0]++, !amount) ||
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[8][1]++, amount <= 0)) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[7][0]++;
      cov_23rwnnu5zb().s[43]++;
      return res.status(400).json({
        error: 'Valid amount is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[7][1]++;
    }
    const transaction =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[44]++, await creatorCoinService.sellCoins(userId, coinId, amount, minPrice));
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[45]++;
    res.status(200).json({
      success: true,
      data: transaction
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[46]++;
    logger_1.logger.error('Error selling creator coins', {
      error,
      coinId: req.params.coinId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[47]++;
    res.status(500).json({
      error: 'Failed to sell creator coins'
    });
  }
});
/**
 * @route POST /api/v1/blockchain/:coinId/staking-pool
 * @desc Create staking pool for creator coin
 */
/* istanbul ignore next */
cov_23rwnnu5zb().s[48]++;
router.post('/:coinId/staking-pool', async (req, res) => {
  /* istanbul ignore next */
  cov_23rwnnu5zb().f[3]++;
  cov_23rwnnu5zb().s[49]++;
  try {
    const {
      coinId
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[50]++, req.params);
    const {
      name,
      description,
      apy,
      minStakeAmount,
      lockPeriod,
      rewardsToken
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[51]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[52]++, req.user?.userId);
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[53]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[9][0]++;
      cov_23rwnnu5zb().s[54]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[9][1]++;
    }
    cov_23rwnnu5zb().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[11][0]++, !name) ||
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[11][1]++, !description) ||
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[11][2]++, !apy) ||
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[11][3]++, !minStakeAmount) ||
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[11][4]++, !lockPeriod)) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[10][0]++;
      cov_23rwnnu5zb().s[56]++;
      return res.status(400).json({
        error: 'Missing required fields'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[10][1]++;
    }
    const stakingPool =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[57]++, await creatorCoinService.createStakingPool(coinId, name, description, apy, minStakeAmount, lockPeriod, rewardsToken));
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[58]++;
    res.status(201).json({
      success: true,
      data: stakingPool
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[59]++;
    logger_1.logger.error('Error creating staking pool', {
      error,
      coinId: req.params.coinId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[60]++;
    res.status(500).json({
      error: 'Failed to create staking pool'
    });
  }
});
/**
 * @route POST /api/v1/blockchain/staking/:poolId/stake
 * @desc Stake coins in a pool
 */
/* istanbul ignore next */
cov_23rwnnu5zb().s[61]++;
router.post('/staking/:poolId/stake', async (req, res) => {
  /* istanbul ignore next */
  cov_23rwnnu5zb().f[4]++;
  cov_23rwnnu5zb().s[62]++;
  try {
    const {
      poolId
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[63]++, req.params);
    const {
      amount
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[64]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[65]++, req.user?.userId);
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[66]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[12][0]++;
      cov_23rwnnu5zb().s[67]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[12][1]++;
    }
    cov_23rwnnu5zb().s[68]++;
    if (
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[14][0]++, !amount) ||
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[14][1]++, amount <= 0)) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[13][0]++;
      cov_23rwnnu5zb().s[69]++;
      return res.status(400).json({
        error: 'Valid amount is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[13][1]++;
    }
    const stakingPosition =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[70]++, await creatorCoinService.stakeCoins(userId, poolId, amount));
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[71]++;
    res.status(200).json({
      success: true,
      data: stakingPosition
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[72]++;
    logger_1.logger.error('Error staking coins', {
      error,
      poolId: req.params.poolId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[73]++;
    res.status(500).json({
      error: 'Failed to stake coins'
    });
  }
});
/**
 * @route POST /api/v1/blockchain/staking/:positionId/claim
 * @desc Claim staking rewards
 */
/* istanbul ignore next */
cov_23rwnnu5zb().s[74]++;
router.post('/staking/:positionId/claim', async (req, res) => {
  /* istanbul ignore next */
  cov_23rwnnu5zb().f[5]++;
  cov_23rwnnu5zb().s[75]++;
  try {
    const {
      positionId
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[76]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[77]++, req.user?.userId);
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[78]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[15][0]++;
      cov_23rwnnu5zb().s[79]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[15][1]++;
    }
    const rewards =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[80]++, await creatorCoinService.claimStakingRewards(userId, positionId));
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[81]++;
    res.status(200).json({
      success: true,
      data: {
        rewards
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[82]++;
    logger_1.logger.error('Error claiming staking rewards', {
      error,
      positionId: req.params.positionId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[83]++;
    res.status(500).json({
      error: 'Failed to claim staking rewards'
    });
  }
});
/**
 * @route GET /api/v1/blockchain/:coinId/market-data
 * @desc Get creator coin market data
 */
/* istanbul ignore next */
cov_23rwnnu5zb().s[84]++;
router.get('/:coinId/market-data', async (req, res) => {
  /* istanbul ignore next */
  cov_23rwnnu5zb().f[6]++;
  cov_23rwnnu5zb().s[85]++;
  try {
    const {
      coinId
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[86]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[87]++, req.user?.userId);
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[88]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[16][0]++;
      cov_23rwnnu5zb().s[89]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[16][1]++;
    }
    const marketData =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[90]++, await creatorCoinService.getMarketData(coinId));
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[91]++;
    res.status(200).json({
      success: true,
      data: marketData
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[92]++;
    logger_1.logger.error('Error getting market data', {
      error,
      coinId: req.params.coinId,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[93]++;
    res.status(500).json({
      error: 'Failed to get market data'
    });
  }
});
/**
 * @route GET /api/v1/blockchain/trending
 * @desc Get trending creator coins
 */
/* istanbul ignore next */
cov_23rwnnu5zb().s[94]++;
router.get('/trending', async (req, res) => {
  /* istanbul ignore next */
  cov_23rwnnu5zb().f[7]++;
  cov_23rwnnu5zb().s[95]++;
  try {
    const {
      limit
    } =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[96]++, req.query);
    const userId =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[97]++, req.user?.userId);
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[98]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_23rwnnu5zb().b[17][0]++;
      cov_23rwnnu5zb().s[99]++;
      return res.status(401).json({
        error: 'User not authenticated'
      });
    } else
    /* istanbul ignore next */
    {
      cov_23rwnnu5zb().b[17][1]++;
    }
    const trendingCoins =
    /* istanbul ignore next */
    (cov_23rwnnu5zb().s[100]++, await creatorCoinService.getTrendingCoins(limit ?
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[18][0]++, parseInt(limit)) :
    /* istanbul ignore next */
    (cov_23rwnnu5zb().b[18][1]++, 10)));
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[101]++;
    res.status(200).json({
      success: true,
      data: trendingCoins
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[102]++;
    logger_1.logger.error('Error getting trending coins', {
      error,
      userId: req.user?.userId
    });
    /* istanbul ignore next */
    cov_23rwnnu5zb().s[103]++;
    res.status(500).json({
      error: 'Failed to get trending coins'
    });
  }
});
/* istanbul ignore next */
cov_23rwnnu5zb().s[104]++;
exports.default = router;