39e3a88e9836d99fc2bad4f266241c23
"use strict";

/* istanbul ignore next */
function cov_7bg4groi9() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\monitoring.ts";
  var hash = "81ab6695a7f1ee96270dafbc47493442ddbf7e82";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\monitoring.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "3": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 45
        }
      },
      "4": {
        start: {
          line: 6,
          column: 28
        },
        end: {
          line: 6,
          column: 67
        }
      },
      "5": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 41
        }
      },
      "6": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 43
        }
      },
      "7": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "8": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 42
        }
      },
      "9": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "10": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "11": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "12": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "13": {
        start: {
          line: 17,
          column: 29
        },
        end: {
          line: 17,
          column: 90
        }
      },
      "14": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 31
        }
      },
      "15": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 60
        }
      },
      "16": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 71
        }
      },
      "17": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "18": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "19": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 84
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 26
        }
      },
      "21": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 57
        }
      },
      "22": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 69
        }
      },
      "23": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 52,
          column: 3
        }
      },
      "24": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "25": {
        start: {
          line: 39,
          column: 31
        },
        end: {
          line: 39,
          column: 40
        }
      },
      "26": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 74
        }
      },
      "27": {
        start: {
          line: 41,
          column: 31
        },
        end: {
          line: 41,
          column: 90
        }
      },
      "28": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "29": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 62
        }
      },
      "30": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 73
        }
      },
      "31": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "32": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "33": {
        start: {
          line: 56,
          column: 22
        },
        end: {
          line: 56,
          column: 56
        }
      },
      "34": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 24
        }
      },
      "35": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 58
        }
      },
      "36": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 74
        }
      },
      "37": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "38": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "39": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 77
        }
      },
      "40": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 25
        }
      },
      "41": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 59
        }
      },
      "42": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 77
        }
      },
      "43": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 94,
          column: 3
        }
      },
      "44": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "45": {
        start: {
          line: 78,
          column: 114
        },
        end: {
          line: 78,
          column: 122
        }
      },
      "46": {
        start: {
          line: 79,
          column: 23
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "47": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 72
        }
      },
      "48": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 60
        }
      },
      "49": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 82
        }
      },
      "50": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 60
        }
      },
      "51": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 80
        }
      },
      "52": {
        start: {
          line: 96,
          column: 0
        },
        end: {
          line: 146,
          column: 3
        }
      },
      "53": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "54": {
        start: {
          line: 98,
          column: 24
        },
        end: {
          line: 98,
          column: 74
        }
      },
      "55": {
        start: {
          line: 99,
          column: 23
        },
        end: {
          line: 99,
          column: 79
        }
      },
      "56": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "57": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 104,
          column: 15
        }
      },
      "58": {
        start: {
          line: 107,
          column: 26
        },
        end: {
          line: 107,
          column: 136
        }
      },
      "59": {
        start: {
          line: 107,
          column: 78
        },
        end: {
          line: 107,
          column: 111
        }
      },
      "60": {
        start: {
          line: 108,
          column: 23
        },
        end: {
          line: 108,
          column: 125
        }
      },
      "61": {
        start: {
          line: 108,
          column: 75
        },
        end: {
          line: 108,
          column: 100
        }
      },
      "62": {
        start: {
          line: 109,
          column: 32
        },
        end: {
          line: 109,
          column: 148
        }
      },
      "63": {
        start: {
          line: 109,
          column: 84
        },
        end: {
          line: 109,
          column: 123
        }
      },
      "64": {
        start: {
          line: 111,
          column: 29
        },
        end: {
          line: 111,
          column: 66
        }
      },
      "65": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 112,
          column: 60
        }
      },
      "66": {
        start: {
          line: 113,
          column: 26
        },
        end: {
          line: 113,
          column: 57
        }
      },
      "67": {
        start: {
          line: 114,
          column: 27
        },
        end: {
          line: 114,
          column: 55
        }
      },
      "68": {
        start: {
          line: 115,
          column: 35
        },
        end: {
          line: 115,
          column: 147
        }
      },
      "69": {
        start: {
          line: 115,
          column: 87
        },
        end: {
          line: 115,
          column: 120
        }
      },
      "70": {
        start: {
          line: 116,
          column: 36
        },
        end: {
          line: 116,
          column: 151
        }
      },
      "71": {
        start: {
          line: 116,
          column: 90
        },
        end: {
          line: 116,
          column: 123
        }
      },
      "72": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 118,
          column: 78
        }
      },
      "73": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "74": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 66
        }
      },
      "75": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 77
        }
      },
      "76": {
        start: {
          line: 148,
          column: 0
        },
        end: {
          line: 181,
          column: 3
        }
      },
      "77": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "78": {
        start: {
          line: 150,
          column: 23
        },
        end: {
          line: 150,
          column: 79
        }
      },
      "79": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "80": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 80
        }
      },
      "81": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 175,
          column: 11
        }
      },
      "82": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 61
        }
      },
      "83": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 72
        }
      },
      "84": {
        start: {
          line: 183,
          column: 0
        },
        end: {
          line: 211,
          column: 3
        }
      },
      "85": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "86": {
        start: {
          line: 186,
          column: 27
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "87": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 205,
          column: 11
        }
      },
      "88": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 61
        }
      },
      "89": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 72
        }
      },
      "90": {
        start: {
          line: 212,
          column: 0
        },
        end: {
          line: 212,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 15,
            column: 23
          }
        },
        loc: {
          start: {
            line: 15,
            column: 42
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 26,
            column: 24
          }
        },
        loc: {
          start: {
            line: 26,
            column: 43
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 37,
            column: 32
          }
        },
        loc: {
          start: {
            line: 37,
            column: 51
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 54,
            column: 27
          },
          end: {
            line: 54,
            column: 28
          }
        },
        loc: {
          start: {
            line: 54,
            column: 47
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 65,
            column: 30
          }
        },
        loc: {
          start: {
            line: 65,
            column: 49
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 76,
            column: 29
          },
          end: {
            line: 76,
            column: 30
          }
        },
        loc: {
          start: {
            line: 76,
            column: 49
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 76
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 96,
            column: 27
          },
          end: {
            line: 96,
            column: 28
          }
        },
        loc: {
          start: {
            line: 96,
            column: 47
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 96
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 107,
            column: 66
          },
          end: {
            line: 107,
            column: 67
          }
        },
        loc: {
          start: {
            line: 107,
            column: 78
          },
          end: {
            line: 107,
            column: 111
          }
        },
        line: 107
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 108,
            column: 63
          },
          end: {
            line: 108,
            column: 64
          }
        },
        loc: {
          start: {
            line: 108,
            column: 75
          },
          end: {
            line: 108,
            column: 100
          }
        },
        line: 108
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 109,
            column: 72
          },
          end: {
            line: 109,
            column: 73
          }
        },
        loc: {
          start: {
            line: 109,
            column: 84
          },
          end: {
            line: 109,
            column: 123
          }
        },
        line: 109
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 115,
            column: 75
          },
          end: {
            line: 115,
            column: 76
          }
        },
        loc: {
          start: {
            line: 115,
            column: 87
          },
          end: {
            line: 115,
            column: 120
          }
        },
        line: 115
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 116,
            column: 78
          },
          end: {
            line: 116,
            column: 79
          }
        },
        loc: {
          start: {
            line: 116,
            column: 90
          },
          end: {
            line: 116,
            column: 123
          }
        },
        line: 116
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 148,
            column: 25
          },
          end: {
            line: 148,
            column: 26
          }
        },
        loc: {
          start: {
            line: 148,
            column: 45
          },
          end: {
            line: 181,
            column: 1
          }
        },
        line: 148
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 183,
            column: 30
          },
          end: {
            line: 183,
            column: 31
          }
        },
        loc: {
          start: {
            line: 183,
            column: 50
          },
          end: {
            line: 211,
            column: 1
          }
        },
        line: 183
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 39,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 26
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 31
          },
          end: {
            line: 41,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 56
          },
          end: {
            line: 41,
            column: 85
          }
        }, {
          start: {
            line: 41,
            column: 88
          },
          end: {
            line: 41,
            column: 90
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 19
          },
          end: {
            line: 45,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 44
          },
          end: {
            line: 45,
            column: 58
          }
        }, {
          start: {
            line: 45,
            column: 61
          },
          end: {
            line: 45,
            column: 62
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 45
          }
        }, {
          start: {
            line: 80,
            column: 49
          },
          end: {
            line: 80,
            column: 68
          }
        }],
        line: 80
      },
      "4": {
        loc: {
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 42
          }
        }, {
          start: {
            line: 81,
            column: 46
          },
          end: {
            line: 81,
            column: 62
          }
        }],
        line: 81
      },
      "5": {
        loc: {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 51
          }
        }, {
          start: {
            line: 82,
            column: 55
          },
          end: {
            line: 82,
            column: 80
          }
        }],
        line: 82
      },
      "6": {
        loc: {
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 83,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 83,
            column: 48
          }
        }, {
          start: {
            line: 83,
            column: 52
          },
          end: {
            line: 83,
            column: 74
          }
        }],
        line: 83
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 49
          }
        }, {
          start: {
            line: 84,
            column: 53
          },
          end: {
            line: 84,
            column: 76
          }
        }],
        line: 84
      },
      "8": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "9": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 19
          }
        }, {
          start: {
            line: 100,
            column: 23
          },
          end: {
            line: 100,
            column: 46
          }
        }, {
          start: {
            line: 100,
            column: 50
          },
          end: {
            line: 100,
            column: 70
          }
        }],
        line: 100
      },
      "10": {
        loc: {
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 107,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 51
          },
          end: {
            line: 107,
            column: 132
          }
        }, {
          start: {
            line: 107,
            column: 135
          },
          end: {
            line: 107,
            column: 136
          }
        }],
        line: 107
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 85
          },
          end: {
            line: 107,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 85
          },
          end: {
            line: 107,
            column: 105
          }
        }, {
          start: {
            line: 107,
            column: 109
          },
          end: {
            line: 107,
            column: 110
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 108,
            column: 23
          },
          end: {
            line: 108,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 48
          },
          end: {
            line: 108,
            column: 121
          }
        }, {
          start: {
            line: 108,
            column: 124
          },
          end: {
            line: 108,
            column: 125
          }
        }],
        line: 108
      },
      "13": {
        loc: {
          start: {
            line: 108,
            column: 82
          },
          end: {
            line: 108,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 82
          },
          end: {
            line: 108,
            column: 94
          }
        }, {
          start: {
            line: 108,
            column: 98
          },
          end: {
            line: 108,
            column: 99
          }
        }],
        line: 108
      },
      "14": {
        loc: {
          start: {
            line: 109,
            column: 32
          },
          end: {
            line: 109,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 57
          },
          end: {
            line: 109,
            column: 144
          }
        }, {
          start: {
            line: 109,
            column: 147
          },
          end: {
            line: 109,
            column: 148
          }
        }],
        line: 109
      },
      "15": {
        loc: {
          start: {
            line: 109,
            column: 91
          },
          end: {
            line: 109,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 91
          },
          end: {
            line: 109,
            column: 117
          }
        }, {
          start: {
            line: 109,
            column: 121
          },
          end: {
            line: 109,
            column: 122
          }
        }],
        line: 109
      },
      "16": {
        loc: {
          start: {
            line: 111,
            column: 29
          },
          end: {
            line: 111,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 54
          },
          end: {
            line: 111,
            column: 61
          }
        }, {
          start: {
            line: 111,
            column: 64
          },
          end: {
            line: 111,
            column: 66
          }
        }],
        line: 111
      },
      "17": {
        loc: {
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 115,
            column: 147
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 58
          },
          end: {
            line: 115,
            column: 143
          }
        }, {
          start: {
            line: 115,
            column: 146
          },
          end: {
            line: 115,
            column: 147
          }
        }],
        line: 115
      },
      "18": {
        loc: {
          start: {
            line: 115,
            column: 94
          },
          end: {
            line: 115,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 94
          },
          end: {
            line: 115,
            column: 114
          }
        }, {
          start: {
            line: 115,
            column: 118
          },
          end: {
            line: 115,
            column: 119
          }
        }],
        line: 115
      },
      "19": {
        loc: {
          start: {
            line: 116,
            column: 36
          },
          end: {
            line: 116,
            column: 151
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 60
          },
          end: {
            line: 116,
            column: 147
          }
        }, {
          start: {
            line: 116,
            column: 150
          },
          end: {
            line: 116,
            column: 151
          }
        }],
        line: 116
      },
      "20": {
        loc: {
          start: {
            line: 116,
            column: 97
          },
          end: {
            line: 116,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 97
          },
          end: {
            line: 116,
            column: 117
          }
        }, {
          start: {
            line: 116,
            column: 121
          },
          end: {
            line: 116,
            column: 122
          }
        }],
        line: 116
      },
      "21": {
        loc: {
          start: {
            line: 117,
            column: 28
          },
          end: {
            line: 118,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 71
          },
          end: {
            line: 117,
            column: 83
          }
        }, {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 118,
            column: 78
          }
        }],
        line: 117
      },
      "22": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 118,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 118,
            column: 55
          },
          end: {
            line: 118,
            column: 67
          }
        }, {
          start: {
            line: 118,
            column: 70
          },
          end: {
            line: 118,
            column: 78
          }
        }],
        line: 118
      },
      "23": {
        loc: {
          start: {
            line: 121,
            column: 24
          },
          end: {
            line: 121,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 24
          },
          end: {
            line: 121,
            column: 50
          }
        }, {
          start: {
            line: 121,
            column: 54
          },
          end: {
            line: 121,
            column: 55
          }
        }],
        line: 121
      },
      "24": {
        loc: {
          start: {
            line: 122,
            column: 21
          },
          end: {
            line: 122,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 21
          },
          end: {
            line: 122,
            column: 39
          }
        }, {
          start: {
            line: 122,
            column: 43
          },
          end: {
            line: 122,
            column: 44
          }
        }],
        line: 122
      },
      "25": {
        loc: {
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 62
          }
        }, {
          start: {
            line: 123,
            column: 66
          },
          end: {
            line: 123,
            column: 67
          }
        }],
        line: 123
      },
      "26": {
        loc: {
          start: {
            line: 124,
            column: 27
          },
          end: {
            line: 124,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 27
          },
          end: {
            line: 124,
            column: 49
          }
        }, {
          start: {
            line: 124,
            column: 53
          },
          end: {
            line: 124,
            column: 54
          }
        }],
        line: 124
      },
      "27": {
        loc: {
          start: {
            line: 125,
            column: 37
          },
          end: {
            line: 125,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 37
          },
          end: {
            line: 125,
            column: 66
          }
        }, {
          start: {
            line: 125,
            column: 70
          },
          end: {
            line: 125,
            column: 71
          }
        }],
        line: 125
      },
      "28": {
        loc: {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 49
          },
          end: {
            line: 135,
            column: 63
          }
        }, {
          start: {
            line: 135,
            column: 66
          },
          end: {
            line: 135,
            column: 67
          }
        }],
        line: 135
      },
      "29": {
        loc: {
          start: {
            line: 137,
            column: 23
          },
          end: {
            line: 137,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 70
          },
          end: {
            line: 137,
            column: 91
          }
        }, {
          start: {
            line: 137,
            column: 94
          },
          end: {
            line: 137,
            column: 104
          }
        }],
        line: 137
      },
      "30": {
        loc: {
          start: {
            line: 137,
            column: 23
          },
          end: {
            line: 137,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 23
          },
          end: {
            line: 137,
            column: 45
          }
        }, {
          start: {
            line: 137,
            column: 49
          },
          end: {
            line: 137,
            column: 67
          }
        }],
        line: 137
      },
      "31": {
        loc: {
          start: {
            line: 138,
            column: 21
          },
          end: {
            line: 138,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 21
          },
          end: {
            line: 138,
            column: 38
          }
        }, {
          start: {
            line: 138,
            column: 42
          },
          end: {
            line: 138,
            column: 52
          }
        }],
        line: 138
      },
      "32": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "33": {
        loc: {
          start: {
            line: 156,
            column: 22
          },
          end: {
            line: 156,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 22
          },
          end: {
            line: 156,
            column: 42
          }
        }, {
          start: {
            line: 156,
            column: 46
          },
          end: {
            line: 156,
            column: 47
          }
        }],
        line: 156
      },
      "34": {
        loc: {
          start: {
            line: 157,
            column: 22
          },
          end: {
            line: 157,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 22
          },
          end: {
            line: 157,
            column: 42
          }
        }, {
          start: {
            line: 157,
            column: 46
          },
          end: {
            line: 157,
            column: 47
          }
        }],
        line: 157
      },
      "35": {
        loc: {
          start: {
            line: 158,
            column: 23
          },
          end: {
            line: 158,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 23
          },
          end: {
            line: 158,
            column: 44
          }
        }, {
          start: {
            line: 158,
            column: 48
          },
          end: {
            line: 158,
            column: 49
          }
        }],
        line: 158
      },
      "36": {
        loc: {
          start: {
            line: 159,
            column: 28
          },
          end: {
            line: 159,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 28
          },
          end: {
            line: 159,
            column: 54
          }
        }, {
          start: {
            line: 159,
            column: 58
          },
          end: {
            line: 159,
            column: 59
          }
        }],
        line: 159
      },
      "37": {
        loc: {
          start: {
            line: 163,
            column: 23
          },
          end: {
            line: 163,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 23
          },
          end: {
            line: 163,
            column: 41
          }
        }, {
          start: {
            line: 163,
            column: 45
          },
          end: {
            line: 163,
            column: 46
          }
        }],
        line: 163
      },
      "38": {
        loc: {
          start: {
            line: 164,
            column: 29
          },
          end: {
            line: 164,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 29
          },
          end: {
            line: 164,
            column: 53
          }
        }, {
          start: {
            line: 164,
            column: 57
          },
          end: {
            line: 164,
            column: 58
          }
        }],
        line: 164
      },
      "39": {
        loc: {
          start: {
            line: 168,
            column: 29
          },
          end: {
            line: 168,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 29
          },
          end: {
            line: 168,
            column: 58
          }
        }, {
          start: {
            line: 168,
            column: 62
          },
          end: {
            line: 168,
            column: 63
          }
        }],
        line: 168
      },
      "40": {
        loc: {
          start: {
            line: 169,
            column: 28
          },
          end: {
            line: 169,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 28
          },
          end: {
            line: 169,
            column: 56
          }
        }, {
          start: {
            line: 169,
            column: 60
          },
          end: {
            line: 169,
            column: 61
          }
        }],
        line: 169
      },
      "41": {
        loc: {
          start: {
            line: 170,
            column: 30
          },
          end: {
            line: 170,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 30
          },
          end: {
            line: 170,
            column: 60
          }
        }, {
          start: {
            line: 170,
            column: 64
          },
          end: {
            line: 170,
            column: 65
          }
        }],
        line: 170
      },
      "42": {
        loc: {
          start: {
            line: 173,
            column: 19
          },
          end: {
            line: 173,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 19
          },
          end: {
            line: 173,
            column: 32
          }
        }, {
          start: {
            line: 173,
            column: 36
          },
          end: {
            line: 173,
            column: 38
          }
        }],
        line: 173
      },
      "43": {
        loc: {
          start: {
            line: 174,
            column: 23
          },
          end: {
            line: 174,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 23
          },
          end: {
            line: 174,
            column: 40
          }
        }, {
          start: {
            line: 174,
            column: 44
          },
          end: {
            line: 174,
            column: 54
          }
        }],
        line: 174
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "81ab6695a7f1ee96270dafbc47493442ddbf7e82"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7bg4groi9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7bg4groi9();
cov_7bg4groi9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_7bg4groi9().s[1]++, require("express"));
const auth_1 =
/* istanbul ignore next */
(cov_7bg4groi9().s[2]++, require("@/middleware/auth"));
const admin_1 =
/* istanbul ignore next */
(cov_7bg4groi9().s[3]++, require("@/middleware/admin"));
const monitoringService_1 =
/* istanbul ignore next */
(cov_7bg4groi9().s[4]++, require("@/services/monitoringService"));
const redis_1 =
/* istanbul ignore next */
(cov_7bg4groi9().s[5]++, require("@/config/redis"));
const logger_1 =
/* istanbul ignore next */
(cov_7bg4groi9().s[6]++, require("@/config/logger"));
const router =
/* istanbul ignore next */
(cov_7bg4groi9().s[7]++, (0, express_1.Router)());
const logger =
/* istanbul ignore next */
(cov_7bg4groi9().s[8]++, (0, logger_1.setupLogger)());
// All monitoring routes require admin authentication
/* istanbul ignore next */
cov_7bg4groi9().s[9]++;
router.use(auth_1.authMiddleware);
/* istanbul ignore next */
cov_7bg4groi9().s[10]++;
router.use(admin_1.adminOnly);
// Get system health status
/* istanbul ignore next */
cov_7bg4groi9().s[11]++;
router.get('/health', async (req, res) => {
  /* istanbul ignore next */
  cov_7bg4groi9().f[0]++;
  cov_7bg4groi9().s[12]++;
  try {
    const healthStatus =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[13]++, await monitoringService_1.monitoringService.getHealthStatus());
    /* istanbul ignore next */
    cov_7bg4groi9().s[14]++;
    res.json(healthStatus);
  } catch (error) {
    /* istanbul ignore next */
    cov_7bg4groi9().s[15]++;
    logger.error('Error getting health status:', error);
    /* istanbul ignore next */
    cov_7bg4groi9().s[16]++;
    res.status(500).json({
      error: 'Failed to get health status'
    });
  }
});
// Get current system metrics
/* istanbul ignore next */
cov_7bg4groi9().s[17]++;
router.get('/metrics', async (req, res) => {
  /* istanbul ignore next */
  cov_7bg4groi9().f[1]++;
  cov_7bg4groi9().s[18]++;
  try {
    const metrics =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[19]++, await monitoringService_1.monitoringService.collectMetrics());
    /* istanbul ignore next */
    cov_7bg4groi9().s[20]++;
    res.json(metrics);
  } catch (error) {
    /* istanbul ignore next */
    cov_7bg4groi9().s[21]++;
    logger.error('Error collecting metrics:', error);
    /* istanbul ignore next */
    cov_7bg4groi9().s[22]++;
    res.status(500).json({
      error: 'Failed to collect metrics'
    });
  }
});
// Get historical metrics
/* istanbul ignore next */
cov_7bg4groi9().s[23]++;
router.get('/metrics/history', async (req, res) => {
  /* istanbul ignore next */
  cov_7bg4groi9().f[2]++;
  cov_7bg4groi9().s[24]++;
  try {
    const {
      limit =
      /* istanbul ignore next */
      (cov_7bg4groi9().b[0][0]++, 50)
    } =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[25]++, req.query);
    const metrics =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[26]++, monitoringService_1.monitoringService.getMetrics());
    const limitedMetrics =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[27]++, Array.isArray(metrics) ?
    /* istanbul ignore next */
    (cov_7bg4groi9().b[1][0]++, metrics.slice(-Number(limit))) :
    /* istanbul ignore next */
    (cov_7bg4groi9().b[1][1]++, []));
    /* istanbul ignore next */
    cov_7bg4groi9().s[28]++;
    res.json({
      metrics: limitedMetrics,
      count: limitedMetrics.length,
      total: Array.isArray(metrics) ?
      /* istanbul ignore next */
      (cov_7bg4groi9().b[2][0]++, metrics.length) :
      /* istanbul ignore next */
      (cov_7bg4groi9().b[2][1]++, 0)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_7bg4groi9().s[29]++;
    logger.error('Error getting metrics history:', error);
    /* istanbul ignore next */
    cov_7bg4groi9().s[30]++;
    res.status(500).json({
      error: 'Failed to get metrics history'
    });
  }
});
// Get cache statistics
/* istanbul ignore next */
cov_7bg4groi9().s[31]++;
router.get('/cache/stats', async (req, res) => {
  /* istanbul ignore next */
  cov_7bg4groi9().f[3]++;
  cov_7bg4groi9().s[32]++;
  try {
    const stats =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[33]++, await (0, redis_1.getCacheStats)());
    /* istanbul ignore next */
    cov_7bg4groi9().s[34]++;
    res.json(stats);
  } catch (error) {
    /* istanbul ignore next */
    cov_7bg4groi9().s[35]++;
    logger.error('Error getting cache stats:', error);
    /* istanbul ignore next */
    cov_7bg4groi9().s[36]++;
    res.status(500).json({
      error: 'Failed to get cache statistics'
    });
  }
});
// Get alert configuration
/* istanbul ignore next */
cov_7bg4groi9().s[37]++;
router.get('/alerts/config', async (req, res) => {
  /* istanbul ignore next */
  cov_7bg4groi9().f[4]++;
  cov_7bg4groi9().s[38]++;
  try {
    const config =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[39]++, monitoringService_1.monitoringService.getAlertConfig());
    /* istanbul ignore next */
    cov_7bg4groi9().s[40]++;
    res.json(config);
  } catch (error) {
    /* istanbul ignore next */
    cov_7bg4groi9().s[41]++;
    logger.error('Error getting alert config:', error);
    /* istanbul ignore next */
    cov_7bg4groi9().s[42]++;
    res.status(500).json({
      error: 'Failed to get alert configuration'
    });
  }
});
// Update alert configuration
/* istanbul ignore next */
cov_7bg4groi9().s[43]++;
router.put('/alerts/config', async (req, res) => {
  /* istanbul ignore next */
  cov_7bg4groi9().f[5]++;
  cov_7bg4groi9().s[44]++;
  try {
    const {
      memoryThreshold,
      cpuThreshold,
      responseTimeThreshold,
      errorRateThreshold,
      connectionThreshold
    } =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[45]++, req.body);
    const config =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[46]++, {
      ...(
      /* istanbul ignore next */
      (cov_7bg4groi9().b[3][0]++, memoryThreshold !== undefined) &&
      /* istanbul ignore next */
      (cov_7bg4groi9().b[3][1]++, {
        memoryThreshold
      })),
      ...(
      /* istanbul ignore next */
      (cov_7bg4groi9().b[4][0]++, cpuThreshold !== undefined) &&
      /* istanbul ignore next */
      (cov_7bg4groi9().b[4][1]++, {
        cpuThreshold
      })),
      ...(
      /* istanbul ignore next */
      (cov_7bg4groi9().b[5][0]++, responseTimeThreshold !== undefined) &&
      /* istanbul ignore next */
      (cov_7bg4groi9().b[5][1]++, {
        responseTimeThreshold
      })),
      ...(
      /* istanbul ignore next */
      (cov_7bg4groi9().b[6][0]++, errorRateThreshold !== undefined) &&
      /* istanbul ignore next */
      (cov_7bg4groi9().b[6][1]++, {
        errorRateThreshold
      })),
      ...(
      /* istanbul ignore next */
      (cov_7bg4groi9().b[7][0]++, connectionThreshold !== undefined) &&
      /* istanbul ignore next */
      (cov_7bg4groi9().b[7][1]++, {
        connectionThreshold
      }))
    });
    /* istanbul ignore next */
    cov_7bg4groi9().s[47]++;
    monitoringService_1.monitoringService.updateAlertConfig(config);
    /* istanbul ignore next */
    cov_7bg4groi9().s[48]++;
    logger.info('Alert configuration updated:', config);
    /* istanbul ignore next */
    cov_7bg4groi9().s[49]++;
    res.json({
      message: 'Alert configuration updated successfully',
      config
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_7bg4groi9().s[50]++;
    logger.error('Error updating alert config:', error);
    /* istanbul ignore next */
    cov_7bg4groi9().s[51]++;
    res.status(500).json({
      error: 'Failed to update alert configuration'
    });
  }
});
// Get system performance summary
/* istanbul ignore next */
cov_7bg4groi9().s[52]++;
router.get('/performance', async (req, res) => {
  /* istanbul ignore next */
  cov_7bg4groi9().f[6]++;
  cov_7bg4groi9().s[53]++;
  try {
    const metrics =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[54]++, monitoringService_1.monitoringService.getMetrics());
    const latest =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[55]++, monitoringService_1.monitoringService.getLatestMetrics());
    /* istanbul ignore next */
    cov_7bg4groi9().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_7bg4groi9().b[9][0]++, !latest) ||
    /* istanbul ignore next */
    (cov_7bg4groi9().b[9][1]++, !Array.isArray(metrics)) ||
    /* istanbul ignore next */
    (cov_7bg4groi9().b[9][2]++, metrics.length === 0)) {
      /* istanbul ignore next */
      cov_7bg4groi9().b[8][0]++;
      cov_7bg4groi9().s[57]++;
      return res.json({
        status: 'no_data',
        message: 'No performance data available'
      });
    } else
    /* istanbul ignore next */
    {
      cov_7bg4groi9().b[8][1]++;
    }
    // Calculate averages
    const avgMemory =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[58]++, Array.isArray(metrics) ?
    /* istanbul ignore next */
    (cov_7bg4groi9().b[10][0]++, metrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_7bg4groi9().f[7]++;
      cov_7bg4groi9().s[59]++;
      return sum + (
      /* istanbul ignore next */
      (cov_7bg4groi9().b[11][0]++, m.memory?.percentage) ||
      /* istanbul ignore next */
      (cov_7bg4groi9().b[11][1]++, 0));
    }, 0) / metrics.length) :
    /* istanbul ignore next */
    (cov_7bg4groi9().b[10][1]++, 0));
    const avgCpu =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[60]++, Array.isArray(metrics) ?
    /* istanbul ignore next */
    (cov_7bg4groi9().b[12][0]++, metrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_7bg4groi9().f[8]++;
      cov_7bg4groi9().s[61]++;
      return sum + (
      /* istanbul ignore next */
      (cov_7bg4groi9().b[13][0]++, m.cpu?.usage) ||
      /* istanbul ignore next */
      (cov_7bg4groi9().b[13][1]++, 0));
    }, 0) / metrics.length) :
    /* istanbul ignore next */
    (cov_7bg4groi9().b[12][1]++, 0));
    const avgResponseTime =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[62]++, Array.isArray(metrics) ?
    /* istanbul ignore next */
    (cov_7bg4groi9().b[14][0]++, metrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_7bg4groi9().f[9]++;
      cov_7bg4groi9().s[63]++;
      return sum + (
      /* istanbul ignore next */
      (cov_7bg4groi9().b[15][0]++, m.api?.averageResponseTime) ||
      /* istanbul ignore next */
      (cov_7bg4groi9().b[15][1]++, 0));
    }, 0) / metrics.length) :
    /* istanbul ignore next */
    (cov_7bg4groi9().b[14][1]++, 0));
    // Calculate trends (comparing first half vs second half)
    const metricsArray =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[64]++, Array.isArray(metrics) ?
    /* istanbul ignore next */
    (cov_7bg4groi9().b[16][0]++, metrics) :
    /* istanbul ignore next */
    (cov_7bg4groi9().b[16][1]++, []));
    const midPoint =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[65]++, Math.floor(metricsArray.length / 2));
    const firstHalf =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[66]++, metricsArray.slice(0, midPoint));
    const secondHalf =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[67]++, metricsArray.slice(midPoint));
    const firstHalfAvgMemory =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[68]++, firstHalf.length > 0 ?
    /* istanbul ignore next */
    (cov_7bg4groi9().b[17][0]++, firstHalf.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_7bg4groi9().f[10]++;
      cov_7bg4groi9().s[69]++;
      return sum + (
      /* istanbul ignore next */
      (cov_7bg4groi9().b[18][0]++, m.memory?.percentage) ||
      /* istanbul ignore next */
      (cov_7bg4groi9().b[18][1]++, 0));
    }, 0) / firstHalf.length) :
    /* istanbul ignore next */
    (cov_7bg4groi9().b[17][1]++, 0));
    const secondHalfAvgMemory =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[70]++, secondHalf.length > 0 ?
    /* istanbul ignore next */
    (cov_7bg4groi9().b[19][0]++, secondHalf.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_7bg4groi9().f[11]++;
      cov_7bg4groi9().s[71]++;
      return sum + (
      /* istanbul ignore next */
      (cov_7bg4groi9().b[20][0]++, m.memory?.percentage) ||
      /* istanbul ignore next */
      (cov_7bg4groi9().b[20][1]++, 0));
    }, 0) / secondHalf.length) :
    /* istanbul ignore next */
    (cov_7bg4groi9().b[19][1]++, 0));
    const memoryTrend =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[72]++, secondHalfAvgMemory > firstHalfAvgMemory ?
    /* istanbul ignore next */
    (cov_7bg4groi9().b[21][0]++, 'increasing') :
    /* istanbul ignore next */
    (cov_7bg4groi9().b[21][1]++, secondHalfAvgMemory < firstHalfAvgMemory ?
    /* istanbul ignore next */
    (cov_7bg4groi9().b[22][0]++, 'decreasing') :
    /* istanbul ignore next */
    (cov_7bg4groi9().b[22][1]++, 'stable')));
    /* istanbul ignore next */
    cov_7bg4groi9().s[73]++;
    res.json({
      current: {
        memory:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[23][0]++, latest?.memory?.percentage) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[23][1]++, 0),
        cpu:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[24][0]++, latest?.cpu?.usage) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[24][1]++, 0),
        responseTime:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[25][0]++, latest?.api?.averageResponseTime) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[25][1]++, 0),
        errorRate:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[26][0]++, latest?.api?.errorRate) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[26][1]++, 0),
        databaseConnections:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[27][0]++, latest?.database?.connections) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[27][1]++, 0)
      },
      averages: {
        memory: Math.round(avgMemory * 100) / 100,
        cpu: Math.round(avgCpu * 100) / 100,
        responseTime: Math.round(avgResponseTime * 100) / 100
      },
      trends: {
        memory: memoryTrend
      },
      dataPoints: Array.isArray(metrics) ?
      /* istanbul ignore next */
      (cov_7bg4groi9().b[28][0]++, metrics.length) :
      /* istanbul ignore next */
      (cov_7bg4groi9().b[28][1]++, 0),
      timeRange: {
        start:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[30][0]++, Array.isArray(metrics)) &&
        /* istanbul ignore next */
        (cov_7bg4groi9().b[30][1]++, metrics.length > 0) ?
        /* istanbul ignore next */
        (cov_7bg4groi9().b[29][0]++, metrics[0]?.timestamp) :
        /* istanbul ignore next */
        (cov_7bg4groi9().b[29][1]++, new Date()),
        end:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[31][0]++, latest?.timestamp) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[31][1]++, new Date())
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_7bg4groi9().s[74]++;
    logger.error('Error getting performance summary:', error);
    /* istanbul ignore next */
    cov_7bg4groi9().s[75]++;
    res.status(500).json({
      error: 'Failed to get performance summary'
    });
  }
});
// Get system resource usage
/* istanbul ignore next */
cov_7bg4groi9().s[76]++;
router.get('/resources', async (req, res) => {
  /* istanbul ignore next */
  cov_7bg4groi9().f[12]++;
  cov_7bg4groi9().s[77]++;
  try {
    const latest =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[78]++, monitoringService_1.monitoringService.getLatestMetrics());
    /* istanbul ignore next */
    cov_7bg4groi9().s[79]++;
    if (!latest) {
      /* istanbul ignore next */
      cov_7bg4groi9().b[32][0]++;
      cov_7bg4groi9().s[80]++;
      return res.status(404).json({
        error: 'No metrics data available'
      });
    } else
    /* istanbul ignore next */
    {
      cov_7bg4groi9().b[32][1]++;
    }
    cov_7bg4groi9().s[81]++;
    res.json({
      memory: {
        used:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[33][0]++, latest?.memory?.used) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[33][1]++, 0),
        free:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[34][0]++, latest?.memory?.free) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[34][1]++, 0),
        total:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[35][0]++, latest?.memory?.total) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[35][1]++, 0),
        percentage:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[36][0]++, latest?.memory?.percentage) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[36][1]++, 0),
        unit: 'MB'
      },
      cpu: {
        usage:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[37][0]++, latest?.cpu?.usage) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[37][1]++, 0),
        loadAverage:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[38][0]++, latest?.cpu?.loadAverage) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[38][1]++, 0),
        unit: 'percentage'
      },
      database: {
        connections:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[39][0]++, latest?.database?.connections) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[39][1]++, 0),
        operations:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[40][0]++, latest?.database?.operations) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[40][1]++, 0),
        responseTime:
        /* istanbul ignore next */
        (cov_7bg4groi9().b[41][0]++, latest?.database?.responseTime) ||
        /* istanbul ignore next */
        (cov_7bg4groi9().b[41][1]++, 0),
        unit: 'ms'
      },
      redis:
      /* istanbul ignore next */
      (cov_7bg4groi9().b[42][0]++, latest?.redis) ||
      /* istanbul ignore next */
      (cov_7bg4groi9().b[42][1]++, {}),
      timestamp:
      /* istanbul ignore next */
      (cov_7bg4groi9().b[43][0]++, latest?.timestamp) ||
      /* istanbul ignore next */
      (cov_7bg4groi9().b[43][1]++, new Date())
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_7bg4groi9().s[82]++;
    logger.error('Error getting resource usage:', error);
    /* istanbul ignore next */
    cov_7bg4groi9().s[83]++;
    res.status(500).json({
      error: 'Failed to get resource usage'
    });
  }
});
// Get system alerts history (mock implementation)
/* istanbul ignore next */
cov_7bg4groi9().s[84]++;
router.get('/alerts/history', async (req, res) => {
  /* istanbul ignore next */
  cov_7bg4groi9().f[13]++;
  cov_7bg4groi9().s[85]++;
  try {
    // This would typically come from a database or log aggregation service
    const mockAlerts =
    /* istanbul ignore next */
    (cov_7bg4groi9().s[86]++, [{
      id: '1',
      timestamp: new Date(Date.now() - 3600000).toISOString(),
      severity: 'warning',
      message: 'High memory usage detected',
      resolved: true
    }, {
      id: '2',
      timestamp: new Date(Date.now() - 1800000).toISOString(),
      severity: 'critical',
      message: 'Database connection limit reached',
      resolved: false
    }]);
    /* istanbul ignore next */
    cov_7bg4groi9().s[87]++;
    res.json({
      alerts: mockAlerts,
      count: mockAlerts.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_7bg4groi9().s[88]++;
    logger.error('Error getting alerts history:', error);
    /* istanbul ignore next */
    cov_7bg4groi9().s[89]++;
    res.status(500).json({
      error: 'Failed to get alerts history'
    });
  }
});
/* istanbul ignore next */
cov_7bg4groi9().s[90]++;
exports.default = router;