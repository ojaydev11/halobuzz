4b0a0e6b135debbaa82683bccb727852
"use strict";

/* istanbul ignore next */
function cov_h97tyfu85() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\gdpr.ts";
  var hash = "c8c76c4e7f4637462b5c98c442258a68951a3fbf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\gdpr.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 44
        }
      },
      "6": {
        start: {
          line: 9,
          column: 32
        },
        end: {
          line: 9,
          column: 93
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "8": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 71,
          column: 3
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "10": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 25,
          column: 69
        }
      },
      "11": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "12": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 30,
          column: 15
        }
      },
      "13": {
        start: {
          line: 32,
          column: 58
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "14": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 33,
          column: 39
        }
      },
      "15": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "16": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 38,
          column: 15
        }
      },
      "17": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 79
        }
      },
      "18": {
        start: {
          line: 41,
          column: 26
        },
        end: {
          line: 41,
          column: 57
        }
      },
      "19": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 135
        }
      },
      "20": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "21": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "22": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "23": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "24": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 65
        }
      },
      "25": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "26": {
        start: {
          line: 73,
          column: 0
        },
        end: {
          line: 101,
          column: 3
        }
      },
      "27": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "28": {
        start: {
          line: 75,
          column: 32
        },
        end: {
          line: 75,
          column: 42
        }
      },
      "29": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 76,
          column: 39
        }
      },
      "30": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "31": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "32": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 83,
          column: 94
        }
      },
      "33": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "34": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 64
        }
      },
      "35": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "36": {
        start: {
          line: 103,
          column: 0
        },
        end: {
          line: 156,
          column: 3
        }
      },
      "37": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "38": {
        start: {
          line: 113,
          column: 23
        },
        end: {
          line: 113,
          column: 69
        }
      },
      "39": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "40": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 118,
          column: 15
        }
      },
      "41": {
        start: {
          line: 120,
          column: 87
        },
        end: {
          line: 120,
          column: 95
        }
      },
      "42": {
        start: {
          line: 121,
          column: 23
        },
        end: {
          line: 121,
          column: 39
        }
      },
      "43": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "44": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "45": {
        start: {
          line: 128,
          column: 23
        },
        end: {
          line: 128,
          column: 97
        }
      },
      "46": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "47": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 133,
          column: 15
        }
      },
      "48": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "49": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "50": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 70
        }
      },
      "51": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "52": {
        start: {
          line: 158,
          column: 0
        },
        end: {
          line: 192,
          column: 3
        }
      },
      "53": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "54": {
        start: {
          line: 160,
          column: 30
        },
        end: {
          line: 160,
          column: 40
        }
      },
      "55": {
        start: {
          line: 161,
          column: 23
        },
        end: {
          line: 161,
          column: 39
        }
      },
      "56": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "57": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "58": {
        start: {
          line: 169,
          column: 27
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "59": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "60": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 69
        }
      },
      "61": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 190,
          column: 11
        }
      },
      "62": {
        start: {
          line: 194,
          column: 0
        },
        end: {
          line: 247,
          column: 3
        }
      },
      "63": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "64": {
        start: {
          line: 204,
          column: 23
        },
        end: {
          line: 204,
          column: 69
        }
      },
      "65": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "66": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 209,
          column: 15
        }
      },
      "67": {
        start: {
          line: 211,
          column: 76
        },
        end: {
          line: 211,
          column: 84
        }
      },
      "68": {
        start: {
          line: 212,
          column: 23
        },
        end: {
          line: 212,
          column: 39
        }
      },
      "69": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "70": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 217,
          column: 15
        }
      },
      "71": {
        start: {
          line: 219,
          column: 23
        },
        end: {
          line: 219,
          column: 103
        }
      },
      "72": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "73": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 224,
          column: 15
        }
      },
      "74": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 229,
          column: 11
        }
      },
      "75": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "76": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 72
        }
      },
      "77": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 245,
          column: 11
        }
      },
      "78": {
        start: {
          line: 249,
          column: 0
        },
        end: {
          line: 281,
          column: 3
        }
      },
      "79": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "80": {
        start: {
          line: 251,
          column: 30
        },
        end: {
          line: 251,
          column: 40
        }
      },
      "81": {
        start: {
          line: 252,
          column: 23
        },
        end: {
          line: 252,
          column: 39
        }
      },
      "82": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "83": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 257,
          column: 15
        }
      },
      "84": {
        start: {
          line: 260,
          column: 29
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "85": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 272,
          column: 11
        }
      },
      "86": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 71
        }
      },
      "87": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 279,
          column: 11
        }
      },
      "88": {
        start: {
          line: 283,
          column: 0
        },
        end: {
          line: 311,
          column: 3
        }
      },
      "89": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "90": {
        start: {
          line: 285,
          column: 23
        },
        end: {
          line: 285,
          column: 39
        }
      },
      "91": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "92": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 290,
          column: 15
        }
      },
      "93": {
        start: {
          line: 292,
          column: 25
        },
        end: {
          line: 292,
          column: 89
        }
      },
      "94": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "95": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 297,
          column: 15
        }
      },
      "96": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 302,
          column: 11
        }
      },
      "97": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 72
        }
      },
      "98": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 309,
          column: 11
        }
      },
      "99": {
        start: {
          line: 313,
          column: 0
        },
        end: {
          line: 364,
          column: 3
        }
      },
      "100": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 363,
          column: 5
        }
      },
      "101": {
        start: {
          line: 328,
          column: 23
        },
        end: {
          line: 328,
          column: 69
        }
      },
      "102": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "103": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 333,
          column: 15
        }
      },
      "104": {
        start: {
          line: 335,
          column: 23
        },
        end: {
          line: 335,
          column: 39
        }
      },
      "105": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "106": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 340,
          column: 15
        }
      },
      "107": {
        start: {
          line: 342,
          column: 62
        },
        end: {
          line: 342,
          column: 70
        }
      },
      "108": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 351,
          column: 9
        }
      },
      "109": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 347,
          column: 13
        }
      },
      "110": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 346,
          column: 171
        }
      },
      "111": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 350,
          column: 13
        }
      },
      "112": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 349,
          column: 171
        }
      },
      "113": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 355,
          column: 11
        }
      },
      "114": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 73
        }
      },
      "115": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 362,
          column: 11
        }
      },
      "116": {
        start: {
          line: 366,
          column: 0
        },
        end: {
          line: 389,
          column: 3
        }
      },
      "117": {
        start: {
          line: 367,
          column: 4
        },
        end: {
          line: 388,
          column: 5
        }
      },
      "118": {
        start: {
          line: 368,
          column: 23
        },
        end: {
          line: 368,
          column: 39
        }
      },
      "119": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "120": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 373,
          column: 15
        }
      },
      "121": {
        start: {
          line: 376,
          column: 22
        },
        end: {
          line: 376,
          column: 85
        }
      },
      "122": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 380,
          column: 11
        }
      },
      "123": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 77
        }
      },
      "124": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 387,
          column: 11
        }
      },
      "125": {
        start: {
          line: 390,
          column: 0
        },
        end: {
          line: 390,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 3
          },
          end: {
            line: 23,
            column: 4
          }
        },
        loc: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 73,
            column: 36
          },
          end: {
            line: 73,
            column: 37
          }
        },
        loc: {
          start: {
            line: 73,
            column: 56
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 73
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 111,
            column: 3
          },
          end: {
            line: 111,
            column: 4
          }
        },
        loc: {
          start: {
            line: 111,
            column: 23
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 111
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 158,
            column: 33
          },
          end: {
            line: 158,
            column: 34
          }
        },
        loc: {
          start: {
            line: 158,
            column: 53
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 158
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 202,
            column: 3
          },
          end: {
            line: 202,
            column: 4
          }
        },
        loc: {
          start: {
            line: 202,
            column: 23
          },
          end: {
            line: 247,
            column: 1
          }
        },
        line: 202
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 249,
            column: 33
          },
          end: {
            line: 249,
            column: 34
          }
        },
        loc: {
          start: {
            line: 249,
            column: 53
          },
          end: {
            line: 281,
            column: 1
          }
        },
        line: 249
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 283,
            column: 32
          },
          end: {
            line: 283,
            column: 33
          }
        },
        loc: {
          start: {
            line: 283,
            column: 52
          },
          end: {
            line: 311,
            column: 1
          }
        },
        line: 283
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 326,
            column: 3
          },
          end: {
            line: 326,
            column: 4
          }
        },
        loc: {
          start: {
            line: 326,
            column: 23
          },
          end: {
            line: 364,
            column: 1
          }
        },
        line: 326
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 366,
            column: 26
          },
          end: {
            line: 366,
            column: 27
          }
        },
        loc: {
          start: {
            line: 366,
            column: 46
          },
          end: {
            line: 389,
            column: 1
          }
        },
        line: 366
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 38
          },
          end: {
            line: 32,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 53
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 26
          },
          end: {
            line: 40,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 26
          },
          end: {
            line: 40,
            column: 32
          }
        }, {
          start: {
            line: 40,
            column: 36
          },
          end: {
            line: 40,
            column: 64
          }
        }, {
          start: {
            line: 40,
            column: 68
          },
          end: {
            line: 40,
            column: 79
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 51
          }
        }, {
          start: {
            line: 41,
            column: 55
          },
          end: {
            line: 41,
            column: 57
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "9": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "10": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "11": {
        loc: {
          start: {
            line: 120,
            column: 16
          },
          end: {
            line: 120,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 120,
            column: 28
          },
          end: {
            line: 120,
            column: 82
          }
        }],
        line: 120
      },
      "12": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "13": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "14": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "15": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "16": {
        loc: {
          start: {
            line: 211,
            column: 16
          },
          end: {
            line: 211,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 211,
            column: 32
          },
          end: {
            line: 211,
            column: 71
          }
        }],
        line: 211
      },
      "17": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "18": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "19": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "20": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "21": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "22": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "23": {
        loc: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "24": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 351,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 351,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "25": {
        loc: {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 347,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 347,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "26": {
        loc: {
          start: {
            line: 346,
            column: 115
          },
          end: {
            line: 346,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 115
          },
          end: {
            line: 346,
            column: 121
          }
        }, {
          start: {
            line: 346,
            column: 125
          },
          end: {
            line: 346,
            column: 136
          }
        }],
        line: 346
      },
      "27": {
        loc: {
          start: {
            line: 346,
            column: 138
          },
          end: {
            line: 346,
            column: 169
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 138
          },
          end: {
            line: 346,
            column: 163
          }
        }, {
          start: {
            line: 346,
            column: 167
          },
          end: {
            line: 346,
            column: 169
          }
        }],
        line: 346
      },
      "28": {
        loc: {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 350,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 350,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "29": {
        loc: {
          start: {
            line: 349,
            column: 115
          },
          end: {
            line: 349,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 115
          },
          end: {
            line: 349,
            column: 121
          }
        }, {
          start: {
            line: 349,
            column: 125
          },
          end: {
            line: 349,
            column: 136
          }
        }],
        line: 349
      },
      "30": {
        loc: {
          start: {
            line: 349,
            column: 138
          },
          end: {
            line: 349,
            column: 169
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 138
          },
          end: {
            line: 349,
            column: 163
          }
        }, {
          start: {
            line: 349,
            column: 167
          },
          end: {
            line: 349,
            column: 169
          }
        }],
        line: 349
      },
      "31": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c8c76c4e7f4637462b5c98c442258a68951a3fbf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_h97tyfu85 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_h97tyfu85();
var __importDefault =
/* istanbul ignore next */
(cov_h97tyfu85().s[0]++,
/* istanbul ignore next */
(cov_h97tyfu85().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_h97tyfu85().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_h97tyfu85().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_h97tyfu85().f[0]++;
  cov_h97tyfu85().s[1]++;
  return /* istanbul ignore next */(cov_h97tyfu85().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_h97tyfu85().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_h97tyfu85().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_h97tyfu85().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_h97tyfu85().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_h97tyfu85().s[3]++, __importDefault(require("express")));
const express_validator_1 =
/* istanbul ignore next */
(cov_h97tyfu85().s[4]++, require("express-validator"));
const logger_1 =
/* istanbul ignore next */
(cov_h97tyfu85().s[5]++, require("../config/logger"));
const GDPRComplianceService_1 =
/* istanbul ignore next */
(cov_h97tyfu85().s[6]++, __importDefault(require("../services/GDPRComplianceService")));
const router =
/* istanbul ignore next */
(cov_h97tyfu85().s[7]++, express_1.default.Router());
// Record user consent
/* istanbul ignore next */
cov_h97tyfu85().s[8]++;
router.post('/consent', [(0, express_validator_1.body)('consentType').isIn(['marketing', 'analytics', 'cookies', 'data_processing', 'third_party']).withMessage('Valid consent type is required'), (0, express_validator_1.body)('granted').isBoolean().withMessage('Granted status is required'), (0, express_validator_1.body)('version').optional().isString().withMessage('Version must be a string')], async (req, res) => {
  /* istanbul ignore next */
  cov_h97tyfu85().f[1]++;
  cov_h97tyfu85().s[9]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[10]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_h97tyfu85().s[11]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[3][0]++;
      cov_h97tyfu85().s[12]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[3][1]++;
    }
    const {
      consentType,
      granted,
      version =
      /* istanbul ignore next */
      (cov_h97tyfu85().b[4][0]++, '1.0')
    } =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[13]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[14]++, req.user?.userId);
    /* istanbul ignore next */
    cov_h97tyfu85().s[15]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[5][0]++;
      cov_h97tyfu85().s[16]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[5][1]++;
    }
    const ipAddress =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[17]++,
    /* istanbul ignore next */
    (cov_h97tyfu85().b[6][0]++, req.ip) ||
    /* istanbul ignore next */
    (cov_h97tyfu85().b[6][1]++, req.connection.remoteAddress) ||
    /* istanbul ignore next */
    (cov_h97tyfu85().b[6][2]++, '127.0.0.1'));
    const userAgent =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[18]++,
    /* istanbul ignore next */
    (cov_h97tyfu85().b[7][0]++, req.headers['user-agent']) ||
    /* istanbul ignore next */
    (cov_h97tyfu85().b[7][1]++, ''));
    const result =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[19]++, await GDPRComplianceService_1.default.recordConsent(userId, consentType, granted, ipAddress, userAgent, version));
    /* istanbul ignore next */
    cov_h97tyfu85().s[20]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[8][0]++;
      cov_h97tyfu85().s[21]++;
      return res.status(400).json({
        success: false,
        error: result.error
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[8][1]++;
    }
    cov_h97tyfu85().s[22]++;
    logger_1.logger.info(`Consent recorded: ${result.consentId}`, {
      userId,
      consentType,
      granted
    });
    /* istanbul ignore next */
    cov_h97tyfu85().s[23]++;
    res.json({
      success: true,
      data: {
        consentId: result.consentId,
        consentType,
        granted,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_h97tyfu85().s[24]++;
    logger_1.logger.error('Error recording consent:', error);
    /* istanbul ignore next */
    cov_h97tyfu85().s[25]++;
    res.status(500).json({
      success: false,
      error: 'Failed to record consent'
    });
  }
});
// Check user consent
/* istanbul ignore next */
cov_h97tyfu85().s[26]++;
router.get('/consent/:consentType', async (req, res) => {
  /* istanbul ignore next */
  cov_h97tyfu85().f[2]++;
  cov_h97tyfu85().s[27]++;
  try {
    const {
      consentType
    } =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[28]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[29]++, req.user?.userId);
    /* istanbul ignore next */
    cov_h97tyfu85().s[30]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[9][0]++;
      cov_h97tyfu85().s[31]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[9][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[32]++, await GDPRComplianceService_1.default.checkConsent(userId, consentType));
    /* istanbul ignore next */
    cov_h97tyfu85().s[33]++;
    res.json({
      success: true,
      data: {
        consentType,
        granted: result.granted,
        expiresAt: result.expiresAt,
        consent: result.consent
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_h97tyfu85().s[34]++;
    logger_1.logger.error('Error checking consent:', error);
    /* istanbul ignore next */
    cov_h97tyfu85().s[35]++;
    res.status(500).json({
      success: false,
      error: 'Failed to check consent'
    });
  }
});
// Request data export
/* istanbul ignore next */
cov_h97tyfu85().s[36]++;
router.post('/export', [(0, express_validator_1.body)('dataTypes').optional().isArray().withMessage('Data types must be an array'), (0, express_validator_1.body)('dataTypes.*').isIn(['profile', 'transactions', 'activity', 'preferences']).withMessage('Invalid data type')], async (req, res) => {
  /* istanbul ignore next */
  cov_h97tyfu85().f[3]++;
  cov_h97tyfu85().s[37]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[38]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_h97tyfu85().s[39]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[10][0]++;
      cov_h97tyfu85().s[40]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[10][1]++;
    }
    const {
      dataTypes =
      /* istanbul ignore next */
      (cov_h97tyfu85().b[11][0]++, ['profile', 'transactions', 'activity', 'preferences'])
    } =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[41]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[42]++, req.user?.userId);
    /* istanbul ignore next */
    cov_h97tyfu85().s[43]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[12][0]++;
      cov_h97tyfu85().s[44]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[12][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[45]++, await GDPRComplianceService_1.default.requestDataExport(userId, dataTypes));
    /* istanbul ignore next */
    cov_h97tyfu85().s[46]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[13][0]++;
      cov_h97tyfu85().s[47]++;
      return res.status(400).json({
        success: false,
        error: result.error
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[13][1]++;
    }
    cov_h97tyfu85().s[48]++;
    logger_1.logger.info(`Data export requested: ${result.requestId}`, {
      userId,
      dataTypes
    });
    /* istanbul ignore next */
    cov_h97tyfu85().s[49]++;
    res.json({
      success: true,
      data: {
        requestId: result.requestId,
        estimatedTime: result.estimatedTime,
        dataTypes,
        requestedAt: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_h97tyfu85().s[50]++;
    logger_1.logger.error('Error requesting data export:', error);
    /* istanbul ignore next */
    cov_h97tyfu85().s[51]++;
    res.status(500).json({
      success: false,
      error: 'Failed to request data export'
    });
  }
});
// Get data export status
/* istanbul ignore next */
cov_h97tyfu85().s[52]++;
router.get('/export/:requestId', async (req, res) => {
  /* istanbul ignore next */
  cov_h97tyfu85().f[4]++;
  cov_h97tyfu85().s[53]++;
  try {
    const {
      requestId
    } =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[54]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[55]++, req.user?.userId);
    /* istanbul ignore next */
    cov_h97tyfu85().s[56]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[14][0]++;
      cov_h97tyfu85().s[57]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[14][1]++;
    }
    // In production, this would fetch from database
    const exportData =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[58]++, {
      requestId,
      userId,
      status: 'completed',
      requestedAt: new Date(Date.now() - 24 * 60 * 60 * 1000),
      // 1 day ago
      completedAt: new Date(),
      downloadUrl: `https://api.halobuzz.com/exports/${requestId}.json`,
      expiresAt: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000),
      // 6 days from now
      dataTypes: ['profile', 'transactions', 'activity', 'preferences'],
      fileSize: 1024000 // 1MB
    });
    /* istanbul ignore next */
    cov_h97tyfu85().s[59]++;
    res.json({
      success: true,
      data: exportData
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_h97tyfu85().s[60]++;
    logger_1.logger.error('Error getting export status:', error);
    /* istanbul ignore next */
    cov_h97tyfu85().s[61]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get export status'
    });
  }
});
// Request data deletion
/* istanbul ignore next */
cov_h97tyfu85().s[62]++;
router.post('/delete', [(0, express_validator_1.body)('deletionTypes').optional().isArray().withMessage('Deletion types must be an array'), (0, express_validator_1.body)('deletionTypes.*').isIn(['profile', 'transactions', 'activity']).withMessage('Invalid deletion type')], async (req, res) => {
  /* istanbul ignore next */
  cov_h97tyfu85().f[5]++;
  cov_h97tyfu85().s[63]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[64]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_h97tyfu85().s[65]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[15][0]++;
      cov_h97tyfu85().s[66]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[15][1]++;
    }
    const {
      deletionTypes =
      /* istanbul ignore next */
      (cov_h97tyfu85().b[16][0]++, ['profile', 'transactions', 'activity'])
    } =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[67]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[68]++, req.user?.userId);
    /* istanbul ignore next */
    cov_h97tyfu85().s[69]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[17][0]++;
      cov_h97tyfu85().s[70]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[17][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[71]++, await GDPRComplianceService_1.default.requestDataDeletion(userId, deletionTypes));
    /* istanbul ignore next */
    cov_h97tyfu85().s[72]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[18][0]++;
      cov_h97tyfu85().s[73]++;
      return res.status(400).json({
        success: false,
        error: result.error
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[18][1]++;
    }
    cov_h97tyfu85().s[74]++;
    logger_1.logger.info(`Data deletion requested: ${result.requestId}`, {
      userId,
      deletionTypes
    });
    /* istanbul ignore next */
    cov_h97tyfu85().s[75]++;
    res.json({
      success: true,
      data: {
        requestId: result.requestId,
        estimatedTime: result.estimatedTime,
        deletionTypes,
        requestedAt: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_h97tyfu85().s[76]++;
    logger_1.logger.error('Error requesting data deletion:', error);
    /* istanbul ignore next */
    cov_h97tyfu85().s[77]++;
    res.status(500).json({
      success: false,
      error: 'Failed to request data deletion'
    });
  }
});
// Get data deletion status
/* istanbul ignore next */
cov_h97tyfu85().s[78]++;
router.get('/delete/:requestId', async (req, res) => {
  /* istanbul ignore next */
  cov_h97tyfu85().f[6]++;
  cov_h97tyfu85().s[79]++;
  try {
    const {
      requestId
    } =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[80]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[81]++, req.user?.userId);
    /* istanbul ignore next */
    cov_h97tyfu85().s[82]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[19][0]++;
      cov_h97tyfu85().s[83]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[19][1]++;
    }
    // In production, this would fetch from database
    const deletionData =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[84]++, {
      requestId,
      userId,
      status: 'completed',
      requestedAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),
      // 7 days ago
      completedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
      // 1 day ago
      deletionTypes: ['profile', 'transactions', 'activity'],
      retentionPeriod: 30
    });
    /* istanbul ignore next */
    cov_h97tyfu85().s[85]++;
    res.json({
      success: true,
      data: deletionData
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_h97tyfu85().s[86]++;
    logger_1.logger.error('Error getting deletion status:', error);
    /* istanbul ignore next */
    cov_h97tyfu85().s[87]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get deletion status'
    });
  }
});
// Get privacy settings
/* istanbul ignore next */
cov_h97tyfu85().s[88]++;
router.get('/privacy-settings', async (req, res) => {
  /* istanbul ignore next */
  cov_h97tyfu85().f[7]++;
  cov_h97tyfu85().s[89]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[90]++, req.user?.userId);
    /* istanbul ignore next */
    cov_h97tyfu85().s[91]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[20][0]++;
      cov_h97tyfu85().s[92]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[20][1]++;
    }
    const settings =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[93]++, await GDPRComplianceService_1.default.getPrivacySettings(userId));
    /* istanbul ignore next */
    cov_h97tyfu85().s[94]++;
    if (!settings) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[21][0]++;
      cov_h97tyfu85().s[95]++;
      return res.status(404).json({
        success: false,
        error: 'Privacy settings not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[21][1]++;
    }
    cov_h97tyfu85().s[96]++;
    res.json({
      success: true,
      data: settings
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_h97tyfu85().s[97]++;
    logger_1.logger.error('Error getting privacy settings:', error);
    /* istanbul ignore next */
    cov_h97tyfu85().s[98]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get privacy settings'
    });
  }
});
// Update privacy settings
/* istanbul ignore next */
cov_h97tyfu85().s[99]++;
router.put('/privacy-settings', [(0, express_validator_1.body)('dataProcessing').optional().isObject().withMessage('Data processing settings must be an object'), (0, express_validator_1.body)('communication').optional().isObject().withMessage('Communication settings must be an object'), (0, express_validator_1.body)('visibility').optional().isObject().withMessage('Visibility settings must be an object')], async (req, res) => {
  /* istanbul ignore next */
  cov_h97tyfu85().f[8]++;
  cov_h97tyfu85().s[100]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[101]++, (0, express_validator_1.validationResult)(req));
    /* istanbul ignore next */
    cov_h97tyfu85().s[102]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[22][0]++;
      cov_h97tyfu85().s[103]++;
      return res.status(400).json({
        success: false,
        errors: errors.array()
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[22][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[104]++, req.user?.userId);
    /* istanbul ignore next */
    cov_h97tyfu85().s[105]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[23][0]++;
      cov_h97tyfu85().s[106]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[23][1]++;
    }
    const {
      dataProcessing,
      communication,
      visibility
    } =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[107]++, req.body);
    // Update privacy settings based on consent
    /* istanbul ignore next */
    cov_h97tyfu85().s[108]++;
    if (dataProcessing) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[24][0]++;
      cov_h97tyfu85().s[109]++;
      if (dataProcessing.marketing !== undefined) {
        /* istanbul ignore next */
        cov_h97tyfu85().b[25][0]++;
        cov_h97tyfu85().s[110]++;
        await GDPRComplianceService_1.default.recordConsent(userId, 'marketing', dataProcessing.marketing,
        /* istanbul ignore next */
        (cov_h97tyfu85().b[26][0]++, req.ip) ||
        /* istanbul ignore next */
        (cov_h97tyfu85().b[26][1]++, '127.0.0.1'),
        /* istanbul ignore next */
        (cov_h97tyfu85().b[27][0]++, req.headers['user-agent']) ||
        /* istanbul ignore next */
        (cov_h97tyfu85().b[27][1]++, ''));
      } else
      /* istanbul ignore next */
      {
        cov_h97tyfu85().b[25][1]++;
      }
      cov_h97tyfu85().s[111]++;
      if (dataProcessing.analytics !== undefined) {
        /* istanbul ignore next */
        cov_h97tyfu85().b[28][0]++;
        cov_h97tyfu85().s[112]++;
        await GDPRComplianceService_1.default.recordConsent(userId, 'analytics', dataProcessing.analytics,
        /* istanbul ignore next */
        (cov_h97tyfu85().b[29][0]++, req.ip) ||
        /* istanbul ignore next */
        (cov_h97tyfu85().b[29][1]++, '127.0.0.1'),
        /* istanbul ignore next */
        (cov_h97tyfu85().b[30][0]++, req.headers['user-agent']) ||
        /* istanbul ignore next */
        (cov_h97tyfu85().b[30][1]++, ''));
      } else
      /* istanbul ignore next */
      {
        cov_h97tyfu85().b[28][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[24][1]++;
    }
    cov_h97tyfu85().s[113]++;
    res.json({
      success: true,
      message: 'Privacy settings updated successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_h97tyfu85().s[114]++;
    logger_1.logger.error('Error updating privacy settings:', error);
    /* istanbul ignore next */
    cov_h97tyfu85().s[115]++;
    res.status(500).json({
      success: false,
      error: 'Failed to update privacy settings'
    });
  }
});
// Get compliance statistics (admin only)
/* istanbul ignore next */
cov_h97tyfu85().s[116]++;
router.get('/statistics', async (req, res) => {
  /* istanbul ignore next */
  cov_h97tyfu85().f[9]++;
  cov_h97tyfu85().s[117]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[118]++, req.user?.userId);
    /* istanbul ignore next */
    cov_h97tyfu85().s[119]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_h97tyfu85().b[31][0]++;
      cov_h97tyfu85().s[120]++;
      return res.status(401).json({
        success: false,
        error: 'User authentication required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_h97tyfu85().b[31][1]++;
    }
    // In production, this would check if user is admin
    const stats =
    /* istanbul ignore next */
    (cov_h97tyfu85().s[121]++, await GDPRComplianceService_1.default.getComplianceStatistics());
    /* istanbul ignore next */
    cov_h97tyfu85().s[122]++;
    res.json({
      success: true,
      data: stats
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_h97tyfu85().s[123]++;
    logger_1.logger.error('Error getting compliance statistics:', error);
    /* istanbul ignore next */
    cov_h97tyfu85().s[124]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get compliance statistics'
    });
  }
});
/* istanbul ignore next */
cov_h97tyfu85().s[125]++;
exports.default = router;