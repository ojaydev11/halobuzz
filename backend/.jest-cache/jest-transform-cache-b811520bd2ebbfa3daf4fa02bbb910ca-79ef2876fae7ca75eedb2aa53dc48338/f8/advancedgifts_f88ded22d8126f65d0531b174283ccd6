dbebfc1dc474d6cb12bc53b27b06bd68
"use strict";

/* istanbul ignore next */
function cov_1p9zkymhzd() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\advanced-gifts.ts";
  var hash = "1401a8fd72d9e3dc71c1f0d4dfa4d3d1735a29d7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\advanced-gifts.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 37
        },
        end: {
          line: 8,
          column: 86
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 44
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "8": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "9": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "10": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "11": {
        start: {
          line: 15,
          column: 25
        },
        end: {
          line: 15,
          column: 112
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 19,
          column: 11
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 26,
          column: 11
        }
      },
      "15": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "16": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "17": {
        start: {
          line: 32,
          column: 25
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "18": {
        start: {
          line: 33,
          column: 61
        },
        end: {
          line: 33,
          column: 69
        }
      },
      "19": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 34,
          column: 146
        }
      },
      "20": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "21": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 69
        }
      },
      "22": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "23": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 70,
          column: 3
        }
      },
      "24": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "25": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 38
        }
      },
      "26": {
        start: {
          line: 52,
          column: 49
        },
        end: {
          line: 52,
          column: 58
        }
      },
      "27": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 57,
          column: 10
        }
      },
      "28": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "29": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 68
        }
      },
      "30": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "31": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 88,
          column: 3
        }
      },
      "32": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "33": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 74,
          column: 38
        }
      },
      "34": {
        start: {
          line: 75,
          column: 26
        },
        end: {
          line: 75,
          column: 105
        }
      },
      "35": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "36": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 70
        }
      },
      "37": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "38": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 105,
          column: 3
        }
      },
      "39": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "40": {
        start: {
          line: 92,
          column: 25
        },
        end: {
          line: 92,
          column: 98
        }
      },
      "41": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 96,
          column: 11
        }
      },
      "42": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 70
        }
      },
      "43": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "44": {
        start: {
          line: 107,
          column: 0
        },
        end: {
          line: 123,
          column: 3
        }
      },
      "45": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "46": {
        start: {
          line: 109,
          column: 62
        },
        end: {
          line: 109,
          column: 70
        }
      },
      "47": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 110,
          column: 144
        }
      },
      "48": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "49": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 70
        }
      },
      "50": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "51": {
        start: {
          line: 125,
          column: 0
        },
        end: {
          line: 141,
          column: 3
        }
      },
      "52": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "53": {
        start: {
          line: 127,
          column: 51
        },
        end: {
          line: 127,
          column: 60
        }
      },
      "54": {
        start: {
          line: 128,
          column: 28
        },
        end: {
          line: 128,
          column: 122
        }
      },
      "55": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 132,
          column: 11
        }
      },
      "56": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 72
        }
      },
      "57": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 139,
          column: 11
        }
      },
      "58": {
        start: {
          line: 143,
          column: 0
        },
        end: {
          line: 160,
          column: 3
        }
      },
      "59": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "60": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 145,
          column: 40
        }
      },
      "61": {
        start: {
          line: 146,
          column: 39
        },
        end: {
          line: 146,
          column: 47
        }
      },
      "62": {
        start: {
          line: 147,
          column: 23
        },
        end: {
          line: 147,
          column: 124
        }
      },
      "63": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 151,
          column: 11
        }
      },
      "64": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 69
        }
      },
      "65": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "66": {
        start: {
          line: 162,
          column: 0
        },
        end: {
          line: 183,
          column: 3
        }
      },
      "67": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 182,
          column: 5
        }
      },
      "68": {
        start: {
          line: 164,
          column: 23
        },
        end: {
          line: 164,
          column: 38
        }
      },
      "69": {
        start: {
          line: 165,
          column: 50
        },
        end: {
          line: 165,
          column: 59
        }
      },
      "70": {
        start: {
          line: 166,
          column: 32
        },
        end: {
          line: 170,
          column: 10
        }
      },
      "71": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 174,
          column: 11
        }
      },
      "72": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 76
        }
      },
      "73": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 181,
          column: 11
        }
      },
      "74": {
        start: {
          line: 184,
          column: 0
        },
        end: {
          line: 184,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 47
          },
          end: {
            line: 12,
            column: 48
          }
        },
        loc: {
          start: {
            line: 12,
            column: 67
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 44
          },
          end: {
            line: 30,
            column: 45
          }
        },
        loc: {
          start: {
            line: 30,
            column: 64
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 49,
            column: 46
          },
          end: {
            line: 49,
            column: 47
          }
        },
        loc: {
          start: {
            line: 49,
            column: 66
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 49
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 72,
            column: 48
          },
          end: {
            line: 72,
            column: 49
          }
        },
        loc: {
          start: {
            line: 72,
            column: 68
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 72
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 90,
            column: 47
          },
          end: {
            line: 90,
            column: 48
          }
        },
        loc: {
          start: {
            line: 90,
            column: 67
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 90
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 107,
            column: 49
          },
          end: {
            line: 107,
            column: 50
          }
        },
        loc: {
          start: {
            line: 107,
            column: 69
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 107
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 125,
            column: 50
          },
          end: {
            line: 125,
            column: 51
          }
        },
        loc: {
          start: {
            line: 125,
            column: 70
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 125
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 143,
            column: 45
          },
          end: {
            line: 143,
            column: 46
          }
        },
        loc: {
          start: {
            line: 143,
            column: 65
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 143
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 162,
            column: 54
          },
          end: {
            line: 162,
            column: 55
          }
        },
        loc: {
          start: {
            line: 162,
            column: 74
          },
          end: {
            line: 183,
            column: 1
          }
        },
        line: 162
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 22
          },
          end: {
            line: 52,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 52,
            column: 30
          },
          end: {
            line: 52,
            column: 32
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 34
          },
          end: {
            line: 52,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 52,
            column: 43
          },
          end: {
            line: 52,
            column: 44
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 127,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 127,
            column: 38
          },
          end: {
            line: 127,
            column: 46
          }
        }],
        line: 127
      },
      "6": {
        loc: {
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 168,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 29
          },
          end: {
            line: 168,
            column: 43
          }
        }, {
          start: {
            line: 168,
            column: 46
          },
          end: {
            line: 168,
            column: 55
          }
        }],
        line: 168
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1401a8fd72d9e3dc71c1f0d4dfa4d3d1735a29d7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1p9zkymhzd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1p9zkymhzd();
var __importDefault =
/* istanbul ignore next */
(cov_1p9zkymhzd().s[0]++,
/* istanbul ignore next */
(cov_1p9zkymhzd().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1p9zkymhzd().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1p9zkymhzd().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1p9zkymhzd().f[0]++;
  cov_1p9zkymhzd().s[1]++;
  return /* istanbul ignore next */(cov_1p9zkymhzd().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1p9zkymhzd().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1p9zkymhzd().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1p9zkymhzd().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1p9zkymhzd().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1p9zkymhzd().s[3]++, __importDefault(require("express")));
const auth_1 =
/* istanbul ignore next */
(cov_1p9zkymhzd().s[4]++, require("../middleware/auth"));
const AdvancedGiftEconomyService_1 =
/* istanbul ignore next */
(cov_1p9zkymhzd().s[5]++, require("../services/AdvancedGiftEconomyService"));
const logger_1 =
/* istanbul ignore next */
(cov_1p9zkymhzd().s[6]++, require("../config/logger"));
const router =
/* istanbul ignore next */
(cov_1p9zkymhzd().s[7]++, express_1.default.Router());
// Get available gift packages
/* istanbul ignore next */
cov_1p9zkymhzd().s[8]++;
router.get('/packages', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_1p9zkymhzd().f[1]++;
  cov_1p9zkymhzd().s[9]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[10]++, req.user.userId);
    const packages =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[11]++, await AdvancedGiftEconomyService_1.advancedGiftEconomy.getAvailableGiftPackages(userId));
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[12]++;
    res.json({
      success: true,
      data: packages
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[13]++;
    logger_1.logger.error('Error getting gift packages:', error);
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[14]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get gift packages'
    });
  }
});
// Send advanced gift
/* istanbul ignore next */
cov_1p9zkymhzd().s[15]++;
router.post('/send', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_1p9zkymhzd().f[2]++;
  cov_1p9zkymhzd().s[16]++;
  try {
    const senderId =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[17]++, req.user.userId);
    const {
      recipientId,
      giftId,
      multiplier,
      message
    } =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[18]++, req.body);
    const result =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[19]++, await AdvancedGiftEconomyService_1.advancedGiftEconomy.sendAdvancedGift(senderId, recipientId, giftId, multiplier, message));
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[20]++;
    res.json({
      success: true,
      data: result
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[21]++;
    logger_1.logger.error('Error sending advanced gift:', error);
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[22]++;
    res.status(500).json({
      success: false,
      error: 'Failed to send gift'
    });
  }
});
// Get gift history
/* istanbul ignore next */
cov_1p9zkymhzd().s[23]++;
router.get('/history', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_1p9zkymhzd().f[3]++;
  cov_1p9zkymhzd().s[24]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[25]++, req.user.userId);
    const {
      type,
      limit =
      /* istanbul ignore next */
      (cov_1p9zkymhzd().b[3][0]++, 50),
      offset =
      /* istanbul ignore next */
      (cov_1p9zkymhzd().b[4][0]++, 0)
    } =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[26]++, req.query);
    const history =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[27]++, await AdvancedGiftEconomyService_1.advancedGiftEconomy.getGiftHistory(userId, {
      type: type,
      limit: Number(limit),
      offset: Number(offset)
    }));
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[28]++;
    res.json({
      success: true,
      data: history
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[29]++;
    logger_1.logger.error('Error getting gift history:', error);
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[30]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get gift history'
    });
  }
});
// Get gift analytics
/* istanbul ignore next */
cov_1p9zkymhzd().s[31]++;
router.get('/analytics', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_1p9zkymhzd().f[4]++;
  cov_1p9zkymhzd().s[32]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[33]++, req.user.userId);
    const analytics =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[34]++, await AdvancedGiftEconomyService_1.advancedGiftEconomy.getGiftAnalytics(userId));
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[35]++;
    res.json({
      success: true,
      data: analytics
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[36]++;
    logger_1.logger.error('Error getting gift analytics:', error);
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[37]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get analytics'
    });
  }
});
// Get trending gifts
/* istanbul ignore next */
cov_1p9zkymhzd().s[38]++;
router.get('/trending', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_1p9zkymhzd().f[5]++;
  cov_1p9zkymhzd().s[39]++;
  try {
    const trending =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[40]++, await AdvancedGiftEconomyService_1.advancedGiftEconomy.getTrendingGifts());
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[41]++;
    res.json({
      success: true,
      data: trending
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[42]++;
    logger_1.logger.error('Error getting trending gifts:', error);
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[43]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get trending gifts'
    });
  }
});
// Calculate gift value with multipliers
/* istanbul ignore next */
cov_1p9zkymhzd().s[44]++;
router.post('/calculate', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_1p9zkymhzd().f[6]++;
  cov_1p9zkymhzd().s[45]++;
  try {
    const {
      giftId,
      multiplier,
      recipientId,
      senderId
    } =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[46]++, req.body);
    const calculation =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[47]++, await AdvancedGiftEconomyService_1.advancedGiftEconomy.calculateGiftValue(giftId, multiplier, recipientId, senderId));
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[48]++;
    res.json({
      success: true,
      data: calculation
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[49]++;
    logger_1.logger.error('Error calculating gift value:', error);
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[50]++;
    res.status(500).json({
      success: false,
      error: 'Failed to calculate gift value'
    });
  }
});
// Get leaderboard
/* istanbul ignore next */
cov_1p9zkymhzd().s[51]++;
router.get('/leaderboard', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_1p9zkymhzd().f[7]++;
  cov_1p9zkymhzd().s[52]++;
  try {
    const {
      category,
      timeframe =
      /* istanbul ignore next */
      (cov_1p9zkymhzd().b[5][0]++, 'weekly')
    } =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[53]++, req.query);
    const leaderboard =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[54]++, await AdvancedGiftEconomyService_1.advancedGiftEconomy.getGiftLeaderboard(timeframe, category));
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[55]++;
    res.json({
      success: true,
      data: leaderboard
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[56]++;
    logger_1.logger.error('Error getting gift leaderboard:', error);
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[57]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get leaderboard'
    });
  }
});
// Process gift combo
/* istanbul ignore next */
cov_1p9zkymhzd().s[58]++;
router.post('/combo', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_1p9zkymhzd().f[8]++;
  cov_1p9zkymhzd().s[59]++;
  try {
    const senderId =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[60]++, req.user.userId);
    const {
      gifts,
      recipientId
    } =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[61]++, req.body);
    const result =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[62]++, await AdvancedGiftEconomyService_1.advancedGiftEconomy.processGiftCombo(senderId, recipientId, gifts));
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[63]++;
    res.json({
      success: true,
      data: result
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[64]++;
    logger_1.logger.error('Error processing gift combo:', error);
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[65]++;
    res.status(500).json({
      success: false,
      error: 'Failed to process combo'
    });
  }
});
// Get gift recommendations
/* istanbul ignore next */
cov_1p9zkymhzd().s[66]++;
router.get('/recommendations', auth_1.authMiddleware, async (req, res) => {
  /* istanbul ignore next */
  cov_1p9zkymhzd().f[9]++;
  cov_1p9zkymhzd().s[67]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[68]++, req.user.userId);
    const {
      recipientId,
      budget,
      occasion
    } =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[69]++, req.query);
    const recommendations =
    /* istanbul ignore next */
    (cov_1p9zkymhzd().s[70]++, await AdvancedGiftEconomyService_1.advancedGiftEconomy.getGiftRecommendations(userId, {
      recipientId: recipientId,
      budget: budget ?
      /* istanbul ignore next */
      (cov_1p9zkymhzd().b[6][0]++, Number(budget)) :
      /* istanbul ignore next */
      (cov_1p9zkymhzd().b[6][1]++, undefined),
      occasion: occasion
    }));
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[71]++;
    res.json({
      success: true,
      data: recommendations
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[72]++;
    logger_1.logger.error('Error getting gift recommendations:', error);
    /* istanbul ignore next */
    cov_1p9zkymhzd().s[73]++;
    res.status(500).json({
      success: false,
      error: 'Failed to get recommendations'
    });
  }
});
/* istanbul ignore next */
cov_1p9zkymhzd().s[74]++;
exports.default = router;