8409eda044b00d2817c1344ab6ede1bf
"use strict";

/* istanbul ignore next */
function cov_2obxy1k3hn() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\routes\\admin\\economy.ts";
  var hash = "3db9d11e153711d11934c60c6b1e3a5f73cf25ea";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\routes\\admin\\economy.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 26
        },
        end: {
          line: 4,
          column: 65
        }
      },
      "3": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 57
        }
      },
      "4": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 51
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 47
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 47
        }
      },
      "7": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "8": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 51,
          column: 3
        }
      },
      "9": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "10": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 50
        }
      },
      "11": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 53
        }
      },
      "12": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 39
        }
      },
      "13": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "14": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "15": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "16": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 24,
          column: 32
        }
      },
      "17": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 32
        }
      },
      "18": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "19": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "20": {
        start: {
          line: 27,
          column: 38
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "21": {
        start: {
          line: 36,
          column: 22
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "22": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      },
      "23": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 62
        }
      },
      "24": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "25": {
        start: {
          line: 57,
          column: 0
        },
        end: {
          line: 90,
          column: 3
        }
      },
      "26": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "27": {
        start: {
          line: 59,
          column: 21
        },
        end: {
          line: 59,
          column: 50
        }
      },
      "28": {
        start: {
          line: 60,
          column: 22
        },
        end: {
          line: 60,
          column: 53
        }
      },
      "29": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 39
        }
      },
      "30": {
        start: {
          line: 62,
          column: 21
        },
        end: {
          line: 62,
          column: 39
        }
      },
      "31": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 44
        }
      },
      "32": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 65,
          column: 34
        }
      },
      "33": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 34
        }
      },
      "34": {
        start: {
          line: 66,
          column: 33
        },
        end: {
          line: 74,
          column: 10
        }
      },
      "35": {
        start: {
          line: 75,
          column: 22
        },
        end: {
          line: 75,
          column: 46
        }
      },
      "36": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "37": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 57
        }
      },
      "38": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "39": {
        start: {
          line: 96,
          column: 0
        },
        end: {
          line: 129,
          column: 3
        }
      },
      "40": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "41": {
        start: {
          line: 98,
          column: 23
        },
        end: {
          line: 98,
          column: 78
        }
      },
      "42": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "43": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 71
        }
      },
      "44": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "45": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 76
        }
      },
      "46": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 36
        }
      },
      "47": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 28
        }
      },
      "48": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "49": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 120,
          column: 11
        }
      },
      "50": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 60
        }
      },
      "51": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "52": {
        start: {
          line: 135,
          column: 0
        },
        end: {
          line: 173,
          column: 3
        }
      },
      "53": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "54": {
        start: {
          line: 137,
          column: 27
        },
        end: {
          line: 137,
          column: 35
        }
      },
      "55": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "56": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 83
        }
      },
      "57": {
        start: {
          line: 141,
          column: 23
        },
        end: {
          line: 141,
          column: 78
        }
      },
      "58": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "59": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 71
        }
      },
      "60": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "61": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 76
        }
      },
      "62": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 33
        }
      },
      "63": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 74
        }
      },
      "64": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 28
        }
      },
      "65": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "66": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 164,
          column: 11
        }
      },
      "67": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 59
        }
      },
      "68": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "69": {
        start: {
          line: 174,
          column: 0
        },
        end: {
          line: 174,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 90
          },
          end: {
            line: 15,
            column: 91
          }
        },
        loc: {
          start: {
            line: 15,
            column: 110
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 57,
            column: 85
          },
          end: {
            line: 57,
            column: 86
          }
        },
        loc: {
          start: {
            line: 57,
            column: 105
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 57
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 96,
            column: 99
          },
          end: {
            line: 96,
            column: 100
          }
        },
        loc: {
          start: {
            line: 96,
            column: 119
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 96
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 135,
            column: 98
          },
          end: {
            line: 135,
            column: 99
          }
        },
        loc: {
          start: {
            line: 135,
            column: 118
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 135
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 45
          }
        }, {
          start: {
            line: 17,
            column: 49
          },
          end: {
            line: 17,
            column: 50
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 47
          }
        }, {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 53
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 24,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 24,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 26,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 26,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 48,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 46
          },
          end: {
            line: 48,
            column: 59
          }
        }, {
          start: {
            line: 48,
            column: 62
          },
          end: {
            line: 48,
            column: 77
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 21
          },
          end: {
            line: 59,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 21
          },
          end: {
            line: 59,
            column: 45
          }
        }, {
          start: {
            line: 59,
            column: 49
          },
          end: {
            line: 59,
            column: 50
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 22
          },
          end: {
            line: 60,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 22
          },
          end: {
            line: 60,
            column: 47
          }
        }, {
          start: {
            line: 60,
            column: 51
          },
          end: {
            line: 60,
            column: 53
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 65,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 65,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "8": {
        loc: {
          start: {
            line: 87,
            column: 21
          },
          end: {
            line: 87,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 46
          },
          end: {
            line: 87,
            column: 59
          }
        }, {
          start: {
            line: 87,
            column: 62
          },
          end: {
            line: 87,
            column: 77
          }
        }],
        line: 87
      },
      "9": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "10": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "11": {
        loc: {
          start: {
            line: 126,
            column: 21
          },
          end: {
            line: 126,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 46
          },
          end: {
            line: 126,
            column: 59
          }
        }, {
          start: {
            line: 126,
            column: 62
          },
          end: {
            line: 126,
            column: 77
          }
        }],
        line: 126
      },
      "12": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "13": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "14": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "15": {
        loc: {
          start: {
            line: 170,
            column: 21
          },
          end: {
            line: 170,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 46
          },
          end: {
            line: 170,
            column: 59
          }
        }, {
          start: {
            line: 170,
            column: 62
          },
          end: {
            line: 170,
            column: 77
          }
        }],
        line: 170
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3db9d11e153711d11934c60c6b1e3a5f73cf25ea"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2obxy1k3hn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2obxy1k3hn();
cov_2obxy1k3hn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2obxy1k3hn().s[1]++, require("express"));
const CoinTransaction_1 =
/* istanbul ignore next */
(cov_2obxy1k3hn().s[2]++, require("../../models/CoinTransaction"));
const Transaction_1 =
/* istanbul ignore next */
(cov_2obxy1k3hn().s[3]++, require("../../models/Transaction"));
const AuditLog_1 =
/* istanbul ignore next */
(cov_2obxy1k3hn().s[4]++, require("../../models/AuditLog"));
const auth_1 =
/* istanbul ignore next */
(cov_2obxy1k3hn().s[5]++, require("../../middleware/auth"));
const rbac_1 =
/* istanbul ignore next */
(cov_2obxy1k3hn().s[6]++, require("../../middleware/rbac"));
const router =
/* istanbul ignore next */
(cov_2obxy1k3hn().s[7]++, (0, express_1.Router)());
/**
 * GET /api/v1/admin/economy/transactions
 * Get paginated coin transactions
 * Requires: admin:read scope
 */
/* istanbul ignore next */
cov_2obxy1k3hn().s[8]++;
router.get('/transactions', auth_1.requireAuth, (0, rbac_1.requireScope)(['admin:read']), async (req, res) => {
  /* istanbul ignore next */
  cov_2obxy1k3hn().f[0]++;
  cov_2obxy1k3hn().s[9]++;
  try {
    const page =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[10]++,
    /* istanbul ignore next */
    (cov_2obxy1k3hn().b[0][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_2obxy1k3hn().b[0][1]++, 1));
    const limit =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[11]++,
    /* istanbul ignore next */
    (cov_2obxy1k3hn().b[1][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_2obxy1k3hn().b[1][1]++, 20));
    const userId =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[12]++, req.query.userId);
    const type =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[13]++, req.query.type);
    const skip =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[14]++, (page - 1) * limit);
    const query =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[15]++, {});
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[16]++;
    if (userId) {
      /* istanbul ignore next */
      cov_2obxy1k3hn().b[2][0]++;
      cov_2obxy1k3hn().s[17]++;
      query.user = userId;
    } else
    /* istanbul ignore next */
    {
      cov_2obxy1k3hn().b[2][1]++;
    }
    cov_2obxy1k3hn().s[18]++;
    if (type) {
      /* istanbul ignore next */
      cov_2obxy1k3hn().b[3][0]++;
      cov_2obxy1k3hn().s[19]++;
      query.type = type;
    } else
    /* istanbul ignore next */
    {
      cov_2obxy1k3hn().b[3][1]++;
    }
    const [transactions, total] =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[20]++, await Promise.all([CoinTransaction_1.CoinTransaction.find(query).populate('user', 'username avatar').sort('-createdAt').skip(skip).limit(limit).lean(), CoinTransaction_1.CoinTransaction.countDocuments(query)]));
    const pages =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[21]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[22]++;
    res.json({
      data: transactions,
      total,
      page,
      pages
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[23]++;
    console.error('Admin get transactions error:', error);
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[24]++;
    res.status(500).json({
      error: 'Failed to fetch transactions',
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2obxy1k3hn().b[4][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2obxy1k3hn().b[4][1]++, 'Unknown error')
    });
  }
});
/**
 * GET /api/v1/admin/economy/payouts
 * Get paginated payout requests
 * Requires: admin:read scope
 */
/* istanbul ignore next */
cov_2obxy1k3hn().s[25]++;
router.get('/payouts', auth_1.requireAuth, (0, rbac_1.requireScope)(['admin:read']), async (req, res) => {
  /* istanbul ignore next */
  cov_2obxy1k3hn().f[1]++;
  cov_2obxy1k3hn().s[26]++;
  try {
    const page =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[27]++,
    /* istanbul ignore next */
    (cov_2obxy1k3hn().b[5][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_2obxy1k3hn().b[5][1]++, 1));
    const limit =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[28]++,
    /* istanbul ignore next */
    (cov_2obxy1k3hn().b[6][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_2obxy1k3hn().b[6][1]++, 20));
    const status =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[29]++, req.query.status);
    const skip =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[30]++, (page - 1) * limit);
    const query =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[31]++, {
      type: 'withdrawal'
    });
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[32]++;
    if (status) {
      /* istanbul ignore next */
      cov_2obxy1k3hn().b[7][0]++;
      cov_2obxy1k3hn().s[33]++;
      query.status = status;
    } else
    /* istanbul ignore next */
    {
      cov_2obxy1k3hn().b[7][1]++;
    }
    const [payouts, total] =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[34]++, await Promise.all([Transaction_1.Transaction.find(query).populate('user', 'username email avatar').sort('-createdAt').skip(skip).limit(limit).lean(), Transaction_1.Transaction.countDocuments(query)]));
    const pages =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[35]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[36]++;
    res.json({
      data: payouts,
      total,
      page,
      pages
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[37]++;
    console.error('Admin get payouts error:', error);
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[38]++;
    res.status(500).json({
      error: 'Failed to fetch payouts',
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2obxy1k3hn().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2obxy1k3hn().b[8][1]++, 'Unknown error')
    });
  }
});
/**
 * POST /api/v1/admin/economy/payouts/:id/approve
 * Approve a payout request
 * Requires: admin:write scope
 */
/* istanbul ignore next */
cov_2obxy1k3hn().s[39]++;
router.post('/payouts/:id/approve', auth_1.requireAuth, (0, rbac_1.requireScope)(['admin:write']), async (req, res) => {
  /* istanbul ignore next */
  cov_2obxy1k3hn().f[2]++;
  cov_2obxy1k3hn().s[40]++;
  try {
    const payout =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[41]++, await Transaction_1.Transaction.findById(req.params.id));
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[42]++;
    if (!payout) {
      /* istanbul ignore next */
      cov_2obxy1k3hn().b[9][0]++;
      cov_2obxy1k3hn().s[43]++;
      return res.status(404).json({
        error: 'Payout not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2obxy1k3hn().b[9][1]++;
    }
    cov_2obxy1k3hn().s[44]++;
    if (payout.status !== 'pending') {
      /* istanbul ignore next */
      cov_2obxy1k3hn().b[10][0]++;
      cov_2obxy1k3hn().s[45]++;
      return res.status(400).json({
        error: 'Payout is not pending'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2obxy1k3hn().b[10][1]++;
    }
    cov_2obxy1k3hn().s[46]++;
    payout.status = 'completed';
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[47]++;
    await payout.save();
    // Log action
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[48]++;
    await AuditLog_1.AuditLog.create({
      admin: req.user.userId,
      action: 'payout.approve',
      resource: 'transaction',
      resourceId: payout._id,
      details: {
        amount: payout.amount,
        userId: payout.userId
      },
      ip: req.ip,
      userAgent: req.get('user-agent')
    });
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[49]++;
    res.json({
      message: 'Payout approved successfully',
      payout
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[50]++;
    console.error('Admin approve payout error:', error);
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[51]++;
    res.status(500).json({
      error: 'Failed to approve payout',
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2obxy1k3hn().b[11][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2obxy1k3hn().b[11][1]++, 'Unknown error')
    });
  }
});
/**
 * POST /api/v1/admin/economy/payouts/:id/reject
 * Reject a payout request
 * Requires: admin:write scope
 */
/* istanbul ignore next */
cov_2obxy1k3hn().s[52]++;
router.post('/payouts/:id/reject', auth_1.requireAuth, (0, rbac_1.requireScope)(['admin:write']), async (req, res) => {
  /* istanbul ignore next */
  cov_2obxy1k3hn().f[3]++;
  cov_2obxy1k3hn().s[53]++;
  try {
    const {
      reason
    } =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[54]++, req.body);
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[55]++;
    if (!reason) {
      /* istanbul ignore next */
      cov_2obxy1k3hn().b[12][0]++;
      cov_2obxy1k3hn().s[56]++;
      return res.status(400).json({
        error: 'Rejection reason is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2obxy1k3hn().b[12][1]++;
    }
    const payout =
    /* istanbul ignore next */
    (cov_2obxy1k3hn().s[57]++, await Transaction_1.Transaction.findById(req.params.id));
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[58]++;
    if (!payout) {
      /* istanbul ignore next */
      cov_2obxy1k3hn().b[13][0]++;
      cov_2obxy1k3hn().s[59]++;
      return res.status(404).json({
        error: 'Payout not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2obxy1k3hn().b[13][1]++;
    }
    cov_2obxy1k3hn().s[60]++;
    if (payout.status !== 'pending') {
      /* istanbul ignore next */
      cov_2obxy1k3hn().b[14][0]++;
      cov_2obxy1k3hn().s[61]++;
      return res.status(400).json({
        error: 'Payout is not pending'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2obxy1k3hn().b[14][1]++;
    }
    cov_2obxy1k3hn().s[62]++;
    payout.status = 'failed';
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[63]++;
    payout.metadata = {
      ...payout.metadata,
      rejectionReason: reason
    };
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[64]++;
    await payout.save();
    // Log action
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[65]++;
    await AuditLog_1.AuditLog.create({
      admin: req.user.userId,
      action: 'payout.reject',
      resource: 'transaction',
      resourceId: payout._id,
      details: {
        amount: payout.amount,
        userId: payout.userId,
        reason
      },
      ip: req.ip,
      userAgent: req.get('user-agent')
    });
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[66]++;
    res.json({
      message: 'Payout rejected successfully',
      payout
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[67]++;
    console.error('Admin reject payout error:', error);
    /* istanbul ignore next */
    cov_2obxy1k3hn().s[68]++;
    res.status(500).json({
      error: 'Failed to reject payout',
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2obxy1k3hn().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2obxy1k3hn().b[15][1]++, 'Unknown error')
    });
  }
});
/* istanbul ignore next */
cov_2obxy1k3hn().s[69]++;
exports.default = router;