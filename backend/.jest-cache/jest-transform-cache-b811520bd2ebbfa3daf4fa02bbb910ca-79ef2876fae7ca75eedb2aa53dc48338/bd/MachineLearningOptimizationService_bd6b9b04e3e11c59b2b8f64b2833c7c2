2931bb9b54b6543bce2bfafa1ce08f1f
"use strict";

/* istanbul ignore next */
function cov_1v3g9k4d8i() {
  var path = "D:\\halobuzz by cursor\\backend\\src\\services\\MachineLearningOptimizationService.ts";
  var hash = "4cc397534a7f72e170875fdd4a3f06d360e7b01c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\halobuzz by cursor\\backend\\src\\services\\MachineLearningOptimizationService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 97
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "3": {
        start: {
          line: 9,
          column: 13
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "4": {
        start: {
          line: 10,
          column: 14
        },
        end: {
          line: 10,
          column: 23
        }
      },
      "5": {
        start: {
          line: 11,
          column: 13
        },
        end: {
          line: 11,
          column: 22
        }
      },
      "6": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 17
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "10": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "11": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 104
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 59
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "14": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 93
        }
      },
      "15": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "16": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 42,
          column: 15
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 77
        }
      },
      "18": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 26
        }
      },
      "19": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 65
        }
      },
      "20": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 24
        }
      },
      "21": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "22": {
        start: {
          line: 56,
          column: 31
        },
        end: {
          line: 56,
          column: 65
        }
      },
      "23": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "24": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 64
        }
      },
      "25": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "26": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 77
        }
      },
      "27": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 67,
          column: 15
        }
      },
      "28": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "29": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 74,
          column: 19
        }
      },
      "30": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 60
        }
      },
      "31": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 24
        }
      },
      "32": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 65
        }
      },
      "33": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 24
        }
      },
      "34": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "35": {
        start: {
          line: 89,
          column: 31
        },
        end: {
          line: 89,
          column: 65
        }
      },
      "36": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "37": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 28
        }
      },
      "38": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "39": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 28
        }
      },
      "40": {
        start: {
          line: 98,
          column: 39
        },
        end: {
          line: 98,
          column: 102
        }
      },
      "41": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 101,
          column: 13
        }
      },
      "42": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 42
        }
      },
      "43": {
        start: {
          line: 103,
          column: 30
        },
        end: {
          line: 103,
          column: 77
        }
      },
      "44": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 118
        }
      },
      "45": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 105
        }
      },
      "46": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 119,
          column: 15
        }
      },
      "47": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 98
        }
      },
      "48": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 29
        }
      },
      "49": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 73
        }
      },
      "50": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 24
        }
      },
      "51": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "52": {
        start: {
          line: 133,
          column: 30
        },
        end: {
          line: 133,
          column: 93
        }
      },
      "53": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "54": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 23
        }
      },
      "55": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 108
        }
      },
      "56": {
        start: {
          line: 140,
          column: 32
        },
        end: {
          line: 140,
          column: 113
        }
      },
      "57": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 141,
          column: 70
        }
      },
      "58": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 69
        }
      },
      "59": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 119
        }
      },
      "60": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "61": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 111
        }
      },
      "62": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 68
        }
      },
      "63": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "64": {
        start: {
          line: 168,
          column: 31
        },
        end: {
          line: 168,
          column: 65
        }
      },
      "65": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "66": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 28
        }
      },
      "67": {
        start: {
          line: 172,
          column: 35
        },
        end: {
          line: 172,
          column: 37
        }
      },
      "68": {
        start: {
          line: 173,
          column: 36
        },
        end: {
          line: 173,
          column: 37
        }
      },
      "69": {
        start: {
          line: 174,
          column: 35
        },
        end: {
          line: 174,
          column: 36
        }
      },
      "70": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "71": {
        start: {
          line: 176,
          column: 36
        },
        end: {
          line: 176,
          column: 117
        }
      },
      "72": {
        start: {
          line: 177,
          column: 37
        },
        end: {
          line: 177,
          column: 78
        }
      },
      "73": {
        start: {
          line: 178,
          column: 36
        },
        end: {
          line: 178,
          column: 76
        }
      },
      "74": {
        start: {
          line: 179,
          column: 32
        },
        end: {
          line: 179,
          column: 90
        }
      },
      "75": {
        start: {
          line: 180,
          column: 39
        },
        end: {
          line: 180,
          column: 96
        }
      },
      "76": {
        start: {
          line: 181,
          column: 35
        },
        end: {
          line: 181,
          column: 94
        }
      },
      "77": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 195,
          column: 19
        }
      },
      "78": {
        start: {
          line: 190,
          column: 83
        },
        end: {
          line: 194,
          column: 21
        }
      },
      "79": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 50
        }
      },
      "80": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 48
        }
      },
      "81": {
        start: {
          line: 200,
          column: 35
        },
        end: {
          line: 200,
          column: 52
        }
      },
      "82": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "83": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 209,
          column: 17
        }
      },
      "84": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 208,
          column: 21
        }
      },
      "85": {
        start: {
          line: 204,
          column: 46
        },
        end: {
          line: 204,
          column: 114
        }
      },
      "86": {
        start: {
          line: 204,
          column: 79
        },
        end: {
          line: 204,
          column: 113
        }
      },
      "87": {
        start: {
          line: 205,
          column: 24
        },
        end: {
          line: 207,
          column: 25
        }
      },
      "88": {
        start: {
          line: 206,
          column: 28
        },
        end: {
          line: 206,
          column: 116
        }
      },
      "89": {
        start: {
          line: 212,
          column: 25
        },
        end: {
          line: 212,
          column: 29
        }
      },
      "90": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "91": {
        start: {
          line: 214,
          column: 36
        },
        end: {
          line: 214,
          column: 139
        }
      },
      "92": {
        start: {
          line: 214,
          column: 77
        },
        end: {
          line: 214,
          column: 138
        }
      },
      "93": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 222,
          column: 17
        }
      },
      "94": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 221,
          column: 22
        }
      },
      "95": {
        start: {
          line: 225,
          column: 36
        },
        end: {
          line: 225,
          column: 94
        }
      },
      "96": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 232,
          column: 14
        }
      },
      "97": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 72
        }
      },
      "98": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 24
        }
      },
      "99": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "100": {
        start: {
          line: 244,
          column: 28
        },
        end: {
          line: 244,
          column: 92
        }
      },
      "101": {
        start: {
          line: 246,
          column: 32
        },
        end: {
          line: 246,
          column: 87
        }
      },
      "102": {
        start: {
          line: 247,
          column: 26
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "103": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 258,
          column: 15
        }
      },
      "104": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 80
        }
      },
      "105": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 25
        }
      },
      "106": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 62
        }
      },
      "107": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 24
        }
      },
      "108": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "109": {
        start: {
          line: 272,
          column: 30
        },
        end: {
          line: 272,
          column: 91
        }
      },
      "110": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 275,
          column: 13
        }
      },
      "111": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 62
        }
      },
      "112": {
        start: {
          line: 276,
          column: 26
        },
        end: {
          line: 276,
          column: 47
        }
      },
      "113": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 279,
          column: 13
        }
      },
      "114": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 81
        }
      },
      "115": {
        start: {
          line: 281,
          column: 31
        },
        end: {
          line: 281,
          column: 74
        }
      },
      "116": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 293,
          column: 15
        }
      },
      "117": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 30
        }
      },
      "118": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 65
        }
      },
      "119": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 24
        }
      },
      "120": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "121": {
        start: {
          line: 306,
          column: 36
        },
        end: {
          line: 306,
          column: 38
        }
      },
      "122": {
        start: {
          line: 308,
          column: 37
        },
        end: {
          line: 308,
          column: 69
        }
      },
      "123": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 92
        }
      },
      "124": {
        start: {
          line: 311,
          column: 36
        },
        end: {
          line: 311,
          column: 74
        }
      },
      "125": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 90
        }
      },
      "126": {
        start: {
          line: 314,
          column: 36
        },
        end: {
          line: 314,
          column: 71
        }
      },
      "127": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 90
        }
      },
      "128": {
        start: {
          line: 317,
          column: 38
        },
        end: {
          line: 317,
          column: 78
        }
      },
      "129": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 94
        }
      },
      "130": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 323,
          column: 15
        }
      },
      "131": {
        start: {
          line: 321,
          column: 38
        },
        end: {
          line: 321,
          column: 81
        }
      },
      "132": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 77
        }
      },
      "133": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 87
        }
      },
      "134": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 22
        }
      },
      "135": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "136": {
        start: {
          line: 335,
          column: 29
        },
        end: {
          line: 335,
          column: 31
        }
      },
      "137": {
        start: {
          line: 337,
          column: 29
        },
        end: {
          line: 337,
          column: 56
        }
      },
      "138": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 39
        }
      },
      "139": {
        start: {
          line: 340,
          column: 30
        },
        end: {
          line: 340,
          column: 58
        }
      },
      "140": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 40
        }
      },
      "141": {
        start: {
          line: 343,
          column: 27
        },
        end: {
          line: 343,
          column: 53
        }
      },
      "142": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 37
        }
      },
      "143": {
        start: {
          line: 346,
          column: 33
        },
        end: {
          line: 346,
          column: 62
        }
      },
      "144": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 43
        }
      },
      "145": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 72
        }
      },
      "146": {
        start: {
          line: 348,
          column: 43
        },
        end: {
          line: 348,
          column: 70
        }
      },
      "147": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 70
        }
      },
      "148": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 22
        }
      },
      "149": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "150": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 364,
          column: 14
        }
      },
      "151": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 73
        }
      },
      "152": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 52
        }
      },
      "153": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "154": {
        start: {
          line: 377,
          column: 33
        },
        end: {
          line: 377,
          column: 35
        }
      },
      "155": {
        start: {
          line: 379,
          column: 35
        },
        end: {
          line: 379,
          column: 69
        }
      },
      "156": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 390,
          column: 13
        }
      },
      "157": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 389,
          column: 19
        }
      },
      "158": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 391,
          column: 32
        }
      },
      "159": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 68
        }
      },
      "160": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 22
        }
      },
      "161": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "162": {
        start: {
          line: 403,
          column: 31
        },
        end: {
          line: 403,
          column: 90
        }
      },
      "163": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 404,
          column: 62
        }
      },
      "164": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 71
        }
      },
      "165": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 408,
          column: 24
        }
      },
      "166": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 455,
          column: 9
        }
      },
      "167": {
        start: {
          line: 416,
          column: 25
        },
        end: {
          line: 416,
          column: 62
        }
      },
      "168": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 418,
          column: 29
        }
      },
      "169": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 418,
          column: 29
        }
      },
      "170": {
        start: {
          line: 419,
          column: 39
        },
        end: {
          line: 419,
          column: 49
        }
      },
      "171": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 424,
          column: 13
        }
      },
      "172": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 443,
          column: 13
        }
      },
      "173": {
        start: {
          line: 427,
          column: 59
        },
        end: {
          line: 427,
          column: 86
        }
      },
      "174": {
        start: {
          line: 428,
          column: 16
        },
        end: {
          line: 432,
          column: 17
        }
      },
      "175": {
        start: {
          line: 429,
          column: 20
        },
        end: {
          line: 431,
          column: 21
        }
      },
      "176": {
        start: {
          line: 430,
          column: 24
        },
        end: {
          line: 430,
          column: 37
        }
      },
      "177": {
        start: {
          line: 433,
          column: 16
        },
        end: {
          line: 437,
          column: 17
        }
      },
      "178": {
        start: {
          line: 434,
          column: 20
        },
        end: {
          line: 436,
          column: 21
        }
      },
      "179": {
        start: {
          line: 435,
          column: 24
        },
        end: {
          line: 435,
          column: 37
        }
      },
      "180": {
        start: {
          line: 438,
          column: 16
        },
        end: {
          line: 442,
          column: 17
        }
      },
      "181": {
        start: {
          line: 439,
          column: 20
        },
        end: {
          line: 441,
          column: 21
        }
      },
      "182": {
        start: {
          line: 440,
          column: 24
        },
        end: {
          line: 440,
          column: 37
        }
      },
      "183": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 449,
          column: 13
        }
      },
      "184": {
        start: {
          line: 446,
          column: 69
        },
        end: {
          line: 446,
          column: 92
        }
      },
      "185": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 24
        }
      },
      "186": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 73
        }
      },
      "187": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 25
        }
      },
      "188": {
        start: {
          line: 461,
          column: 28
        },
        end: {
          line: 461,
          column: 86
        }
      },
      "189": {
        start: {
          line: 461,
          column: 62
        },
        end: {
          line: 461,
          column: 82
        }
      },
      "190": {
        start: {
          line: 462,
          column: 23
        },
        end: {
          line: 462,
          column: 50
        }
      },
      "191": {
        start: {
          line: 463,
          column: 28
        },
        end: {
          line: 463,
          column: 29
        }
      },
      "192": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 469,
          column: 9
        }
      },
      "193": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 465,
          column: 44
        }
      },
      "194": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 468,
          column: 13
        }
      },
      "195": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 467,
          column: 41
        }
      },
      "196": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 37
        }
      },
      "197": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 477,
          column: 21
        }
      },
      "198": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 21
        }
      },
      "199": {
        start: {
          line: 478,
          column: 18
        },
        end: {
          line: 478,
          column: 44
        }
      },
      "200": {
        start: {
          line: 479,
          column: 18
        },
        end: {
          line: 479,
          column: 30
        }
      },
      "201": {
        start: {
          line: 480,
          column: 18
        },
        end: {
          line: 480,
          column: 22
        }
      },
      "202": {
        start: {
          line: 481,
          column: 23
        },
        end: {
          line: 481,
          column: 55
        }
      },
      "203": {
        start: {
          line: 482,
          column: 22
        },
        end: {
          line: 482,
          column: 45
        }
      },
      "204": {
        start: {
          line: 483,
          column: 22
        },
        end: {
          line: 483,
          column: 45
        }
      },
      "205": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 484,
          column: 49
        }
      },
      "206": {
        start: {
          line: 490,
          column: 32
        },
        end: {
          line: 490,
          column: 34
        }
      },
      "207": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 498,
          column: 9
        }
      },
      "208": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 128
        }
      },
      "209": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 493,
          column: 93
        }
      },
      "210": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 78
        }
      },
      "211": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 95
        }
      },
      "212": {
        start: {
          line: 500,
          column: 34
        },
        end: {
          line: 500,
          column: 104
        }
      },
      "213": {
        start: {
          line: 500,
          column: 74
        },
        end: {
          line: 500,
          column: 100
        }
      },
      "214": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 503,
          column: 9
        }
      },
      "215": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 502,
          column: 100
        }
      },
      "216": {
        start: {
          line: 505,
          column: 36
        },
        end: {
          line: 505,
          column: 89
        }
      },
      "217": {
        start: {
          line: 505,
          column: 63
        },
        end: {
          line: 505,
          column: 88
        }
      },
      "218": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 508,
          column: 9
        }
      },
      "219": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 507,
          column: 107
        }
      },
      "220": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 509,
          column: 31
        }
      },
      "221": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 516,
          column: 64
        }
      },
      "222": {
        start: {
          line: 516,
          column: 37
        },
        end: {
          line: 516,
          column: 62
        }
      },
      "223": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 522,
          column: 10
        }
      },
      "224": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 529,
          column: 63
        }
      },
      "225": {
        start: {
          line: 529,
          column: 37
        },
        end: {
          line: 529,
          column: 61
        }
      },
      "226": {
        start: {
          line: 531,
          column: 8
        },
        end: {
          line: 550,
          column: 9
        }
      },
      "227": {
        start: {
          line: 533,
          column: 16
        },
        end: {
          line: 537,
          column: 18
        }
      },
      "228": {
        start: {
          line: 539,
          column: 16
        },
        end: {
          line: 542,
          column: 18
        }
      },
      "229": {
        start: {
          line: 544,
          column: 16
        },
        end: {
          line: 547,
          column: 18
        }
      },
      "230": {
        start: {
          line: 549,
          column: 16
        },
        end: {
          line: 549,
          column: 49
        }
      },
      "231": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 562,
          column: 10
        }
      },
      "232": {
        start: {
          line: 569,
          column: 8
        },
        end: {
          line: 573,
          column: 10
        }
      },
      "233": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 584,
          column: 10
        }
      },
      "234": {
        start: {
          line: 591,
          column: 8
        },
        end: {
          line: 595,
          column: 10
        }
      },
      "235": {
        start: {
          line: 601,
          column: 8
        },
        end: {
          line: 620,
          column: 10
        }
      },
      "236": {
        start: {
          line: 626,
          column: 8
        },
        end: {
          line: 645,
          column: 10
        }
      },
      "237": {
        start: {
          line: 651,
          column: 8
        },
        end: {
          line: 670,
          column: 10
        }
      },
      "238": {
        start: {
          line: 676,
          column: 8
        },
        end: {
          line: 695,
          column: 10
        }
      },
      "239": {
        start: {
          line: 702,
          column: 8
        },
        end: {
          line: 713,
          column: 10
        }
      },
      "240": {
        start: {
          line: 720,
          column: 8
        },
        end: {
          line: 731,
          column: 10
        }
      },
      "241": {
        start: {
          line: 738,
          column: 8
        },
        end: {
          line: 749,
          column: 10
        }
      },
      "242": {
        start: {
          line: 755,
          column: 8
        },
        end: {
          line: 755,
          column: 49
        }
      },
      "243": {
        start: {
          line: 761,
          column: 8
        },
        end: {
          line: 761,
          column: 48
        }
      },
      "244": {
        start: {
          line: 767,
          column: 8
        },
        end: {
          line: 773,
          column: 10
        }
      },
      "245": {
        start: {
          line: 779,
          column: 22
        },
        end: {
          line: 779,
          column: 46
        }
      },
      "246": {
        start: {
          line: 780,
          column: 8
        },
        end: {
          line: 782,
          column: 9
        }
      },
      "247": {
        start: {
          line: 781,
          column: 12
        },
        end: {
          line: 781,
          column: 47
        }
      },
      "248": {
        start: {
          line: 783,
          column: 8
        },
        end: {
          line: 790,
          column: 10
        }
      },
      "249": {
        start: {
          line: 785,
          column: 53
        },
        end: {
          line: 789,
          column: 13
        }
      },
      "250": {
        start: {
          line: 796,
          column: 22
        },
        end: {
          line: 796,
          column: 46
        }
      },
      "251": {
        start: {
          line: 797,
          column: 8
        },
        end: {
          line: 799,
          column: 9
        }
      },
      "252": {
        start: {
          line: 798,
          column: 12
        },
        end: {
          line: 798,
          column: 47
        }
      },
      "253": {
        start: {
          line: 801,
          column: 28
        },
        end: {
          line: 801,
          column: 65
        }
      },
      "254": {
        start: {
          line: 802,
          column: 8
        },
        end: {
          line: 802,
          column: 37
        }
      },
      "255": {
        start: {
          line: 803,
          column: 8
        },
        end: {
          line: 803,
          column: 39
        }
      },
      "256": {
        start: {
          line: 804,
          column: 8
        },
        end: {
          line: 804,
          column: 31
        }
      },
      "257": {
        start: {
          line: 805,
          column: 8
        },
        end: {
          line: 810,
          column: 10
        }
      },
      "258": {
        start: {
          line: 816,
          column: 24
        },
        end: {
          line: 816,
          column: 51
        }
      },
      "259": {
        start: {
          line: 817,
          column: 8
        },
        end: {
          line: 820,
          column: 10
        }
      },
      "260": {
        start: {
          line: 826,
          column: 8
        },
        end: {
          line: 832,
          column: 10
        }
      },
      "261": {
        start: {
          line: 835,
          column: 0
        },
        end: {
          line: 835,
          column: 80
        }
      },
      "262": {
        start: {
          line: 836,
          column: 0
        },
        end: {
          line: 836,
          column: 94
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 62
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 30
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 46
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 87
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 66
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 131
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 35
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 166
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 190,
            column: 57
          },
          end: {
            line: 190,
            column: 58
          }
        },
        loc: {
          start: {
            line: 190,
            column: 83
          },
          end: {
            line: 194,
            column: 21
          }
        },
        line: 190
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 204,
            column: 74
          },
          end: {
            line: 204,
            column: 75
          }
        },
        loc: {
          start: {
            line: 204,
            column: 79
          },
          end: {
            line: 204,
            column: 113
          }
        },
        line: 204
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 214,
            column: 58
          },
          end: {
            line: 214,
            column: 59
          }
        },
        loc: {
          start: {
            line: 214,
            column: 77
          },
          end: {
            line: 214,
            column: 138
          }
        },
        line: 214
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 48
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 242
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 45
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 270
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 48
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 304
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 320,
            column: 40
          },
          end: {
            line: 320,
            column: 41
          }
        },
        loc: {
          start: {
            line: 320,
            column: 50
          },
          end: {
            line: 323,
            column: 13
          }
        },
        line: 320
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        },
        loc: {
          start: {
            line: 333,
            column: 31
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 333
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 348,
            column: 33
          },
          end: {
            line: 348,
            column: 34
          }
        },
        loc: {
          start: {
            line: 348,
            column: 43
          },
          end: {
            line: 348,
            column: 70
          }
        },
        line: 348
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 34
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 358
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 374,
            column: 5
          }
        },
        loc: {
          start: {
            line: 374,
            column: 29
          },
          end: {
            line: 397,
            column: 5
          }
        },
        line: 374
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 401,
            column: 5
          }
        },
        loc: {
          start: {
            line: 401,
            column: 34
          },
          end: {
            line: 410,
            column: 5
          }
        },
        line: 401
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 414,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        },
        loc: {
          start: {
            line: 414,
            column: 52
          },
          end: {
            line: 456,
            column: 5
          }
        },
        line: 414
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 460,
            column: 4
          },
          end: {
            line: 460,
            column: 5
          }
        },
        loc: {
          start: {
            line: 460,
            column: 36
          },
          end: {
            line: 471,
            column: 5
          }
        },
        line: 460
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 461,
            column: 44
          },
          end: {
            line: 461,
            column: 45
          }
        },
        loc: {
          start: {
            line: 461,
            column: 62
          },
          end: {
            line: 461,
            column: 82
          }
        },
        line: 461
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 475,
            column: 4
          },
          end: {
            line: 475,
            column: 5
          }
        },
        loc: {
          start: {
            line: 475,
            column: 59
          },
          end: {
            line: 485,
            column: 5
          }
        },
        line: 475
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 489,
            column: 4
          },
          end: {
            line: 489,
            column: 5
          }
        },
        loc: {
          start: {
            line: 489,
            column: 58
          },
          end: {
            line: 510,
            column: 5
          }
        },
        line: 489
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 500,
            column: 56
          },
          end: {
            line: 500,
            column: 57
          }
        },
        loc: {
          start: {
            line: 500,
            column: 74
          },
          end: {
            line: 500,
            column: 100
          }
        },
        line: 500
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 505,
            column: 58
          },
          end: {
            line: 505,
            column: 59
          }
        },
        loc: {
          start: {
            line: 505,
            column: 63
          },
          end: {
            line: 505,
            column: 88
          }
        },
        line: 505
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        },
        loc: {
          start: {
            line: 514,
            column: 55
          },
          end: {
            line: 523,
            column: 5
          }
        },
        line: 514
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 516,
            column: 26
          },
          end: {
            line: 516,
            column: 27
          }
        },
        loc: {
          start: {
            line: 516,
            column: 37
          },
          end: {
            line: 516,
            column: 62
          }
        },
        line: 516
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 527,
            column: 4
          },
          end: {
            line: 527,
            column: 5
          }
        },
        loc: {
          start: {
            line: 527,
            column: 43
          },
          end: {
            line: 551,
            column: 5
          }
        },
        line: 527
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 529,
            column: 26
          },
          end: {
            line: 529,
            column: 27
          }
        },
        loc: {
          start: {
            line: 529,
            column: 37
          },
          end: {
            line: 529,
            column: 61
          }
        },
        line: 529
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 555,
            column: 4
          },
          end: {
            line: 555,
            column: 5
          }
        },
        loc: {
          start: {
            line: 555,
            column: 32
          },
          end: {
            line: 563,
            column: 5
          }
        },
        line: 555
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 567,
            column: 4
          },
          end: {
            line: 567,
            column: 5
          }
        },
        loc: {
          start: {
            line: 567,
            column: 38
          },
          end: {
            line: 574,
            column: 5
          }
        },
        line: 567
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 578,
            column: 4
          },
          end: {
            line: 578,
            column: 5
          }
        },
        loc: {
          start: {
            line: 578,
            column: 35
          },
          end: {
            line: 585,
            column: 5
          }
        },
        line: 578
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 589,
            column: 4
          },
          end: {
            line: 589,
            column: 5
          }
        },
        loc: {
          start: {
            line: 589,
            column: 40
          },
          end: {
            line: 596,
            column: 5
          }
        },
        line: 589
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 600,
            column: 4
          },
          end: {
            line: 600,
            column: 5
          }
        },
        loc: {
          start: {
            line: 600,
            column: 46
          },
          end: {
            line: 621,
            column: 5
          }
        },
        line: 600
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 625,
            column: 4
          },
          end: {
            line: 625,
            column: 5
          }
        },
        loc: {
          start: {
            line: 625,
            column: 45
          },
          end: {
            line: 646,
            column: 5
          }
        },
        line: 625
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 650,
            column: 4
          },
          end: {
            line: 650,
            column: 5
          }
        },
        loc: {
          start: {
            line: 650,
            column: 45
          },
          end: {
            line: 671,
            column: 5
          }
        },
        line: 650
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 675,
            column: 4
          },
          end: {
            line: 675,
            column: 5
          }
        },
        loc: {
          start: {
            line: 675,
            column: 47
          },
          end: {
            line: 696,
            column: 5
          }
        },
        line: 675
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 700,
            column: 4
          },
          end: {
            line: 700,
            column: 5
          }
        },
        loc: {
          start: {
            line: 700,
            column: 27
          },
          end: {
            line: 714,
            column: 5
          }
        },
        line: 700
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 718,
            column: 4
          },
          end: {
            line: 718,
            column: 5
          }
        },
        loc: {
          start: {
            line: 718,
            column: 28
          },
          end: {
            line: 732,
            column: 5
          }
        },
        line: 718
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 736,
            column: 4
          },
          end: {
            line: 736,
            column: 5
          }
        },
        loc: {
          start: {
            line: 736,
            column: 26
          },
          end: {
            line: 750,
            column: 5
          }
        },
        line: 736
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 754,
            column: 4
          },
          end: {
            line: 754,
            column: 5
          }
        },
        loc: {
          start: {
            line: 754,
            column: 26
          },
          end: {
            line: 756,
            column: 5
          }
        },
        line: 754
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 760,
            column: 4
          },
          end: {
            line: 760,
            column: 5
          }
        },
        loc: {
          start: {
            line: 760,
            column: 25
          },
          end: {
            line: 762,
            column: 5
          }
        },
        line: 760
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 766,
            column: 4
          },
          end: {
            line: 766,
            column: 5
          }
        },
        loc: {
          start: {
            line: 766,
            column: 27
          },
          end: {
            line: 774,
            column: 5
          }
        },
        line: 766
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 778,
            column: 4
          },
          end: {
            line: 778,
            column: 5
          }
        },
        loc: {
          start: {
            line: 778,
            column: 40
          },
          end: {
            line: 791,
            column: 5
          }
        },
        line: 778
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 785,
            column: 41
          },
          end: {
            line: 785,
            column: 42
          }
        },
        loc: {
          start: {
            line: 785,
            column: 53
          },
          end: {
            line: 789,
            column: 13
          }
        },
        line: 785
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 795,
            column: 4
          },
          end: {
            line: 795,
            column: 5
          }
        },
        loc: {
          start: {
            line: 795,
            column: 49
          },
          end: {
            line: 811,
            column: 5
          }
        },
        line: 795
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 815,
            column: 4
          },
          end: {
            line: 815,
            column: 5
          }
        },
        loc: {
          start: {
            line: 815,
            column: 31
          },
          end: {
            line: 821,
            column: 5
          }
        },
        line: 815
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 825,
            column: 4
          },
          end: {
            line: 825,
            column: 5
          }
        },
        loc: {
          start: {
            line: 825,
            column: 56
          },
          end: {
            line: 833,
            column: 5
          }
        },
        line: 825
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "3": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 27
          }
        }, {
          start: {
            line: 90,
            column: 31
          },
          end: {
            line: 90,
            column: 61
          }
        }],
        line: 90
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "7": {
        loc: {
          start: {
            line: 131,
            column: 55
          },
          end: {
            line: 131,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 131,
            column: 63
          },
          end: {
            line: 131,
            column: 64
          }
        }],
        line: 131
      },
      "8": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "9": {
        loc: {
          start: {
            line: 141,
            column: 28
          },
          end: {
            line: 141,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 141,
            column: 42
          },
          end: {
            line: 141,
            column: 65
          }
        }, {
          start: {
            line: 141,
            column: 68
          },
          end: {
            line: 141,
            column: 70
          }
        }],
        line: 141
      },
      "10": {
        loc: {
          start: {
            line: 142,
            column: 35
          },
          end: {
            line: 142,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 35
          },
          end: {
            line: 142,
            column: 54
          }
        }, {
          start: {
            line: 142,
            column: 58
          },
          end: {
            line: 142,
            column: 59
          }
        }],
        line: 142
      },
      "11": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "12": {
        loc: {
          start: {
            line: 177,
            column: 46
          },
          end: {
            line: 177,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 46
          },
          end: {
            line: 177,
            column: 70
          }
        }, {
          start: {
            line: 177,
            column: 74
          },
          end: {
            line: 177,
            column: 77
          }
        }],
        line: 177
      },
      "13": {
        loc: {
          start: {
            line: 178,
            column: 45
          },
          end: {
            line: 178,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 45
          },
          end: {
            line: 178,
            column: 68
          }
        }, {
          start: {
            line: 178,
            column: 72
          },
          end: {
            line: 178,
            column: 75
          }
        }],
        line: 178
      },
      "14": {
        loc: {
          start: {
            line: 179,
            column: 32
          },
          end: {
            line: 179,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 54
          },
          end: {
            line: 179,
            column: 85
          }
        }, {
          start: {
            line: 179,
            column: 88
          },
          end: {
            line: 179,
            column: 90
          }
        }],
        line: 179
      },
      "15": {
        loc: {
          start: {
            line: 180,
            column: 39
          },
          end: {
            line: 180,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 58
          },
          end: {
            line: 180,
            column: 92
          }
        }, {
          start: {
            line: 180,
            column: 95
          },
          end: {
            line: 180,
            column: 96
          }
        }],
        line: 180
      },
      "16": {
        loc: {
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "17": {
        loc: {
          start: {
            line: 205,
            column: 24
          },
          end: {
            line: 207,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 24
          },
          end: {
            line: 207,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "18": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "19": {
        loc: {
          start: {
            line: 214,
            column: 77
          },
          end: {
            line: 214,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 124
          },
          end: {
            line: 214,
            column: 131
          }
        }, {
          start: {
            line: 214,
            column: 134
          },
          end: {
            line: 214,
            column: 138
          }
        }],
        line: 214
      },
      "20": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 222,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 222,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "21": {
        loc: {
          start: {
            line: 215,
            column: 20
          },
          end: {
            line: 215,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 20
          },
          end: {
            line: 215,
            column: 47
          }
        }, {
          start: {
            line: 215,
            column: 51
          },
          end: {
            line: 215,
            column: 109
          }
        }],
        line: 215
      },
      "22": {
        loc: {
          start: {
            line: 231,
            column: 24
          },
          end: {
            line: 231,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 231,
            column: 57
          },
          end: {
            line: 231,
            column: 66
          }
        }, {
          start: {
            line: 231,
            column: 69
          },
          end: {
            line: 231,
            column: 80
          }
        }],
        line: 231
      },
      "23": {
        loc: {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "24": {
        loc: {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 279,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 279,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "25": {
        loc: {
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 277,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 277,
            column: 40
          }
        }, {
          start: {
            line: 277,
            column: 44
          },
          end: {
            line: 277,
            column: 71
          }
        }],
        line: 277
      },
      "26": {
        loc: {
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 390,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 390,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "27": {
        loc: {
          start: {
            line: 404,
            column: 19
          },
          end: {
            line: 404,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 32
          },
          end: {
            line: 404,
            column: 54
          }
        }, {
          start: {
            line: 404,
            column: 57
          },
          end: {
            line: 404,
            column: 61
          }
        }],
        line: 404
      },
      "28": {
        loc: {
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 418,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 418,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "29": {
        loc: {
          start: {
            line: 421,
            column: 12
          },
          end: {
            line: 424,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 12
          },
          end: {
            line: 424,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "30": {
        loc: {
          start: {
            line: 421,
            column: 16
          },
          end: {
            line: 421,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 421,
            column: 16
          },
          end: {
            line: 421,
            column: 43
          }
        }, {
          start: {
            line: 421,
            column: 47
          },
          end: {
            line: 421,
            column: 85
          }
        }],
        line: 421
      },
      "31": {
        loc: {
          start: {
            line: 426,
            column: 12
          },
          end: {
            line: 443,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 12
          },
          end: {
            line: 443,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "32": {
        loc: {
          start: {
            line: 428,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "33": {
        loc: {
          start: {
            line: 428,
            column: 20
          },
          end: {
            line: 428,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 20
          },
          end: {
            line: 428,
            column: 28
          }
        }, {
          start: {
            line: 428,
            column: 32
          },
          end: {
            line: 428,
            column: 54
          }
        }],
        line: 428
      },
      "34": {
        loc: {
          start: {
            line: 429,
            column: 20
          },
          end: {
            line: 431,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 429,
            column: 20
          },
          end: {
            line: 431,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 429
      },
      "35": {
        loc: {
          start: {
            line: 429,
            column: 24
          },
          end: {
            line: 429,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 429,
            column: 24
          },
          end: {
            line: 429,
            column: 59
          }
        }, {
          start: {
            line: 429,
            column: 63
          },
          end: {
            line: 429,
            column: 98
          }
        }],
        line: 429
      },
      "36": {
        loc: {
          start: {
            line: 433,
            column: 16
          },
          end: {
            line: 437,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 16
          },
          end: {
            line: 437,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      },
      "37": {
        loc: {
          start: {
            line: 433,
            column: 20
          },
          end: {
            line: 433,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 433,
            column: 20
          },
          end: {
            line: 433,
            column: 28
          }
        }, {
          start: {
            line: 433,
            column: 32
          },
          end: {
            line: 433,
            column: 51
          }
        }, {
          start: {
            line: 433,
            column: 55
          },
          end: {
            line: 433,
            column: 82
          }
        }],
        line: 433
      },
      "38": {
        loc: {
          start: {
            line: 434,
            column: 20
          },
          end: {
            line: 436,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 20
          },
          end: {
            line: 436,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "39": {
        loc: {
          start: {
            line: 438,
            column: 16
          },
          end: {
            line: 442,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 438,
            column: 16
          },
          end: {
            line: 442,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 438
      },
      "40": {
        loc: {
          start: {
            line: 438,
            column: 20
          },
          end: {
            line: 438,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 438,
            column: 20
          },
          end: {
            line: 438,
            column: 30
          }
        }, {
          start: {
            line: 438,
            column: 34
          },
          end: {
            line: 438,
            column: 55
          }
        }, {
          start: {
            line: 438,
            column: 59
          },
          end: {
            line: 438,
            column: 88
          }
        }],
        line: 438
      },
      "41": {
        loc: {
          start: {
            line: 439,
            column: 20
          },
          end: {
            line: 441,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 20
          },
          end: {
            line: 441,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 439
      },
      "42": {
        loc: {
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 449,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 449,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "43": {
        loc: {
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 468,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 468,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "44": {
        loc: {
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 477,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 477,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      },
      "45": {
        loc: {
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 498,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 498,
            column: 9
          }
        }, {
          start: {
            line: 495,
            column: 13
          },
          end: {
            line: 498,
            column: 9
          }
        }],
        line: 491
      },
      "46": {
        loc: {
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 503,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 503,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 501
      },
      "47": {
        loc: {
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "48": {
        loc: {
          start: {
            line: 531,
            column: 8
          },
          end: {
            line: 550,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 532,
            column: 12
          },
          end: {
            line: 537,
            column: 18
          }
        }, {
          start: {
            line: 538,
            column: 12
          },
          end: {
            line: 542,
            column: 18
          }
        }, {
          start: {
            line: 543,
            column: 12
          },
          end: {
            line: 547,
            column: 18
          }
        }, {
          start: {
            line: 548,
            column: 12
          },
          end: {
            line: 549,
            column: 49
          }
        }],
        line: 531
      },
      "49": {
        loc: {
          start: {
            line: 534,
            column: 32
          },
          end: {
            line: 534,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 534,
            column: 54
          },
          end: {
            line: 534,
            column: 64
          }
        }, {
          start: {
            line: 534,
            column: 67
          },
          end: {
            line: 534,
            column: 77
          }
        }],
        line: 534
      },
      "50": {
        loc: {
          start: {
            line: 780,
            column: 8
          },
          end: {
            line: 782,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 780,
            column: 8
          },
          end: {
            line: 782,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 780
      },
      "51": {
        loc: {
          start: {
            line: 797,
            column: 8
          },
          end: {
            line: 799,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 797,
            column: 8
          },
          end: {
            line: 799,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 797
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0, 0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4cc397534a7f72e170875fdd4a3f06d360e7b01c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1v3g9k4d8i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1v3g9k4d8i();
cov_1v3g9k4d8i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1v3g9k4d8i().s[1]++;
exports.machineLearningOptimizationService = exports.MachineLearningOptimizationService = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_1v3g9k4d8i().s[2]++, require("@/config/logger"));
class MachineLearningOptimizationService {
  analyticsEventModel;
  userModel;
  redisService;
  logger =
  /* istanbul ignore next */
  (cov_1v3g9k4d8i().s[3]++, logger_1.logger);
  abTests =
  /* istanbul ignore next */
  (cov_1v3g9k4d8i().s[4]++, new Map());
  models =
  /* istanbul ignore next */
  (cov_1v3g9k4d8i().s[5]++, new Map());
  insights =
  /* istanbul ignore next */
  (cov_1v3g9k4d8i().s[6]++, []);
  static instance;
  constructor(analyticsEventModel, userModel, redisService) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[0]++;
    cov_1v3g9k4d8i().s[7]++;
    this.analyticsEventModel = analyticsEventModel;
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[8]++;
    this.userModel = userModel;
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[9]++;
    this.redisService = redisService;
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[1]++;
    cov_1v3g9k4d8i().s[10]++;
    if (!MachineLearningOptimizationService.instance) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().b[0][0]++;
      cov_1v3g9k4d8i().s[11]++;
      // This would need proper initialization in real implementation
      throw new Error('MachineLearningOptimizationService must be initialized with dependencies');
    } else
    /* istanbul ignore next */
    {
      cov_1v3g9k4d8i().b[0][1]++;
    }
    cov_1v3g9k4d8i().s[12]++;
    return MachineLearningOptimizationService.instance;
  }
  /**
   * Create and start an A/B test
   */
  async createABTest(config) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[2]++;
    cov_1v3g9k4d8i().s[13]++;
    try {
      const testId =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[14]++, `ab_test_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
      const abTest =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[15]++, {
        ...config,
        testId,
        createdAt: new Date(),
        status: 'draft'
      });
      // Store A/B test configuration
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[16]++;
      await this.redisService.hmset(`ab_test:${testId}`, {
        config: JSON.stringify(abTest),
        status: 'draft'
      });
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[17]++;
      this.logger.info(`Created A/B test: ${testId} - ${config.name}`);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[18]++;
      return abTest;
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[19]++;
      this.logger.error('Error creating A/B test:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[20]++;
      throw error;
    }
  }
  /**
   * Start an A/B test
   */
  async startABTest(testId) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[3]++;
    cov_1v3g9k4d8i().s[21]++;
    try {
      const testConfig =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[22]++, await this.getABTestConfig(testId));
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[23]++;
      if (!testConfig) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[1][0]++;
        cov_1v3g9k4d8i().s[24]++;
        throw new Error(`A/B test ${testId} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[1][1]++;
      }
      cov_1v3g9k4d8i().s[25]++;
      if (testConfig.status !== 'draft') {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[2][0]++;
        cov_1v3g9k4d8i().s[26]++;
        throw new Error(`A/B test ${testId} is not in draft status`);
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[2][1]++;
      }
      // Update test status
      cov_1v3g9k4d8i().s[27]++;
      await this.redisService.hmset(`ab_test:${testId}`, {
        status: 'active',
        startedAt: new Date().toISOString()
      });
      // Initialize variant tracking
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[28]++;
      for (const variant of testConfig.variants) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().s[29]++;
        await this.redisService.hmset(`ab_test:${testId}:variant:${variant.variantId}`, {
          participants: '0',
          conversions: '0',
          metrics: JSON.stringify({})
        });
      }
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[30]++;
      this.logger.info(`Started A/B test: ${testId}`);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[31]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[32]++;
      this.logger.error('Error starting A/B test:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[33]++;
      throw error;
    }
  }
  /**
   * Assign user to A/B test variant
   */
  async assignUserToVariant(userId, testId) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[4]++;
    cov_1v3g9k4d8i().s[34]++;
    try {
      const testConfig =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[35]++, await this.getABTestConfig(testId));
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[4][0]++, !testConfig) ||
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[4][1]++, testConfig.status !== 'active')) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[3][0]++;
        cov_1v3g9k4d8i().s[37]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[3][1]++;
      }
      // Check if user is eligible for the test
      cov_1v3g9k4d8i().s[38]++;
      if (!(await this.isUserEligibleForTest(userId, testConfig))) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[5][0]++;
        cov_1v3g9k4d8i().s[39]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[5][1]++;
      }
      // Check if user is already assigned
      const existingAssignment =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[40]++, await this.redisService.get(`ab_test:${testId}:user:${userId}`));
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[41]++;
      if (existingAssignment) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[6][0]++;
        cov_1v3g9k4d8i().s[42]++;
        return existingAssignment;
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[6][1]++;
      }
      // Assign user to variant based on weights
      const variantId =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[43]++, this.selectVariantByWeight(testConfig.variants));
      // Store assignment
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[44]++;
      await this.redisService.setex(`ab_test:${testId}:user:${userId}`, 86400 * testConfig.duration, variantId);
      // Increment participant count
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[45]++;
      await this.redisService.hincrby(`ab_test:${testId}:variant:${variantId}`, 'participants', 1);
      // Log assignment
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[46]++;
      await this.analyticsEventModel.create({
        userId,
        eventType: 'ab_test_assignment',
        metadata: {
          testId,
          variantId,
          testName: testConfig.name
        },
        timestamp: new Date(),
        appId: 'halobuzz'
      });
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[47]++;
      this.logger.info(`Assigned user ${userId} to variant ${variantId} in test ${testId}`);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[48]++;
      return variantId;
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[49]++;
      this.logger.error('Error assigning user to variant:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[50]++;
      return null;
    }
  }
  /**
   * Record conversion for A/B test
   */
  async recordConversion(userId, testId, metricName, value =
  /* istanbul ignore next */
  (cov_1v3g9k4d8i().b[7][0]++, 1)) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[5]++;
    cov_1v3g9k4d8i().s[51]++;
    try {
      const variantId =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[52]++, await this.redisService.get(`ab_test:${testId}:user:${userId}`));
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[53]++;
      if (!variantId) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[8][0]++;
        cov_1v3g9k4d8i().s[54]++;
        return; // User not in test
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[8][1]++;
      }
      // Increment conversion count
      cov_1v3g9k4d8i().s[55]++;
      await this.redisService.hincrby(`ab_test:${testId}:variant:${variantId}`, 'conversions', value);
      // Update metrics
      const metricsData =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[56]++, await this.redisService.hget(`ab_test:${testId}:variant:${variantId}`, 'metrics'));
      const metrics =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[57]++, metricsData ?
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[9][0]++, JSON.parse(metricsData)) :
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[9][1]++, {}));
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[58]++;
      metrics[metricName] = (
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[10][0]++, metrics[metricName]) ||
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[10][1]++, 0)) + value;
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[59]++;
      await this.redisService.hset(`ab_test:${testId}:variant:${variantId}`, 'metrics', JSON.stringify(metrics));
      // Log conversion
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[60]++;
      await this.analyticsEventModel.create({
        userId,
        eventType: 'ab_test_conversion',
        metadata: {
          testId,
          variantId,
          metricName,
          value
        },
        timestamp: new Date(),
        appId: 'halobuzz'
      });
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[61]++;
      this.logger.info(`Recorded conversion for user ${userId} in test ${testId}, variant ${variantId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[62]++;
      this.logger.error('Error recording conversion:', error);
    }
  }
  /**
   * Get A/B test results
   */
  async getABTestResults(testId) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[6]++;
    cov_1v3g9k4d8i().s[63]++;
    try {
      const testConfig =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[64]++, await this.getABTestConfig(testId));
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[65]++;
      if (!testConfig) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[11][0]++;
        cov_1v3g9k4d8i().s[66]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[11][1]++;
      }
      const variantResults =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[67]++, []);
      let totalParticipants =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[68]++, 0);
      let totalConversions =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[69]++, 0);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[70]++;
      for (const variant of testConfig.variants) {
        const variantData =
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().s[71]++, await this.redisService.hgetall(`ab_test:${testId}:variant:${variant.variantId}`));
        const participants =
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().s[72]++, parseInt(
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[12][0]++, variantData.participants) ||
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[12][1]++, '0')));
        const conversions =
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().s[73]++, parseInt(
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[13][0]++, variantData.conversions) ||
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[13][1]++, '0')));
        const metrics =
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().s[74]++, variantData.metrics ?
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[14][0]++, JSON.parse(variantData.metrics)) :
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[14][1]++, {}));
        const conversionRate =
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().s[75]++, participants > 0 ?
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[15][0]++, conversions / participants * 100) :
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[15][1]++, 0));
        const confidence =
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().s[76]++, this.calculateConfidenceInterval(participants, conversions));
        /* istanbul ignore next */
        cov_1v3g9k4d8i().s[77]++;
        variantResults.push({
          variantId: variant.variantId,
          variantName: variant.name,
          participants,
          conversions,
          conversionRate,
          confidence,
          statisticalSignificance: confidence > 95,
          metrics: Object.entries(metrics).map(([metricName, value]) => {
            /* istanbul ignore next */
            cov_1v3g9k4d8i().f[7]++;
            cov_1v3g9k4d8i().s[78]++;
            return {
              metricName,
              value: value,
              improvement: 0 // Will be calculated below
            };
          })
        });
        /* istanbul ignore next */
        cov_1v3g9k4d8i().s[79]++;
        totalParticipants += participants;
        /* istanbul ignore next */
        cov_1v3g9k4d8i().s[80]++;
        totalConversions += conversions;
      }
      // Calculate improvements relative to control variant
      const controlVariant =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[81]++, variantResults[0]); // Assume first variant is control
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[82]++;
      if (controlVariant) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[16][0]++;
        cov_1v3g9k4d8i().s[83]++;
        for (const variant of variantResults) {
          /* istanbul ignore next */
          cov_1v3g9k4d8i().s[84]++;
          for (const metric of variant.metrics) {
            const controlMetric =
            /* istanbul ignore next */
            (cov_1v3g9k4d8i().s[85]++, controlVariant.metrics.find(m => {
              /* istanbul ignore next */
              cov_1v3g9k4d8i().f[8]++;
              cov_1v3g9k4d8i().s[86]++;
              return m.metricName === metric.metricName;
            }));
            /* istanbul ignore next */
            cov_1v3g9k4d8i().s[87]++;
            if (controlMetric) {
              /* istanbul ignore next */
              cov_1v3g9k4d8i().b[17][0]++;
              cov_1v3g9k4d8i().s[88]++;
              metric.improvement = (metric.value - controlMetric.value) / controlMetric.value * 100;
            } else
            /* istanbul ignore next */
            {
              cov_1v3g9k4d8i().b[17][1]++;
            }
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[16][1]++;
      }
      // Determine winner
      let winner =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[89]++, null);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[90]++;
      if (variantResults.length > 1) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[18][0]++;
        const bestVariant =
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().s[91]++, variantResults.reduce((best, current) => {
          /* istanbul ignore next */
          cov_1v3g9k4d8i().f[9]++;
          cov_1v3g9k4d8i().s[92]++;
          return current.conversionRate > best.conversionRate ?
          /* istanbul ignore next */
          (cov_1v3g9k4d8i().b[19][0]++, current) :
          /* istanbul ignore next */
          (cov_1v3g9k4d8i().b[19][1]++, best);
        }));
        /* istanbul ignore next */
        cov_1v3g9k4d8i().s[93]++;
        if (
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[21][0]++, bestVariant.confidence > 95) &&
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[21][1]++, bestVariant.conversionRate > controlVariant.conversionRate)) {
          /* istanbul ignore next */
          cov_1v3g9k4d8i().b[20][0]++;
          cov_1v3g9k4d8i().s[94]++;
          winner = {
            variantId: bestVariant.variantId,
            variantName: bestVariant.variantName,
            improvement: (bestVariant.conversionRate - controlVariant.conversionRate) / controlVariant.conversionRate * 100,
            confidence: bestVariant.confidence
          };
        } else
        /* istanbul ignore next */
        {
          cov_1v3g9k4d8i().b[20][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[18][1]++;
      }
      // Generate recommendations
      const recommendations =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[95]++, this.generateABTestRecommendations(variantResults, winner));
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[96]++;
      return {
        testId,
        variantResults,
        winner,
        recommendations,
        status: testConfig.status === 'active' ?
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[22][0]++, 'running') :
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[22][1]++, 'completed')
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[97]++;
      this.logger.error('Error getting A/B test results:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[98]++;
      return null;
    }
  }
  /**
   * Train a machine learning model
   */
  async trainModel(modelConfig, trainingData) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[10]++;
    cov_1v3g9k4d8i().s[99]++;
    try {
      const modelId =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[100]++, `model_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
      // Mock training process (in real implementation, this would use actual ML libraries)
      const performance =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[101]++, await this.mockModelTraining(modelConfig, trainingData));
      const model =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[102]++, {
        ...modelConfig,
        modelId,
        lastTrained: new Date(),
        status: 'ready',
        performance
      });
      // Store model
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[103]++;
      await this.redisService.hmset(`ml_model:${modelId}`, {
        config: JSON.stringify(model),
        status: 'ready'
      });
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[104]++;
      this.logger.info(`Trained model: ${modelId} - ${modelConfig.name}`);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[105]++;
      return model;
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[106]++;
      this.logger.error('Error training model:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[107]++;
      throw error;
    }
  }
  /**
   * Make prediction using trained model
   */
  async makePrediction(modelId, inputData) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[11]++;
    cov_1v3g9k4d8i().s[108]++;
    try {
      const modelData =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[109]++, await this.redisService.hget(`ml_model:${modelId}`, 'config'));
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[110]++;
      if (!modelData) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[23][0]++;
        cov_1v3g9k4d8i().s[111]++;
        throw new Error(`Model ${modelId} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[23][1]++;
      }
      const model =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[112]++, JSON.parse(modelData));
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[113]++;
      if (
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[25][0]++, model.status !== 'ready') &&
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[25][1]++, model.status !== 'deployed')) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[24][0]++;
        cov_1v3g9k4d8i().s[114]++;
        throw new Error(`Model ${modelId} is not ready for predictions`);
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[24][1]++;
      }
      // Mock prediction (in real implementation, this would use the actual trained model)
      const prediction =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[115]++, await this.mockPrediction(model, inputData));
      // Log prediction
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[116]++;
      await this.analyticsEventModel.create({
        eventType: 'ml_prediction',
        metadata: {
          modelId,
          modelName: model.name,
          inputData,
          prediction
        },
        timestamp: new Date(),
        appId: 'halobuzz'
      });
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[117]++;
      return prediction;
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[118]++;
      this.logger.error('Error making prediction:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[119]++;
      throw error;
    }
  }
  /**
   * Generate optimization recommendations using ML insights
   */
  async generateOptimizationRecommendations() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[12]++;
    cov_1v3g9k4d8i().s[120]++;
    try {
      const recommendations =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[121]++, []);
      // Analyze user behavior patterns
      const behaviorInsights =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[122]++, await this.analyzeUserBehavior());
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[123]++;
      recommendations.push(...this.generateBehaviorRecommendations(behaviorInsights));
      // Analyze content performance
      const contentInsights =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[124]++, await this.analyzeContentPerformance());
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[125]++;
      recommendations.push(...this.generateContentRecommendations(contentInsights));
      // Analyze revenue patterns
      const revenueInsights =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[126]++, await this.analyzeRevenuePatterns());
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[127]++;
      recommendations.push(...this.generateRevenueRecommendations(revenueInsights));
      // Analyze technical performance
      const technicalInsights =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[128]++, await this.analyzeTechnicalPerformance());
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[129]++;
      recommendations.push(...this.generateTechnicalRecommendations(technicalInsights));
      // Sort by priority and impact
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[130]++;
      return recommendations.sort((a, b) => {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().f[13]++;
        const priorityOrder =
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().s[131]++, {
          critical: 4,
          high: 3,
          medium: 2,
          low: 1
        });
        /* istanbul ignore next */
        cov_1v3g9k4d8i().s[132]++;
        return priorityOrder[b.priority] - priorityOrder[a.priority];
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[133]++;
      this.logger.error('Error generating optimization recommendations:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[134]++;
      return [];
    }
  }
  /**
   * Generate ML insights from data patterns
   */
  async generateMLInsights() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[14]++;
    cov_1v3g9k4d8i().s[135]++;
    try {
      const insights =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[136]++, []);
      // Pattern detection
      const patterns =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[137]++, await this.detectPatterns());
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[138]++;
      insights.push(...patterns);
      // Anomaly detection
      const anomalies =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[139]++, await this.detectAnomalies());
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[140]++;
      insights.push(...anomalies);
      // Trend analysis
      const trends =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[141]++, await this.analyzeTrends());
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[142]++;
      insights.push(...trends);
      // Correlation analysis
      const correlations =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[143]++, await this.findCorrelations());
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[144]++;
      insights.push(...correlations);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[145]++;
      return insights.sort((a, b) => {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().f[15]++;
        cov_1v3g9k4d8i().s[146]++;
        return b.confidence - a.confidence;
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[147]++;
      this.logger.error('Error generating ML insights:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[148]++;
      return [];
    }
  }
  /**
   * Analyze user engagement patterns
   */
  async analyzeUserEngagement() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[16]++;
    cov_1v3g9k4d8i().s[149]++;
    try {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[150]++;
      // Analyze engagement patterns from analytics data
      return {
        correlation: 0.75,
        insights: ['Users with higher engagement spend more time on platform', 'Engagement correlates with retention']
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[151]++;
      this.logger.error('Error analyzing user engagement:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[152]++;
      return {
        correlation: 0,
        insights: []
      };
    }
  }
  /**
   * Find correlations between different metrics and user behaviors
   */
  async findCorrelations() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[17]++;
    cov_1v3g9k4d8i().s[153]++;
    try {
      // Analyze correlations between metrics
      const correlations =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[154]++, []);
      // Example correlation analysis
      const userEngagement =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[155]++, await this.analyzeUserEngagement());
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[156]++;
      if (userEngagement.correlation > 0.7) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[26][0]++;
        cov_1v3g9k4d8i().s[157]++;
        correlations.push({
          type: 'correlation',
          title: 'High User Engagement Correlation',
          description: `Strong correlation (${userEngagement.correlation}) between user activity and engagement`,
          confidence: userEngagement.correlation,
          impact: 'high',
          actionable: true,
          recommendations: ['Focus on engagement features', 'Optimize user onboarding']
        });
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[26][1]++;
      }
      cov_1v3g9k4d8i().s[158]++;
      return correlations;
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[159]++;
      this.logger.error('Error finding correlations:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[160]++;
      return [];
    }
  }
  /**
   * Get A/B test configuration
   */
  async getABTestConfig(testId) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[18]++;
    cov_1v3g9k4d8i().s[161]++;
    try {
      const configData =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[162]++, await this.redisService.hget(`ab_test:${testId}`, 'config'));
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[163]++;
      return configData ?
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[27][0]++, JSON.parse(configData)) :
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[27][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[164]++;
      this.logger.error('Error getting A/B test config:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[165]++;
      return null;
    }
  }
  /**
   * Check if user is eligible for A/B test
   */
  async isUserEligibleForTest(userId, testConfig) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[19]++;
    cov_1v3g9k4d8i().s[166]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[167]++, await this.userModel.findById(userId));
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[168]++;
      if (!user) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[28][0]++;
        cov_1v3g9k4d8i().s[169]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[28][1]++;
      }
      const {
        targetAudience
      } =
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().s[170]++, testConfig);
      // Check user segments
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[171]++;
      if (
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[30][0]++, targetAudience.userSegments) &&
      /* istanbul ignore next */
      (cov_1v3g9k4d8i().b[30][1]++, targetAudience.userSegments.length > 0)) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[29][0]++;
      } // This would check user segments (implement based on your segmentation logic)
      // For now, return true
      else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[29][1]++;
      }
      // Check demographics
      cov_1v3g9k4d8i().s[172]++;
      if (targetAudience.demographics) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[31][0]++;
        const {
          ageRange,
          location,
          deviceType
        } =
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().s[173]++, targetAudience.demographics);
        /* istanbul ignore next */
        cov_1v3g9k4d8i().s[174]++;
        if (
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[33][0]++, ageRange) &&
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[33][1]++, user.demographics?.age)) {
          /* istanbul ignore next */
          cov_1v3g9k4d8i().b[32][0]++;
          cov_1v3g9k4d8i().s[175]++;
          if (
          /* istanbul ignore next */
          (cov_1v3g9k4d8i().b[35][0]++, user.demographics.age < ageRange[0]) ||
          /* istanbul ignore next */
          (cov_1v3g9k4d8i().b[35][1]++, user.demographics.age > ageRange[1])) {
            /* istanbul ignore next */
            cov_1v3g9k4d8i().b[34][0]++;
            cov_1v3g9k4d8i().s[176]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_1v3g9k4d8i().b[34][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1v3g9k4d8i().b[32][1]++;
        }
        cov_1v3g9k4d8i().s[177]++;
        if (
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[37][0]++, location) &&
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[37][1]++, location.length > 0) &&
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[37][2]++, user.demographics?.location)) {
          /* istanbul ignore next */
          cov_1v3g9k4d8i().b[36][0]++;
          cov_1v3g9k4d8i().s[178]++;
          if (!location.includes(user.demographics.location)) {
            /* istanbul ignore next */
            cov_1v3g9k4d8i().b[38][0]++;
            cov_1v3g9k4d8i().s[179]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_1v3g9k4d8i().b[38][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1v3g9k4d8i().b[36][1]++;
        }
        cov_1v3g9k4d8i().s[180]++;
        if (
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[40][0]++, deviceType) &&
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[40][1]++, deviceType.length > 0) &&
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().b[40][2]++, user.demographics?.deviceType)) {
          /* istanbul ignore next */
          cov_1v3g9k4d8i().b[39][0]++;
          cov_1v3g9k4d8i().s[181]++;
          if (!deviceType.includes(user.demographics.deviceType)) {
            /* istanbul ignore next */
            cov_1v3g9k4d8i().b[41][0]++;
            cov_1v3g9k4d8i().s[182]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_1v3g9k4d8i().b[41][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1v3g9k4d8i().b[39][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[31][1]++;
      }
      // Check behavior
      cov_1v3g9k4d8i().s[183]++;
      if (targetAudience.behavior) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[42][0]++;
        const {
          minEngagement,
          minWatchTime,
          minSessions
        } =
        /* istanbul ignore next */
        (cov_1v3g9k4d8i().s[184]++, targetAudience.behavior);
        // This would check user behavior metrics
        // For now, return true
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[42][1]++;
      }
      cov_1v3g9k4d8i().s[185]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[186]++;
      this.logger.error('Error checking user eligibility:', error);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[187]++;
      return false;
    }
  }
  /**
   * Select variant based on weights
   */
  selectVariantByWeight(variants) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[20]++;
    const totalWeight =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[188]++, variants.reduce((sum, variant) => {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().f[21]++;
      cov_1v3g9k4d8i().s[189]++;
      return sum + variant.weight;
    }, 0));
    const random =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[190]++, Math.random() * totalWeight);
    let currentWeight =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[191]++, 0);
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[192]++;
    for (const variant of variants) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[193]++;
      currentWeight += variant.weight;
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[194]++;
      if (random <= currentWeight) {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[43][0]++;
        cov_1v3g9k4d8i().s[195]++;
        return variant.variantId;
      } else
      /* istanbul ignore next */
      {
        cov_1v3g9k4d8i().b[43][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[196]++;
    return variants[0].variantId; // Fallback to first variant
  }
  /**
   * Calculate confidence interval for A/B test
   */
  calculateConfidenceInterval(participants, conversions) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[22]++;
    cov_1v3g9k4d8i().s[197]++;
    if (participants === 0) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().b[44][0]++;
      cov_1v3g9k4d8i().s[198]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1v3g9k4d8i().b[44][1]++;
    }
    const p =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[199]++, conversions / participants);
    const n =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[200]++, participants);
    const z =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[201]++, 1.96); // 95% confidence interval
    const margin =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[202]++, z * Math.sqrt(p * (1 - p) / n));
    const lower =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[203]++, Math.max(0, p - margin));
    const upper =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[204]++, Math.min(1, p + margin));
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[205]++;
    return Math.round((upper - lower) * 100);
  }
  /**
   * Generate A/B test recommendations
   */
  generateABTestRecommendations(variantResults, winner) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[23]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[206]++, []);
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[207]++;
    if (winner) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().b[45][0]++;
      cov_1v3g9k4d8i().s[208]++;
      recommendations.push(`Winner identified: ${winner.variantName} with ${winner.improvement.toFixed(2)}% improvement`);
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[209]++;
      recommendations.push('Consider implementing the winning variant as the default');
    } else {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().b[45][1]++;
      cov_1v3g9k4d8i().s[210]++;
      recommendations.push('No statistically significant winner found');
      /* istanbul ignore next */
      cov_1v3g9k4d8i().s[211]++;
      recommendations.push('Consider running the test longer or increasing sample size');
    }
    // Check for low participation
    const totalParticipants =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[212]++, variantResults.reduce((sum, variant) => {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().f[24]++;
      cov_1v3g9k4d8i().s[213]++;
      return sum + variant.participants;
    }, 0));
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[214]++;
    if (totalParticipants < 1000) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().b[46][0]++;
      cov_1v3g9k4d8i().s[215]++;
      recommendations.push('Low participation detected - consider expanding target audience');
    } else
    /* istanbul ignore next */
    {
      cov_1v3g9k4d8i().b[46][1]++;
    }
    // Check for statistical significance
    const significantVariants =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[216]++, variantResults.filter(v => {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().f[25]++;
      cov_1v3g9k4d8i().s[217]++;
      return v.statisticalSignificance;
    }));
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[218]++;
    if (significantVariants.length === 0) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().b[47][0]++;
      cov_1v3g9k4d8i().s[219]++;
      recommendations.push('No variants reached statistical significance - test may need more time');
    } else
    /* istanbul ignore next */
    {
      cov_1v3g9k4d8i().b[47][1]++;
    }
    cov_1v3g9k4d8i().s[220]++;
    return recommendations;
  }
  /**
   * Mock model training (replace with actual ML training)
   */
  async mockModelTraining(modelConfig, trainingData) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[26]++;
    cov_1v3g9k4d8i().s[221]++;
    // Simulate training time
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().f[27]++;
      cov_1v3g9k4d8i().s[222]++;
      return setTimeout(resolve, 1000);
    });
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[223]++;
    return {
      trainingAccuracy: 0.85 + Math.random() * 0.1,
      validationAccuracy: 0.80 + Math.random() * 0.1,
      testAccuracy: 0.82 + Math.random() * 0.1,
      crossValidationScore: 0.83 + Math.random() * 0.1
    };
  }
  /**
   * Mock prediction (replace with actual model prediction)
   */
  async mockPrediction(model, inputData) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[28]++;
    cov_1v3g9k4d8i().s[224]++;
    // Simulate prediction time
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().f[29]++;
      cov_1v3g9k4d8i().s[225]++;
      return setTimeout(resolve, 100);
    });
    // Mock prediction based on model type
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[226]++;
    switch (model.type) {
      case 'classification':
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[48][0]++;
        cov_1v3g9k4d8i().s[227]++;
        return {
          prediction: Math.random() > 0.5 ?
          /* istanbul ignore next */
          (cov_1v3g9k4d8i().b[49][0]++, 'positive') :
          /* istanbul ignore next */
          (cov_1v3g9k4d8i().b[49][1]++, 'negative'),
          probability: Math.random(),
          confidence: 0.8 + Math.random() * 0.2
        };
      case 'regression':
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[48][1]++;
        cov_1v3g9k4d8i().s[228]++;
        return {
          prediction: Math.random() * 100,
          confidence: 0.8 + Math.random() * 0.2
        };
      case 'clustering':
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[48][2]++;
        cov_1v3g9k4d8i().s[229]++;
        return {
          cluster: Math.floor(Math.random() * 5),
          distance: Math.random()
        };
      default:
        /* istanbul ignore next */
        cov_1v3g9k4d8i().b[48][3]++;
        cov_1v3g9k4d8i().s[230]++;
        return {
          prediction: 'unknown'
        };
    }
  }
  /**
   * Analyze user behavior patterns
   */
  async analyzeUserBehavior() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[30]++;
    cov_1v3g9k4d8i().s[231]++;
    // Mock analysis - replace with actual ML analysis
    return {
      peakHours: [19, 20, 21],
      preferredContentTypes: ['gaming', 'music', 'comedy'],
      averageSessionDuration: 25,
      churnRiskFactors: ['low_engagement', 'no_purchases']
    };
  }
  /**
   * Analyze content performance
   */
  async analyzeContentPerformance() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[31]++;
    cov_1v3g9k4d8i().s[232]++;
    // Mock analysis - replace with actual ML analysis
    return {
      topPerformingCategories: ['gaming', 'music'],
      optimalVideoLength: 180,
      engagementFactors: ['thumbnail_quality', 'title_length']
    };
  }
  /**
   * Analyze revenue patterns
   */
  async analyzeRevenuePatterns() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[32]++;
    cov_1v3g9k4d8i().s[233]++;
    // Mock analysis - replace with actual ML analysis
    return {
      peakRevenueHours: [20, 21, 22],
      highValueUserSegments: ['premium_users', 'content_creators'],
      conversionFactors: ['free_trial', 'limited_time_offer']
    };
  }
  /**
   * Analyze technical performance
   */
  async analyzeTechnicalPerformance() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[33]++;
    cov_1v3g9k4d8i().s[234]++;
    // Mock analysis - replace with actual ML analysis
    return {
      performanceBottlenecks: ['database_queries', 'image_loading'],
      optimizationOpportunities: ['caching', 'cdn_usage'],
      errorPatterns: ['timeout_errors', 'memory_issues']
    };
  }
  /**
   * Generate behavior-based recommendations
   */
  generateBehaviorRecommendations(insights) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[34]++;
    cov_1v3g9k4d8i().s[235]++;
    return [{
      category: 'user_experience',
      priority: 'high',
      title: 'Optimize Peak Hour Experience',
      description: `Users are most active during hours ${insights.peakHours.join(', ')}. Optimize server capacity and content delivery during these times.`,
      expectedImpact: {
        metric: 'user_satisfaction',
        improvement: 15,
        confidence: 0.85
      },
      implementation: {
        effort: 'medium',
        timeline: '2 weeks',
        resources: ['DevOps team', 'Content delivery optimization']
      },
      successCriteria: ['Reduced latency during peak hours', 'Increased user engagement'],
      risks: ['Increased infrastructure costs', 'Complexity in scaling']
    }];
  }
  /**
   * Generate content-based recommendations
   */
  generateContentRecommendations(insights) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[35]++;
    cov_1v3g9k4d8i().s[236]++;
    return [{
      category: 'engagement',
      priority: 'medium',
      title: 'Optimize Video Length',
      description: `Optimal video length is ${insights.optimalVideoLength} seconds. Recommend this length to content creators.`,
      expectedImpact: {
        metric: 'engagement_rate',
        improvement: 12,
        confidence: 0.78
      },
      implementation: {
        effort: 'low',
        timeline: '1 week',
        resources: ['Content guidelines', 'Creator education']
      },
      successCriteria: ['Increased average watch time', 'Higher completion rates'],
      risks: ['Creator resistance', 'Content quality impact']
    }];
  }
  /**
   * Generate revenue-based recommendations
   */
  generateRevenueRecommendations(insights) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[36]++;
    cov_1v3g9k4d8i().s[237]++;
    return [{
      category: 'revenue',
      priority: 'high',
      title: 'Peak Hour Monetization',
      description: `Peak revenue hours are ${insights.peakRevenueHours.join(', ')}. Implement targeted promotions during these times.`,
      expectedImpact: {
        metric: 'revenue',
        improvement: 25,
        confidence: 0.82
      },
      implementation: {
        effort: 'medium',
        timeline: '3 weeks',
        resources: ['Marketing team', 'Promotion system']
      },
      successCriteria: ['Increased conversion rate', 'Higher average order value'],
      risks: ['User fatigue', 'Promotion effectiveness decline']
    }];
  }
  /**
   * Generate technical recommendations
   */
  generateTechnicalRecommendations(insights) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[37]++;
    cov_1v3g9k4d8i().s[238]++;
    return [{
      category: 'performance',
      priority: 'critical',
      title: 'Database Query Optimization',
      description: `Database queries are identified as performance bottlenecks. Implement query optimization and caching.`,
      expectedImpact: {
        metric: 'response_time',
        improvement: 40,
        confidence: 0.90
      },
      implementation: {
        effort: 'high',
        timeline: '4 weeks',
        resources: ['Database team', 'Performance monitoring']
      },
      successCriteria: ['Reduced query time', 'Improved user experience'],
      risks: ['Data consistency issues', 'Complex implementation']
    }];
  }
  /**
   * Detect patterns in data
   */
  async detectPatterns() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[38]++;
    cov_1v3g9k4d8i().s[239]++;
    // Mock pattern detection - replace with actual ML algorithms
    return [{
      insightType: 'pattern',
      title: 'Weekly Engagement Pattern',
      description: 'Users show 30% higher engagement on weekends compared to weekdays',
      confidence: 0.87,
      impact: 'medium',
      data: {
        weekendEngagement: 0.75,
        weekdayEngagement: 0.45
      },
      recommendations: ['Schedule premium content for weekends', 'Adjust marketing campaigns'],
      actionable: true
    }];
  }
  /**
   * Detect anomalies in data
   */
  async detectAnomalies() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[39]++;
    cov_1v3g9k4d8i().s[240]++;
    // Mock anomaly detection - replace with actual ML algorithms
    return [{
      insightType: 'anomaly',
      title: 'Unusual Traffic Spike',
      description: 'Detected 300% traffic increase at 3 AM - potential bot activity',
      confidence: 0.95,
      impact: 'high',
      data: {
        normalTraffic: 100,
        spikeTraffic: 400,
        time: '03:00'
      },
      recommendations: ['Investigate traffic source', 'Implement bot detection'],
      actionable: true
    }];
  }
  /**
   * Analyze trends in data
   */
  async analyzeTrends() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[40]++;
    cov_1v3g9k4d8i().s[241]++;
    // Mock trend analysis - replace with actual ML algorithms
    return [{
      insightType: 'trend',
      title: 'Growing Mobile Usage',
      description: 'Mobile usage has increased 45% over the past month',
      confidence: 0.92,
      impact: 'high',
      data: {
        mobileGrowth: 0.45,
        desktopDecline: 0.15
      },
      recommendations: ['Optimize mobile experience', 'Prioritize mobile features'],
      actionable: true
    }];
  }
  /**
   * Get all AB tests
   */
  async getAllABTests() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[41]++;
    cov_1v3g9k4d8i().s[242]++;
    return Array.from(this.abTests.values());
  }
  /**
   * Get all ML models
   */
  async getAllModels() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[42]++;
    cov_1v3g9k4d8i().s[243]++;
    return Array.from(this.models.values());
  }
  /**
   * Get ML analytics
   */
  async getMLAnalytics() {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[43]++;
    cov_1v3g9k4d8i().s[244]++;
    return {
      totalModels: this.models.size,
      activeTests: this.abTests.size,
      totalInsights: this.insights.length,
      averageAccuracy: 0.85,
      lastTraining: new Date()
    };
  }
  /**
   * Get feature importance for a model
   */
  async getFeatureImportance(modelId) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[44]++;
    const model =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[245]++, this.models.get(modelId));
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[246]++;
    if (!model) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().b[50][0]++;
      cov_1v3g9k4d8i().s[247]++;
      throw new Error('Model not found');
    } else
    /* istanbul ignore next */
    {
      cov_1v3g9k4d8i().b[50][1]++;
    }
    cov_1v3g9k4d8i().s[248]++;
    return {
      modelId,
      features: model.features.map(feature => {
        /* istanbul ignore next */
        cov_1v3g9k4d8i().f[45]++;
        cov_1v3g9k4d8i().s[249]++;
        return {
          name: feature,
          importance: Math.random(),
          // Mock importance score
          impact: 'positive'
        };
      })
    };
  }
  /**
   * Retrain a model with new data
   */
  async retrainModel(modelId, newTrainingData) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[46]++;
    const model =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[250]++, this.models.get(modelId));
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[251]++;
    if (!model) {
      /* istanbul ignore next */
      cov_1v3g9k4d8i().b[51][0]++;
      cov_1v3g9k4d8i().s[252]++;
      throw new Error('Model not found');
    } else
    /* istanbul ignore next */
    {
      cov_1v3g9k4d8i().b[51][1]++;
    }
    // Mock retraining process
    const newAccuracy =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[253]++, Math.min(0.95, model.accuracy + 0.05));
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[254]++;
    model.accuracy = newAccuracy;
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[255]++;
    model.lastTrained = new Date();
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[256]++;
    model.status = 'ready';
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[257]++;
    return {
      modelId,
      newAccuracy,
      status: 'retrained',
      lastTrained: model.lastTrained
    };
  }
  /**
   * Delete a model
   */
  async deleteModel(modelId) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[47]++;
    const deleted =
    /* istanbul ignore next */
    (cov_1v3g9k4d8i().s[258]++, this.models.delete(modelId));
    /* istanbul ignore next */
    cov_1v3g9k4d8i().s[259]++;
    return {
      deleted,
      modelId
    };
  }
  /**
   * Run optimization process
   */
  async runOptimization(optimizationType, parameters) {
    /* istanbul ignore next */
    cov_1v3g9k4d8i().f[48]++;
    cov_1v3g9k4d8i().s[260]++;
    return {
      optimizationType,
      parameters,
      status: 'running',
      estimatedCompletion: new Date(Date.now() + 300000),
      // 5 minutes
      progress: 0
    };
  }
}
/* istanbul ignore next */
cov_1v3g9k4d8i().s[261]++;
exports.MachineLearningOptimizationService = MachineLearningOptimizationService;
/* istanbul ignore next */
cov_1v3g9k4d8i().s[262]++;
exports.machineLearningOptimizationService = MachineLearningOptimizationService.getInstance();