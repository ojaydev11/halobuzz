{
  "name": "halobuzz-backend",
  "version": "0.1.0",
  "description": "HaloBuzz Backend API and Real-time Services",
  "main": "dist/index.js",
  "scripts": {
    "dev": "ts-node-dev --respawn --transpile-only -r tsconfig-paths/register src/index.ts",
    "seed": "ts-node scripts/seeds/index.ts",
    "build": "rm -rf dist && tsc && tsc-alias",
    "build:dev": "ts-node-dev --transpile-only src/index.ts",
    "build:ts": "tsc",
    "start": "node dist/index.js",
    "start:prod": "node dist/index.js",
    "test": "jest --runInBand",
    "test:watch": "jest --watchAll",
    "test:unit": "jest --testPathPattern=unit --runInBand",
    "test:integration": "jest --testPathPattern=integration --runInBand",
    "test:e2e": "jest --testPathPattern=e2e --runInBand",
    "test:security": "jest --runInBand src/__tests__/security",
    "test:coverage": "jest --coverage --runInBand",
    "test:coverage:ci": "jest --coverage --runInBand --ci --coverageReporters=text-lcov | coveralls",
    "test:performance": "jest --testPathPattern=performance --runInBand",
    "test:memory": "jest --testPathPattern=memory --runInBand",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:ci": "npm run lint && npm run type-check && npm run test:coverage && npm run test:security",
    "test:load": "artillery run load-tests/load-test.yml",
    "test:load:basic": "artillery run load-tests/basic-load.yml",
    "test:load:stress": "artillery run load-tests/stress-test.yml",
    "backup:create": "ts-node scripts/backup.ts create",
    "backup:restore": "ts-node scripts/backup.ts restore",
    "monitoring:health": "curl -f http://localhost:3000/api/v1/monitoring/health || exit 1",
    "security:check": "curl -f http://localhost:3000/api/v1/security/dashboard || exit 1",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "audit": "npm audit --audit-level=moderate",
    "audit:fix": "npm audit fix",
    "test:comprehensive": "npm run lint && npm run type-check && npm run test:all && npm run test:coverage && npm run audit",
    "deploy:staging": "npm run build && npm run test:ci && docker-compose -f docker-compose.staging.yml up -d --build",
    "deploy:production": "npm run build && npm run test:ci && docker-compose -f docker-compose.production.yml up -d --build",
    "deploy:simple": "node scripts/deploy-simple.js",
    "deploy:simple:staging": "node scripts/deploy-simple.js staging",
    "deploy:simple:production": "node scripts/deploy-simple.js production",
    "deploy:core": "node scripts/deploy-core.js",
    "deploy:core:staging": "node scripts/deploy-core.js staging",
    "deploy:core:production": "node scripts/deploy-core.js production",
    "deploy:minimal": "node scripts/deploy-minimal.js",
    "deploy:minimal:staging": "node scripts/deploy-minimal.js staging",
    "deploy:minimal:production": "node scripts/deploy-minimal.js production",
    "test:smoke:staging": "npm run test:smoke -- --env=staging",
    "test:smoke:production": "npm run test:smoke -- --env=production",
    "test:smoke": "artillery run load-tests/smoke-test.yml",
    "rollout:canary": "node scripts/rollout-canary.js",
    "monitor:production": "node scripts/monitor-production.js",
    "rollback:emergency": "node scripts/emergency-rollback.js",
    "health:check": "curl -f http://localhost:4000/healthz || exit 1",
    "feature:flags": "node scripts/manage-feature-flags.js"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.450.0",
    "@aws-sdk/s3-request-presigner": "^3.450.0",
    "@fastify/rate-limit": "^10.3.0",
    "@nestjs/common": "^11.1.6",
    "@nestjs/mongoose": "^11.0.3",
    "@socket.io/redis-adapter": "^8.3.0",
    "@types/node-cron": "^3.0.11",
    "@types/webrtc": "^0.0.46",
    "@types/ws": "^8.18.1",
    "agora-access-token": "^2.0.4",
    "aws-sdk": "^2.1490.0",
    "axios": "^1.6.2",
    "base32-decode": "^1.0.0",
    "base32-encode": "^2.0.0",
    "bcryptjs": "^2.4.3",
    "bull": "^4.12.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "dayjs": "^1.11.18",
    "dotenv": "^16.3.1",
    "ethers": "^6.8.1",
    "express": "^4.18.2",
    "express-list-endpoints": "^7.1.1",
    "express-rate-limit": "^7.1.5",
    "express-slow-down": "^2.0.1",
    "express-validator": "^7.0.1",
    "fastify": "^5.6.1",
    "file-type": "^18.7.0",
    "firebase-admin": "^12.0.0",
    "helmet": "^7.1.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "mongoose": "^8.0.3",
    "multer": "^1.4.5-lts.1",
    "node-cron": "^3.0.3",
    "nodemailer": "^6.9.7",
    "openai": "^4.20.1",
    "paypal-rest-sdk": "^1.8.1",
    "qrcode": "^1.5.3",
    "redis": "^4.6.11",
    "sharp": "^0.33.0",
    "socket.io": "^4.7.4",
    "socket.io-client": "^4.7.4",
    "speakeasy": "^2.0.0",
    "stripe": "^14.7.0",
    "tsconfig-paths": "^4.2.0",
    "twilio": "^4.19.0",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "ws": "^8.18.3",
    "xlsx": "^0.18.5"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/lodash": "^4.14.202",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.10.0",
    "@types/nodemailer": "^6.4.14",
    "@types/qrcode": "^1.5.5",
    "@types/socket.io": "^3.0.2",
    "@types/speakeasy": "^2.0.10",
    "@types/supertest": "^2.0.16",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "artillery": "^2.0.0",
    "coveralls": "^3.1.1",
    "eslint": "^8.55.0",
    "jest": "^29.7.0",
    "jest-sonar-reporter": "^2.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "mongodb-memory-server": "^9.1.1",
    "nodemon": "^3.0.2",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "tsc-alias": "^1.8.16",
    "typescript": "^5.3.2"
  },
  "optionalDependencies": {
    "unix-dgram": "^2.0.7"
  },
  "engines": {
    "node": ">=20 <21",
    "packageManager": "pnpm@9"
  },
  "packageManager": "pnpm@9.1.0",
  "pnpm": {
    "optionalDependencies": {
      "unix-dgram": false
    }
  }
}
