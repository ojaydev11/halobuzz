config:
  target: 'http://localhost:3000'
  phases:
    # Warm-up phase
    - duration: 60s
      arrivalRate: 5
      name: "Warm-up"
    
    # Ramp-up phase
    - duration: 120s
      arrivalRate: 10
      rampTo: 50
      name: "Ramp-up"
    
    # Sustained load phase
    - duration: 300s
      arrivalRate: 50
      name: "Sustained load"
    
    # Peak load phase
    - duration: 180s
      arrivalRate: 100
      name: "Peak load"
    
    # Cool-down phase
    - duration: 60s
      arrivalRate: 10
      name: "Cool-down"

scenarios:
  - name: "User Authentication Flow"
    weight: 30
    flow:
      - post:
          url: "/api/auth/login"
          json:
            email: "test@example.com"
            password: "password123"
          capture:
            - json: "$.data.token"
              as: "authToken"
      
      - get:
          url: "/api/users/profile"
          headers:
            Authorization: "Bearer {{ authToken }}"
      
      - put:
          url: "/api/users/profile"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            firstName: "Load Test"
            lastName: "User"

  - name: "Payment Processing"
    weight: 25
    flow:
      - post:
          url: "/api/auth/login"
          json:
            email: "test@example.com"
            password: "password123"
          capture:
            - json: "$.data.token"
              as: "authToken"
      
      - get:
          url: "/api/global-payments/currencies"
          headers:
            Authorization: "Bearer {{ authToken }}"
      
      - post:
          url: "/api/global-payments/convert"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            amount: 100
            fromCurrency: "USD"
            toCurrency: "EUR"
      
      - post:
          url: "/api/global-payments/validate"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            amount: 100
            currency: "USD"
            paymentMethod: "stripe"

  - name: "Localization Services"
    weight: 20
    flow:
      - post:
          url: "/api/auth/login"
          json:
            email: "test@example.com"
            password: "password123"
          capture:
            - json: "$.data.token"
              as: "authToken"
      
      - get:
          url: "/api/localization/locales"
          headers:
            Authorization: "Bearer {{ authToken }}"
      
      - post:
          url: "/api/localization/translate"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            key: "welcome"
            locale: "ne"
      
      - post:
          url: "/api/localization/format-currency"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            amount: 100.50
            locale: "en"

  - name: "GDPR Compliance"
    weight: 15
    flow:
      - post:
          url: "/api/auth/login"
          json:
            email: "test@example.com"
            password: "password123"
          capture:
            - json: "$.data.token"
              as: "authToken"
      
      - post:
          url: "/api/gdpr/consent"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            consentType: "marketing"
            granted: true
      
      - get:
          url: "/api/gdpr/consent/marketing"
          headers:
            Authorization: "Bearer {{ authToken }}"
      
      - get:
          url: "/api/gdpr/privacy-settings"
          headers:
            Authorization: "Bearer {{ authToken }}"

  - name: "AI Games"
    weight: 10
    flow:
      - post:
          url: "/api/auth/login"
          json:
            email: "test@example.com"
            password: "password123"
          capture:
            - json: "$.data.token"
              as: "authToken"
      
      - get:
          url: "/api/ai-games/games"
          headers:
            Authorization: "Bearer {{ authToken }}"
      
      - get:
          url: "/api/ai-games/statistics"
          headers:
            Authorization: "Bearer {{ authToken }}"

plugins:
  metrics-by-endpoint:
    useOnlyRequestNames: true
  
  publish-metrics:
    - type: "influxdb"
      config:
        protocol: "http"
        host: "localhost"
        port: 8086
        database: "artillery"
        username: "artillery"
        password: "artillery"
        tags:
          environment: "load-test"
          service: "halobuzz-backend"

expect:
  maxErrorRate: 5
  maxMeanResponseTime: 2000
  maxP95ResponseTime: 5000
  maxP99ResponseTime: 10000
