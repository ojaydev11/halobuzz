{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport LiveFeedScreen from \"../screens/live/LiveFeedScreen\";\nimport LiveRoomScreen from \"../screens/live/LiveRoomScreen\";\nimport GoLiveScreen from \"../screens/live/GoLiveScreen\";\nimport LiveSettingsScreen from \"../screens/live/LiveSettingsScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar LiveTabNavigator = function LiveTabNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: true,\n      cardStyleInterpolator: function cardStyleInterpolator(_ref) {\n        var current = _ref.current,\n          layouts = _ref.layouts;\n        return {\n          cardStyle: {\n            transform: [{\n              translateX: current.progress.interpolate({\n                inputRange: [0, 1],\n                outputRange: [layouts.screen.width, 0]\n              })\n            }]\n          }\n        };\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"LiveFeed\",\n      component: LiveFeedScreen,\n      options: {\n        title: 'Live'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"LiveRoom\",\n      component: LiveRoomScreen,\n      options: {\n        title: 'Live Room',\n        gestureEnabled: Platform.OS === 'ios'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"GoLive\",\n      component: GoLiveScreen,\n      options: {\n        title: 'Go Live',\n        presentation: 'modal'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"LiveSettings\",\n      component: LiveSettingsScreen,\n      options: {\n        title: 'Live Settings',\n        presentation: 'modal'\n      }\n    })]\n  });\n};\nexport default LiveTabNavigator;","map":{"version":3,"names":["React","createStackNavigator","Platform","LiveFeedScreen","LiveRoomScreen","GoLiveScreen","LiveSettingsScreen","jsx","_jsx","jsxs","_jsxs","Stack","LiveTabNavigator","Navigator","screenOptions","headerShown","gestureEnabled","cardStyleInterpolator","_ref","current","layouts","cardStyle","transform","translateX","progress","interpolate","inputRange","outputRange","screen","width","children","Screen","name","component","options","title","OS","presentation"],"sources":["D:/halobuzz by cursor/mobile/src/navigation/LiveTabNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { Platform } from 'react-native';\r\n\r\n// Screens\r\nimport LiveFeedScreen from '../screens/live/LiveFeedScreen';\r\nimport LiveRoomScreen from '../screens/live/LiveRoomScreen';\r\nimport GoLiveScreen from '../screens/live/GoLiveScreen';\r\nimport LiveSettingsScreen from '../screens/live/LiveSettingsScreen';\r\n\r\nexport type LiveStackParamList = {\r\n  LiveFeed: undefined;\r\n  LiveRoom: {\r\n    streamId: string;\r\n    streamerId: string;\r\n    streamerName: string;\r\n    isAnonymous?: boolean;\r\n  };\r\n  GoLive: undefined;\r\n  LiveSettings: undefined;\r\n};\r\n\r\nconst Stack = createStackNavigator<LiveStackParamList>();\r\n\r\nconst LiveTabNavigator: React.FC = () => {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        gestureEnabled: true,\r\n        cardStyleInterpolator: ({ current, layouts }) => {\r\n          return {\r\n            cardStyle: {\r\n              transform: [\r\n                {\r\n                  translateX: current.progress.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [layouts.screen.width, 0],\r\n                  }),\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen \r\n        name=\"LiveFeed\" \r\n        component={LiveFeedScreen}\r\n        options={{\r\n          title: 'Live',\r\n        }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"LiveRoom\" \r\n        component={LiveRoomScreen}\r\n        options={{\r\n          title: 'Live Room',\r\n          gestureEnabled: Platform.OS === 'ios',\r\n        }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"GoLive\" \r\n        component={GoLiveScreen}\r\n        options={{\r\n          title: 'Go Live',\r\n          presentation: 'modal',\r\n        }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"LiveSettings\" \r\n        component={LiveSettingsScreen}\r\n        options={{\r\n          title: 'Live Settings',\r\n          presentation: 'modal',\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default LiveTabNavigator;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,yBAAyB;AAAC,OAAAC,QAAA;AAI/D,OAAOC,cAAc;AACrB,OAAOC,cAAc;AACrB,OAAOC,YAAY;AACnB,OAAOC,kBAAkB;AAA2C,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAcpE,IAAMC,KAAK,GAAGV,oBAAoB,CAAqB,CAAC;AAExD,IAAMW,gBAA0B,GAAG,SAA7BA,gBAA0BA,CAAA,EAAS;EACvC,OACEF,KAAA,CAACC,KAAK,CAACE,SAAS;IACdC,aAAa,EAAE;MACbC,WAAW,EAAE,KAAK;MAClBC,cAAc,EAAE,IAAI;MACpBC,qBAAqB,EAAE,SAAvBA,qBAAqBA,CAAAC,IAAA,EAA4B;QAAA,IAAvBC,OAAO,GAAAD,IAAA,CAAPC,OAAO;UAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;QACxC,OAAO;UACLC,SAAS,EAAE;YACTC,SAAS,EAAE,CACT;cACEC,UAAU,EAAEJ,OAAO,CAACK,QAAQ,CAACC,WAAW,CAAC;gBACvCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBAClBC,WAAW,EAAE,CAACP,OAAO,CAACQ,MAAM,CAACC,KAAK,EAAE,CAAC;cACvC,CAAC;YACH,CAAC;UAEL;QACF,CAAC;MACH;IACF,CAAE;IAAAC,QAAA,GAEFtB,IAAA,CAACG,KAAK,CAACoB,MAAM;MACXC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAE9B,cAAe;MAC1B+B,OAAO,EAAE;QACPC,KAAK,EAAE;MACT;IAAE,CACH,CAAC,EACF3B,IAAA,CAACG,KAAK,CAACoB,MAAM;MACXC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAE7B,cAAe;MAC1B8B,OAAO,EAAE;QACPC,KAAK,EAAE,WAAW;QAClBnB,cAAc,EAAEd,QAAQ,CAACkC,EAAE,KAAK;MAClC;IAAE,CACH,CAAC,EACF5B,IAAA,CAACG,KAAK,CAACoB,MAAM;MACXC,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAE5B,YAAa;MACxB6B,OAAO,EAAE;QACPC,KAAK,EAAE,SAAS;QAChBE,YAAY,EAAE;MAChB;IAAE,CACH,CAAC,EACF7B,IAAA,CAACG,KAAK,CAACoB,MAAM;MACXC,IAAI,EAAC,cAAc;MACnBC,SAAS,EAAE3B,kBAAmB;MAC9B4B,OAAO,EAAE;QACPC,KAAK,EAAE,eAAe;QACtBE,YAAY,EAAE;MAChB;IAAE,CACH,CAAC;EAAA,CACa,CAAC;AAEtB,CAAC;AAED,eAAezB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}