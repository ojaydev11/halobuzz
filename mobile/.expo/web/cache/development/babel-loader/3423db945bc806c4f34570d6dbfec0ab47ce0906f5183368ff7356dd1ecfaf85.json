{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport authSlice from \"./slices/authSlice\";\nimport userSlice from \"./slices/userSlice\";\nimport liveSlice from \"./slices/liveSlice\";\nimport reelsSlice from \"./slices/reelsSlice\";\nimport gamesSlice from \"./slices/gamesSlice\";\nimport walletSlice from \"./slices/walletSlice\";\nimport ogStoreSlice from \"./slices/ogStoreSlice\";\nimport inboxSlice from \"./slices/inboxSlice\";\nimport settingsSlice from \"./slices/settingsSlice\";\nimport featureFlagsSlice from \"./slices/featureFlagsSlice\";\nvar persistConfig = {\n  key: 'root',\n  storage: AsyncStorage,\n  whitelist: ['auth', 'user', 'settings', 'wallet']\n};\nvar persistedAuthReducer = persistReducer(persistConfig, authSlice);\nvar persistedUserReducer = persistReducer(persistConfig, userSlice);\nvar persistedSettingsReducer = persistReducer(persistConfig, settingsSlice);\nvar persistedWalletReducer = persistReducer(persistConfig, walletSlice);\nexport var store = configureStore({\n  reducer: {\n    auth: persistedAuthReducer,\n    user: persistedUserReducer,\n    live: liveSlice,\n    reels: reelsSlice,\n    games: gamesSlice,\n    wallet: persistedWalletReducer,\n    ogStore: ogStoreSlice,\n    inbox: inboxSlice,\n    settings: persistedSettingsReducer,\n    featureFlags: featureFlagsSlice\n  },\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE']\n      }\n    });\n  }\n});\nexport var persistor = persistStore(store);","map":{"version":3,"names":["configureStore","persistStore","persistReducer","AsyncStorage","authSlice","userSlice","liveSlice","reelsSlice","gamesSlice","walletSlice","ogStoreSlice","inboxSlice","settingsSlice","featureFlagsSlice","persistConfig","key","storage","whitelist","persistedAuthReducer","persistedUserReducer","persistedSettingsReducer","persistedWalletReducer","store","reducer","auth","user","live","reels","games","wallet","ogStore","inbox","settings","featureFlags","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["D:/halobuzz by cursor/mobile/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// Slices\r\nimport authSlice from './slices/authSlice';\r\nimport userSlice from './slices/userSlice';\r\nimport liveSlice from './slices/liveSlice';\r\nimport reelsSlice from './slices/reelsSlice';\r\nimport gamesSlice from './slices/gamesSlice';\r\nimport walletSlice from './slices/walletSlice';\r\nimport ogStoreSlice from './slices/ogStoreSlice';\r\nimport inboxSlice from './slices/inboxSlice';\r\nimport settingsSlice from './slices/settingsSlice';\r\nimport featureFlagsSlice from './slices/featureFlagsSlice';\r\n\r\n// Persist config\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: AsyncStorage,\r\n  whitelist: ['auth', 'user', 'settings', 'wallet'], // Only persist these slices\r\n};\r\n\r\nconst persistedAuthReducer = persistReducer(persistConfig, authSlice);\r\nconst persistedUserReducer = persistReducer(persistConfig, userSlice);\r\nconst persistedSettingsReducer = persistReducer(persistConfig, settingsSlice);\r\nconst persistedWalletReducer = persistReducer(persistConfig, walletSlice);\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistedAuthReducer,\r\n    user: persistedUserReducer,\r\n    live: liveSlice,\r\n    reels: reelsSlice,\r\n    games: gamesSlice,\r\n    wallet: persistedWalletReducer,\r\n    ogStore: ogStoreSlice,\r\n    inbox: inboxSlice,\r\n    settings: persistedSettingsReducer,\r\n    featureFlags: featureFlagsSlice,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,YAAY,MAAM,2CAA2C;AAGpE,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,iBAAiB;AAGxB,IAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAEb,YAAY;EACrBc,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ;AAClD,CAAC;AAED,IAAMC,oBAAoB,GAAGhB,cAAc,CAACY,aAAa,EAAEV,SAAS,CAAC;AACrE,IAAMe,oBAAoB,GAAGjB,cAAc,CAACY,aAAa,EAAET,SAAS,CAAC;AACrE,IAAMe,wBAAwB,GAAGlB,cAAc,CAACY,aAAa,EAAEF,aAAa,CAAC;AAC7E,IAAMS,sBAAsB,GAAGnB,cAAc,CAACY,aAAa,EAAEL,WAAW,CAAC;AAEzE,OAAO,IAAMa,KAAK,GAAGtB,cAAc,CAAC;EAClCuB,OAAO,EAAE;IACPC,IAAI,EAAEN,oBAAoB;IAC1BO,IAAI,EAAEN,oBAAoB;IAC1BO,IAAI,EAAEpB,SAAS;IACfqB,KAAK,EAAEpB,UAAU;IACjBqB,KAAK,EAAEpB,UAAU;IACjBqB,MAAM,EAAER,sBAAsB;IAC9BS,OAAO,EAAEpB,YAAY;IACrBqB,KAAK,EAAEpB,UAAU;IACjBqB,QAAQ,EAAEZ,wBAAwB;IAClCa,YAAY,EAAEpB;EAChB,CAAC;EACDqB,UAAU,EAAE,SAAZA,UAAUA,CAAGC,oBAAoB;IAAA,OAC/BA,oBAAoB,CAAC;MACnBC,iBAAiB,EAAE;QACjBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,mBAAmB;MACzD;IACF,CAAC,CAAC;EAAA;AACN,CAAC,CAAC;AAEF,OAAO,IAAMC,SAAS,GAAGrC,YAAY,CAACqB,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}