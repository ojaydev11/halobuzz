{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { io } from 'socket.io-client';\nimport { store } from \"../store\";\nimport { selectUser } from \"../store/slices/authSlice\";\nvar SocketService = function () {\n  function SocketService() {\n    _classCallCheck(this, SocketService);\n    this.socket = null;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 1000;\n  }\n  return _createClass(SocketService, [{\n    key: \"initializeSocket\",\n    value: function () {\n      var _initializeSocket = _asyncToGenerator(function* () {\n        try {\n          var user = selectUser(store.getState());\n          if (!(user != null && user.id)) {\n            console.log('No user found, skipping socket initialization');\n            return;\n          }\n          this.socket = io('http://localhost:3001', {\n            auth: {\n              userId: user.id,\n              token: 'user-token'\n            },\n            transports: ['websocket', 'polling'],\n            timeout: 20000,\n            forceNew: true\n          });\n          this.setupEventListeners();\n          console.log('Socket.IO connected successfully');\n        } catch (error) {\n          console.error('Failed to initialize socket:', error);\n        }\n      });\n      function initializeSocket() {\n        return _initializeSocket.apply(this, arguments);\n      }\n      return initializeSocket;\n    }()\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this = this;\n      if (!this.socket) return;\n      this.socket.on('connect', function () {\n        console.log('Connected to server');\n        _this.reconnectAttempts = 0;\n      });\n      this.socket.on('disconnect', function (reason) {\n        console.log('Disconnected from server:', reason);\n        _this.handleReconnect();\n      });\n      this.socket.on('connect_error', function (error) {\n        console.error('Connection error:', error);\n        _this.handleReconnect();\n      });\n      this.socket.on('stream:join', function (data) {\n        console.log('Stream join:', data);\n      });\n      this.socket.on('stream:leave', function (data) {\n        console.log('Stream leave:', data);\n      });\n      this.socket.on('chat:new', function (data) {\n        console.log('Chat new:', data);\n      });\n      this.socket.on('gift:sent', function (data) {\n        console.log('Gift sent:', data);\n      });\n      this.socket.on('throne:claimed', function (data) {\n        console.log('Throne claimed:', data);\n      });\n      this.socket.on('battle:boost', function (data) {\n        console.log('Battle boost:', data);\n      });\n      this.socket.on('ai:warning', function (data) {\n        console.log('AI warning:', data);\n      });\n      this.socket.on('og:changed', function (data) {\n        console.log('OG changed:', data);\n      });\n      this.socket.on('metrics:update', function (data) {\n        console.log('Metrics update:', data);\n      });\n    }\n  }, {\n    key: \"handleReconnect\",\n    value: function handleReconnect() {\n      var _this2 = this;\n      if (this.reconnectAttempts < this.maxReconnectAttempts) {\n        this.reconnectAttempts++;\n        console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})`);\n        setTimeout(function () {\n          _this2.initializeSocket();\n        }, this.reconnectDelay * this.reconnectAttempts);\n      } else {\n        console.error('Max reconnection attempts reached');\n      }\n    }\n  }, {\n    key: \"joinLiveStream\",\n    value: function joinLiveStream(streamId) {\n      if (this.socket) {\n        this.socket.emit('stream:join', {\n          streamId: streamId\n        });\n      }\n    }\n  }, {\n    key: \"leaveLiveStream\",\n    value: function leaveLiveStream(streamId) {\n      if (this.socket) {\n        this.socket.emit('stream:leave', {\n          streamId: streamId\n        });\n      }\n    }\n  }, {\n    key: \"sendChatMessage\",\n    value: function sendChatMessage(streamId, message) {\n      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'public';\n      if (this.socket) {\n        this.socket.emit('chat:new', {\n          streamId: streamId,\n          message: message,\n          type: type\n        });\n      }\n    }\n  }, {\n    key: \"sendGift\",\n    value: function sendGift(streamId, giftId) {\n      var quantity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      if (this.socket) {\n        this.socket.emit('gift:sent', {\n          streamId: streamId,\n          giftId: giftId,\n          quantity: quantity\n        });\n      }\n    }\n  }, {\n    key: \"claimThrone\",\n    value: function claimThrone(streamId) {\n      if (this.socket) {\n        this.socket.emit('throne:claimed', {\n          streamId: streamId\n        });\n      }\n    }\n  }, {\n    key: \"sendBattleBoost\",\n    value: function sendBattleBoost(streamId, boostType, boostAmount) {\n      if (this.socket) {\n        this.socket.emit('battle:boost', {\n          streamId: streamId,\n          boostType: boostType,\n          boostAmount: boostAmount\n        });\n      }\n    }\n  }, {\n    key: \"sendAiWarning\",\n    value: function sendAiWarning(streamId, warningType, message) {\n      if (this.socket) {\n        this.socket.emit('ai:warning', {\n          streamId: streamId,\n          warningType: warningType,\n          message: message\n        });\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      var _this$socket;\n      return ((_this$socket = this.socket) == null ? void 0 : _this$socket.connected) || false;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      if (this.socket) {\n        this.socket.disconnect();\n        this.socket = null;\n      }\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      if (this.socket) {\n        this.socket.on(event, callback);\n      }\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, callback) {\n      if (this.socket) {\n        this.socket.off(event, callback);\n      }\n    }\n  }]);\n}();\nexport var socketService = new SocketService();\nexport var initializeSocket = function () {\n  var _ref = _asyncToGenerator(function* () {\n    yield socketService.initializeSocket();\n  });\n  return function initializeSocket() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["io","store","selectUser","SocketService","_classCallCheck","socket","reconnectAttempts","maxReconnectAttempts","reconnectDelay","_createClass","key","value","_initializeSocket","_asyncToGenerator","user","getState","id","console","log","auth","userId","token","transports","timeout","forceNew","setupEventListeners","error","initializeSocket","apply","arguments","_this","on","reason","handleReconnect","data","_this2","setTimeout","joinLiveStream","streamId","emit","leaveLiveStream","sendChatMessage","message","type","length","undefined","sendGift","giftId","quantity","claimThrone","sendBattleBoost","boostType","boostAmount","sendAiWarning","warningType","isConnected","_this$socket","connected","disconnect","event","callback","off","socketService","_ref"],"sources":["D:/halobuzz by cursor/mobile/src/services/socketService.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client';\r\nimport { store } from '../store';\r\nimport { selectUser } from '../store/slices/authSlice';\r\n\r\nclass SocketService {\r\n  private socket: Socket | null = null;\r\n  private reconnectAttempts = 0;\r\n  private maxReconnectAttempts = 5;\r\n  private reconnectDelay = 1000;\r\n\r\n  async initializeSocket() {\r\n    try {\r\n      const user = selectUser(store.getState());\r\n      \r\n      if (!user?.id) {\r\n        console.log('No user found, skipping socket initialization');\r\n        return;\r\n      }\r\n\r\n      this.socket = io('http://localhost:3001', {\r\n        auth: {\r\n          userId: user.id,\r\n          token: 'user-token', // Replace with actual token\r\n        },\r\n        transports: ['websocket', 'polling'],\r\n        timeout: 20000,\r\n        forceNew: true,\r\n      });\r\n\r\n      this.setupEventListeners();\r\n      \r\n      console.log('Socket.IO connected successfully');\r\n    } catch (error) {\r\n      console.error('Failed to initialize socket:', error);\r\n    }\r\n  }\r\n\r\n  private setupEventListeners() {\r\n    if (!this.socket) return;\r\n\r\n    this.socket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      this.reconnectAttempts = 0;\r\n    });\r\n\r\n    this.socket.on('disconnect', (reason) => {\r\n      console.log('Disconnected from server:', reason);\r\n      this.handleReconnect();\r\n    });\r\n\r\n    this.socket.on('connect_error', (error) => {\r\n      console.error('Connection error:', error);\r\n      this.handleReconnect();\r\n    });\r\n\r\n    // Canonical events only\r\n    this.socket.on('stream:join', (data) => {\r\n      console.log('Stream join:', data);\r\n    });\r\n\r\n    this.socket.on('stream:leave', (data) => {\r\n      console.log('Stream leave:', data);\r\n    });\r\n\r\n    this.socket.on('chat:new', (data) => {\r\n      console.log('Chat new:', data);\r\n    });\r\n\r\n    this.socket.on('gift:sent', (data) => {\r\n      console.log('Gift sent:', data);\r\n    });\r\n\r\n    this.socket.on('throne:claimed', (data) => {\r\n      console.log('Throne claimed:', data);\r\n    });\r\n\r\n    this.socket.on('battle:boost', (data) => {\r\n      console.log('Battle boost:', data);\r\n    });\r\n\r\n    this.socket.on('ai:warning', (data) => {\r\n      console.log('AI warning:', data);\r\n    });\r\n\r\n    this.socket.on('og:changed', (data) => {\r\n      console.log('OG changed:', data);\r\n    });\r\n\r\n    this.socket.on('metrics:update', (data) => {\r\n      console.log('Metrics update:', data);\r\n    });\r\n  }\r\n\r\n  private handleReconnect() {\r\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\r\n      this.reconnectAttempts++;\r\n      console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})`);\r\n      \r\n      setTimeout(() => {\r\n        this.initializeSocket();\r\n      }, this.reconnectDelay * this.reconnectAttempts);\r\n    } else {\r\n      console.error('Max reconnection attempts reached');\r\n    }\r\n  }\r\n\r\n  // Canonical emitters\r\n  joinLiveStream(streamId: string) {\r\n    if (this.socket) {\r\n      this.socket.emit('stream:join', { streamId });\r\n    }\r\n  }\r\n\r\n  leaveLiveStream(streamId: string) {\r\n    if (this.socket) {\r\n      this.socket.emit('stream:leave', { streamId });\r\n    }\r\n  }\r\n\r\n  sendChatMessage(streamId: string, message: string, type: 'public' | 'private' | 'gift' = 'public') {\r\n    if (this.socket) {\r\n      this.socket.emit('chat:new', { streamId, message, type });\r\n    }\r\n  }\r\n\r\n  sendGift(streamId: string, giftId: string, quantity: number = 1) {\r\n    if (this.socket) {\r\n      this.socket.emit('gift:sent', { streamId, giftId, quantity });\r\n    }\r\n  }\r\n\r\n  claimThrone(streamId: string) {\r\n    if (this.socket) {\r\n      this.socket.emit('throne:claimed', { streamId });\r\n    }\r\n  }\r\n\r\n  sendBattleBoost(streamId: string, boostType: string, boostAmount: number) {\r\n    if (this.socket) {\r\n      this.socket.emit('battle:boost', { streamId, boostType, boostAmount });\r\n    }\r\n  }\r\n\r\n  sendAiWarning(streamId: string, warningType: string, message: string) {\r\n    if (this.socket) {\r\n      this.socket.emit('ai:warning', { streamId, warningType, message });\r\n    }\r\n  }\r\n\r\n  // Utility methods\r\n  isConnected(): boolean {\r\n    return this.socket?.connected || false;\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n    }\r\n  }\r\n\r\n  // Event listener management\r\n  on(event: string, callback: (data: any) => void) {\r\n    if (this.socket) {\r\n      this.socket.on(event, callback);\r\n    }\r\n  }\r\n\r\n  off(event: string, callback?: (data: any) => void) {\r\n    if (this.socket) {\r\n      this.socket.off(event, callback);\r\n    }\r\n  }\r\n}\r\n\r\nexport const socketService = new SocketService();\r\n\r\nexport const initializeSocket = async () => {\r\n  await socketService.initializeSocket();\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}