{"ast":null,"code":"import React from 'react';\nimport { Box, VStack, Text as NBText, Button, Icon, useColorModeValue } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReelsFeedScreen = function ReelsFeedScreen() {\n  var navigation = useNavigation();\n  var backgroundColor = useColorModeValue('background.primary', 'background.primary');\n  var textColor = useColorModeValue('text.primary', 'text.primary');\n  return _jsx(Box, {\n    flex: 1,\n    bg: backgroundColor,\n    safeArea: true,\n    children: _jsxs(VStack, {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      px: 8,\n      children: [_jsx(Icon, {\n        as: Ionicons,\n        name: \"play-circle\",\n        size: \"6xl\",\n        color: \"primary.500\",\n        mb: 4\n      }), _jsx(NBText, {\n        fontSize: \"2xl\",\n        fontWeight: \"bold\",\n        color: textColor,\n        textAlign: \"center\",\n        mb: 2,\n        children: \"Reels Feed\"\n      }), _jsx(NBText, {\n        fontSize: \"md\",\n        color: \"text.secondary\",\n        textAlign: \"center\",\n        mb: 8,\n        children: \"Short-form video content coming soon\"\n      }), _jsx(Button, {\n        size: \"lg\",\n        bg: \"primary.500\",\n        _pressed: {\n          bg: 'primary.600'\n        },\n        onPress: function onPress() {\n          return navigation.navigate('ReelsUpload');\n        },\n        children: \"Upload Reel\"\n      })]\n    })\n  });\n};\nexport default ReelsFeedScreen;","map":{"version":3,"names":["React","Box","VStack","Text","NBText","Button","Icon","useColorModeValue","Ionicons","useNavigation","jsx","_jsx","jsxs","_jsxs","ReelsFeedScreen","navigation","backgroundColor","textColor","flex","bg","safeArea","children","justifyContent","alignItems","px","as","name","size","color","mb","fontSize","fontWeight","textAlign","_pressed","onPress","navigate"],"sources":["D:/halobuzz by cursor/mobile/src/screens/reels/ReelsFeedScreen.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Box,\r\n  VStack,\r\n  Text as NBText,\r\n  Button,\r\n  Icon,\r\n  useColorModeValue,\r\n} from 'native-base';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { ReelsStackParamList } from '../../navigation/ReelsTabNavigator';\r\n\r\ntype ReelsFeedNavigationProp = StackNavigationProp<ReelsStackParamList, 'ReelsFeed'>;\r\n\r\nconst ReelsFeedScreen: React.FC = () => {\r\n  const navigation = useNavigation<ReelsFeedNavigationProp>();\r\n  const backgroundColor = useColorModeValue('background.primary', 'background.primary');\r\n  const textColor = useColorModeValue('text.primary', 'text.primary');\r\n\r\n  return (\r\n    <Box flex={1} bg={backgroundColor} safeArea>\r\n      <VStack flex={1} justifyContent=\"center\" alignItems=\"center\" px={8}>\r\n        <Icon\r\n          as={Ionicons}\r\n          name=\"play-circle\"\r\n          size=\"6xl\"\r\n          color=\"primary.500\"\r\n          mb={4}\r\n        />\r\n        <NBText fontSize=\"2xl\" fontWeight=\"bold\" color={textColor} textAlign=\"center\" mb={2}>\r\n          Reels Feed\r\n        </NBText>\r\n        <NBText fontSize=\"md\" color=\"text.secondary\" textAlign=\"center\" mb={8}>\r\n          Short-form video content coming soon\r\n        </NBText>\r\n        \r\n        <Button\r\n          size=\"lg\"\r\n          bg=\"primary.500\"\r\n          _pressed={{ bg: 'primary.600' }}\r\n          onPress={() => navigation.navigate('ReelsUpload')}\r\n        >\r\n          Upload Reel\r\n        </Button>\r\n      </VStack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReelsFeedScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,GAAG,EACHC,MAAM,EACNC,IAAI,IAAIC,MAAM,EACdC,MAAM,EACNC,IAAI,EACJC,iBAAiB,QACZ,aAAa;AACpB,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAMzD,IAAMC,eAAyB,GAAG,SAA5BA,eAAyBA,CAAA,EAAS;EACtC,IAAMC,UAAU,GAAGN,aAAa,CAA0B,CAAC;EAC3D,IAAMO,eAAe,GAAGT,iBAAiB,CAAC,oBAAoB,EAAE,oBAAoB,CAAC;EACrF,IAAMU,SAAS,GAAGV,iBAAiB,CAAC,cAAc,EAAE,cAAc,CAAC;EAEnE,OACEI,IAAA,CAACV,GAAG;IAACiB,IAAI,EAAE,CAAE;IAACC,EAAE,EAAEH,eAAgB;IAACI,QAAQ;IAAAC,QAAA,EACzCR,KAAA,CAACX,MAAM;MAACgB,IAAI,EAAE,CAAE;MAACI,cAAc,EAAC,QAAQ;MAACC,UAAU,EAAC,QAAQ;MAACC,EAAE,EAAE,CAAE;MAAAH,QAAA,GACjEV,IAAA,CAACL,IAAI;QACHmB,EAAE,EAAEjB,QAAS;QACbkB,IAAI,EAAC,aAAa;QAClBC,IAAI,EAAC,KAAK;QACVC,KAAK,EAAC,aAAa;QACnBC,EAAE,EAAE;MAAE,CACP,CAAC,EACFlB,IAAA,CAACP,MAAM;QAAC0B,QAAQ,EAAC,KAAK;QAACC,UAAU,EAAC,MAAM;QAACH,KAAK,EAAEX,SAAU;QAACe,SAAS,EAAC,QAAQ;QAACH,EAAE,EAAE,CAAE;QAAAR,QAAA,EAAC;MAErF,CAAQ,CAAC,EACTV,IAAA,CAACP,MAAM;QAAC0B,QAAQ,EAAC,IAAI;QAACF,KAAK,EAAC,gBAAgB;QAACI,SAAS,EAAC,QAAQ;QAACH,EAAE,EAAE,CAAE;QAAAR,QAAA,EAAC;MAEvE,CAAQ,CAAC,EAETV,IAAA,CAACN,MAAM;QACLsB,IAAI,EAAC,IAAI;QACTR,EAAE,EAAC,aAAa;QAChBc,QAAQ,EAAE;UAAEd,EAAE,EAAE;QAAc,CAAE;QAChCe,OAAO,EAAE,SAATA,OAAOA,CAAA;UAAA,OAAQnB,UAAU,CAACoB,QAAQ,CAAC,aAAa,CAAC;QAAA,CAAC;QAAAd,QAAA,EACnD;MAED,CAAQ,CAAC;IAAA,CACH;EAAC,CACN,CAAC;AAEV,CAAC;AAED,eAAeP,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}