{"ast":null,"code":"import React from 'react';\nimport { Box, VStack, Text as NBText, Button, Icon, useColorModeValue } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n  var backgroundColor = useColorModeValue('background.primary', 'background.primary');\n  var textColor = useColorModeValue('text.primary', 'text.primary');\n  return _jsx(Box, {\n    flex: 1,\n    bg: backgroundColor,\n    safeArea: true,\n    children: _jsxs(VStack, {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      px: 8,\n      children: [_jsx(Icon, {\n        as: Ionicons,\n        name: \"person\",\n        size: \"6xl\",\n        color: \"primary.500\",\n        mb: 4\n      }), _jsx(NBText, {\n        fontSize: \"2xl\",\n        fontWeight: \"bold\",\n        color: textColor,\n        textAlign: \"center\",\n        mb: 2,\n        children: \"Profile\"\n      }), _jsx(NBText, {\n        fontSize: \"md\",\n        color: \"text.secondary\",\n        textAlign: \"center\",\n        mb: 8,\n        children: \"User profile with OG badge and live history coming soon\"\n      }), _jsxs(VStack, {\n        space: 4,\n        width: \"100%\",\n        children: [_jsx(Button, {\n          size: \"lg\",\n          bg: \"primary.500\",\n          _pressed: {\n            bg: 'primary.600'\n          },\n          onPress: function onPress() {\n            return navigation.navigate('Wallet');\n          },\n          leftIcon: _jsx(Icon, {\n            as: Ionicons,\n            name: \"wallet\",\n            size: \"sm\"\n          }),\n          children: \"Wallet\"\n        }), _jsx(Button, {\n          size: \"lg\",\n          bg: \"yellow.500\",\n          _pressed: {\n            bg: 'yellow.600'\n          },\n          onPress: function onPress() {\n            return navigation.navigate('OGStore');\n          },\n          leftIcon: _jsx(Icon, {\n            as: Ionicons,\n            name: \"crown\",\n            size: \"sm\"\n          }),\n          children: \"OG Store\"\n        }), _jsx(Button, {\n          size: \"lg\",\n          bg: \"gray.500\",\n          _pressed: {\n            bg: 'gray.600'\n          },\n          onPress: function onPress() {\n            return navigation.navigate('Settings');\n          },\n          leftIcon: _jsx(Icon, {\n            as: Ionicons,\n            name: \"settings\",\n            size: \"sm\"\n          }),\n          children: \"Settings\"\n        })]\n      })]\n    })\n  });\n};\nexport default ProfileScreen;","map":{"version":3,"names":["React","Box","VStack","Text","NBText","Button","Icon","useColorModeValue","Ionicons","useNavigation","jsx","_jsx","jsxs","_jsxs","ProfileScreen","navigation","backgroundColor","textColor","flex","bg","safeArea","children","justifyContent","alignItems","px","as","name","size","color","mb","fontSize","fontWeight","textAlign","space","width","_pressed","onPress","navigate","leftIcon"],"sources":["D:/halobuzz by cursor/mobile/src/screens/profile/ProfileScreen.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Box,\r\n  VStack,\r\n  Text as NBText,\r\n  Button,\r\n  Icon,\r\n  useColorModeValue,\r\n  HStack,\r\n} from 'native-base';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { ProfileStackParamList } from '../../navigation/ProfileTabNavigator';\r\n\r\ntype ProfileNavigationProp = StackNavigationProp<ProfileStackParamList, 'Profile'>;\r\n\r\nconst ProfileScreen: React.FC = () => {\r\n  const navigation = useNavigation<ProfileNavigationProp>();\r\n  const backgroundColor = useColorModeValue('background.primary', 'background.primary');\r\n  const textColor = useColorModeValue('text.primary', 'text.primary');\r\n\r\n  return (\r\n    <Box flex={1} bg={backgroundColor} safeArea>\r\n      <VStack flex={1} justifyContent=\"center\" alignItems=\"center\" px={8}>\r\n        <Icon\r\n          as={Ionicons}\r\n          name=\"person\"\r\n          size=\"6xl\"\r\n          color=\"primary.500\"\r\n          mb={4}\r\n        />\r\n        <NBText fontSize=\"2xl\" fontWeight=\"bold\" color={textColor} textAlign=\"center\" mb={2}>\r\n          Profile\r\n        </NBText>\r\n        <NBText fontSize=\"md\" color=\"text.secondary\" textAlign=\"center\" mb={8}>\r\n          User profile with OG badge and live history coming soon\r\n        </NBText>\r\n        \r\n        <VStack space={4} width=\"100%\">\r\n          <Button\r\n            size=\"lg\"\r\n            bg=\"primary.500\"\r\n            _pressed={{ bg: 'primary.600' }}\r\n            onPress={() => navigation.navigate('Wallet')}\r\n            leftIcon={<Icon as={Ionicons} name=\"wallet\" size=\"sm\" />}\r\n          >\r\n            Wallet\r\n          </Button>\r\n          \r\n          <Button\r\n            size=\"lg\"\r\n            bg=\"yellow.500\"\r\n            _pressed={{ bg: 'yellow.600' }}\r\n            onPress={() => navigation.navigate('OGStore')}\r\n            leftIcon={<Icon as={Ionicons} name=\"crown\" size=\"sm\" />}\r\n          >\r\n            OG Store\r\n          </Button>\r\n          \r\n          <Button\r\n            size=\"lg\"\r\n            bg=\"gray.500\"\r\n            _pressed={{ bg: 'gray.600' }}\r\n            onPress={() => navigation.navigate('Settings')}\r\n            leftIcon={<Icon as={Ionicons} name=\"settings\" size=\"sm\" />}\r\n          >\r\n            Settings\r\n          </Button>\r\n        </VStack>\r\n      </VStack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}