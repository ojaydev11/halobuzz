{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Box, VStack, HStack, Text as NBText, Button, Icon, useColorModeValue, Pressable, Input, Image, Badge, Modal } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Video, ResizeMode } from 'expo-av';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { useAppSelector } from \"../../store/hooks\";\nimport { selectUser } from \"../../store/slices/authSlice\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar LiveRoomScreen = function LiveRoomScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var user = useAppSelector(selectUser);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    chatMessages = _useState2[0],\n    setChatMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newMessage = _useState4[0],\n    setNewMessage = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showGiftDrawer = _useState6[0],\n    setShowGiftDrawer = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showHaloThrone = _useState8[0],\n    setShowHaloThrone = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    isBattleActive = _useState0[0],\n    setIsBattleActive = _useState0[1];\n  var _useState1 = useState(0),\n    _useState10 = _slicedToArray(_useState1, 2),\n    battleProgress = _useState10[0],\n    setBattleProgress = _useState10[1];\n  var _useState11 = useState(1247),\n    _useState12 = _slicedToArray(_useState11, 2),\n    viewerCount = _useState12[0],\n    setViewerCount = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isLiked = _useState14[0],\n    setIsLiked = _useState14[1];\n  var _useState15 = useState(8923),\n    _useState16 = _slicedToArray(_useState15, 2),\n    likeCount = _useState16[0],\n    setLikeCount = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isFollowing = _useState18[0],\n    setIsFollowing = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isMuted = _useState20[0],\n    setIsMuted = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    isFullscreen = _useState22[0],\n    setIsFullscreen = _useState22[1];\n  var videoRef = useRef(null);\n  var chatListRef = useRef(null);\n  var backgroundColor = useColorModeValue('background.primary', 'background.primary');\n  var cardBackground = useColorModeValue('background.secondary', 'background.secondary');\n  var textColor = useColorModeValue('text.primary', 'text.primary');\n  var gifts = [{\n    id: '1',\n    name: 'Rose',\n    icon: '🌹',\n    price: 10,\n    animation: 'rose',\n    category: 'common'\n  }, {\n    id: '2',\n    name: 'Heart',\n    icon: '❤️',\n    price: 50,\n    animation: 'heart',\n    category: 'common'\n  }, {\n    id: '3',\n    name: 'Diamond',\n    icon: '💎',\n    price: 100,\n    animation: 'diamond',\n    category: 'rare'\n  }, {\n    id: '4',\n    name: 'Crown',\n    icon: '👑',\n    price: 500,\n    animation: 'crown',\n    category: 'epic'\n  }, {\n    id: '5',\n    name: 'Halo',\n    icon: '😇',\n    price: 1000,\n    animation: 'halo',\n    category: 'legendary'\n  }, {\n    id: '6',\n    name: 'Rocket',\n    icon: '🚀',\n    price: 2000,\n    animation: 'rocket',\n    category: 'legendary'\n  }];\n  var mockMessages = [{\n    id: '1',\n    userId: 'user1',\n    username: 'SarahLive',\n    message: 'Welcome everyone! Thanks for joining!',\n    timestamp: new Date(),\n    ogTier: 3,\n    isVerified: true\n  }, {\n    id: '2',\n    userId: 'user2',\n    username: 'MusicLover',\n    message: 'Amazing stream! 🔥',\n    timestamp: new Date(),\n    ogTier: 1,\n    isVerified: false\n  }, {\n    id: '3',\n    userId: 'user3',\n    username: 'GiftGiver',\n    message: '',\n    timestamp: new Date(),\n    isGift: true,\n    giftName: 'Rose',\n    giftValue: 10,\n    ogTier: 2,\n    isVerified: false\n  }];\n  useEffect(function () {\n    setChatMessages(mockMessages);\n    var interval = setInterval(function () {\n      var _chatListRef$current;\n      var newMessage = {\n        id: Date.now().toString(),\n        userId: `user${Math.floor(Math.random() * 100)}`,\n        username: `User${Math.floor(Math.random() * 100)}`,\n        message: 'Great stream! 👏',\n        timestamp: new Date(),\n        ogTier: Math.floor(Math.random() * 5) + 1,\n        isVerified: Math.random() > 0.7\n      };\n      setChatMessages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [newMessage]);\n      });\n      (_chatListRef$current = chatListRef.current) == null ? void 0 : _chatListRef$current.scrollToEnd();\n    }, 3000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  var handleSendMessage = function handleSendMessage() {\n    if (newMessage.trim()) {\n      var _chatListRef$current2;\n      var message = {\n        id: Date.now().toString(),\n        userId: (user == null ? void 0 : user.id) || 'currentUser',\n        username: (user == null ? void 0 : user.username) || 'You',\n        message: newMessage.trim(),\n        timestamp: new Date(),\n        ogTier: (user == null ? void 0 : user.ogTier) || 1,\n        isVerified: (user == null ? void 0 : user.isVerified) || false\n      };\n      setChatMessages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [message]);\n      });\n      setNewMessage('');\n      (_chatListRef$current2 = chatListRef.current) == null ? void 0 : _chatListRef$current2.scrollToEnd();\n    }\n  };\n  var handleGiftSend = function handleGiftSend(gift) {\n    if (user) {\n      var _chatListRef$current3;\n      var giftMessage = {\n        id: Date.now().toString(),\n        userId: user.id,\n        username: user.username,\n        message: '',\n        timestamp: new Date(),\n        isGift: true,\n        giftName: gift.name,\n        giftValue: gift.price,\n        ogTier: user.ogTier,\n        isVerified: user.isVerified\n      };\n      setChatMessages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [giftMessage]);\n      });\n      setShowGiftDrawer(false);\n      (_chatListRef$current3 = chatListRef.current) == null ? void 0 : _chatListRef$current3.scrollToEnd();\n    }\n  };\n  var handleBlessMe = function handleBlessMe() {\n    Alert.alert('Bless Me', 'Send a blessing to the streamer?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Bless',\n      onPress: function onPress() {\n        setLikeCount(function (prev) {\n          return prev + 1;\n        });\n      }\n    }]);\n  };\n  var handleHaloThrone = function handleHaloThrone() {\n    setShowHaloThrone(true);\n  };\n  var renderChatMessage = function renderChatMessage(_ref) {\n    var _gifts$find;\n    var item = _ref.item;\n    return _jsx(Box, {\n      mb: 2,\n      px: 2,\n      children: item.isGift ? _jsx(Box, {\n        bg: \"rgba(255, 215, 0, 0.2)\",\n        borderRadius: \"lg\",\n        p: 2,\n        borderWidth: 1,\n        borderColor: \"yellow.500\",\n        children: _jsxs(HStack, {\n          alignItems: \"center\",\n          space: 2,\n          children: [_jsx(NBText, {\n            fontSize: \"2xl\",\n            children: (_gifts$find = gifts.find(function (g) {\n              return g.name === item.giftName;\n            })) == null ? void 0 : _gifts$find.icon\n          }), _jsxs(VStack, {\n            flex: 1,\n            children: [_jsxs(HStack, {\n              alignItems: \"center\",\n              space: 1,\n              children: [_jsx(NBText, {\n                color: \"yellow.400\",\n                fontWeight: \"bold\",\n                fontSize: \"sm\",\n                children: item.username\n              }), item.isVerified && _jsx(Icon, {\n                as: Ionicons,\n                name: \"checkmark-circle\",\n                size: \"xs\",\n                color: \"blue.500\"\n              }), _jsxs(Badge, {\n                size: \"xs\",\n                variant: \"solid\",\n                bg: `ogTier${item.ogTier}`,\n                children: [\"OG\", item.ogTier]\n              })]\n            }), _jsxs(NBText, {\n              color: \"yellow.300\",\n              fontSize: \"sm\",\n              children: [\"sent \", item.giftName, \" (\", item.giftValue, \" coins)\"]\n            })]\n          })]\n        })\n      }) : _jsxs(HStack, {\n        alignItems: \"flex-start\",\n        space: 2,\n        children: [_jsxs(VStack, {\n          alignItems: \"center\",\n          space: 1,\n          children: [_jsx(Box, {\n            w: 6,\n            h: 6,\n            bg: \"primary.500\",\n            borderRadius: \"full\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            children: _jsx(NBText, {\n              color: \"white\",\n              fontSize: \"xs\",\n              fontWeight: \"bold\",\n              children: item.username.charAt(0).toUpperCase()\n            })\n          }), _jsxs(Badge, {\n            size: \"xs\",\n            variant: \"solid\",\n            bg: `ogTier${item.ogTier}`,\n            children: [\"OG\", item.ogTier]\n          })]\n        }), _jsxs(VStack, {\n          flex: 1,\n          children: [_jsxs(HStack, {\n            alignItems: \"center\",\n            space: 1,\n            children: [_jsx(NBText, {\n              color: textColor,\n              fontWeight: \"semibold\",\n              fontSize: \"sm\",\n              children: item.username\n            }), item.isVerified && _jsx(Icon, {\n              as: Ionicons,\n              name: \"checkmark-circle\",\n              size: \"xs\",\n              color: \"blue.500\"\n            })]\n          }), _jsx(NBText, {\n            color: \"text.secondary\",\n            fontSize: \"sm\",\n            children: item.message\n          })]\n        })]\n      })\n    });\n  };\n  var renderGift = function renderGift(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Pressable, {\n      onPress: function onPress() {\n        return handleGiftSend(item);\n      },\n      _pressed: {\n        opacity: 0.7\n      },\n      children: _jsxs(Box, {\n        bg: cardBackground,\n        p: 3,\n        borderRadius: \"lg\",\n        borderWidth: 1,\n        borderColor: \"background.tertiary\",\n        alignItems: \"center\",\n        minW: 80,\n        children: [_jsx(NBText, {\n          fontSize: \"3xl\",\n          mb: 2,\n          children: item.icon\n        }), _jsx(NBText, {\n          color: textColor,\n          fontWeight: \"semibold\",\n          fontSize: \"sm\",\n          textAlign: \"center\",\n          mb: 1,\n          children: item.name\n        }), _jsxs(NBText, {\n          color: \"text.secondary\",\n          fontSize: \"xs\",\n          children: [item.price, \" coins\"]\n        }), _jsx(Badge, {\n          size: \"xs\",\n          variant: \"solid\",\n          bg: item.category === 'legendary' ? 'yellow.500' : item.category === 'epic' ? 'purple.500' : item.category === 'rare' ? 'blue.500' : 'gray.500',\n          mt: 1,\n          children: item.category\n        })]\n      })\n    });\n  };\n  return _jsxs(Box, {\n    flex: 1,\n    bg: backgroundColor,\n    children: [_jsxs(Box, {\n      position: \"relative\",\n      height: height * 0.4,\n      children: [_jsx(Video, {\n        ref: videoRef,\n        source: {\n          uri: 'https://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4'\n        },\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        useNativeControls: false,\n        resizeMode: ResizeMode.CONTAIN,\n        isLooping: true,\n        shouldPlay: true\n      }), _jsxs(Box, {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        children: [_jsxs(HStack, {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          p: 4,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          bg: \"rgba(0,0,0,0.5)\",\n          children: [_jsx(Pressable, {\n            onPress: function onPress() {\n              return navigation.goBack();\n            },\n            children: _jsx(Icon, {\n              as: Ionicons,\n              name: \"arrow-back\",\n              size: \"lg\",\n              color: \"white\"\n            })\n          }), _jsxs(HStack, {\n            space: 3,\n            children: [_jsx(Pressable, {\n              onPress: function onPress() {\n                return setIsMuted(!isMuted);\n              },\n              children: _jsx(Icon, {\n                as: Ionicons,\n                name: isMuted ? \"volume-mute\" : \"volume-high\",\n                size: \"lg\",\n                color: \"white\"\n              })\n            }), _jsx(Pressable, {\n              onPress: function onPress() {\n                return setIsFullscreen(!isFullscreen);\n              },\n              children: _jsx(Icon, {\n                as: Ionicons,\n                name: isFullscreen ? \"contract\" : \"expand\",\n                size: \"lg\",\n                color: \"white\"\n              })\n            })]\n          })]\n        }), _jsx(Box, {\n          position: \"absolute\",\n          bottom: 0,\n          left: 0,\n          right: 0,\n          p: 4,\n          bg: \"rgba(0,0,0,0.7)\",\n          children: _jsxs(HStack, {\n            alignItems: \"center\",\n            space: 3,\n            children: [_jsx(Image, {\n              source: {\n                uri: 'https://via.placeholder.com/40'\n              },\n              alt: \"Streamer\",\n              width: 10,\n              height: 10,\n              borderRadius: \"full\"\n            }), _jsxs(VStack, {\n              flex: 1,\n              children: [_jsxs(HStack, {\n                alignItems: \"center\",\n                space: 2,\n                children: [_jsx(NBText, {\n                  color: \"white\",\n                  fontWeight: \"bold\",\n                  fontSize: \"md\",\n                  children: route.params.streamerName\n                }), _jsx(Icon, {\n                  as: Ionicons,\n                  name: \"checkmark-circle\",\n                  size: \"sm\",\n                  color: \"blue.500\"\n                }), _jsx(Badge, {\n                  size: \"xs\",\n                  variant: \"solid\",\n                  bg: \"purple.500\",\n                  children: \"OG4\"\n                })]\n              }), _jsxs(NBText, {\n                color: \"text.secondary\",\n                fontSize: \"sm\",\n                children: [viewerCount.toLocaleString(), \" viewers\"]\n              })]\n            }), _jsx(Button, {\n              size: \"sm\",\n              variant: isFollowing ? \"outline\" : \"solid\",\n              bg: isFollowing ? \"transparent\" : \"primary.500\",\n              borderColor: isFollowing ? \"primary.500\" : \"transparent\",\n              onPress: function onPress() {\n                return setIsFollowing(!isFollowing);\n              },\n              children: isFollowing ? 'Following' : 'Follow'\n            })]\n          })\n        })]\n      })]\n    }), isBattleActive && _jsx(Box, {\n      bg: \"linear-gradient(90deg, #FF6B6B, #4ECDC4)\",\n      p: 3,\n      alignItems: \"center\",\n      children: _jsxs(HStack, {\n        alignItems: \"center\",\n        space: 3,\n        children: [_jsx(Icon, {\n          as: Ionicons,\n          name: \"flash\",\n          size: \"lg\",\n          color: \"white\"\n        }), _jsxs(VStack, {\n          flex: 1,\n          children: [_jsx(NBText, {\n            color: \"white\",\n            fontWeight: \"bold\",\n            fontSize: \"md\",\n            children: \"Live Battle in Progress!\"\n          }), _jsx(NBText, {\n            color: \"white\",\n            fontSize: \"sm\",\n            children: \"Team A vs Team B\"\n          })]\n        }), _jsx(Box, {\n          bg: \"rgba(255,255,255,0.2)\",\n          px: 3,\n          py: 1,\n          borderRadius: \"full\",\n          children: _jsxs(NBText, {\n            color: \"white\",\n            fontWeight: \"bold\",\n            children: [battleProgress, \"%\"]\n          })\n        })]\n      })\n    }), _jsx(HStack, {\n      position: \"absolute\",\n      right: 4,\n      top: height * 0.4 + 20,\n      space: 3,\n      zIndex: 10,\n      children: _jsxs(VStack, {\n        space: 3,\n        children: [_jsx(Pressable, {\n          onPress: function onPress() {\n            return setIsLiked(!isLiked);\n          },\n          children: _jsxs(Box, {\n            bg: \"rgba(0,0,0,0.7)\",\n            p: 3,\n            borderRadius: \"full\",\n            alignItems: \"center\",\n            children: [_jsx(Icon, {\n              as: Ionicons,\n              name: isLiked ? \"heart\" : \"heart-outline\",\n              size: \"lg\",\n              color: isLiked ? \"red.500\" : \"white\"\n            }), _jsx(NBText, {\n              color: \"white\",\n              fontSize: \"xs\",\n              mt: 1,\n              children: likeCount.toLocaleString()\n            })]\n          })\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            return setShowGiftDrawer(true);\n          },\n          children: _jsx(Box, {\n            bg: \"rgba(0,0,0,0.7)\",\n            p: 3,\n            borderRadius: \"full\",\n            alignItems: \"center\",\n            children: _jsx(Icon, {\n              as: Ionicons,\n              name: \"gift\",\n              size: \"lg\",\n              color: \"white\"\n            })\n          })\n        }), _jsx(Pressable, {\n          onPress: handleBlessMe,\n          children: _jsx(Box, {\n            bg: \"rgba(0,0,0,0.7)\",\n            p: 3,\n            borderRadius: \"full\",\n            alignItems: \"center\",\n            children: _jsx(Icon, {\n              as: Ionicons,\n              name: \"sparkles\",\n              size: \"lg\",\n              color: \"yellow.400\"\n            })\n          })\n        }), _jsx(Pressable, {\n          onPress: handleHaloThrone,\n          children: _jsx(Box, {\n            bg: \"linear-gradient(45deg, #FFD700, #FFA500)\",\n            p: 3,\n            borderRadius: \"full\",\n            alignItems: \"center\",\n            children: _jsx(Icon, {\n              as: Ionicons,\n              name: \"crown\",\n              size: \"lg\",\n              color: \"white\"\n            })\n          })\n        })]\n      })\n    }), _jsxs(Box, {\n      flex: 1,\n      bg: cardBackground,\n      mt: 4,\n      children: [_jsx(Box, {\n        bg: backgroundColor,\n        px: 4,\n        py: 2,\n        borderBottomWidth: 1,\n        borderBottomColor: \"background.tertiary\",\n        children: _jsxs(NBText, {\n          color: textColor,\n          fontWeight: \"semibold\",\n          children: [\"Live Chat (\", chatMessages.length, \")\"]\n        })\n      }), _jsx(FlatList, {\n        ref: chatListRef,\n        data: chatMessages,\n        renderItem: renderChatMessage,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: {\n          paddingVertical: 8\n        }\n      }), _jsx(KeyboardAvoidingView, {\n        behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n        children: _jsxs(HStack, {\n          p: 3,\n          space: 2,\n          bg: backgroundColor,\n          borderTopWidth: 1,\n          borderTopColor: \"background.tertiary\",\n          children: [_jsx(Input, {\n            flex: 1,\n            placeholder: \"Type a message...\",\n            value: newMessage,\n            onChangeText: setNewMessage,\n            bg: cardBackground,\n            borderColor: \"background.tertiary\",\n            _focus: {\n              borderColor: 'primary.500'\n            },\n            color: textColor\n          }), _jsx(Button, {\n            size: \"sm\",\n            bg: \"primary.500\",\n            _pressed: {\n              bg: 'primary.600'\n            },\n            onPress: handleSendMessage,\n            isDisabled: !newMessage.trim(),\n            children: _jsx(Icon, {\n              as: Ionicons,\n              name: \"send\",\n              size: \"sm\",\n              color: \"white\"\n            })\n          })]\n        })\n      })]\n    }), _jsx(Modal, {\n      isOpen: showGiftDrawer,\n      onClose: function onClose() {\n        return setShowGiftDrawer(false);\n      },\n      size: \"full\",\n      children: _jsxs(Modal.Content, {\n        bg: backgroundColor,\n        maxH: \"80%\",\n        children: [_jsx(Modal.Header, {\n          bg: cardBackground,\n          children: _jsxs(HStack, {\n            alignItems: \"center\",\n            space: 3,\n            children: [_jsx(Icon, {\n              as: Ionicons,\n              name: \"gift\",\n              size: \"lg\",\n              color: \"primary.500\"\n            }), _jsx(NBText, {\n              color: textColor,\n              fontSize: \"lg\",\n              fontWeight: \"bold\",\n              children: \"Send Gifts\"\n            })]\n          })\n        }), _jsx(Modal.Body, {\n          children: _jsx(FlatList, {\n            data: gifts,\n            renderItem: renderGift,\n            keyExtractor: function keyExtractor(item) {\n              return item.id;\n            },\n            numColumns: 3,\n            columnWrapperStyle: {\n              justifyContent: 'space-between'\n            },\n            showsVerticalScrollIndicator: false\n          })\n        })]\n      })\n    }), _jsx(Modal, {\n      isOpen: showHaloThrone,\n      onClose: function onClose() {\n        return setShowHaloThrone(false);\n      },\n      size: \"lg\",\n      children: _jsxs(Modal.Content, {\n        bg: backgroundColor,\n        children: [_jsx(Modal.Header, {\n          bg: cardBackground,\n          children: _jsxs(HStack, {\n            alignItems: \"center\",\n            space: 3,\n            children: [_jsx(Icon, {\n              as: Ionicons,\n              name: \"crown\",\n              size: \"lg\",\n              color: \"yellow.500\"\n            }), _jsx(NBText, {\n              color: textColor,\n              fontSize: \"lg\",\n              fontWeight: \"bold\",\n              children: \"Halo Throne\"\n            })]\n          })\n        }), _jsx(Modal.Body, {\n          children: _jsxs(VStack, {\n            space: 4,\n            alignItems: \"center\",\n            children: [_jsx(Icon, {\n              as: Ionicons,\n              name: \"crown\",\n              size: \"6xl\",\n              color: \"yellow.500\"\n            }), _jsx(NBText, {\n              color: textColor,\n              fontSize: \"lg\",\n              fontWeight: \"bold\",\n              textAlign: \"center\",\n              children: \"Unlock the Halo Throne\"\n            }), _jsx(NBText, {\n              color: \"text.secondary\",\n              textAlign: \"center\",\n              children: \"Get exclusive perks, custom badges, and special privileges\"\n            }), _jsx(Button, {\n              size: \"lg\",\n              bg: \"linear-gradient(45deg, #FFD700, #FFA500)\",\n              _pressed: {\n                bg: 'yellow.600'\n              },\n              width: \"100%\",\n              children: _jsxs(HStack, {\n                alignItems: \"center\",\n                space: 2,\n                children: [_jsx(Icon, {\n                  as: Ionicons,\n                  name: \"star\",\n                  size: \"sm\",\n                  color: \"white\"\n                }), _jsx(NBText, {\n                  color: \"white\",\n                  fontWeight: \"bold\",\n                  children: \"Upgrade to OG5\"\n                })]\n              })\n            })]\n          })\n        })]\n      })\n    })]\n  });\n};\nexport default LiveRoomScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","Dimensions","Platform","KeyboardAvoidingView","FlatList","Alert","Box","VStack","HStack","Text","NBText","Button","Icon","useColorModeValue","Pressable","Input","Image","Badge","Modal","Ionicons","Video","ResizeMode","useNavigation","useRoute","useAppSelector","selectUser","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","LiveRoomScreen","navigation","route","user","_useState","_useState2","_slicedToArray","chatMessages","setChatMessages","_useState3","_useState4","newMessage","setNewMessage","_useState5","_useState6","showGiftDrawer","setShowGiftDrawer","_useState7","_useState8","showHaloThrone","setShowHaloThrone","_useState9","_useState0","isBattleActive","setIsBattleActive","_useState1","_useState10","battleProgress","setBattleProgress","_useState11","_useState12","viewerCount","setViewerCount","_useState13","_useState14","isLiked","setIsLiked","_useState15","_useState16","likeCount","setLikeCount","_useState17","_useState18","isFollowing","setIsFollowing","_useState19","_useState20","isMuted","setIsMuted","_useState21","_useState22","isFullscreen","setIsFullscreen","videoRef","chatListRef","backgroundColor","cardBackground","textColor","gifts","id","name","icon","price","animation","category","mockMessages","userId","username","message","timestamp","Date","ogTier","isVerified","isGift","giftName","giftValue","interval","setInterval","_chatListRef$current","now","toString","Math","floor","random","prev","concat","_toConsumableArray","current","scrollToEnd","clearInterval","handleSendMessage","trim","_chatListRef$current2","handleGiftSend","gift","_chatListRef$current3","giftMessage","handleBlessMe","alert","text","style","onPress","handleHaloThrone","renderChatMessage","_ref","_gifts$find","item","mb","px","children","bg","borderRadius","p","borderWidth","borderColor","alignItems","space","fontSize","find","g","flex","color","fontWeight","as","size","variant","w","h","justifyContent","charAt","toUpperCase","renderGift","_ref2","_pressed","opacity","minW","textAlign","mt","position","ref","source","uri","useNativeControls","resizeMode","CONTAIN","isLooping","shouldPlay","top","left","right","bottom","goBack","alt","params","streamerName","toLocaleString","py","zIndex","borderBottomWidth","borderBottomColor","length","data","renderItem","keyExtractor","showsVerticalScrollIndicator","contentContainerStyle","paddingVertical","behavior","OS","borderTopWidth","borderTopColor","placeholder","value","onChangeText","_focus","isDisabled","isOpen","onClose","Content","maxH","Header","Body","numColumns","columnWrapperStyle"],"sources":["D:/halobuzz by cursor/mobile/src/screens/live/LiveRoomScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Dimensions,\r\n  Platform,\r\n  KeyboardAvoidingView,\r\n  FlatList,\r\n  Alert,\r\n} from 'react-native';\r\nimport {\r\n  Box,\r\n  VStack,\r\n  HStack,\r\n  Text as NBText,\r\n  Button,\r\n  Icon,\r\n  useColorModeValue,\r\n  Pressable,\r\n  Input,\r\n  Image,\r\n  Badge,\r\n  Modal,\r\n  ScrollView,\r\n  Divider,\r\n} from 'native-base';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Video, ResizeMode } from 'expo-av';\r\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { LiveStackParamList } from '../../navigation/LiveTabNavigator';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { selectUser } from '../../store/slices/authSlice';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\ntype LiveRoomRouteProp = RouteProp<LiveStackParamList, 'LiveRoom'>;\r\ntype LiveRoomNavigationProp = StackNavigationProp<LiveStackParamList, 'LiveRoom'>;\r\n\r\ninterface ChatMessage {\r\n  id: string;\r\n  userId: string;\r\n  username: string;\r\n  message: string;\r\n  timestamp: Date;\r\n  isGift?: boolean;\r\n  giftName?: string;\r\n  giftValue?: number;\r\n  ogTier: number;\r\n  isVerified: boolean;\r\n}\r\n\r\ninterface Gift {\r\n  id: string;\r\n  name: string;\r\n  icon: string;\r\n  price: number;\r\n  animation: string;\r\n  category: 'common' | 'rare' | 'epic' | 'legendary';\r\n}\r\n\r\nconst LiveRoomScreen: React.FC = () => {\r\n  const navigation = useNavigation<LiveRoomNavigationProp>();\r\n  const route = useRoute<LiveRoomRouteProp>();\r\n  const user = useAppSelector(selectUser);\r\n  \r\n  const [chatMessages, setChatMessages] = useState<ChatMessage[]>([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [showGiftDrawer, setShowGiftDrawer] = useState(false);\r\n  const [showHaloThrone, setShowHaloThrone] = useState(false);\r\n  const [isBattleActive, setIsBattleActive] = useState(false);\r\n  const [battleProgress, setBattleProgress] = useState(0);\r\n  const [viewerCount, setViewerCount] = useState(1247);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [likeCount, setLikeCount] = useState(8923);\r\n  const [isFollowing, setIsFollowing] = useState(false);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n\r\n  const videoRef = useRef<Video>(null);\r\n  const chatListRef = useRef<FlatList>(null);\r\n\r\n  const backgroundColor = useColorModeValue('background.primary', 'background.primary');\r\n  const cardBackground = useColorModeValue('background.secondary', 'background.secondary');\r\n  const textColor = useColorModeValue('text.primary', 'text.primary');\r\n\r\n  // Mock gifts\r\n  const gifts: Gift[] = [\r\n    { id: '1', name: 'Rose', icon: '🌹', price: 10, animation: 'rose', category: 'common' },\r\n    { id: '2', name: 'Heart', icon: '❤️', price: 50, animation: 'heart', category: 'common' },\r\n    { id: '3', name: 'Diamond', icon: '💎', price: 100, animation: 'diamond', category: 'rare' },\r\n    { id: '4', name: 'Crown', icon: '👑', price: 500, animation: 'crown', category: 'epic' },\r\n    { id: '5', name: 'Halo', icon: '😇', price: 1000, animation: 'halo', category: 'legendary' },\r\n    { id: '6', name: 'Rocket', icon: '🚀', price: 2000, animation: 'rocket', category: 'legendary' },\r\n  ];\r\n\r\n  // Mock chat messages\r\n  const mockMessages: ChatMessage[] = [\r\n    {\r\n      id: '1',\r\n      userId: 'user1',\r\n      username: 'SarahLive',\r\n      message: 'Welcome everyone! Thanks for joining!',\r\n      timestamp: new Date(),\r\n      ogTier: 3,\r\n      isVerified: true,\r\n    },\r\n    {\r\n      id: '2',\r\n      userId: 'user2',\r\n      username: 'MusicLover',\r\n      message: 'Amazing stream! 🔥',\r\n      timestamp: new Date(),\r\n      ogTier: 1,\r\n      isVerified: false,\r\n    },\r\n    {\r\n      id: '3',\r\n      userId: 'user3',\r\n      username: 'GiftGiver',\r\n      message: '',\r\n      timestamp: new Date(),\r\n      isGift: true,\r\n      giftName: 'Rose',\r\n      giftValue: 10,\r\n      ogTier: 2,\r\n      isVerified: false,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setChatMessages(mockMessages);\r\n    \r\n    // Simulate incoming messages\r\n    const interval = setInterval(() => {\r\n      const newMessage: ChatMessage = {\r\n        id: Date.now().toString(),\r\n        userId: `user${Math.floor(Math.random() * 100)}`,\r\n        username: `User${Math.floor(Math.random() * 100)}`,\r\n        message: 'Great stream! 👏',\r\n        timestamp: new Date(),\r\n        ogTier: Math.floor(Math.random() * 5) + 1,\r\n        isVerified: Math.random() > 0.7,\r\n      };\r\n      \r\n      setChatMessages(prev => [...prev, newMessage]);\r\n      chatListRef.current?.scrollToEnd();\r\n    }, 3000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleSendMessage = () => {\r\n    if (newMessage.trim()) {\r\n      const message: ChatMessage = {\r\n        id: Date.now().toString(),\r\n        userId: user?.id || 'currentUser',\r\n        username: user?.username || 'You',\r\n        message: newMessage.trim(),\r\n        timestamp: new Date(),\r\n        ogTier: user?.ogTier || 1,\r\n        isVerified: user?.isVerified || false,\r\n      };\r\n      \r\n      setChatMessages(prev => [...prev, message]);\r\n      setNewMessage('');\r\n      chatListRef.current?.scrollToEnd();\r\n    }\r\n  };\r\n\r\n  const handleGiftSend = (gift: Gift) => {\r\n    if (user) {\r\n      const giftMessage: ChatMessage = {\r\n        id: Date.now().toString(),\r\n        userId: user.id,\r\n        username: user.username,\r\n        message: '',\r\n        timestamp: new Date(),\r\n        isGift: true,\r\n        giftName: gift.name,\r\n        giftValue: gift.price,\r\n        ogTier: user.ogTier,\r\n        isVerified: user.isVerified,\r\n      };\r\n      \r\n      setChatMessages(prev => [...prev, giftMessage]);\r\n      setShowGiftDrawer(false);\r\n      chatListRef.current?.scrollToEnd();\r\n    }\r\n  };\r\n\r\n  const handleBlessMe = () => {\r\n    Alert.alert(\r\n      'Bless Me',\r\n      'Send a blessing to the streamer?',\r\n      [\r\n        { text: 'Cancel', style: 'cancel' },\r\n        { text: 'Bless', onPress: () => {\r\n          // Handle blessing logic\r\n          setLikeCount(prev => prev + 1);\r\n        }},\r\n      ]\r\n    );\r\n  };\r\n\r\n  const handleHaloThrone = () => {\r\n    setShowHaloThrone(true);\r\n  };\r\n\r\n  const renderChatMessage = ({ item }: { item: ChatMessage }) => (\r\n    <Box mb={2} px={2}>\r\n      {item.isGift ? (\r\n        <Box\r\n          bg=\"rgba(255, 215, 0, 0.2)\"\r\n          borderRadius=\"lg\"\r\n          p={2}\r\n          borderWidth={1}\r\n          borderColor=\"yellow.500\"\r\n        >\r\n          <HStack alignItems=\"center\" space={2}>\r\n            <NBText fontSize=\"2xl\">{gifts.find(g => g.name === item.giftName)?.icon}</NBText>\r\n            <VStack flex={1}>\r\n              <HStack alignItems=\"center\" space={1}>\r\n                <NBText color=\"yellow.400\" fontWeight=\"bold\" fontSize=\"sm\">\r\n                  {item.username}\r\n                </NBText>\r\n                {item.isVerified && (\r\n                  <Icon as={Ionicons} name=\"checkmark-circle\" size=\"xs\" color=\"blue.500\" />\r\n                )}\r\n                <Badge size=\"xs\" variant=\"solid\" bg={`ogTier${item.ogTier}`}>\r\n                  OG{item.ogTier}\r\n                </Badge>\r\n              </HStack>\r\n              <NBText color=\"yellow.300\" fontSize=\"sm\">\r\n                sent {item.giftName} ({item.giftValue} coins)\r\n              </NBText>\r\n            </VStack>\r\n          </HStack>\r\n        </Box>\r\n      ) : (\r\n        <HStack alignItems=\"flex-start\" space={2}>\r\n          <VStack alignItems=\"center\" space={1}>\r\n            <Box\r\n              w={6}\r\n              h={6}\r\n              bg=\"primary.500\"\r\n              borderRadius=\"full\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <NBText color=\"white\" fontSize=\"xs\" fontWeight=\"bold\">\r\n                {item.username.charAt(0).toUpperCase()}\r\n              </NBText>\r\n            </Box>\r\n            <Badge size=\"xs\" variant=\"solid\" bg={`ogTier${item.ogTier}`}>\r\n              OG{item.ogTier}\r\n            </Badge>\r\n          </VStack>\r\n          <VStack flex={1}>\r\n            <HStack alignItems=\"center\" space={1}>\r\n              <NBText color={textColor} fontWeight=\"semibold\" fontSize=\"sm\">\r\n                {item.username}\r\n              </NBText>\r\n              {item.isVerified && (\r\n                <Icon as={Ionicons} name=\"checkmark-circle\" size=\"xs\" color=\"blue.500\" />\r\n              )}\r\n            </HStack>\r\n            <NBText color=\"text.secondary\" fontSize=\"sm\">\r\n              {item.message}\r\n            </NBText>\r\n          </VStack>\r\n        </HStack>\r\n      )}\r\n    </Box>\r\n  );\r\n\r\n  const renderGift = ({ item }: { item: Gift }) => (\r\n    <Pressable\r\n      onPress={() => handleGiftSend(item)}\r\n      _pressed={{ opacity: 0.7 }}\r\n    >\r\n      <Box\r\n        bg={cardBackground}\r\n        p={3}\r\n        borderRadius=\"lg\"\r\n        borderWidth={1}\r\n        borderColor=\"background.tertiary\"\r\n        alignItems=\"center\"\r\n        minW={80}\r\n      >\r\n        <NBText fontSize=\"3xl\" mb={2}>{item.icon}</NBText>\r\n        <NBText color={textColor} fontWeight=\"semibold\" fontSize=\"sm\" textAlign=\"center\" mb={1}>\r\n          {item.name}\r\n        </NBText>\r\n        <NBText color=\"text.secondary\" fontSize=\"xs\">\r\n          {item.price} coins\r\n        </NBText>\r\n        <Badge\r\n          size=\"xs\"\r\n          variant=\"solid\"\r\n          bg={\r\n            item.category === 'legendary' ? 'yellow.500' :\r\n            item.category === 'epic' ? 'purple.500' :\r\n            item.category === 'rare' ? 'blue.500' : 'gray.500'\r\n          }\r\n          mt={1}\r\n        >\r\n          {item.category}\r\n        </Badge>\r\n      </Box>\r\n    </Pressable>\r\n  );\r\n\r\n  return (\r\n    <Box flex={1} bg={backgroundColor}>\r\n      {/* Video Player */}\r\n      <Box position=\"relative\" height={height * 0.4}>\r\n        <Video\r\n          ref={videoRef}\r\n          source={{ uri: 'https://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4' }}\r\n          style={{ width: '100%', height: '100%' }}\r\n          useNativeControls={false}\r\n          resizeMode={ResizeMode.CONTAIN}\r\n          isLooping\r\n          shouldPlay\r\n        />\r\n        \r\n        {/* Video Overlay */}\r\n        <Box position=\"absolute\" top={0} left={0} right={0} bottom={0}>\r\n          {/* Top Controls */}\r\n          <HStack\r\n            position=\"absolute\"\r\n            top={0}\r\n            left={0}\r\n            right={0}\r\n            p={4}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            bg=\"rgba(0,0,0,0.5)\"\r\n          >\r\n            <Pressable onPress={() => navigation.goBack()}>\r\n              <Icon as={Ionicons} name=\"arrow-back\" size=\"lg\" color=\"white\" />\r\n            </Pressable>\r\n            \r\n            <HStack space={3}>\r\n              <Pressable onPress={() => setIsMuted(!isMuted)}>\r\n                <Icon \r\n                  as={Ionicons} \r\n                  name={isMuted ? \"volume-mute\" : \"volume-high\"} \r\n                  size=\"lg\" \r\n                  color=\"white\" \r\n                />\r\n              </Pressable>\r\n              <Pressable onPress={() => setIsFullscreen(!isFullscreen)}>\r\n                <Icon \r\n                  as={Ionicons} \r\n                  name={isFullscreen ? \"contract\" : \"expand\"} \r\n                  size=\"lg\" \r\n                  color=\"white\" \r\n                />\r\n              </Pressable>\r\n            </HStack>\r\n          </HStack>\r\n\r\n          {/* Streamer Info */}\r\n          <Box\r\n            position=\"absolute\"\r\n            bottom={0}\r\n            left={0}\r\n            right={0}\r\n            p={4}\r\n            bg=\"rgba(0,0,0,0.7)\"\r\n          >\r\n            <HStack alignItems=\"center\" space={3}>\r\n              <Image\r\n                source={{ uri: 'https://via.placeholder.com/40' }}\r\n                alt=\"Streamer\"\r\n                width={10}\r\n                height={10}\r\n                borderRadius=\"full\"\r\n              />\r\n              <VStack flex={1}>\r\n                <HStack alignItems=\"center\" space={2}>\r\n                  <NBText color=\"white\" fontWeight=\"bold\" fontSize=\"md\">\r\n                    {route.params.streamerName}\r\n                  </NBText>\r\n                  <Icon as={Ionicons} name=\"checkmark-circle\" size=\"sm\" color=\"blue.500\" />\r\n                  <Badge size=\"xs\" variant=\"solid\" bg=\"purple.500\">\r\n                    OG4\r\n                  </Badge>\r\n                </HStack>\r\n                <NBText color=\"text.secondary\" fontSize=\"sm\">\r\n                  {viewerCount.toLocaleString()} viewers\r\n                </NBText>\r\n              </VStack>\r\n              \r\n              <Button\r\n                size=\"sm\"\r\n                variant={isFollowing ? \"outline\" : \"solid\"}\r\n                bg={isFollowing ? \"transparent\" : \"primary.500\"}\r\n                borderColor={isFollowing ? \"primary.500\" : \"transparent\"}\r\n                onPress={() => setIsFollowing(!isFollowing)}\r\n              >\r\n                {isFollowing ? 'Following' : 'Follow'}\r\n              </Button>\r\n            </HStack>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Battle Banner */}\r\n      {isBattleActive && (\r\n        <Box\r\n          bg=\"linear-gradient(90deg, #FF6B6B, #4ECDC4)\"\r\n          p={3}\r\n          alignItems=\"center\"\r\n        >\r\n          <HStack alignItems=\"center\" space={3}>\r\n            <Icon as={Ionicons} name=\"flash\" size=\"lg\" color=\"white\" />\r\n            <VStack flex={1}>\r\n              <NBText color=\"white\" fontWeight=\"bold\" fontSize=\"md\">\r\n                Live Battle in Progress!\r\n              </NBText>\r\n              <NBText color=\"white\" fontSize=\"sm\">\r\n                Team A vs Team B\r\n              </NBText>\r\n            </VStack>\r\n            <Box\r\n              bg=\"rgba(255,255,255,0.2)\"\r\n              px={3}\r\n              py={1}\r\n              borderRadius=\"full\"\r\n            >\r\n              <NBText color=\"white\" fontWeight=\"bold\">\r\n                {battleProgress}%\r\n              </NBText>\r\n            </Box>\r\n          </HStack>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Interactive Buttons */}\r\n      <HStack\r\n        position=\"absolute\"\r\n        right={4}\r\n        top={height * 0.4 + 20}\r\n        space={3}\r\n        zIndex={10}\r\n      >\r\n        <VStack space={3}>\r\n          <Pressable onPress={() => setIsLiked(!isLiked)}>\r\n            <Box\r\n              bg=\"rgba(0,0,0,0.7)\"\r\n              p={3}\r\n              borderRadius=\"full\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Icon \r\n                as={Ionicons} \r\n                name={isLiked ? \"heart\" : \"heart-outline\"} \r\n                size=\"lg\" \r\n                color={isLiked ? \"red.500\" : \"white\"} \r\n              />\r\n              <NBText color=\"white\" fontSize=\"xs\" mt={1}>\r\n                {likeCount.toLocaleString()}\r\n              </NBText>\r\n            </Box>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setShowGiftDrawer(true)}>\r\n            <Box\r\n              bg=\"rgba(0,0,0,0.7)\"\r\n              p={3}\r\n              borderRadius=\"full\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Icon as={Ionicons} name=\"gift\" size=\"lg\" color=\"white\" />\r\n            </Box>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={handleBlessMe}>\r\n            <Box\r\n              bg=\"rgba(0,0,0,0.7)\"\r\n              p={3}\r\n              borderRadius=\"full\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Icon as={Ionicons} name=\"sparkles\" size=\"lg\" color=\"yellow.400\" />\r\n            </Box>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={handleHaloThrone}>\r\n            <Box\r\n              bg=\"linear-gradient(45deg, #FFD700, #FFA500)\"\r\n              p={3}\r\n              borderRadius=\"full\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Icon as={Ionicons} name=\"crown\" size=\"lg\" color=\"white\" />\r\n            </Box>\r\n          </Pressable>\r\n        </VStack>\r\n      </HStack>\r\n\r\n      {/* Chat Section */}\r\n      <Box flex={1} bg={cardBackground} mt={4}>\r\n        <Box\r\n          bg={backgroundColor}\r\n          px={4}\r\n          py={2}\r\n          borderBottomWidth={1}\r\n          borderBottomColor=\"background.tertiary\"\r\n        >\r\n          <NBText color={textColor} fontWeight=\"semibold\">\r\n            Live Chat ({chatMessages.length})\r\n          </NBText>\r\n        </Box>\r\n\r\n        <FlatList\r\n          ref={chatListRef}\r\n          data={chatMessages}\r\n          renderItem={renderChatMessage}\r\n          keyExtractor={(item) => item.id}\r\n          showsVerticalScrollIndicator={false}\r\n          contentContainerStyle={{ paddingVertical: 8 }}\r\n        />\r\n\r\n        {/* Message Input */}\r\n        <KeyboardAvoidingView\r\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        >\r\n          <HStack\r\n            p={3}\r\n            space={2}\r\n            bg={backgroundColor}\r\n            borderTopWidth={1}\r\n            borderTopColor=\"background.tertiary\"\r\n          >\r\n            <Input\r\n              flex={1}\r\n              placeholder=\"Type a message...\"\r\n              value={newMessage}\r\n              onChangeText={setNewMessage}\r\n              bg={cardBackground}\r\n              borderColor=\"background.tertiary\"\r\n              _focus={{ borderColor: 'primary.500' }}\r\n              color={textColor}\r\n            />\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"primary.500\"\r\n              _pressed={{ bg: 'primary.600' }}\r\n              onPress={handleSendMessage}\r\n              isDisabled={!newMessage.trim()}\r\n            >\r\n              <Icon as={Ionicons} name=\"send\" size=\"sm\" color=\"white\" />\r\n            </Button>\r\n          </HStack>\r\n        </KeyboardAvoidingView>\r\n      </Box>\r\n\r\n      {/* Gift Drawer Modal */}\r\n      <Modal\r\n        isOpen={showGiftDrawer}\r\n        onClose={() => setShowGiftDrawer(false)}\r\n        size=\"full\"\r\n      >\r\n        <Modal.Content bg={backgroundColor} maxH=\"80%\">\r\n          <Modal.Header bg={cardBackground}>\r\n            <HStack alignItems=\"center\" space={3}>\r\n              <Icon as={Ionicons} name=\"gift\" size=\"lg\" color=\"primary.500\" />\r\n              <NBText color={textColor} fontSize=\"lg\" fontWeight=\"bold\">\r\n                Send Gifts\r\n              </NBText>\r\n            </HStack>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <FlatList\r\n              data={gifts}\r\n              renderItem={renderGift}\r\n              keyExtractor={(item) => item.id}\r\n              numColumns={3}\r\n              columnWrapperStyle={{ justifyContent: 'space-between' }}\r\n              showsVerticalScrollIndicator={false}\r\n            />\r\n          </Modal.Body>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* Halo Throne Modal */}\r\n      <Modal\r\n        isOpen={showHaloThrone}\r\n        onClose={() => setShowHaloThrone(false)}\r\n        size=\"lg\"\r\n      >\r\n        <Modal.Content bg={backgroundColor}>\r\n          <Modal.Header bg={cardBackground}>\r\n            <HStack alignItems=\"center\" space={3}>\r\n              <Icon as={Ionicons} name=\"crown\" size=\"lg\" color=\"yellow.500\" />\r\n              <NBText color={textColor} fontSize=\"lg\" fontWeight=\"bold\">\r\n                Halo Throne\r\n              </NBText>\r\n            </HStack>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <VStack space={4} alignItems=\"center\">\r\n              <Icon as={Ionicons} name=\"crown\" size=\"6xl\" color=\"yellow.500\" />\r\n              <NBText color={textColor} fontSize=\"lg\" fontWeight=\"bold\" textAlign=\"center\">\r\n                Unlock the Halo Throne\r\n              </NBText>\r\n              <NBText color=\"text.secondary\" textAlign=\"center\">\r\n                Get exclusive perks, custom badges, and special privileges\r\n              </NBText>\r\n              <Button\r\n                size=\"lg\"\r\n                bg=\"linear-gradient(45deg, #FFD700, #FFA500)\"\r\n                _pressed={{ bg: 'yellow.600' }}\r\n                width=\"100%\"\r\n              >\r\n                <HStack alignItems=\"center\" space={2}>\r\n                  <Icon as={Ionicons} name=\"star\" size=\"sm\" color=\"white\" />\r\n                  <NBText color=\"white\" fontWeight=\"bold\">\r\n                    Upgrade to OG5\r\n                  </NBText>\r\n                </HStack>\r\n              </Button>\r\n            </VStack>\r\n          </Modal.Body>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LiveRoomScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}