{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useAppSelector } from \"../store/hooks\";\nimport { selectAgeVerified, selectCountrySelected } from \"../store/slices/authSlice\";\nimport AgeGateScreen from \"../screens/onboarding/AgeGateScreen\";\nimport CountrySelectionScreen from \"../screens/onboarding/CountrySelectionScreen\";\nimport LoginScreen from \"../screens/onboarding/LoginScreen\";\nimport RegisterScreen from \"../screens/onboarding/RegisterScreen\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar OnboardingNavigator = function OnboardingNavigator() {\n  var ageVerified = useAppSelector(selectAgeVerified);\n  var countrySelected = useAppSelector(selectCountrySelected);\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: false\n    },\n    children: !ageVerified ? _jsx(Stack.Screen, {\n      name: \"AgeGate\",\n      component: AgeGateScreen\n    }) : !countrySelected ? _jsx(Stack.Screen, {\n      name: \"CountrySelection\",\n      component: CountrySelectionScreen\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterScreen\n      })]\n    })\n  });\n};\nexport default OnboardingNavigator;","map":{"version":3,"names":["React","createStackNavigator","useAppSelector","selectAgeVerified","selectCountrySelected","AgeGateScreen","CountrySelectionScreen","LoginScreen","RegisterScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","OnboardingNavigator","ageVerified","countrySelected","Navigator","screenOptions","headerShown","gestureEnabled","children","Screen","name","component"],"sources":["D:/halobuzz by cursor/mobile/src/navigation/OnboardingNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { useAppSelector } from '../store/hooks';\r\nimport { selectAgeVerified, selectCountrySelected } from '../store/slices/authSlice';\r\n\r\n// Screens\r\nimport AgeGateScreen from '../screens/onboarding/AgeGateScreen';\r\nimport CountrySelectionScreen from '../screens/onboarding/CountrySelectionScreen';\r\nimport LoginScreen from '../screens/onboarding/LoginScreen';\r\nimport RegisterScreen from '../screens/onboarding/RegisterScreen';\r\n\r\nexport type OnboardingStackParamList = {\r\n  AgeGate: undefined;\r\n  CountrySelection: undefined;\r\n  Login: undefined;\r\n  Register: undefined;\r\n};\r\n\r\nconst Stack = createStackNavigator<OnboardingStackParamList>();\r\n\r\nconst OnboardingNavigator: React.FC = () => {\r\n  const ageVerified = useAppSelector(selectAgeVerified);\r\n  const countrySelected = useAppSelector(selectCountrySelected);\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        gestureEnabled: false,\r\n      }}\r\n    >\r\n      {!ageVerified ? (\r\n        <Stack.Screen name=\"AgeGate\" component={AgeGateScreen} />\r\n      ) : !countrySelected ? (\r\n        <Stack.Screen name=\"CountrySelection\" component={CountrySelectionScreen} />\r\n      ) : (\r\n        <>\r\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n          <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n        </>\r\n      )}\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default OnboardingNavigator;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,cAAc;AACvB,SAASC,iBAAiB,EAAEC,qBAAqB;AAGjD,OAAOC,aAAa;AACpB,OAAOC,sBAAsB;AAC7B,OAAOC,WAAW;AAClB,OAAOC,cAAc;AAA6C,SAAAC,GAAA,IAAAC,IAAA,EAAAC,QAAA,IAAAC,SAAA,EAAAC,IAAA,IAAAC,KAAA;AASlE,IAAMC,KAAK,GAAGd,oBAAoB,CAA2B,CAAC;AAE9D,IAAMe,mBAA6B,GAAG,SAAhCA,mBAA6BA,CAAA,EAAS;EAC1C,IAAMC,WAAW,GAAGf,cAAc,CAACC,iBAAiB,CAAC;EACrD,IAAMe,eAAe,GAAGhB,cAAc,CAACE,qBAAqB,CAAC;EAE7D,OACEM,IAAA,CAACK,KAAK,CAACI,SAAS;IACdC,aAAa,EAAE;MACbC,WAAW,EAAE,KAAK;MAClBC,cAAc,EAAE;IAClB,CAAE;IAAAC,QAAA,EAED,CAACN,WAAW,GACXP,IAAA,CAACK,KAAK,CAACS,MAAM;MAACC,IAAI,EAAC,SAAS;MAACC,SAAS,EAAErB;IAAc,CAAE,CAAC,GACvD,CAACa,eAAe,GAClBR,IAAA,CAACK,KAAK,CAACS,MAAM;MAACC,IAAI,EAAC,kBAAkB;MAACC,SAAS,EAAEpB;IAAuB,CAAE,CAAC,GAE3EQ,KAAA,CAAAF,SAAA;MAAAW,QAAA,GACEb,IAAA,CAACK,KAAK,CAACS,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEnB;MAAY,CAAE,CAAC,EACrDG,IAAA,CAACK,KAAK,CAACS,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAElB;MAAe,CAAE,CAAC;IAAA,CAC3D;EACH,CACc,CAAC;AAEtB,CAAC;AAED,eAAeQ,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}