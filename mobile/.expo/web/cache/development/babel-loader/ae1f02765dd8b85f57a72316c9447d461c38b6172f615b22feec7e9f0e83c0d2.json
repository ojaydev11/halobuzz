{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from \"./src/store\";\nimport { NativeBaseProvider, extendTheme } from 'native-base';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport OnboardingNavigator from \"./src/navigation/OnboardingNavigator\";\nimport MainTabNavigator from \"./src/navigation/MainTabNavigator\";\nimport { initializeSocket } from \"./src/services/socketService\";\nimport { initializePushNotifications } from \"./src/services/notificationService\";\nimport { checkFeatureFlags } from \"./src/services/featureFlagService\";\nimport { useAppSelector } from \"./src/store/hooks\";\nimport { selectIsAuthenticated, selectOnboardingComplete } from \"./src/store/slices/authSlice\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nvar theme = extendTheme({\n  colors: {\n    primary: {\n      50: '#E3F2FD',\n      100: '#BBDEFB',\n      500: '#2196F3',\n      600: '#1E88E5',\n      700: '#1976D2',\n      900: '#0D47A1'\n    },\n    secondary: {\n      50: '#F3E5F5',\n      100: '#E1BEE7',\n      500: '#9C27B0',\n      600: '#8E24AA',\n      700: '#7B1FA2',\n      900: '#4A148C'\n    },\n    accent: {\n      50: '#FFF3E0',\n      100: '#FFE0B2',\n      500: '#FF9800',\n      600: '#FB8C00',\n      700: '#F57C00',\n      900: '#E65100'\n    },\n    background: {\n      primary: '#000000',\n      secondary: '#1A1A1A',\n      tertiary: '#2A2A2A'\n    },\n    text: {\n      primary: '#FFFFFF',\n      secondary: '#B0B0B0',\n      tertiary: '#808080'\n    }\n  },\n  config: {\n    initialColorMode: 'dark'\n  }\n});\nfunction AppContent() {\n  var isAuthenticated = useAppSelector(selectIsAuthenticated);\n  var onboardingComplete = useAppSelector(selectOnboardingComplete);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    appIsReady = _useState2[0],\n    setAppIsReady = _useState2[1];\n  useEffect(function () {\n    function prepare() {\n      return _prepare.apply(this, arguments);\n    }\n    function _prepare() {\n      _prepare = _asyncToGenerator(function* () {\n        try {\n          yield Font.loadAsync(_objectSpread({}, Ionicons.font));\n          yield initializeSocket();\n          yield initializePushNotifications();\n          yield checkFeatureFlags();\n        } catch (e) {\n          console.warn(e);\n        } finally {\n          setAppIsReady(true);\n        }\n      });\n      return _prepare.apply(this, arguments);\n    }\n    prepare();\n  }, []);\n  useEffect(function () {\n    if (appIsReady) {\n      SplashScreen.hideAsync();\n    }\n  }, [appIsReady]);\n  if (!appIsReady) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: !onboardingComplete ? _jsx(OnboardingNavigator, {}) : !isAuthenticated ? _jsx(OnboardingNavigator, {}) : _jsx(MainTabNavigator, {})\n  });\n}\nexport default function App() {\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      children: _jsx(NativeBaseProvider, {\n        theme: theme,\n        children: _jsxs(SafeAreaProvider, {\n          children: [_jsx(AppContent, {}), _jsx(StatusBar, {\n            style: \"light\"\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","StatusBar","SafeAreaProvider","NavigationContainer","Provider","PersistGate","store","persistor","NativeBaseProvider","extendTheme","SplashScreen","Font","Ionicons","OnboardingNavigator","MainTabNavigator","initializeSocket","initializePushNotifications","checkFeatureFlags","useAppSelector","selectIsAuthenticated","selectOnboardingComplete","jsx","_jsx","jsxs","_jsxs","preventAutoHideAsync","theme","colors","primary","secondary","accent","background","tertiary","text","config","initialColorMode","AppContent","isAuthenticated","onboardingComplete","_useState","_useState2","_slicedToArray","appIsReady","setAppIsReady","prepare","_prepare","apply","arguments","_asyncToGenerator","loadAsync","_objectSpread","font","e","console","warn","hideAsync","children","App","loading","style"],"sources":["D:/halobuzz by cursor/mobile/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './src/store';\r\nimport { NativeBaseProvider, extendTheme } from 'native-base';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as Font from 'expo-font';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n// Navigation\r\nimport OnboardingNavigator from './src/navigation/OnboardingNavigator';\r\nimport MainTabNavigator from './src/navigation/MainTabNavigator';\r\n\r\n// Services\r\nimport { initializeSocket } from './src/services/socketService';\r\nimport { initializePushNotifications } from './src/services/notificationService';\r\nimport { checkFeatureFlags } from './src/services/featureFlagService';\r\n\r\n// Store\r\nimport { useAppSelector } from './src/store/hooks';\r\nimport { selectIsAuthenticated, selectOnboardingComplete } from './src/store/slices/authSlice';\r\n\r\n// Keep splash screen visible while we fetch resources\r\nSplashScreen.preventAutoHideAsync();\r\n\r\n// Custom theme\r\nconst theme = extendTheme({\r\n  colors: {\r\n    primary: {\r\n      50: '#E3F2FD',\r\n      100: '#BBDEFB',\r\n      500: '#2196F3',\r\n      600: '#1E88E5',\r\n      700: '#1976D2',\r\n      900: '#0D47A1',\r\n    },\r\n    secondary: {\r\n      50: '#F3E5F5',\r\n      100: '#E1BEE7',\r\n      500: '#9C27B0',\r\n      600: '#8E24AA',\r\n      700: '#7B1FA2',\r\n      900: '#4A148C',\r\n    },\r\n    accent: {\r\n      50: '#FFF3E0',\r\n      100: '#FFE0B2',\r\n      500: '#FF9800',\r\n      600: '#FB8C00',\r\n      700: '#F57C00',\r\n      900: '#E65100',\r\n    },\r\n    background: {\r\n      primary: '#000000',\r\n      secondary: '#1A1A1A',\r\n      tertiary: '#2A2A2A',\r\n    },\r\n    text: {\r\n      primary: '#FFFFFF',\r\n      secondary: '#B0B0B0',\r\n      tertiary: '#808080',\r\n    },\r\n  },\r\n  config: {\r\n    initialColorMode: 'dark',\r\n  },\r\n});\r\n\r\nfunction AppContent() {\r\n  const isAuthenticated = useAppSelector(selectIsAuthenticated);\r\n  const onboardingComplete = useAppSelector(selectOnboardingComplete);\r\n  const [appIsReady, setAppIsReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function prepare() {\r\n      try {\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n        });\r\n\r\n        // Initialize services\r\n        await initializeSocket();\r\n        await initializePushNotifications();\r\n        await checkFeatureFlags();\r\n\r\n        // Preload assets\r\n        // await Asset.loadAsync([require('./assets/logo.png')]);\r\n      } catch (e) {\r\n        console.warn(e);\r\n      } finally {\r\n        setAppIsReady(true);\r\n      }\r\n    }\r\n\r\n    prepare();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (appIsReady) {\r\n      SplashScreen.hideAsync();\r\n    }\r\n  }, [appIsReady]);\r\n\r\n  if (!appIsReady) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      {!onboardingComplete ? (\r\n        <OnboardingNavigator />\r\n      ) : !isAuthenticated ? (\r\n        <OnboardingNavigator />\r\n      ) : (\r\n        <MainTabNavigator />\r\n      )}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <NativeBaseProvider theme={theme}>\r\n          <SafeAreaProvider>\r\n            <AppContent />\r\n            <StatusBar style=\"light\" />\r\n          </SafeAreaProvider>\r\n        </NativeBaseProvider>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}