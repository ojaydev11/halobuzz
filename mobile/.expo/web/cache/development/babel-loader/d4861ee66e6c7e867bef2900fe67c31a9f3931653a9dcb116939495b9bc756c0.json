{"ast":null,"code":"import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useColorModeValue } from 'native-base';\nimport LiveTabNavigator from \"./LiveTabNavigator\";\nimport ReelsTabNavigator from \"./ReelsTabNavigator\";\nimport GamesTabNavigator from \"./GamesTabNavigator\";\nimport InboxTabNavigator from \"./InboxTabNavigator\";\nimport ProfileTabNavigator from \"./ProfileTabNavigator\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar MainTabNavigator = function MainTabNavigator() {\n  var tabBarBackgroundColor = useColorModeValue('background.primary', 'background.primary');\n  var tabBarActiveTintColor = useColorModeValue('primary.500', 'primary.500');\n  var tabBarInactiveTintColor = useColorModeValue('text.secondary', 'text.secondary');\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          switch (route.name) {\n            case 'Live':\n              iconName = focused ? 'radio' : 'radio-outline';\n              break;\n            case 'Reels':\n              iconName = focused ? 'play-circle' : 'play-circle-outline';\n              break;\n            case 'Games':\n              iconName = focused ? 'game-controller' : 'game-controller-outline';\n              break;\n            case 'Inbox':\n              iconName = focused ? 'mail' : 'mail-outline';\n              break;\n            case 'Profile':\n              iconName = focused ? 'person' : 'person-outline';\n              break;\n            default:\n              iconName = 'help-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: tabBarActiveTintColor,\n        tabBarInactiveTintColor: tabBarInactiveTintColor,\n        tabBarStyle: {\n          backgroundColor: tabBarBackgroundColor,\n          borderTopColor: 'background.secondary',\n          borderTopWidth: 1,\n          height: Platform.OS === 'ios' ? 88 : 60,\n          paddingBottom: Platform.OS === 'ios' ? 20 : 10,\n          paddingTop: 10\n        },\n        tabBarLabelStyle: {\n          fontSize: 12,\n          fontWeight: '600'\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Live\",\n      component: LiveTabNavigator,\n      options: {\n        tabBarLabel: 'Live'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Reels\",\n      component: ReelsTabNavigator,\n      options: {\n        tabBarLabel: 'Reels'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Games\",\n      component: GamesTabNavigator,\n      options: {\n        tabBarLabel: 'Games'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Inbox\",\n      component: InboxTabNavigator,\n      options: {\n        tabBarLabel: 'Inbox'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileTabNavigator,\n      options: {\n        tabBarLabel: 'Profile'\n      }\n    })]\n  });\n};\nexport default MainTabNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","Platform","Ionicons","useColorModeValue","LiveTabNavigator","ReelsTabNavigator","GamesTabNavigator","InboxTabNavigator","ProfileTabNavigator","jsx","_jsx","jsxs","_jsxs","Tab","MainTabNavigator","tabBarBackgroundColor","tabBarActiveTintColor","tabBarInactiveTintColor","Navigator","screenOptions","_ref","route","headerShown","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarStyle","backgroundColor","borderTopColor","borderTopWidth","height","OS","paddingBottom","paddingTop","tabBarLabelStyle","fontSize","fontWeight","children","Screen","component","options","tabBarLabel"],"sources":["D:/halobuzz by cursor/mobile/src/navigation/MainTabNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Platform } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useColorModeValue } from 'native-base';\r\n\r\n// Screens\r\nimport LiveTabNavigator from './LiveTabNavigator';\r\nimport ReelsTabNavigator from './ReelsTabNavigator';\r\nimport GamesTabNavigator from './GamesTabNavigator';\r\nimport InboxTabNavigator from './InboxTabNavigator';\r\nimport ProfileTabNavigator from './ProfileTabNavigator';\r\n\r\nexport type MainTabParamList = {\r\n  Live: undefined;\r\n  Reels: undefined;\r\n  Games: undefined;\r\n  Inbox: undefined;\r\n  Profile: undefined;\r\n};\r\n\r\nconst Tab = createBottomTabNavigator<MainTabParamList>();\r\n\r\nconst MainTabNavigator: React.FC = () => {\r\n  const tabBarBackgroundColor = useColorModeValue('background.primary', 'background.primary');\r\n  const tabBarActiveTintColor = useColorModeValue('primary.500', 'primary.500');\r\n  const tabBarInactiveTintColor = useColorModeValue('text.secondary', 'text.secondary');\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        headerShown: false,\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName: keyof typeof Ionicons.glyphMap;\r\n\r\n          switch (route.name) {\r\n            case 'Live':\r\n              iconName = focused ? 'radio' : 'radio-outline';\r\n              break;\r\n            case 'Reels':\r\n              iconName = focused ? 'play-circle' : 'play-circle-outline';\r\n              break;\r\n            case 'Games':\r\n              iconName = focused ? 'game-controller' : 'game-controller-outline';\r\n              break;\r\n            case 'Inbox':\r\n              iconName = focused ? 'mail' : 'mail-outline';\r\n              break;\r\n            case 'Profile':\r\n              iconName = focused ? 'person' : 'person-outline';\r\n              break;\r\n            default:\r\n              iconName = 'help-outline';\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor,\r\n        tabBarInactiveTintColor,\r\n        tabBarStyle: {\r\n          backgroundColor: tabBarBackgroundColor,\r\n          borderTopColor: 'background.secondary',\r\n          borderTopWidth: 1,\r\n          height: Platform.OS === 'ios' ? 88 : 60,\r\n          paddingBottom: Platform.OS === 'ios' ? 20 : 10,\r\n          paddingTop: 10,\r\n        },\r\n        tabBarLabelStyle: {\r\n          fontSize: 12,\r\n          fontWeight: '600',\r\n        },\r\n      })}\r\n    >\r\n      <Tab.Screen \r\n        name=\"Live\" \r\n        component={LiveTabNavigator}\r\n        options={{\r\n          tabBarLabel: 'Live',\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Reels\" \r\n        component={ReelsTabNavigator}\r\n        options={{\r\n          tabBarLabel: 'Reels',\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Games\" \r\n        component={GamesTabNavigator}\r\n        options={{\r\n          tabBarLabel: 'Games',\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Inbox\" \r\n        component={InboxTabNavigator}\r\n        options={{\r\n          tabBarLabel: 'Inbox',\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Profile\" \r\n        component={ProfileTabNavigator}\r\n        options={{\r\n          tabBarLabel: 'Profile',\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default MainTabNavigator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}